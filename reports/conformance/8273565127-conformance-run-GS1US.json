{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eeb2f24f-fd5c-43b9-bf02-a7e9e623a38d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2a7aa741-2272-4d1a-9a49-c6eefb0b5091",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d90241f-23b5-4f87-a6eb-3a6f946b05fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "49cb9fd6-a06d-4651-9f1b-963240f01423"
                }
              }
            ]
          },
          {
            "id": "0385a543-7c08-4662-93ad-2c28b97580b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e91a6934-ac01-4834-abcc-e0d8b957fc90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78947fa9-c477-43dc-9128-78f5fb1fba8e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c832b05b-7adb-4345-9f5c-84d2c49e3f25",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b9e66e01-23be-4b10-b72e-f9d8cb0f9f72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9d7f4f2-1dea-4123-b964-fdba50fe4b92",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e342dec-1a2c-4290-9252-05ae388e3b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ea992a6-d232-4499-8423-4f38ab8b5b1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0506b736-32d2-4322-9c6e-4decedfbce31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e7ef7c7-8d3e-4fde-ad32-7cd31e5a3979"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "18d461fb-a32c-4aa1-b389-56f83aa97a0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f910eb7-2d15-42f1-a840-bcdc945d0415"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1572f343-a75d-44f8-8cf9-c011ab5f7ee1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c8ebdd5a-9fd9-4f41-a4d7-cf8e0cfb7947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2210ab3a-9618-4deb-bf2f-654413b953e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bfe4ef0-2192-4727-9cdb-8b375ac196f5"
            }
          }
        ]
      },
      {
        "id": "c81ff16e-607f-4d0f-aad4-4a3517861169",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ce1e4388-0c38-4026-9f5c-02507e226f26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcd214e5-43d2-44f6-b334-3cb09742ff1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f187f17-55fa-44ef-9b8e-7713d31f595c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1455e7-bf5f-4b47-a8bd-ecc4c960b512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "377c01a7-17e4-4b06-af3d-049d0d55de14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54f1485-5fb1-414c-9f86-edfa9cd3e33c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df32954b-2b36-415e-a7ed-73dc6ba19c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b699f9cd-f50a-467f-92e5-031ff6bebff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc623e2-ffa9-459f-86eb-fba354398fc2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0238bc-6dc2-4187-8d4f-d018b9ba4741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8be55be8-6716-48b2-b296-21d586d5fdaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ab84137-1b46-439f-92bb-efe88d30a83d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b529020-a005-4776-a219-81d85d60e2ce",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4bb390-f12b-4289-aa3d-65b1a7ee43bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1ec9482-1201-4308-ab8d-fce5a3615ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7cd37f-aa12-4ca1-8aa1-5b9ae140a68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d3862f-1e12-4667-84bf-1f295855f9e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd63e8c4-e48e-4185-a72d-79553ed5c4f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d1891f6-ebaf-49d6-9260-c02e3352cd09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59c2c24c-421f-41c7-bdd5-b1f92d5eb825",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cc61fa4a-956c-4f56-88a5-b5cb91d756a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "278a97b6-76a0-41b2-b939-04f54cd3ab5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "443ca532-8eb1-4d3e-abae-70b3e6493835"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a558d4b4-011c-438c-aa3a-19ae7496163c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ac389d9-c67d-4b39-b8f8-9291f195d8fe"
            }
          }
        ]
      },
      {
        "id": "086554c1-152d-4d6d-9632-4c6308230886",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d2f0424e-f34e-454c-9dba-a4fc2508747a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8919bb69-e150-426f-9034-7da51831d593",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5dcf2c28-0108-4041-a47d-037e28ecde61",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da470530-c275-488d-9502-9faad27f557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79052e28-0c99-4f07-80c9-c12cfb4ac279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96c5cf5-667e-4653-9e24-7038cf0295f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aa0ab74-66b8-4535-8cc8-351fd6180ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6949e0fb-cdb3-458e-b865-d4520693d4a9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a9952-2d0d-410d-a85c-22bec0c4ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5684ac42-4b1d-40fd-acb5-aa18fcfd99f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2ef33-4a0a-4551-a808-8e78cc459d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02bfc738-3484-4d45-8317-97589ad612c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6445e5-afd2-4621-bd42-4f9e0b69f96f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f6506-ee13-4058-9dab-14d4c4b2e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6146e448-a751-4141-ba03-4cbd762db6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625c9b0f-8f63-4e69-a4b3-43b1dc801999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18d7b3e5-ed7b-4821-b5e4-ce667af7fad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a495c-0eda-4447-995e-2edc091a9adf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c4b8f4-65d9-4e08-a17a-498d8183fc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fc2af5-3b82-4007-a946-441c806e0d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff2b22-1afc-4235-94b1-9e603f919e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56262bc1-8b6b-43ef-8d28-271f10b80155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975258f-9ffb-46ac-8e49-95f643650113",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ecbc44-785b-408e-b7ed-a46a8c8bc549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a429105-74b0-466f-870a-a4a30aedc4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c400c6b6-f496-4515-a79d-40e95b2149ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277d39df-d04b-4b66-96a7-510b82f9c3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e32b4-21dc-47d0-8b7a-9398d0466f1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f6a0a-320c-4fc5-b13b-d95a86ec756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aab0077-3bff-4903-9187-5751b82f535c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f0171-a72a-4308-a0f1-0b0475e0f9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd3c1c2-8195-4b63-9315-5e54b544752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0ef6a3-bddb-4ad4-a2b0-74e797e6b196",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536b5b0d-f328-498c-9f84-740a5d7f2374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a063fa-365b-4bff-bf80-6c132d04fd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05faeda-7480-4a9f-8f40-ee6da2cc4cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d951ebcd-6a8f-4e37-bd50-e7fbe676c6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a1ceec-ad17-413d-879f-356962e71f12",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a87c27-be61-4b8d-b822-780f9d4a0716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538f9168-3b7e-4e11-8072-596626046e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f31a7e6-91fe-4f43-9554-dd688000faed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a347eab3-ba2e-4c1b-bd9c-530a88259b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4393f8-b7ef-4912-abf0-0398934d68fe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8eeefb-747a-4a15-9a92-858cf7f7d763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cec88d1-2e17-4326-b287-3aec847a8ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b5c90d-5efb-44c2-96ec-9ac701477945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1140ec65-994a-44c9-9774-ddc83ab4c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d11dfcc-601b-4269-9b96-7d3dc2af3edd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4fde58-7f17-4aa3-a2de-a10d6c769798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050e290-12ea-4c3a-91f3-9eb8803636dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db812bff-35b4-49f4-8e80-3aefefc0e925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdb87c69-bdfd-44bf-9050-2f19f76e6cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8352216f-2fce-4cc7-b9c3-b5a4de695c84",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d004684e-d5e1-47c3-9e21-1f58db7775c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b4c6eb-fc4a-4e64-923d-5c58c486d3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6859607-fe44-4409-b333-15f16cce4b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f605ea-8b52-4294-a35d-1553f8de5489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609d5976-9b78-44fb-8010-616a37f39551",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c047884b-1046-47ca-b0c4-2d326ede9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965f8e40-8a0b-4f97-be18-26e5f5ca14b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c6396-7ee3-4d98-95ea-09cde8cbb4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8360fce7-e238-4a29-8bb1-07c019b28f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8148b1cc-ef8f-4073-a603-1d2e5d13f1e1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc48b52-54c7-477c-9217-8d9d7e8952d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7aa8af1-c2f4-48b7-af80-911f114aa06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99848f88-d414-4b47-a5fc-60a8bc51baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89badde5-e30f-4cb1-9707-919d909ef39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62768063-7d39-4f5d-895b-2536e6f626c1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdc24f8-b403-46af-bf9f-c7af742c6983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dbfd9c-4fa5-45b8-a1fd-0440af22ab0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26435e24-5627-4711-8f2f-6104434ffe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f5b99ea-1ea1-4754-84a4-37aa2f1a4ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aa9f50-a262-4503-84f4-6f4f5059f66c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11321e-95a2-49a4-a84b-230245db75a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52e4450-e901-4949-8e04-0405c4cc6dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de81f34-c4a1-4bce-8ce8-422612d49904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56a85899-9e62-4152-951c-e48c604142de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b1c094-e596-4599-af94-dd61bf19029c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9016977d-104c-447e-834e-7c1f46609cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bb77d2-29ca-4d38-bd24-dfc6494cb87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714f9de-eef0-4511-b46a-eb941fdf4cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f82765b-a948-456b-aa69-32b7835cbabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5b9cfe-f826-424d-a9c9-db4f64a75097",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85418bf6-81db-435b-aa69-2d5e11b80a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fee91fa-57c3-4dc4-994a-6a63ff05c53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fcbfc0-303a-4792-8c1d-f16af446b472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01506354-d765-468b-94bb-89e8440e2526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5492869-a5de-4893-8c2d-dbba811b8550",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f014442-981d-433a-93c5-7f671878ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878c6b97-6b35-44d2-9a4a-d7af6b7a751a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636a391f-ae04-42dd-af3a-094230c2fda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32aa21ef-fa62-4290-9cbd-cb7ced86dc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b4cf5-478f-405f-87f4-978f239d83cb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a9130c-d725-4456-86c6-3772de6d0849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06aef91-246b-4d0a-9fe9-a54204278b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb94ebe-bdfd-4cd5-ad5c-48f7013cde2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01154061-824a-42d2-9113-06c0d4e4735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e188f6ba-128e-4de9-9d14-267a616e7448",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f9d707-6503-4d2b-acd2-904b216cf68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196efe1b-94f9-4530-9d9a-9ffafe209fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c48ac-6ed8-46bd-bf70-e33960f339a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e64258c-05ca-4ea1-81b1-469daaf0c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6086e1e1-9031-4852-b533-dda4528bfaa1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cd0af8-26be-44ae-812e-57558683f839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50de5274-cab9-4e04-b614-1a50136d0212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c6ba94-744a-4063-952a-612a572c4682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8670b5-54c6-480f-adb3-bbea6c2975ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9ad33-f432-42bf-a5d9-c7e2b4eeb9d3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622e32b0-eef1-4897-9ed8-468dfebf7267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adba9308-ffe6-47df-8736-e4df1c8c3f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726f4509-0e05-422b-a97d-80637f99c3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23eb83a6-c851-430b-b878-2269ff81a8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449fb90f-2f4c-4a29-84e2-f1ce054fc688",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0114509d-6516-442a-b2f4-4a96ef6c6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474dd33e-eb8c-4794-80b0-7bd901c59be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c9989e-42ac-46bd-80ee-1c003a77b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "107287c6-b14b-4384-a2f4-370630a7072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17fb367-c788-41af-af23-107861318269",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a20b08-2fc0-4f56-8d91-c41ff48a19a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e5fac4-fd92-49d9-b6dc-6470ee736214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7617cca4-9ea6-4281-9548-e6cbaf8f090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b68224-ce09-4ae8-bb79-5c204618f795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b887f736-5b38-40b5-b347-e04422f90cde",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de8419-fa1e-410b-b930-6aa31500d970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de084b2-2ddb-40e8-a758-f2fd37a2a419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7f14f2-ff8c-471b-b60c-80ddaa589444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cd077d-39b4-48b2-b1d7-b6f73b9891d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59fb183-74b3-40a2-aa3b-b8095bc72e0b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af84eda1-52c2-457d-a505-00cc576f996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af49b8f5-9a32-4642-8030-1a09c0ceb9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a99ab6-c131-4d9a-9ccf-e123ed0e7f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4668b5c2-198c-4259-b3c7-99d9c820cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c712dd4e-15e6-4193-8f49-3483f008d422",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cfc471-f466-42b1-b2cb-df59cfc7ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514cd4b-0655-4280-af5f-806f73c004cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f493c41-d8e8-47f3-b52f-22cb7a162195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d47e78f-ca3d-4819-9680-13190bededd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3a99e4-ace7-4a95-80d3-8b234ecfa404",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03efa6e-d061-45e6-af22-e91b157e18ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f2af28-2bee-490f-b42c-df766419fb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f94b52d-96df-4c32-8689-23d5989442f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edfb92a-9804-45ce-9ff5-5d866f37a72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af277e-67df-43be-9b65-10e83960f438",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b6a67d-ee6a-45e5-88ce-39175e7d4ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5003127a-6dd3-4f56-b8a8-7689498506fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b6907-a27a-428b-a6d4-1e3a777d4b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83bebda-5979-4d91-8f84-74db969990e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e847dbfe-4f2c-407a-a360-bf76604ce4bf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74abc03c-d5a6-4f2d-b033-40ce888637c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6209fa-b754-4c86-91e9-01c3a0c162d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1c4ca1-4280-4b55-a056-a3798ed2a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "60555b0b-a445-468e-9e8a-8b36cf51b81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b9bad8-aba5-4156-85ba-f8375012cb3f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac6a852-c898-44d6-a032-2baf9c4a7ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a19405-6df8-4875-8486-01302ce9577d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2673afe6-aa85-4e94-ad43-c5733e99881c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "912e299d-d87c-4b3b-8406-dca64b9f150a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dc60a0-29d1-4804-bb75-046123a57748",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58014602-3661-437e-8255-174f36e94f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3c72c4-f0c8-4352-8738-3a8f83a3adee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc9775-2c08-44bb-9e51-75b6cc53dd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "266edfff-0ed9-4d28-82b4-70caa4197cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42000165-bd30-46e8-bbc6-634fdae7f77d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f97b8ae-c0b1-4388-be62-cdb257349a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21522185-46ba-4989-b13a-e91c7609d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f397185-c9ae-473e-9d29-a076c2ed1de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ea7fc4-734d-40e4-a7dc-37264382348e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f02df7-c568-40db-9ab0-e7ef99463cb8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1278f6d4-3bf1-4a01-8a0b-a22bdcaf1dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0ebe55-83ab-4b58-87b3-a5fa939b8ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc8df20-50f6-4f8e-ba06-28d4f6c75a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c43a3d-a713-4ea9-a953-ab658f4b0067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20d2d8-dfdc-41a8-8394-9de27c733229",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf9b70-21d9-4378-84a3-c106d23d4a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e323f43e-9708-4bed-bfe0-57698dbcc238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3151cf2b-8eed-4704-966a-034d7c5acfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "590251a8-372a-4eba-85d0-6a2117aa31bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dfd3c1-90ad-49e4-a721-45e3f3f8cc80",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a251c1c8-871b-4656-b869-f9f1a7ca3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31748013-e6d9-4e9b-b2e0-364c8e0be81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a513dd-6388-4694-8e1b-a1c615014e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44618f8a-1d9c-481b-ac5b-d4b4f7e51bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a1071-0352-4972-9a3d-8251e4e98090",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f9ef3b-de62-4dcb-9d2f-b7f6d22e1efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a379ad-7603-40f3-9bec-cbd59f570392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38f1204-bd24-4954-9634-3437bb73b518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "809b7d51-4e81-4973-b75b-a9f3db169a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b207330b-18e6-4813-b64c-c69ab423bf53",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45e76d2-f7ed-426e-8e6f-ef2c0be2fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90cdc3e-0cf5-4db1-b933-642af56e4720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c24d0b6-effe-41e6-9ce1-fe9b1253ad5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "28320cdb-eb5b-4330-8e91-213da3d4b5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f46ce7-c083-4de7-9044-171dbb0f0146",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8b7556-702a-429d-803e-34413cb18e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0090e2ea-293b-43cb-98a3-ad66cce38f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32f79d1-ecad-40eb-b9bf-642abba0dfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23b0c654-a6a0-4651-8440-445e46c5ba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60538418-3c27-4044-9b16-e7d1c64c0421",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200dfcec-0e80-420e-9b34-b65dbbb273ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3e5b76-abb5-4386-8917-46a29efc93f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb7477-431c-4c48-8af5-32612ad5c638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b4888c-29ee-4f83-813f-6367d6a7e361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9801ebf5-603c-460b-b48d-85ebb1483e1c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fef27b5-e953-45c2-b3c0-ca7df60524be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c775e6-d028-49de-af58-1c5d4642b342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083d9010-4814-47a6-a787-d67ba53ebf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cde41e85-faa9-4026-8c45-e15a8a724fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda138e-94a4-4757-beff-b41e8b5e808a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b33f397-ddd4-4b42-b0f3-847d35f059ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b87dbb-80d2-4ed3-b94b-72763bc89da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4bf24b-9d33-4fe0-8711-9dfae53e3d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b7085830-2632-43e0-a842-3220c0895372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4028d5cd-8a55-4726-b931-acaf8d976015",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af4889-17c4-4b0a-b7f6-d6141efafac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a13fd38-719f-4526-9ad4-a335cee0f8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8971b437-fa90-49d5-90a0-ec9a326b29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ad5b7a-4966-4448-b026-d94c256d1a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b9f82-8b73-4d83-a80a-550a551da42f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbc84b9-a428-4309-9734-bf993002e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6365a782-b87d-4e1b-a02f-dcd2351b210e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acab71c-409f-4505-8f35-7b80fdad839f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9778f3b-1cbf-4c5d-ba36-a3a2001cd576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bfddb1-0226-40c4-980d-f5bc4048fd63",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d594bb7-84ff-4a58-88f6-af9ac25a000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a39fc3-2a39-4768-892e-262b7faf1e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2d9616-3a82-44dc-863e-c46f1359ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12dfc9d8-8dff-434c-83ec-9bbf96d856fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b471993b-8804-47cd-bf56-bdc26e405882",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0334d2ed-3ddb-4172-80d4-8c5ece9bb3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e604b5-c243-4643-a3cb-5cd43c5b6d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036f3030-90d4-4e47-ae31-bd55b8ad9c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80fa659b-303b-4cae-920e-f3a003b83be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc53613-b2cf-4d83-8478-2e3eb8e7900c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b02e684-7b14-4066-b03d-10b7ea8ec125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42212e7b-6c3f-40cb-b6ff-045a5ad5d27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc66797-2c42-46bd-8bb0-dab710abc37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa174a02-7942-47e7-8a02-1973c94ea98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d6e57-f085-42c2-b8ba-61ae6f65b4a4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581bbe5-9171-4f91-a3ab-3e271b61a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1438b3e2-a761-4124-a219-56baa1d729ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce70aa9-3edc-40cf-8bd7-c2b1debb25cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfa3543-80eb-48da-960e-7a07e4cf0ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972bff80-350b-445d-afa0-554e98cd9fa8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa93e3-d853-4ae2-a69c-8ffc9015ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5934b3e6-335d-46d9-a2b3-d798d6470720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c858bb-bdfb-4852-a52e-143d6a7e5131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9c6fd5-76b5-4235-91b2-94fa965ba287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe81f84-9ab3-4a3a-9cfe-ee2ab1fe0f1a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ac287-fdf5-4e6c-a00a-8acdacaca210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db38b20-b2c3-4e03-95e3-0a5bf0649ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5334817-8908-47ce-b261-3613d5031d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06ac21b0-d361-4d8f-bf31-622e7835482b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369dd721-4b32-4207-8714-0c4048a3a83f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cbc866-1c4c-4c16-a494-27edb05fe85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c452af6f-0374-48d4-80f5-037dc1dbcdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2103f0a0-b3ae-487b-a5d0-507efe863b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2548be34-8733-479a-a6ec-b9f74939c171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f3b43b-8072-4eae-924f-bc04824e523a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09efba7-30bb-4378-aae5-234e1623da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db707ca7-6144-4693-a458-e73b50814b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbf3460-4166-4abb-b2d8-655bba811a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce8aa6f-258e-4170-b7e6-98e13255b992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82a4ca-5be9-49fb-88e8-38ba7dce654a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d139f32b-63c4-4025-b5c1-e65fa09b0944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fcb420-622e-47ed-b641-e37243563eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c653ff6-ea57-4cd0-b8a3-39ba19314c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66da433d-e08c-4484-89d9-9c514d728a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d3aaf-aab5-4a01-8776-959d23081c56",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539856a2-824b-4a74-a889-a5f8b486d0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3385ad09-d5c4-4d3c-aca1-388e242a563b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6ee1fc-a7dd-47a6-b6f0-9196f12579b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46584b15-5eb9-4aad-8d20-65e084f6af2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68a42af-de3e-4181-8816-17db63db97bc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad380259-a6ad-4098-ad7f-c608018216f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428eb259-6401-4c4d-a861-fbe147210fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64417b3-08ae-4a37-988f-f14216dca2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0fcdc0-cfd5-4439-b0b2-8be8aeab4f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c14778e-d141-4417-84eb-2c3a963c146c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328e8e89-6593-4565-ab75-58723a153027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212b2006-fbf3-4650-ba8d-2e0d226c7d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e911ca72-fcde-474d-b325-58a84a738bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc8a394-ca2a-4281-a95c-1292f53aee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9029749-d4b1-4dc8-9921-478521ece4bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f03667-e13f-4f30-8df6-193abe416253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff33113-17f1-4b4b-b087-2afc6745d0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ea1123-93b3-49d9-8438-992205a24abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e312d7fb-3f37-49e0-aea3-12c6eaed8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d9ca99-1fa0-4847-af04-3d7d294ced48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af26441-d59b-42b9-98fc-85782b42568f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fe6c1a-a04b-44b8-bdb7-2ee76ff3f04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140cfcfe-49e1-40b9-a7a6-8db4507fdcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b856e9-17d8-45a4-a123-ee81ce7a24ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d710869b-2694-4d61-b26f-1d06fac929f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d06d05-66e2-4e52-85c3-55b00e60ac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e437b35-fd80-4c58-b6d5-574bc501364f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e608a7-f5b6-4a88-8a88-bf0c3a86e69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7757968f-5f0a-4c03-9c2f-c6a6154f1c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91dd995-e4e8-442c-9027-bda41c95d83a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17508cb5-dbb6-431c-90a1-a1861937d572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df20f6d-0e59-43db-8607-f391d11eca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ec64a8-0ac4-4c79-baaf-7be80a607440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdb97e0-a3fe-4eb7-bfc7-a502084ffbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de266ee-b1e6-444f-9337-0347dae209a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb7eb71-fc50-4084-a4fe-0d90055a87c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7328f17-e9dc-4097-8b80-dec67a81ebc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99b3b2c-9baa-48e6-ba90-b258d7e83ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b80e89d-f93e-44bb-9c62-f995daad1c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35475df6-41fd-4f95-bd88-ff0622900344",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cb6dc3-bee0-4370-8e9b-f6adf34fc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d61e516-dde8-4b66-bfa0-feaf127bb759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e560db-103a-4d06-bc1d-9d7ab0b8fafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac084c8-7e1e-4910-b4ae-e44a9ce79111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54ccd6-2c44-4490-9548-ed351467689d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeacd014-4114-4018-bb26-e7276fb90a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7f6a92-ad6c-4f5c-8271-0218426756ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc25911-2d61-4eb7-846f-4fd8e8ebfcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "676eb977-1fac-42c3-967a-c5e9998c0ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db295e9-ae8e-4903-a3e6-462f0bdc294a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a197dd93-1a7b-4c86-ab95-7fe6b8ade516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa91d7b0-ad1a-460e-928f-3aa1b3451ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e08c52c-88fb-413c-8e00-9a13384befe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81dc8e36-3f4e-4883-b398-371a5dc20d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f088f70-aa6e-4828-9385-aae14181c76a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a3c54d-a290-4f2d-aeb9-49e0234fc637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e66f02d-7b0c-40a4-836f-c863a3077da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ec87cc-3d0f-4b94-8a2a-9df2d00ad2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee70fc9b-d9a1-4254-8e18-983ca603f808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f52cdf-a977-4c07-b825-37ffd560b68d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd5559-8544-412b-862b-c146be4f5dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e23c69-7c4b-4508-a1d4-1bbadde10f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9925ade9-8753-4a97-bd16-514a49751746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff21370d-9134-4fa3-8af7-69d05c7e8a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072ce3cb-8392-4931-870b-4d263720fe1f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addaa285-e0c5-4d45-aecc-5c575fe00617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769af554-cea1-449a-ad11-c72d22412273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec176ec9-8b04-4b08-ae6c-d9288799402f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04bcab83-6912-42f6-94ba-a0e6aeff362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8869db5b-ee60-47bb-b9c7-f07042ac341b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317501e6-3a2a-450a-816c-0b93dadb65eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6d399b-2615-43c5-a898-c5113227d306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4e2515-2cd5-4a15-b2e3-772125a0ba6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b754b39-cbc3-4d5a-b5cb-b9ff42829c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd8606-d569-48e4-9a73-12d8cf89f6c8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f803dad1-a609-4fc5-a34a-24aa6a4a1b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd133e2-0634-488b-bffc-996b1076eb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b82fae9-11f4-4966-bb74-a7858a35c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "892e72f1-e516-49f8-b8a0-431e602e100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7744e1-c42c-40cd-95d2-e183a65017ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cee5ee8-73a1-4b37-ae0f-fe29e04389f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de200e63-8fb0-44f0-a206-a1e3737f4840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509793ae-1bab-450f-a8a1-703b1b3fa69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb33bae1-3a73-4314-8899-37b5dfd0b3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725179bd-7f6f-47c2-8755-14368c1d0b72",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d942a98-0348-483e-8b57-47a65acc3371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfb0638-e42d-48ef-8f15-623455931923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bfdc2b-1973-44b9-8856-d4c2feb315ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3babbd9a-3248-4adb-b97c-f5c85d093daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60561dde-66b0-458d-8cfc-e1493af33dfe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36f8b6d-779c-476e-a854-b9db1673494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fa8753-7f4e-4ab2-9033-ee15b98439e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfccf0cd-7a2f-4a55-82ff-e777d029c27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8835b059-8bb3-4560-8513-1fe2e8e303e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b8e1a4-9795-43fc-9103-682b9f4d3797",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b19ec-6647-48a3-81f3-2de8b34649ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6abfb3-cac5-4320-bd02-ce12ebd77291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deae5c3d-0713-4161-926f-da52907a2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c558266-2a52-4ed5-996c-8ab4d5fafb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4a43fc-9ade-4936-b6aa-5f1c173ee2f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60456bfe-3fd9-4d20-ab7b-82c2f2ef28f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0f7f2b-6b5e-4d99-a76b-dbf377547d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f060b5cd-e52b-47d9-88a9-58bc504b55b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc2cffd-7a71-4f89-bd46-b8bc8e8a4108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843f367-cb79-466f-9905-a6837b803894",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b0326-574a-486e-bfbc-7447fa240526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792a9fd5-4e4c-40d2-a37c-ec9fbd5d87de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c028872f-06e6-4e75-b178-d7726714a399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdc1dd1-a77b-4a38-9e73-aacf57ed3fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c027af-1ec6-4d7a-b942-62d07d0f4097",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff54f36-acc3-4789-a10a-9e173dd9ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120909e0-e4a3-4af5-a9c0-e07e451b8ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a63926-d59a-414e-bd22-868c3bb7728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45caf544-666e-407a-b358-86e14ac3ea9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa483e3-7464-41aa-a37d-3d2c47d27b12",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b569e23d-310f-4da7-8f06-12b94d639256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cfa20f-a73e-4eb6-8720-3c7be7ac7b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f577c4f-c1cc-4848-ae24-253279f76334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c22204b-1f5b-40a5-9203-6c0100b4928b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ff9924-ce85-4b35-b86e-661a437909eb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a922b503-9bc5-42b0-b1c0-e98331d959be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cd74a2-16e0-407e-80f0-97e3ec54128c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cca8be-3157-467b-90fd-a274c6edbcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32609b1a-1f05-4cbb-9c82-5cd64e8f5e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1bce56-8ff5-47b0-888a-851ea6ab5836",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab4628-d066-4419-a0d5-f12a05075a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0130ab54-7a06-4a1d-852c-6287fdcbdd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30872776-c2f7-4004-9307-373d3680880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad47e4fd-827b-4a52-a61c-4e8cc2f9e050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9438fa39-826e-4dd2-bd8b-64a1e131fdbe",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cde66d4-9def-4798-8921-930c2a7cefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6077d1-693f-4213-8163-e1717d52fab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f0322b-cdd3-4d3b-ab4f-2f7c47e9a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc90e6b-9f69-47cb-b957-345b437b7589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6070eb-f027-45e9-baba-ba5d2e8099f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0e09c2-721d-4568-a645-46c83feac207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af984767-5993-45ef-91d6-2d1709d5d0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ab1ec5-f9be-4059-94ec-43241f966ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4790d02-9837-480f-9026-3e23dcf86b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9318836a-a732-4f33-a398-47ed7e6bf1a7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6416eb6-c385-4363-a308-acc3f36a0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fbe834-efe6-440a-b658-9fe2266d18fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcae28bb-ccef-492d-878b-0eb7440c9dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf33bcf-2b62-41ff-82d5-dae9f2a8af92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c7e71f-72bd-46ff-89a7-81a1473bb422",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862cbc80-b39e-4e39-83a3-f8c81ffa25c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe53eb6-9ae8-4b15-b3b7-6b0505ce3ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf12596-933d-488e-95e9-d8d88a31c993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1baf6ff5-c2eb-4d22-b624-7d035903e3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f09e392-9a14-4131-b68f-175072d8627c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620a3c44-3409-46b4-87c1-4356a202a090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098b8e5b-c56e-49d6-b124-b048cba53bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d901ba6-e56e-448a-9d15-4de909211e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66bf530-c415-484d-870a-e461ef33fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e5c65f-ed3c-455f-b0a8-1abea3b95342",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592bb51b-a9a6-4df3-961b-ecfd592cf278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c028032c-dc1e-4f4a-8486-3840eb6ef0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b04596-191d-407d-8936-c97f52bfb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36026009-9292-4c1a-8ee9-7a8c45f2bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32af788-2c33-453f-ac89-eae45ff69440",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ff2d01-be54-4bf5-ab84-8215fac6c33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81fd4f7-a64c-4713-bc7f-52ec2d06bf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567db62b-8a16-41ba-abb8-57942eec8e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1e5bb1-9d85-48bf-a6c2-365a52babde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e8709-77f1-4086-ad99-22db8b86dbde",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6e20d1-8939-4e68-bba7-a08f67db1dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb1afd6-e99f-412f-a7bb-4fce5269e79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd1b13d-7c3a-40c3-96cf-54ac53f77680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d144c613-71a3-462c-bd86-17c6528b4046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1a35b3-a527-4618-8eeb-997535e24c60",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362ae42f-44e8-4860-be82-0aef915bcb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1f2dd1-5749-472e-bc00-e6c44a2ee439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32268a21-13d8-4873-9460-841066e1cea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb864994-1ecd-43e2-92a8-029d7e518ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf292619-8246-41eb-94fd-05995f1c6463",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce30538-a382-4653-b567-7d8f02d6aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb3c50a-4314-42e3-9f77-9075715b751b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468f8a2-bbb9-4a88-8248-fc354c690f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6feed6-0561-462a-b0ae-030aa9ff4baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242fce04-3763-4c6b-801a-d7dfb57f3b6c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f8c39d-47e0-44e6-b422-0b89944f7405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7500672-3673-4b8a-b7df-0493e45ee2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccacb6e0-70c4-4694-8edd-2b53d4ae21ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b64dd7-f229-42ab-930b-a0a4fac6d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d7b3d-0ed7-4d2a-8f00-ba9e0666e974",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a58974-033c-4447-b487-85622b1f7e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7309841b-9529-4ae9-8e3a-4ab96db3a50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d228570b-4c4b-49bc-8b17-869e4ef4c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d08d65-3704-4d58-b163-dce9139c13a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714ca26-0c96-451e-adc3-2408677c1a5f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb662f2-0d43-4ce7-a7ce-af512309b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9cb5435-a70c-49c4-b9da-f048da7af6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122df15-201e-42d5-967a-fa6ad4d7b84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97fd9631-a27e-491a-a3cf-83c40216e8eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7f8dac7-6c2c-417b-af72-fea1fb91fcc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15d2cd3c-3031-4533-a21e-b9cdea5bff81",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6c3d8a-5458-411f-b811-6ef7f0f72467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44f9ef46-8fbc-4f6f-84ad-6ada05db2b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087aa7d7-32dc-40a1-a7b8-dab88e148406",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05202719-701a-4295-bf5d-e48bab7d980c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1056689a-8e22-4a85-963c-6bd138aa43fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff1ee94b-777b-4fe2-baae-315f3a0c9c1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90ae5b7c-4c34-4030-8d10-5937f0eb7bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3155864-a305-42a8-a55a-d08e74cd6fa5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c2deebd-6c69-4b16-8dbb-3dd6c2211bdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a174137c-b94c-498c-9c99-69ebdc4082ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72dfcf59-0d7b-4fc7-a25c-04ad26a8ce14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3fe4574-8800-48c9-80cc-e1b7b43e7378"
                }
              }
            ]
          },
          {
            "id": "2911f2e1-aaa6-462c-bf65-1ab67961674f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05af2603-10fb-4d74-88e8-52d6c39f9c2d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0d9098d0-6538-47b6-a124-88110146936f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b44ae3-be35-4ec5-9e6c-5ebc7557db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "297e4345-aeda-41e1-8758-46763540f039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c750b9dc-4877-42f4-9b9b-fbbce2b08074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248ac681-20ec-4e20-920d-df2ca41dcf21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46f024c4-206e-4aaf-af0a-a82b804f2735",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb9ed1e-05d9-4eaf-bc52-da7c374942e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6956982a-c7ec-48b2-a1a3-63c534381e78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "602934db-a10e-42a8-ba5c-4d41a551c799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f695a3b-feff-4c46-a9ac-4e50a0b9c380"
                    }
                  }
                ]
              },
              {
                "id": "4f1136e3-a894-4f62-a854-471b117b1c01",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a35c191-271e-4074-8c47-56411dcc5f3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91207448-6e38-42a8-b5d9-e0c0c250d22e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a32fca7-572d-47a4-a2e9-b24bd8b63792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "275caadf-475b-4db0-951d-8fea89d657df"
                    }
                  }
                ]
              },
              {
                "id": "b13fe0d5-c213-4f40-9aa9-b5dc5bb5f44d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ddba9d-c0ac-479f-a020-bc426e151672",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0951974-692c-41cc-b763-c23c2ff85567"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fa1413e-d1e9-4141-9b39-a142926aca62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ced310f-526e-4e86-8f0e-ce76c83ffefa"
                    }
                  }
                ]
              },
              {
                "id": "83f8b9ca-54b0-4d4a-b03c-83c26b3233d1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bdcaf11-5074-4411-aed6-0cc5b1ab2760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75403b89-f44c-4027-9bd6-c708f43b03a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad9d39b4-eaab-4367-88b5-29030133a542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab3a573a-656f-4c60-b6e4-eac11b7cd76e"
                    }
                  }
                ]
              },
              {
                "id": "237b3890-dd6b-4f1e-8f86-febc649425d7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad30922f-643a-47c3-9795-9d7e9ae584ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15cd5b45-e884-4bf4-ae0b-152722e9860f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618f6972-9699-4abb-8be8-c82e9b59898b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f3597a2a-c56c-4cfb-a028-ff19f50f3c62"
                    }
                  }
                ]
              },
              {
                "id": "4da8d1aa-2da8-46d4-9929-c3021336c5b9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fcacfcc-0dfe-4e87-85b1-f297eee8ad39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4986e481-5e36-4b76-bdab-9c7c9c2be25b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abf6c4aa-cbd2-40a4-b40a-8733934bd92a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "053aba26-c0ae-4322-b203-103e152cab8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9031029e-8311-4fa4-bd69-4f5e377a804c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09bb8820-8950-4718-abf2-1a38d960069b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20bea884-8e12-41de-9119-83818748ea54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b651e123-f80a-41df-a501-e62147fe74b1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1894a07b-137d-42d2-a9ac-44679f84cc8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b797009a-12df-4bbb-81e1-b5f7c55f7c73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd14cfed-6246-47ec-8382-b6774c943472",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de343aa2-2e26-4c92-b1d1-bcd45068a425"
            }
          }
        ]
      },
      {
        "id": "613e4a55-0e41-4c62-8fcd-b64292e19744",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fa8e8d70-90b6-47c5-8136-7ce03f8350c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "359ae86d-8d57-4d4f-92e6-b1bca93d5152",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e655bdce-250a-45f0-a34f-46b33f1f3f37",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c10d1-5548-4a03-81b7-dc3cd06d0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2531dee8-f58e-43bb-8589-809c0105df41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36298397-7345-47c2-bfc4-3503c9e19a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ada439-1fce-4cfa-b2d4-de39b214bcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aafdec-e6fd-4ac8-92b1-c97650716675",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce7cf02-c149-4e34-adfe-d60e6213ae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f48b74f-ce74-426e-8c86-22f59497577b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0fb150-07a1-4e92-ad54-4d4972f5c2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "056976c8-f2a5-442f-9b47-b2912766edfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24bc3a5-c259-4fe3-aa9d-b724b8fe9a70",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4677b1e1-4142-4553-9f7b-eb2fb8b91a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5c48cc-ce9e-4f9f-b0ea-9a3ae0462935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6a336-95ec-4abf-a315-74987ec3f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a670d21-5641-4303-84c4-1d1dc6459ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a1eb85-5eb3-4017-aaa6-7c48e2fd3ab3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614f671d-968c-45bc-9468-16ba526bd930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45efebd-cd63-450a-8a65-2fb8051899c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10671a1f-6eb4-431c-bdd2-76927fa96dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11dc6a5d-adda-44eb-b025-eadc4d589661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10931ed1-9872-40fe-abd4-1b9cba0206a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a45719-defa-4445-8450-e8bd3bdee73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61da18dd-ba39-438d-942e-2ea094d13882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cb2cdd-a73f-4a35-99e4-669841d864cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b393435-c351-4d60-8a2e-41b8f8ac4cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f56e26-c6ef-42f0-a869-35e41ec470ad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8335c0c5-c6f0-4533-894a-00d608dff8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d329a646-4881-45e4-8bcb-39db6eb7aefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94527b6-be4d-43ce-b5a5-0584ed543d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d48b4f79-655b-41c2-a426-517fad2671a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa16fe-ad80-43ea-9f9e-d693e7626823",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540f2e0-3005-4d5a-9c1d-d9ba02be0711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae26e17-7e8e-4dd8-8e04-eafb39faedba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529bce28-2aee-4460-8a91-a3bda9fb0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd98846-8f78-4595-9a2f-8bffd212cc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577cf2f9-549b-4613-ad98-9d89f8f7984b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8a5ab5-b65b-4b32-89f1-d689413a66c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a4a7b8-5b43-4f5f-b70e-bf6c9bbe680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73706766-6744-4aaf-a742-d1bf168f4c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffc550f-901e-4f69-aa5a-c11d387e8d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2f8829-7bfe-4557-97bf-9a1de7f0d389",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01df3e4-1e51-4591-a4b0-96e9725418f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a585ca4c-b8ee-487c-af29-579a28ab8814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5552256e-c5d0-45f4-8355-71912a39ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9973a83d-870e-4eb9-b8f2-e13d22125125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7d6eaf-8a61-4fe1-bfbd-133990928419",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74edb6d4-a35c-41ba-a1db-310ec79ae8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e889ea65-643b-4d7c-bd54-1db7e517a2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bfabab-0873-4a0a-9320-9e0254a0ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c0b15f-330a-4746-b6ad-a1b55fec2d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68e8676-d565-4636-aea8-3eb44531012d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae236ee-1648-47bb-9b16-e35bb0dd0667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f36d2c-7bfb-4cae-ace8-a257618587d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899fd3ab-7c7e-4305-8655-bd9997f6985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "737f08b7-28e5-4d30-8939-c1ec43a74608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137aad02-a1ff-4fdb-99f5-2fa50d4d17df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f3c82e-637b-4fe8-a486-bbaea67101fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fdd413-82fd-42c7-9d09-4fcd900a07cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e387d1-91c0-4727-a777-470ab1b2875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb07cfe-0e41-467a-83ff-49c1e3b21fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d41238-b1b2-45ca-8cd6-06012f6f2106",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1010006a-1c98-4004-9fe0-30ebd6d6a1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f942126d-95b8-4b85-b0b7-d298f04a118b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4d9942-3174-4ef0-af53-cb559288f481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d43c32-eeba-4c00-892b-037ec2b46bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f89d9-a77a-4f25-a9be-a430f2baf60e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f3bc8c-45c3-415e-ad28-2e5ae24bd4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcbc076-70fc-4965-b04a-966e19da11fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb54f8fc-f1a3-4ce7-ba09-225719f3f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "55160887-5785-49fa-9d16-767bd97289ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57364e3d-db5f-4931-a0d9-6e32d533e280",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f6b0aa-36ae-45b2-a0f5-ee7e364ef8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c044f87-fcb5-48b8-a3b0-fc8d35e52272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38fed92-1bb9-4ce7-ae9b-6648584aa4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc92de0d-f14a-4cb0-b26a-374ad1ba4ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d854ae94-aebe-44a2-8214-455ccfb10482",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5f4ab6-4b79-484e-b07c-5d96bf36cd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a945ea75-9030-43b8-b1e8-3d54bca8528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b111a7-a79a-4e96-8d98-47116633cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc605b97-0df9-4f85-94b2-4e31cff60be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c6b1b5-ca57-45aa-84b7-d23cae19007c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4549de48-2f9f-476d-8fb0-4be8dfef43ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0625acaf-5755-421e-9647-a5dac1a1bb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b042d04-15ef-4f05-8103-834ca1154ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f678f4f1-5b1a-4109-b6af-3a045521a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9d248a-19bb-4ffc-8b16-57e590634bf9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc507c7-45da-425c-95bb-2c0570d0f7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c815e4a-70de-45f6-90fc-00f7bb4b4e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bf82c8-8276-4543-9f61-4a5fbf7edc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "241c9c37-ce29-4964-bc71-f24d17dfb9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de36704-cb54-4af1-b661-28adea602591",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ebf4cc-f7f4-436a-aecb-46d8c328c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a112696-d8fe-410b-99c7-41c87567635a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd391bcb-a57e-4b37-aa60-b35456cec930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa9a808-cbd2-4df9-8ebf-05f002c19ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c25194-7c3c-4238-ac6a-c8d380b4e60b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8929af73-812d-499f-8771-ba6c2ae26ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d750655-c6df-4b14-88fa-44ffd8ba4325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388ab6aa-b6d4-491b-b2c2-8856042b1732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8174a432-85d6-4686-a876-94a7e93692db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0a84e1-911a-4daf-aba2-7af6e410e47f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f53c036-3a35-4e2f-b4ef-b0ddcc010d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37b4826-b584-414a-bced-2d541579e043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb314fa-d00a-41ea-b349-d4aeb5667ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbf9897-86b1-48c3-90d4-192010cb52e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb35f2-c732-4b4e-82da-22d1c561d76e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ac9229-ccf4-475d-82b1-e9a047a5a48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f4b9f0-a9f5-4c14-914e-7c8666d72572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399cf43f-e2e4-4894-befc-dac5db43a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "660888f5-3098-429c-8eab-5426657fa33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483fe885-44a0-468d-a9ed-b9cd86bfc4ff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b1ec6-2e3b-450f-b5a1-6b939f4b3548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2762eab-ecfd-4847-aab7-e016f0bb4dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af9b95c-e4ed-437c-a7df-d479f92bd790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e2fa52-4635-4b4d-b070-be1beb22b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135cac3b-32e9-4400-8068-95bef7e5cb17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93e7326-1ce2-431f-8562-37ef23e6e680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e312754e-95ac-4410-b399-a0e117a2584e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f8d62d-9dac-4798-882e-da429818d51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332281b1-18de-4977-b00d-cd2599adc955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39817a1d-66bf-4cf0-a048-c9672862ec14",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da84b92b-16fe-4e6a-be33-0c20ab554a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f549815d-b7e4-46f1-848c-d82aadcaf46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99609a8b-2e4b-4aea-9bce-b23133f9cc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cc6082-f9f5-491f-9aeb-6f0f759c4ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be39f3af-3d13-4b0d-8008-8e00c7bcd1e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a4447a-3e44-45bd-bfc8-e177ec419064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e55dbd1-3062-4977-8ffc-839d5a302752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f966a4f1-2602-4095-afeb-a214f7dc0da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82449603-996f-4224-a235-0bc35e6db454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d29cad-c80c-46f1-b7b9-968d0343952c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534bec68-7978-4e90-a261-02f5e6def92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc53a58-0a46-49a8-878a-14b97f266dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a436eb-e0a5-4403-88f6-ea88c324915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e65c16-3588-41b5-8a39-1db4bbbaeb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f655d1-6e76-4959-8c9b-7e03047708a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae3411-deff-4acc-b1e9-af01856e85d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314ea353-d024-49a9-b7ba-2327bd3ee7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff1d77-2588-4a65-9072-aa89715f6bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4321f205-8448-44c9-86a7-34d009c249c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb4ad44-bef8-4c2b-9835-cdc5b08e4d16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8024e747-7239-46a2-8e79-bfa45e7f8a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890bd3d0-71f5-47c3-bb02-6fcb07320b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0f263a-c793-471a-810a-1e50d921ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b105a6d5-38e3-41dc-9e51-32aad59ab492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee7350b-907d-4c83-8d5c-17818305ef3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c34919-c624-40db-a985-81c3c3d8bacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35cad2a-b655-4225-b80e-9ea97a53cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f888ed-1dca-46c4-a436-e18d48240e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20287a6f-fb71-478d-9a8a-1998eef76579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57953dcd-31e0-4ac1-8a86-442a77b5c254",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3868bdb-e606-4e9e-af8a-fd31fbf782dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cde883-1b1a-4a15-a861-6d0e7ee917a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b2790c-b1b1-4f37-be71-a5e7ac0b2872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade0aae6-1fc1-4731-9bc1-d098f5702686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ec9ed-8d3e-4ec2-a1db-1f2e78ad49e9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88b3e45-aa21-411b-8169-917ce6a62af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3704b49-7fc0-441d-b31d-94ef9bbdcbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53693e-a670-4f81-8aeb-dd0f39d38b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a33142-7a05-4ec7-8665-04173c706fa0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "479e9142-fd96-49a7-a2a2-b0ccbd76afd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ddd11da-3f4b-4c95-a568-ac649af9e8c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa914a28-db6d-4ca8-8813-ffe1f2c99c4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ba7bbd-5274-4cda-874d-ecf8a4fdb3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc19475-9f1e-4f62-b776-b77c179c10b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c7bb151-9e96-42b5-af93-c992b618306c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0253c620-06f8-447f-b719-b5fd5b1fd17d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0060597c-376b-4308-bedb-6aa8862ff309"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e29078f-bf5e-44b7-a391-67640cf1033e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1339568-b37e-4351-bd92-dae27e3e3c57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519f8f30-e8ee-41f9-abb1-0bda82b1a53e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61f661a6-a79b-436d-a080-6b540029c247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a39af130-1fa9-4ae8-98d7-b6131ff261c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7559abfc-1b84-4647-b784-651bc4b2249a"
            }
          }
        ]
      },
      {
        "id": "6dceefb0-2374-4f12-a31e-07f96fa7928c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c10a375a-c7c0-4968-a251-887bcaa4d617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0000390-a939-4a17-9e29-583f54cae572",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d6898ea-a335-4ade-8c07-e14246ac8443",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bda70c3-8a77-4111-a6ec-2308d0d905eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3707fbf7-2291-4ecd-b366-7a6216192112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88afc56b-f676-4d6a-b3d6-64131f6ac3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "76624582-9377-46a9-b15e-112c43ef51eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d50633-8968-4274-9027-8d4d9e6bf330",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5663d72-c75c-4cbc-bbc1-fba6b8e2d858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b82577-c74a-4d20-8c20-98985b6252b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6c1b81-4e49-425b-9923-f1fd3d3b5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e201ebcb-c27f-43f5-a8af-f489bc5bf75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86909a1-b782-44f2-8a23-5746eecd9089",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94683fdc-e0e8-401d-bcd0-55bef8b61a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3c6e0b-be6d-4627-964e-0ca1d716963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36354867-e3da-4b81-b97c-5ade80492a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8385de8c-fcf2-47b5-a44b-1bd7c4519923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c078f3-8b62-4a66-ab64-ef48b419891c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb182c4-f579-49d2-8bd6-aa61213f4af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627cfd74-71ae-430d-becb-354b9d3771dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171f0697-2eb0-4764-b15e-89ebf7bd0357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0065fe-e3fa-4c03-8c7a-f1893ebb84ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a633d5c-b272-4d77-a7fc-339dcf840381",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf56ec0-1a51-4a77-838b-2f45a1f80d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931edeec-9a53-4bae-a6ed-5fa2aac7941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7501e22-5e99-4b6c-ad54-dcc700776310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4089dbe1-959a-4c2e-afcb-6157a7545cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b004647-60bb-4654-ade7-ccc3ac297c25",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d780df7-ed48-465a-976f-71638f552aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc582c9-4959-4ae1-9550-7d0509387d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3afd9ad-73fa-4ab5-85cf-a117fc0e3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15bfbf31-3f45-4429-a8eb-314bf42080e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19adc10a-c7d5-4a77-b36a-3612241898db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0282ca5-2ae3-4e2c-b936-4b8e88762e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fd7bd4-2cb1-41c8-869d-c9a8ef03a2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ecb7b1-5459-4fa2-8e97-1790d295e69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8470be1d-c355-4ad7-aaa0-1c2d18bc44ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370db840-9215-4dd7-bb31-8446be5e58da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c562a13-d202-401f-9892-a1be9c2c8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be64bde4-a5d5-4c4b-a0f2-c640b5c166ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06fb31f-7d17-4b4f-8e18-635ce2dd6566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "486c0a29-f6f6-4f83-ab12-e0ff53a7a81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee20328-c789-4273-981e-be96e0bc6fe7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d1aaa8-d4de-4dd5-a8c6-71cdc391fa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8f768d-54d7-4a6a-9dbb-d19114f112ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5e2c92-0e3b-4706-9efe-4e952cdaa1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8eccd9-d7d6-4012-89f2-712b9224ab37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0227e18a-86ab-41e0-bedb-fb38891f4b0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d5cbed-03a3-4f19-9286-34e184cc8fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799a83ce-930e-4262-89d8-d9396f7563d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938eb9f8-028a-4639-99d7-51b477c96a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea154a09-a35b-42e7-8be8-e92d059fc66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abc44e1-480a-484f-bd6d-f2de891111ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b594e-e5c1-4c4a-886c-cdd5059e28ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561a3eea-e86c-4455-85fd-af5e0d4e075b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4d8b6-75b1-4c9d-8d5c-9cfd14ac9cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67a1652a-9a36-4e49-8bdb-0dbed3bbe14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ddd6c3-e4d0-4df3-a5db-3fce22f97e44",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53b3e7-dbb3-4668-953a-00c9805fff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fd3f6a-2e62-43b1-998f-8739f0f13440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa46238e-e62e-4840-af20-0f5dcd500f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de2355d9-acb0-4072-9310-b10dd0af2ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9032554-6a89-4873-8483-836143c113dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f01028-9d22-4b3a-85e0-5b896a3dab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0b7127-fe73-4d8f-bd43-9aa7ac2de18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebcb489-5228-4b08-a559-74b31e148d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5657c69c-4ded-45a6-9f31-3610febd5f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e273c7-0ecd-4d78-b54f-68965018ee3d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4556704a-708d-4984-820e-8ce5e24d032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dfe462-3d5b-46fc-bb69-ecef75fb0ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c71accf-6171-4ac7-918d-a8f0cbcee5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbced398-759e-49fb-ab42-0138d6c8df06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de31b7b-2797-41d7-87b5-d3f2ed69cb80",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75c4ea0-5d54-41a7-a1d7-9bb3ed923c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7b8753-33d5-43c8-ad97-b74cf77540fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46add31-3783-4339-96f7-ad336e791187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecddabac-cf08-43a7-b985-dabb1fd9180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce33224-ed8e-4737-b1e0-411e7bbb703e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad79a4f4-3026-4ebf-a56d-2fde197b556c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad75bff-d046-41cd-bc1f-c429b367ce67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fbe8a4-ab11-4c65-9f6b-96c28ec6fbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d84cc9f-42fc-4d8c-81b6-6405ca4bd77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40ae37-bffa-4ae6-b21d-ff7b243f706d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5523f11-4450-4371-9e5e-330fd8f672d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f59c957-80a7-4871-91aa-cc3e267dfc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cd4a00-8c9c-492a-bb87-0f8a7a0d4e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c444047a-005b-4ea9-8084-c71c29977626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddb3a50-c47e-4ec4-9b00-b7c21514e4b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7745b664-c0e4-46b0-83f6-2fe922b0906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9096367c-ac50-4581-a8a1-fedbc7cb9530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70d5e3b-5a1a-4a79-8ac2-8bf4ac00cfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "213963b6-5df7-4a46-9d74-c84c7890ffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f583b79-6595-45cc-bb63-6a99461e39b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42ca899-585d-4845-a440-18dae3e9909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb5f721-2155-4bc7-bd99-90b4f001c124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec41f42d-4f00-4280-bf8d-80fe73de73d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99cb4ef-de59-464b-be97-90695779f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28518b7f-7286-44de-b447-be435bbf5235",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adffaf7-2eec-45ea-bec4-a27a8a284e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb22fb1-0b65-4369-aed8-c3e0e437ae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dd2ca2-e030-47c6-967c-b2bae65df897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0caf9c-ae2a-4559-997e-f35db4b564bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb103cf-ee6b-4558-baa6-f35c321a2265",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81cd8b2-670a-4683-a723-41374afe7722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc97997-4d30-4989-9e24-5fd522cf5c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce369e-76b5-49e4-b9d8-22c75087b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9df2ef-1a67-45ab-bc2d-944e2160ae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479a40d-6a7e-4331-abc7-cb27d10ea4de",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a3141c-8123-4ca6-8f58-28656252203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c1b06-b8fc-4ec0-8ab9-ea687f3bc28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4d554f-68ac-4ed9-a40a-ff4432b631e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab6e6b9-e021-49a5-a8f2-9b4e18c8353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50188fe4-2eb4-42e7-8e9b-77433742ffef",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d519ffdc-6fa7-4a9b-9359-4cc68e8952b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658d7694-e280-4177-a652-634fdaa0d353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac958276-d048-4929-93a0-996441de2f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9030a39-d368-413d-ad9b-475d72ae13d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07449952-83b8-480e-83b4-7383911c9a84",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a152279-b3db-4f4c-a05c-507ca66e0ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0d4525-4565-4b01-83b7-1aaeb57a0fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca77e01-3146-4718-99f2-a983242816e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cd59dd-71bb-4540-a000-098f47347c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6d4ae2-1e0a-42d6-bc94-75f94299e300",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03daeb0-33f9-4dcd-80e3-8849b6c4ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fbf557-0a2c-4e71-885c-aed4971149fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c510e426-ab83-4972-a688-ae1ee3174594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d109b26e-a58a-4b1f-bb00-ce612f93baba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1d4ffe-a0b4-402b-8521-94ce93e22fef",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d803773e-ac3b-4042-bb0e-d3141c95dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa26c11c-6d99-451f-9e1a-9eb10305b3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff102ab-8edf-48c0-85ba-37f31bba8419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c01c3dd-9da4-467e-bf46-e65f10e607db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969e752-8338-4a65-875e-30e7c79cc157",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6eb991-4317-403b-bb91-e1fec9cfc58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce43fae-d9fa-4e41-a1e2-4d403dce2970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba95643-257f-4c5c-8543-539ed0a05b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "770f327d-9732-4592-a7c6-8b5674b9493a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a914069-ebea-40b5-ad01-7afc95881851",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221fa052-1f49-40a8-81e1-fde54d715df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67df9a2c-7b54-4abc-96bb-b71c1afa1e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caf49d7-eba1-41c1-8602-1c86e318a693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7aee6f-73e1-4d8f-abf7-e8df93aa9430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3d47a0-60b6-446d-9e50-1bd070a56f51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e28d3-ceae-4492-82e6-96a978641378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2b6359-12f4-416f-8941-d867f3d5dc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8bec75-aca1-4d67-9681-dc0a62fe779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0173f61-24a5-4172-b684-472a35df1e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6f0f3c-3195-4fb2-97e3-8b3dccd41188",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba95fc1e-3805-47d5-bd03-792da9bb4386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6030cfcd-df5d-4dfa-b754-6f9957ed29aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1db91-ab8c-4b75-a1b5-89954d36312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bdbbd3-7b23-446f-b115-2548387f3b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51d17c9-9d25-4568-bedb-157df88c52b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144cd742-15b6-4c63-b0f0-4240651201fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58929ce2-b3e6-4700-bdbe-8628b9b82f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f8d4d-197c-4fe4-b1d0-7c7607cc3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d274ea-2fe2-4e6a-bee0-ff43213c57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272babdf-29d9-4193-8684-2046dd36fbb8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3901ee49-5d60-4437-b49c-6a824c1dad95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e4c26-7be0-4541-9505-72457b3aecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45d812b-f9cf-4014-becf-801c3c9e4663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f751703c-620f-4a9f-9256-c514b9a6841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce2a19c-afd0-42c5-aedd-4a34f3cd731c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d608354a-8675-4571-8164-de7710b33154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0854ab2-904e-4c0d-9234-dd080158a94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d836f-aadb-4df3-a43a-47a7168293ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9508feb7-ef08-49cc-87d8-61a1e0899a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f69527f-317f-4ca9-8555-2c7e24dc0faa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d383ad7f-6d3e-4eaf-b1fd-9d7f75a3cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f69ce1-0b4c-44c8-9172-20712417092c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0c2eb5-899f-4977-ad00-4fb2650511af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c5e6c8-571b-4c3e-973a-fbf99a82343a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56804258-a33d-4b30-bc09-d68338743c2a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a7dd04-f4a6-4904-a6f9-3866084bcf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43575194-508d-4754-8ac8-ee37c3731041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5689df47-9c6f-4069-99e1-c8f30b4a79bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026a3d01-f1aa-405f-b50d-bad683ab2f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1104d84-df55-42b3-8a03-1b004050705c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed8f0bb-5721-4cd4-aa67-6958f2ecb116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c26863-c1f3-4c7a-aac9-a69305112efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c56387-213b-4aac-ba68-4bd610d373dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8668ad21-66e5-4233-82ca-128585c9cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9788c71-49df-4b53-8e01-080bb6841b5c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d937c7f-7967-4def-be70-6de407853b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfcb721-cec0-4b60-909b-c5e3656cd9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31953013-8c35-43f3-8336-d49f51abd4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f820f0-b464-4700-91af-03d885aa4e68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb6034cb-7d41-4d46-aef9-d731b8e2dee0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d649feb2-5e05-4f16-94b4-7b8c27191727",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a62aec-5388-45bd-adb3-d99807cec589",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2b0313-0cf0-470a-b511-d4c521d192a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f22e60-0acb-4a6b-80d8-75b3c2e7ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f25175-5210-4c4e-bbaa-9969534a91f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce06b85c-f113-4225-9dd2-887d6775357f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd4ea4e7-7f2c-47ed-9469-0f65e31fc4fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4989ac09-1d3d-4eae-9ad2-65db7c0a3b7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8789d19f-d575-422d-8323-74d24ab1e526"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fca57369-49ae-4553-9e17-fd34b1390f57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21242566-7903-4697-9d2e-4ab3169d3c46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ddf2362-38bf-4878-a2c5-4adcca192b53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1dfbb61-8941-4e62-a467-29fa043c1b3c"
            }
          }
        ]
      },
      {
        "id": "59978414-a684-46c0-9b1d-3c7367936c42",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "542c3cf9-52b5-49e1-9082-5a89672036ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15f3dced-3537-4c8e-9d3e-06c2a5902713",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72f404db-36a1-4dfc-9b55-80e5c802db17",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210bf85f-e9f3-4738-a79e-591916f71f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e58f02-aa4b-47c2-ae63-24a86084e6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0990bc-bc76-493b-99cd-6d81a920f98f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af1eb52-ab73-4f13-9e9f-5e110ac802b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b586f0-ddae-46c0-a3d8-e762941e335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6294f0-0929-4d40-9dce-b16f4489425a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbde10f9-e8c6-4c97-af49-aa5d8945a436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81fb707-cc34-4236-b0ec-c38a8ed0b035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c902722-8dc5-40ec-bca5-754d7bd3d25b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9376b06-ac7f-49ea-a0de-93b16fe6102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82db86ca-a323-4aca-8f1a-b786db53a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c7fd6-2b7b-43c9-b4a1-d899bdd86a86",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d3d333-6e8d-4e75-b4af-84a23b1c2eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ab2b7d-d612-4fe5-8bb6-e587ee0d9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb7827d-1ee1-4087-bf8b-db9b05ec7d01",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f22b8e0-28a1-4ca2-8fd1-726f3a75ef9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883c87c6-4db2-4f45-b354-e38b886cd8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b894432-ab29-4db2-93de-24e93b2f1eb4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6de8a7-771b-46e3-b861-35dd8c06a108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c222a302-ba18-4e15-a805-31826132ee88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1709d2a2-496b-4989-8641-9e7518220e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df7548f-4ea2-4514-b7ae-9dc04ef5abef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1fd4a3-8aa6-4230-8426-b47328e9f955",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57d959e-d6a7-42d6-a409-efe43712a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dcb96b-173d-4503-b296-f63edbe6e0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d61b78-d23e-4c22-a981-b3bf990a5071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603b1bdd-451c-4539-9a62-cfb1acc540a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a3e5c9-fce8-4e24-be28-348d5286f03b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaa39b4-7184-4594-b113-5b67639c69df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed31869b-a9f9-4ec1-8130-d945b18d6d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05634f07-08b9-4b3d-8bc3-ce97cbb6f824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca05e9c5-202e-4840-88e3-5eda03cc1c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06e52c4-1e58-4f77-b4cb-6bed73d1ef19",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8883f37f-c76d-45ca-88c7-7275f0902220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8692522-0ee9-4c0e-9621-44b68d92f9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de7efd-90a1-48d5-9fec-8fa62e563487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c858dad-fce8-4d04-b2f2-0669a471b463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f44abb-070f-4e74-9f5e-b92c49dd9a14",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6437465d-c363-4d81-afd6-5d57fcf625b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bb6e09-c319-4755-a7f8-36f62e10d7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160bf5d0-0ee7-41a2-a4c6-b815de04d229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5a1975-c73e-40d5-9205-8b8912cf47f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba70614f-fd76-4c44-8376-fcb5bffa37c5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dd9e5e-aea1-4dd5-a130-8e599f65c7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2153840-9352-4657-8e0e-a37ad49091f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dfd82c-0ef7-4224-8d4f-be8a7859bb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd4d96d-6bc3-4aa0-bf77-001b172eaf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9f2f72-af84-4357-980f-46673db77029",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff72bae1-da5a-4ca6-8570-1a58ec795eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd70e9fd-7833-42fd-b866-454231505d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39489f0-1ed6-4806-b777-0179b173317e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8275c47-b7d8-422a-a56d-eac33ad5f4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25dfa92-7b10-4918-a92f-bfe75367fce6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea3cccb-f740-4eb1-b7c9-d8435bc79708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08d344c-fab5-4c44-8273-f1d0f9874cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b4ca64-bb6e-473e-8ba7-0cf1667a3ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7926532f-9e35-4a8e-bf42-6aca8652b533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a7f3d-d052-47a6-af2b-784f07100613",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f81a1e-c239-47bf-b74a-ac8e416dc35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c36e243d-d9b8-444c-91d6-1200978d09df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6ffbf4-2f60-4cfc-8c74-58fbb853047e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d6fd27-69fb-4597-9774-cecefd560964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b1124-b006-4ae6-a21f-1ef341ff3744",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397c6701-f58a-4e74-b17c-95ad891e2b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1060eea-00ba-4ef1-947a-6e9424a8291a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f88c1-a25b-4001-9c1f-07246cd11595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ad3dcd-7266-40a2-957b-461242274c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032b61a9-e284-43b4-b1ce-3186c7e73165",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c488f2-cc8a-4851-a1a6-58d0e9194e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e085c089-10a3-4b07-9289-07909f28bc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb56f32-b682-41f9-8b03-92157e87c053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f184bcc-4c48-4d1d-9b47-48e8ef963839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7596b7f-db65-42e4-a061-5a0fcd52baea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314856ad-0f01-4f6b-8f4f-0ffb2f6f0ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306195d2-a002-4b36-9aa2-e7d62ad6fc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c248f-6990-40dc-a5f9-aa8f4d6831be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e73f5c8-a9f0-41f3-bee8-2b310bc346e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d031084c-f10c-4ac3-bfa8-609f4974f533",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2caf7-72d9-454e-8b3f-7d75e556b8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380db79e-e0d2-47ac-b36d-c2ea96a43726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a11ef45-702f-4749-aae4-fe3fae0b7724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb33adc1-5a50-4779-994a-9b71eca98f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350d0d74-b1bb-4a64-8037-0feec283a2ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb831fa4-7bcc-45be-99ea-6eaec9e500e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af038fd-b719-4050-83be-91f4b009a204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd6212f-9350-40b9-a3d8-3e8c281f65db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06ded46-96d8-4e3d-b2f9-50116b907343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb591898-993b-4897-8ff2-b7f6aafa3609",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86254668-c89c-4b75-96ed-403363f708bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9208f1-09e8-4b3b-b58f-d9201b731911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57904bf-8abf-45d6-b560-e9d60bffb8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b420186-24af-4f42-99ba-b9dc4b0b1233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54632f2-b82f-4404-a750-f5d7cfc191bd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c764389-ac14-4df4-9ee0-4a3ea6a7af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d730f22f-5fa6-457d-ba03-ded165ab6dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b457c23-1404-4cc9-82c5-3f75fe427cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3456fe2-37a9-4a81-9cf8-cf8f6276e32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f80818e-75b1-45a5-a04c-1a4635e43bec",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c138bc-ad1c-4d2f-8f53-0c9213ad186c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6800bed-6a9b-4dc2-a82a-5aa633d1f30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2195a-2638-46a5-b38b-107f1eb2a236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513d49ac-00c6-42ca-a2db-b9bc18cd362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb05b5a-16b7-4ae9-b36e-903850e59a00",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8de63cc-b14d-46e7-9631-7b72d8ef1f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3241227b-7b1e-4359-95d3-650c41a6ac04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b294247-28da-40c0-bf1d-f478154b2b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b78a5fc-4dc8-48a4-9f01-edf99ca90f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de49e4fb-5f5a-4869-bb9c-49f416b7781e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940a9d38-ea95-48d2-a371-1f8d51d2f214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2fa880-c695-475c-8363-6ec185df07f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891205b9-112a-4c18-a6a7-49e5e058a803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8538a4-eb27-41d0-a763-e247d99d9044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a59467f-0dc5-40f6-a8fc-d0dced1ad95e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94a19d4-38ae-4ef5-bf5f-c901ab49d44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c90b4f-2177-4c53-ba43-81df1513c28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad5bf1d-b3fb-4552-ab0f-b1fc3171fc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b8921d-bc1d-47af-9c9f-bf66f8bfb03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272a18f-9158-43b2-9491-83baec6e3fae",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c140d-ca90-44c7-a716-b5a087c49693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603744c0-6b07-4603-abb8-ad0d5229a5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96247938-d70f-4cc3-9301-3cbf4fc91371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0172afb-033d-4c0b-a2e3-75d000941bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420bb67-2c0f-44cf-823f-f1b7fa928874",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf12046-f610-4b16-b9c4-d6c081fe7c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9faed85-6290-4f93-b5b6-8810e3930064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0546b24-5281-48f1-bb12-9b2855c186e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349d7ebe-5d1e-4cbe-a40a-8a4024d2cec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2641f9dc-018f-4201-9b54-09128f428e06",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb12dc58-bede-4529-b179-0b6ef566bc76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7edb8331-48b8-4dcb-9c94-12d001123907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fb544f-ffbf-4a60-8f89-d468fd59d576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5e7eda-2199-41f6-aed8-8d1208a56f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db024d0-1f49-4fe6-9d01-1e676a4d1014",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7452559a-aefe-400f-8155-5e2ba4ec33c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33742b7-d485-485b-9b57-05c0ad7d945d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f3a78-a20b-4e47-b200-7ca4f3bd9021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9797089-a4eb-40fe-b44c-ac8e0b451fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c923bd-418a-408d-b7a9-41b5f4246f47",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c304806-a293-445f-aea5-1fa6543fdf7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11eb3cc6-3475-41e9-9847-5b5662abc128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46af52b9-7da3-467b-b198-5b663f6186f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d108338-2086-4a26-b084-9461aab13e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026bbbfe-ca0f-46e8-9588-ac1c3854ea6d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1241a9d0-2282-4af7-bf2c-5ab4fa2f1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4b7bad-00fa-4c7f-b18a-4c9839754395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b21b248-8a62-4a00-97d5-ab4fee616e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45415f0-07b6-46b9-8cf3-c7f9a6ad6ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a6cebc-c9ca-4619-97dc-aed24e780a1b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba745d-d9fc-46b4-bce9-74fd986bd27c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d960464-fa7f-482c-8a30-b4963f279a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325c6cb-a297-445c-adb7-67feaee2410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1b14a8-b421-4050-a4d7-8bb153a5dda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67351aa-bffc-4d07-8c30-a88a30e231d1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a168edcb-d345-47c5-a2d5-76c6f3dca180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77574067-60e8-4dd8-833d-d9dfd0143c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccd74aa-5190-49c0-b70e-ce39cba7a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f510fb9-775a-40f0-97ec-e9b92fe27513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c404b0b2-0daa-4685-b082-220f73cba975",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee29b1f8-1eee-4635-ae0c-b5e4786e5275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387d9da0-b612-46c6-aa65-d4396301c51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e926aa-0f19-4d97-a890-7e0149d69041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e40b0f6-10ca-4ea8-a4fc-a44022381e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6789a421-7437-4b3b-be81-a5dfda94af38",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b52aa-3b57-462a-ad3c-f45dd5f5dffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c9d99-da30-4015-8145-a7afce4a2cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd24692-33a3-471f-832b-755ea0cfa15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f84ed93-cf4a-4717-8b01-8b5fd1c6ad91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d1fe96-4145-4dd0-96f0-8a728eedf30c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bc34ef-aaf5-47eb-b0be-e9b039147661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c3f293-4478-43b5-a3a5-5bd38be482c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084cd34-6418-4322-976d-e0f35472024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3996d7a-eda8-401d-bcfb-a7386f2f1e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de81e17-204d-40bc-8d90-d7132f5e40a9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d77ff7-9957-4dca-8e07-902e43d61ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfe87c1-9331-4904-ae3f-5c0aaccb6c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9585745f-b3a0-48ee-ad25-855cbb5a8b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f7a22a-c25a-4205-bec7-2a54e3d5e84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f0a917-5862-4566-92a4-02d152378ed4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e85925-e413-4221-a8fc-dc1d240fb975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e74a8-3e54-45f2-9989-97843e88d5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1df4c9f-b2fd-4165-aba4-166ba778e4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d10985-65cc-48ea-9466-c28384b7faf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f175feef-c09a-4823-a163-f4514be8d34b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5a6508-53f6-45bb-b635-94521cfc0df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59ba662-333d-4677-959b-c329debc65cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16a060f-5b9c-4926-b535-0aa10e166875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab435200-e622-4291-aca3-1e4ee9b3f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2ff834-4471-45c4-8ee7-56a2361aa9c7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde181e1-b90c-4b38-a8c1-98965f466929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761cbe17-9e8b-462d-85b0-db28f6ed3e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38e4384-a815-429b-b72f-1e34569fdda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b62357-11ae-4ed1-bf46-d44d04c7c789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3068c9d3-a921-49a9-9ab1-7173ce359521",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6943aae-cbb5-44d0-93c3-183ef3facab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab1ac3b-9db4-4b01-b591-70e8d1c5fed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b614da3d-9955-4340-978b-0bbb1a98b8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b6bc1e-962d-4b8c-ac6d-990dffd1b727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a97b125-ba33-4c74-96be-8655ef98f6df",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df118605-fbff-426d-86ac-7bab1c1df9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e37d5f-4056-454c-95da-7b1468704886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03640081-a45a-486f-ab63-82b8a75cfd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6471927d-a838-4ad3-9da9-b3b5855a79e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66b4331-85dd-4411-af21-538cf8a252cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaf1105-1370-4750-9a5c-6623ff82b5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bb8320-e5f9-45f4-8cc2-ad5fbd75593d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070681e0-6aed-4b8b-9a05-bab48f883374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34891f0-3eea-4096-a783-a1c57a634fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7617c2cf-8a1f-4199-8818-1f33eae9e10f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54cb7c3-322d-44a9-a869-da25740da80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becdcf4f-6b4a-4b70-becd-aa07a2431775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c160427-af8b-4f81-929d-6e228f77ef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d309af65-9ee6-41f5-b919-146ae3f30326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81489d4-4107-4d16-ad71-0b464cf851b0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d59b40-faf8-4b36-b3c0-b00281e4dd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c813a4c-406d-4578-9fc7-dd8374573d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0cfd81-3ded-4ab0-94eb-6f925a8465bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60cbd72-2b83-42f0-a2ab-585c68b41984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df3551d-715d-479e-ba23-96c373c10557",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28263b59-5fec-41f4-bc82-82953d5e595c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acb5f08-dbd6-44a6-b1bb-d9148bf272b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f7e062-210c-4dbb-a973-d891a8088dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4e449b-8b64-4388-bd9b-cd16e05c2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce271d99-0376-4f82-9457-70cfd063dfc7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830dae69-db75-4f47-add7-49217e8b5884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763f5a95-4c7c-4f60-8897-dfd3da6dffa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c4d2a5-e63a-4998-af6e-d4af1cc422c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7fb4d4-ef63-4e3e-ae44-24c164fc7b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21597958-4c01-4ce9-a23b-c02029e68f49",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eefc41-e944-4da7-99f7-d381e0ebf6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b46cf41-36ff-4495-a899-2d928997d039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33443181-633b-4a59-b575-0540b4e9b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ea6636-2706-4c9a-a6b9-32716da172e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81552ba7-06b8-474e-bdc0-f816c134a948",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182fef80-3ecd-4163-bc95-2c2a27c2c406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb7fa3a-d471-47d3-a560-18692a668601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4ca0a-b902-493e-bac5-924170b51f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff46090d-41f9-4e52-91e2-7c4b755c0eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca010ae0-a487-4a3e-b407-3c1f319c3e6b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c04094-5568-40e6-863a-f201dfeb3446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15e5f6c-1d03-4b99-9abd-c9b8e073323b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce85b6-d770-4457-9ce9-f81fcfcf94fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47c5a29-93aa-4d88-b31c-0808276983d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25a6b3d-f8d6-487c-950f-eb131df0ccf3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e508a-25e6-49cb-8230-bd4379df5e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f792b340-caa9-4b9a-bf33-6e27583cdb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46399bc-69d5-4103-86e6-8c623bf946f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5da24a-3391-46fd-b3c7-de8b5d3b5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1181bb9-9248-4c94-8210-df388d619665",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2244f2f1-f3ac-4524-b54b-38c66c3e466a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e57d2b-c7bb-41d9-bf7a-2665bf0a8fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3861c7-f384-4ea7-87de-3a73172f7dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0dc7b-94e6-4a81-a2c0-4bea7ff11966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77292d0-a5e1-4cca-8cc1-fa24782fa4f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83938b15-70c3-46dd-a2ed-68a7ed042dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334b8c79-b1b4-4e3a-9857-70ce6b27aa34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78891282-ab78-41c3-9869-f67e93e3622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdb3824-3046-4410-9619-568c0717a262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba495e-dbc3-4c96-be8c-791f687247da",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d97804-aa23-4c2d-8d0d-a54c5bebdb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd2ad2b-559f-43ac-855c-44b12354fca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13976a6-5c01-473b-ab91-f5da64294045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc68b053-b357-4957-86f1-82ba334fd5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2f4116-468e-43b3-8540-8343d893927c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba22f301-4a74-4c71-b3ad-67a1d19a5057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c457a05b-dbe4-43bc-986b-3441c7d4d75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b4ff74-bb3f-45cb-bba3-9cbdf0588738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b8a341-168a-4bda-b08c-a1a51c91f637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca483ba-ebce-4202-a3f8-0bcd405e03d9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdc8f26-4d4a-4401-ac0f-137252ecbf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b02799b-2906-40b8-92be-dbfdced7a5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f7295-bb50-4f3b-b585-be269c69757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6974b75-84ef-429f-90f2-451fa8d55e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b6cbaa-4fdb-4b30-a9de-2fc814bc4c93",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37a6427-41b8-41d6-b426-630f76f94d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9f3962-b7c6-4cf1-9b98-8e50e79b3135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a942c-d0e8-454c-a8c2-135784cf0c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42efcda-fa23-4224-ba30-6a4246239e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77096db6-e5ba-4aee-bcf2-94dea9b72424",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a439e68e-d5f9-45cb-b306-e1a866ce6f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35bb69b-de4b-4156-9184-298cdc74a23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56331fe7-06aa-4b57-9d5b-6ed5861fd47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df9d3e7-7ac6-40b3-be8b-8de85a1136d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ee1e01-1150-46eb-b9c8-f41cdf1a45a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7463fc-d3d8-4394-bbf6-201e5007dd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d525579-a329-483e-9f5e-8608bcf78152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b959d-4606-4dd5-a41b-bb45e163dd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd456b3-223c-4acb-bfc4-ad6750f053ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae99b12-7eea-4221-9583-1360cfe3b056",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a161b3a-ea85-4b18-87dd-30d362ab0cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294e0406-fef3-4222-b1dd-e554aa43f8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79c3f9c-b50e-42ae-ba75-4057e6c66863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c1e0f4-ae22-46d7-bb42-182276c7d7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5e4d45-a8d6-4545-ad2b-92641c4f95db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ce5157-4d7e-42f1-86cc-b5ac95e8ed91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308c4d6f-82cc-41b2-bbfd-f284c3bc9de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba01b2aa-7bbf-49bd-963e-f5ac6690fa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ff2fef-7075-4b36-a34b-aaaf8491c359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa01d16-a660-4026-a2ae-a8768ef7ce7f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00dec7e-ad20-4388-9fa0-b96722251df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e632a97d-ef5d-4a50-963e-bddcb7f806d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05f78c2-48fd-4c9b-87a9-7870f061dc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cf4cc8-67e2-44a1-9ae4-5045df1b6daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1879a-5299-4547-a6de-318c4a1c8ffb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad54e12-4c4a-4193-879a-bc36bb39a568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839fa14b-9f30-43d5-870b-af24fc681303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9896e84a-9149-4e5c-ac85-18a23375edf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6b8f85-ca02-4b06-a750-3e3a57295235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea54822-d5bf-4347-93d1-f3b2d55e1f4a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bafed8-f8e8-4156-b324-c002b623ed73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ff2a4f-84cf-41f7-8b36-85b7fa873205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0167f8-9785-4c40-94d3-1a713093075a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e154dd5c-6f14-4ea7-8907-b120869e668e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bda7b7-ea96-4774-867d-816896a65f68",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9914f-be7d-499b-8f91-30a7ed355f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6969f7b2-c16d-4719-869b-c744b7c7e492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04580078-eaa0-40bd-81f0-e47a2444666f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5077730-1c3c-4c2b-bad9-8228711f2f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a21e0-c903-4068-9bd4-3da121fd0352",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaaad33-4401-4d4c-95da-d38f4bc21eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a31ea34-fd68-42d1-aa05-2b1dc6255606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff128e33-0a8a-42b8-a0f0-ce5de38e969b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e189f7a-c3f8-415a-bdf1-057af8c04e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f775b9-4233-4ca2-a8f5-991054d4ac39",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d611aab9-cc9f-4954-849c-236232b4b69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e15b0ee-49a8-4752-a6a6-09a46d03d5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31267735-4c1a-4296-9feb-fab80b5665ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5658e37f-fb5f-48d2-9e31-90c02a2ed2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3813ee8-803a-4d34-9d7e-3a428e7ea09b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8c8d35-a58d-4244-82e3-97be798a55d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb0eb81-4408-4c75-9df3-71f4f98d231b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1782c18b-5fed-4f71-aafc-9547b7f1db5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc672c8c-2d44-403c-8e8c-ac3387edc50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336e5810-71b3-4176-9900-d2b399c3362b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56ffffc-8c71-4cba-b3db-66326a99a2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68e6e98-0498-46fd-9f81-2cc20d70cfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7f6c9f-3828-4baf-849d-49133b3e606e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7839c8-ad64-4297-a942-ec60921e89dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f695d95c-4a33-46d2-9d9e-98a34d2506f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb401627-6f24-44d7-b00a-6501751fe778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a464f6c-e7e0-4938-83bf-af0b2048fadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a4a77-6eeb-404a-a05b-f31457bbb3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c0001c-1eaa-4983-97e5-8dc6d4535e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe7fd2-e2e2-4330-ad87-e88d776f4ed0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd81ca15-466e-470e-8c3a-b1f93938efe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720b5f73-7c93-4e84-bf59-c9991813b9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d6292f-4ce5-41c5-847e-a35ede5096c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfea7596-c0d0-4f5a-9bef-33df1c2ccf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7086d3-4699-47df-abcc-3722b3b4d7a1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09ead36-326c-4baa-9014-283d6da46ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6fac67-214a-4b61-9fc2-4adfcee3682c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9b1423-55e9-498f-a6b5-df1643a3a1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fa1afd-35d0-4d9c-a8d1-7dc345b888d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f48913d-4dbc-4827-a66a-b303e1880111",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19874de-9e0e-460c-b36a-08bc0ac8620d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229877d1-ffa3-4746-9913-c324e626417f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48787ff-c704-4acf-96c9-897e6052f013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7556dd27-4dcc-4d6b-861f-0a093ebc542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90698e0-ca57-4304-ba3a-e84baa455cf0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ff4337-2343-431a-9cb2-5819715bae8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f558736-8beb-4767-94df-8f3ed8b6ed6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f581ee64-04d6-4468-b781-2a721f8ccdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aadf1c9-d5f1-4b90-aa40-001e359cf899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108cfab6-8ce9-4f2e-b31c-71afd9c6e963",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94133acd-6603-4e28-974f-08a3f185b8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "608395ff-f74f-4dca-b3f9-d0190b954638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60813de4-8e00-4aa5-9f87-821e5eecae2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a63175-d735-4c31-8fdd-2938f1563bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574f70f5-af99-4583-86d5-083423972667",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78637a0-f785-44c8-8917-5b40a291430a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12732420-6aa6-4efe-854f-e7d1298ef85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bfc4bc-0bb5-4104-b083-5752c58b3c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c15fc5-4440-44c3-97e9-e990adfdfa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8e9d33-9e80-49f6-8a97-e85cd3a4f55c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8c8162-ebfe-42cc-a918-f63bd969e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94fc3f86-fd71-405f-8471-0c88820d5012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc8efd5-9032-49f6-8911-0846ee72f231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad421f6c-1e9e-4b85-b492-fca5071dc992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8e9f0b-48b6-47ea-8ac6-ae0e1058fcf1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e899d8e-9fc8-40a0-a29b-eb317ee2748a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c5a341-c5da-4e66-b1f2-ab02e5f5b616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93448994-d85e-4934-bfaa-0549d0a0b4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8d55e2-f2e2-4e3f-8dab-4f630de368c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb7089f-1ee7-4787-9a65-d9e93dc9aa47",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb4b1ec-9ae4-44bc-af0e-30b281c914d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c25095-d642-442a-b84b-0d1b7533b07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48624ab-6171-4a8c-ad17-414f4429061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547d2dd1-bed2-4ddd-a239-7bb09b7e6292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce41b012-4236-4cc4-b5b2-d774d5cfa8ab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830a94f6-2592-4639-93f5-895bce19fc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04541b8d-9916-4d5f-97b3-43dffbb0259e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a462654-8293-4f1c-92d8-23a723a1a869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7711e316-5bf0-4259-9b90-5fb8cb09054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b748043a-d7a7-402d-8f95-e4067d1038fb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20f5893-3fff-4aeb-b171-2da46e121b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97269ded-4b46-479b-8f9e-ca6e5dce9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4cb62c-5960-461b-88ec-7dd77af6da5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a8602e-54b9-41eb-aaed-30a893f05f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16732a-62b9-4092-9804-22386423eba8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cbc34b-e691-455a-974f-635eb251defd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255a83a5-d7c1-4270-9a11-4c77f123b233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66a4381-92c8-4eb2-8a3c-2e364d10dd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62587c3-5bf3-49c0-89bb-ca851071898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30ea6fb-16f7-4384-b720-2778eed62762",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d72b4c1-8310-4bfc-a1c0-e9bbacc95a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e84c46-6064-444f-aa23-30ff5a1a2079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed2ee00-0436-46f6-bee4-c3395f982d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b8cffa-0353-4c8e-ab2f-e3066317d7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8af94ee-3a03-4ca6-8a85-b16f722afbcf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a3e449-a0ba-4e87-94e6-d9aaf54cc58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78c423f-2af9-441b-8b05-fcba6b3f215f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a80e18-01da-4a5d-b932-ea3e222ec3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967257c3-7886-4bb7-b1d8-d8b0ff9e4945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46092ba-806d-45ff-ab2d-9237cd8225e1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81659743-7e59-45aa-8697-c020ee152667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55328d5-40bc-456c-849b-14b546c3ccd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f207e8e9-dc51-4470-a7f6-c3b02584f0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0860ea48-f507-4e9b-9167-36ea99bc0b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02cfa76-8dc0-4163-97bc-dacb075b62f5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd73886-d1cb-4444-a1f4-363fab328418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471f75b2-3d62-4de0-8069-5c43b40c5f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c463683-303b-4ab7-a082-6a19b5b610c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e829c2-048a-4f8c-9f57-b94f8c1ec7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae271e6-db95-428a-95f6-6a7844d7071f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae9ec1e-7c71-4270-9bde-03a8eaa3622b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9557b0e2-7363-4135-a5b6-eccf2c1f106f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f895b-99ed-4bb6-b385-bc9a005b944b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed48a8c-9df0-4c0e-a3c8-581c9283404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fb2758-23ff-42a1-a310-f8db529c003f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8142125f-d554-46d5-9de4-404555dcaeef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a298540-fdaa-42b0-a47a-7abe17043e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be8f53d-fce2-4574-af05-300b56554d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828d0f9c-4d91-46f6-a59a-bef2c34f2dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e116ad-a615-44b6-b1fa-2c90f46338b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9753df85-bfbd-48d5-bcac-9699c35f67c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e872e719-1134-4183-9f59-776bf9fe445c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6546a4bb-838e-4dd2-ba7e-38dc78add9ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daed5637-1d55-4246-a074-1b199fa6cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538bf0b0-c238-47b8-bad8-61e6772b24ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef1031-c613-4a4e-b48f-d4955a68184b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8200b714-27ee-457a-a6b4-73310f202b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad234cb-174b-4d1f-ba98-b572047220fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d33b56-7f37-4fbc-971b-b66168523720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8fd60e-8327-4114-a1ba-fdd41d15e6e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e16fe-c7c1-47de-b172-9ac129a08ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d283d13b-3a95-411d-b955-9b164b2b1a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724cdb88-9448-4e1e-9b15-5a2b1cac226e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2dd190-d8a1-4541-aa60-f0b651148680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604b1840-85d6-4a9e-b238-ef65bace7edc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aaaa90-4af3-4dcc-af0e-3f0e65057b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ea7d6d-16be-4a51-b9a9-5c06ec106a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dd962a-1756-4971-85db-4db346a2702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9f1581-283a-49b7-8417-fbbcb996ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d524d2cd-29ca-48ca-939c-160133945777",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa37a647-3305-4eef-a2c2-a00eea18c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c1478f-faff-495c-b564-ddec93c5ee0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc39399-89db-48ed-bc1d-b4b731425006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67220bb9-ffeb-49da-ba4d-77d3320b07c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d3b505-a66c-4028-aae1-e8ae279ce4b9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b7e50e-f0e7-42f0-85d3-b1494b00f4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fb8ff1-c057-41e5-a5cd-5f535ead4f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be465475-ee20-4ad6-982e-29ab3795febc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52faae87-5805-409b-b2f3-791f9d4d4af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec524d6-295c-4c45-bbe2-04511639a9d1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673e3682-a065-42fe-bd05-d362ba5c21fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9844eb-f453-4875-b56f-f10e4fcd20a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31506343-fce3-4ad5-8f45-852acaea32c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f000bee-a6b4-4a3b-932f-6d83575342a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb094a8-2463-4486-84d5-e6ac3e81af2e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35caa21a-c055-4613-acce-28e9e6a2f2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d0b151-3e04-421f-ad12-0788d0629701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5844f9-e3bc-4e97-b47e-8687a76ebbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83333866-2556-4daf-acbe-f15e2ff0351b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f65e56-ebcd-46ba-90cc-ac67b22dcde5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38452a6a-e675-4e2d-a275-3157930d2fa7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff3b06f0-db08-4e20-a7ae-237041f35b41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bae3c892-7595-48f8-b9a6-20b344239714"
                    }
                  }
                ]
              },
              {
                "id": "77bb1afe-0e83-42a0-9e15-cd3e894f5b02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbec674e-dc1e-47f2-af67-626fb29ac3be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4d6bb2-149b-466e-b018-b5148b39344f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ba990e88-fa4d-4a7d-b555-1242db6a797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0177263c-4844-4d1c-928c-19bba551a5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "793d64bb-3cae-45a9-bdcd-a5240a982631"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7abf5b8-7ee0-4a50-be5d-830d6750eb31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b021ba0b-e23f-45c8-bf61-0247454a6f70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd84c0da-0fe2-4889-ab2f-5863e20022ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c64007-ec68-4df1-8878-e20c4fbc8739"
                    }
                  }
                ]
              },
              {
                "id": "a5a1d719-555c-4888-a9eb-f0122a8d2eca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5c374f43-93fe-4eb3-8956-8911f7b48423",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ebc98-8af0-4f89-8f18-a76835d9ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6cf41ec1-69f0-4ea8-ad97-04b26bb23db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7861c-806f-49bf-9ee6-94b6cbe47584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154ce85b-dc03-4636-b378-af508f92427d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23a535b7-457c-421a-a706-e1ce96768b2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43cee9f5-ffbf-4582-8a9d-ab04de0dc1b0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f28f915-03e6-406f-9050-9e3f9a4e155e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94ec7bd9-6c19-4259-b68a-1b7a093efaf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b57e51c-d067-499e-ac18-b03d24ad8415",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35cd817-4736-4192-a5a0-dba121f2070a"
                    }
                  }
                ]
              },
              {
                "id": "3bea7cf5-afd1-4c5f-9a1e-e892dbadb3dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d978e76-4e90-4d21-a433-fccc82cb2258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9b21e77-bd74-42d3-b229-2c20b1c645f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e29d9c02-9ccd-4533-8e87-d0cd53a412bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dba0bf3c-c79d-4418-8427-c3e177a87af2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "841237fb-2957-4a06-bb17-17243ba449b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d5d15dfb-5818-439f-8980-d904289386b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b2f52ce-ef8e-4b73-b608-315e08a28271",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0347deed-8844-45a0-a8b7-095336d6de80"
            }
          }
        ]
      },
      {
        "id": "aa10a1b5-aa22-4fda-8fe1-83b9283df9a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dfb0d4fb-dfb5-4a3e-9584-c80ee76097d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db8245c5-c20a-4056-a331-be08937bfc56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b523112-d9fd-405e-9acc-6a04dd23febf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f10d15-9323-41cd-860d-f26e41de509e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70632e44-e0b2-44b7-bf8e-dde1c3a485ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e175abb-fba8-44be-a259-4ef4ee7928fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf940f3b-6922-477c-9ae7-e63ec7fe08a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c366cdf1-295e-4d35-bad4-cd87e9755a4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f14eb28-c330-416d-9cd9-ca7a77add2d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09d8d6b8-7646-441f-8d21-e5bf058e6f98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfdf6062-9a71-43b4-8f14-462e69234bf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d30abbb-2dc9-441c-a2de-ab1e80980646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7349c09-2e53-4537-85f3-7e900fc88014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3fc60ca-9bda-4a4b-97f8-0b361124532d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9287919-ecde-48e9-a004-08cfb15ed307"
            }
          }
        ]
      },
      {
        "id": "6d768853-7098-4b56-b4a1-7a955dcc9406",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "49fbe945-b256-43b1-a871-0370ca0c8bdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea38b4bc-c577-4e5c-9f3d-c3f9aa32ce0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d368fea7-f962-4e1f-86a8-b257348ea198",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58036ec-c594-4592-8af1-de5ed97fe8ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "171e9d80-2ebb-44f2-88d3-9953b75e4fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db771e-0cfd-4975-af92-7a91bfdde964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a1416ca-fbce-4856-8e7d-5082a0a4d84b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "956665fc-6881-4c7c-96a4-3b887c146f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf1c43ae-c48e-4ee6-86fc-9582437d6e97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d81cd82-2ce5-4d67-8482-9fdb757a1cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53647031-41fb-4d3d-943a-15c68157cde4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24c0a0af-cc82-4b65-b7e8-e6c8975b2afe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aef4aed4-99a7-465d-87ed-faca94cb6a17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f6c9b2a-eb43-4216-8186-2b927258faba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3918b9c3-9973-40eb-a071-8560ef708189"
            }
          }
        ]
      },
      {
        "id": "a17f7d9f-d0f9-4333-997a-2a583d83e062",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "81e8f224-96b9-4a82-bc32-e8291e725c26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cbc0464-1496-401c-b9d2-ab2039621bd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddaf2429-befe-4656-917d-e01d49a0fd92",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaa6a14-50dc-4f8f-bc59-37628d67ab2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43fb01b4-cc6e-44ec-bbe5-c99f08d14b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcc054b-baaf-4e45-a2f7-da1e3213bf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8f68e4b-7492-4aa1-a6fb-edb40b6d3409"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4da0fbb5-2802-4965-b657-9b7829d8decb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbd9562e-055a-42e6-8a63-173579a0b418"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed2c69f8-f8cd-419d-bcc3-b0148be77446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac1f8dd8-8192-47b0-aba4-7d6999683efd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71b3409-22d9-4e99-a79d-2b8ba7168dc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f745bfea-b5d5-42c6-bc82-90817d81a5b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc343d94-5441-4aa0-b429-f7a33a30f9be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28f33e87-3724-471f-b2f6-61b57f8656cf"
            }
          }
        ]
      },
      {
        "id": "1b637a10-498d-4c0f-baf0-0fc55b01b96a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bc0d87b-97d4-4ed8-b185-a5d6bd73ddb0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd4ea56-fcb3-4a4c-8060-594b811a3176",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "be999e26-217f-4e4b-a000-a8b5adf40455",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6844ec96-c67b-43c7-a545-aeaadd1c4c14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed2f3e5a-0277-42ab-8039-6ad3243ef7ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.37894736842108,
      "responseMin": 20,
      "responseMax": 8958,
      "responseSd": 581.0398877321015,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710376411563,
      "completed": 1710376459857
    },
    "executions": [
      {
        "id": "2a7aa741-2272-4d1a-9a49-c6eefb0b5091",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1499ad44-dbf5-4d1e-8472-08620639c6df",
          "httpRequestId": "b9f8d815-52ed-4141-8bc4-c0fae37bea2d"
        },
        "item": {
          "id": "2a7aa741-2272-4d1a-9a49-c6eefb0b5091",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8079e42c-5c63-4769-8dc3-b06a71afaef8",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "0385a543-7c08-4662-93ad-2c28b97580b3",
        "cursor": {
          "ref": "84f0a30b-c4cf-4826-bf85-a09e9997485b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "65ceb1d8-e556-459a-92e5-625b7a6434a0"
        },
        "item": {
          "id": "0385a543-7c08-4662-93ad-2c28b97580b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f771c54c-584f-480b-a23c-9ae4c2e66535",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "b9d7f4f2-1dea-4123-b964-fdba50fe4b92",
        "cursor": {
          "ref": "6ad3fc57-0642-452c-aa63-7f581c1e2dc9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "01b4bbf2-ccc9-48cc-8707-fe7055bfc9f5"
        },
        "item": {
          "id": "b9d7f4f2-1dea-4123-b964-fdba50fe4b92",
          "name": "did_json"
        },
        "response": {
          "id": "4292f650-e80e-445d-a978-d7c29228674e",
          "status": "OK",
          "code": 200,
          "responseTime": 490,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f187f17-55fa-44ef-9b8e-7713d31f595c",
        "cursor": {
          "ref": "456df93d-86f1-4989-97aa-d28fcf3f39f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45c48dc9-02f2-4d47-b663-4223e27697c3"
        },
        "item": {
          "id": "1f187f17-55fa-44ef-9b8e-7713d31f595c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a649523-bcd5-454d-864a-45f963e91738",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1122,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f187f17-55fa-44ef-9b8e-7713d31f595c",
        "cursor": {
          "ref": "456df93d-86f1-4989-97aa-d28fcf3f39f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45c48dc9-02f2-4d47-b663-4223e27697c3"
        },
        "item": {
          "id": "1f187f17-55fa-44ef-9b8e-7713d31f595c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9a649523-bcd5-454d-864a-45f963e91738",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1122,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54f1485-5fb1-414c-9f86-edfa9cd3e33c",
        "cursor": {
          "ref": "006c12cd-8787-44e5-8f0d-8e8abc5d76a4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e386d68-5cb2-482f-82d5-b42f6c07ab35"
        },
        "item": {
          "id": "d54f1485-5fb1-414c-9f86-edfa9cd3e33c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1db93819-02dc-4d3e-a9f4-840c54a68c34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc623e2-ffa9-459f-86eb-fba354398fc2",
        "cursor": {
          "ref": "6316d0f0-0f5b-4096-b796-e0dd1d9f7a23",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "606f1274-5d99-429f-bc59-05e941a33260"
        },
        "item": {
          "id": "acc623e2-ffa9-459f-86eb-fba354398fc2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a976f581-d84c-4f25-a5b8-985ffe05dd5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b529020-a005-4776-a219-81d85d60e2ce",
        "cursor": {
          "ref": "e30cd44c-fcf3-4455-9c2d-54bec329275f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2c5ff2ab-ff9a-4aa2-9434-a627f1bf9ce5"
        },
        "item": {
          "id": "6b529020-a005-4776-a219-81d85d60e2ce",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "960525b9-7e6e-464a-9fd9-61811d379371",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1891f6-ebaf-49d6-9260-c02e3352cd09",
        "cursor": {
          "ref": "987c5182-9908-4aa8-b3f0-7db593dc515f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a7a110c2-586d-4d1c-a8a7-80088ac9b199"
        },
        "item": {
          "id": "6d1891f6-ebaf-49d6-9260-c02e3352cd09",
          "name": "identifiers"
        },
        "response": {
          "id": "f2c6063e-4a42-4d2d-ba59-38cc1a039d9e",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcf2c28-0108-4041-a47d-037e28ecde61",
        "cursor": {
          "ref": "dc768660-ae65-481f-9b1e-f29aa4914a07",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3b585285-3360-4eed-9bf7-59c7d3509380"
        },
        "item": {
          "id": "5dcf2c28-0108-4041-a47d-037e28ecde61",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "09b453be-3818-4076-8ff3-509d20d3d189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6949e0fb-cdb3-458e-b865-d4520693d4a9",
        "cursor": {
          "ref": "e9819baa-f380-4406-becb-80b53449ea37",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "66399c02-4331-4991-a373-d69a3cea3179"
        },
        "item": {
          "id": "6949e0fb-cdb3-458e-b865-d4520693d4a9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "295b1266-2dae-40c4-80f9-4db9ae4a431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6445e5-afd2-4621-bd42-4f9e0b69f96f",
        "cursor": {
          "ref": "81dcfead-7bb0-488f-b944-c7b8cddafbcb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "afd826fb-3575-452c-ba3d-5823176b7fb8"
        },
        "item": {
          "id": "7d6445e5-afd2-4621-bd42-4f9e0b69f96f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e8420587-e6c8-47e3-aef2-432bce6094e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a495c-0eda-4447-995e-2edc091a9adf",
        "cursor": {
          "ref": "4de6d307-1550-4216-9db0-8e1535d19d06",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "661aa263-f77f-4717-868b-c8a0e38b9a05"
        },
        "item": {
          "id": "1d6a495c-0eda-4447-995e-2edc091a9adf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "220042be-aa43-4b9f-8162-7fd723334815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975258f-9ffb-46ac-8e49-95f643650113",
        "cursor": {
          "ref": "77cee5bb-b576-4b11-a63f-18521e26df61",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51fa9525-73d7-4902-8df9-bde11d29f92a"
        },
        "item": {
          "id": "d975258f-9ffb-46ac-8e49-95f643650113",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8d48743e-38be-4588-8a47-a7aced9f2f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e32b4-21dc-47d0-8b7a-9398d0466f1c",
        "cursor": {
          "ref": "ead9609c-1114-4d15-bfd5-b05f082d76c7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a69a79c6-a9a9-4983-b6cf-5e8fd35ec204"
        },
        "item": {
          "id": "861e32b4-21dc-47d0-8b7a-9398d0466f1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a58a0be2-850a-4b2d-99e5-b087300b1243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0ef6a3-bddb-4ad4-a2b0-74e797e6b196",
        "cursor": {
          "ref": "790ab4db-6c93-4916-bc47-26fcf8751aaa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "abb721a0-fed2-465d-898f-558075c7f1a2"
        },
        "item": {
          "id": "1d0ef6a3-bddb-4ad4-a2b0-74e797e6b196",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "174cfab3-bd6c-4690-a82d-39511587cd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a1ceec-ad17-413d-879f-356962e71f12",
        "cursor": {
          "ref": "728c2900-d7c1-4ce3-9308-f04a999570be",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6fae9476-5e09-4c81-80c4-cfe2a75bcff8"
        },
        "item": {
          "id": "19a1ceec-ad17-413d-879f-356962e71f12",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "62d27c8d-62c0-4c2a-a44f-c30e923d39e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4393f8-b7ef-4912-abf0-0398934d68fe",
        "cursor": {
          "ref": "b4d1e9f7-ed12-4f0d-a426-13f94d04d400",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "46914d7f-9590-412e-ba74-3acc75f6788f"
        },
        "item": {
          "id": "8d4393f8-b7ef-4912-abf0-0398934d68fe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fbea8bff-56d4-49b8-927f-275d79ef2817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d11dfcc-601b-4269-9b96-7d3dc2af3edd",
        "cursor": {
          "ref": "28de27a3-5917-4676-9bed-fca3828b675e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bab94cae-0928-4087-87f4-24e7d914a386"
        },
        "item": {
          "id": "2d11dfcc-601b-4269-9b96-7d3dc2af3edd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2e0c656b-fc43-4a1e-90db-dae137af68ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8352216f-2fce-4cc7-b9c3-b5a4de695c84",
        "cursor": {
          "ref": "c63cb4fb-21ce-4e3c-b5ff-a68924757140",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e0fb1b1-423e-48d5-a79e-14d536e126c7"
        },
        "item": {
          "id": "8352216f-2fce-4cc7-b9c3-b5a4de695c84",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e3c9151e-f009-459e-ae85-543f6890978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609d5976-9b78-44fb-8010-616a37f39551",
        "cursor": {
          "ref": "c4c89f18-63aa-4633-91be-7183ec4a5d27",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e44142c-6411-4459-91af-9b8119fb177b"
        },
        "item": {
          "id": "609d5976-9b78-44fb-8010-616a37f39551",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bf48b5b7-db7c-4f5b-b051-a9e1224ecc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8148b1cc-ef8f-4073-a603-1d2e5d13f1e1",
        "cursor": {
          "ref": "ad8d54fe-e099-479a-acfd-23fa5e7dfe42",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "36d6199c-b8ba-465f-ac3b-6b75afe143df"
        },
        "item": {
          "id": "8148b1cc-ef8f-4073-a603-1d2e5d13f1e1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b9b33595-cc22-4789-b53f-e30892c0a36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62768063-7d39-4f5d-895b-2536e6f626c1",
        "cursor": {
          "ref": "3ac17350-9a47-4bf5-ad2b-a96e8b1fd216",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2630574d-fc70-478f-a90d-a783d519b26d"
        },
        "item": {
          "id": "62768063-7d39-4f5d-895b-2536e6f626c1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7614f93a-89f8-4d12-a6d4-805e75c616a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aa9f50-a262-4503-84f4-6f4f5059f66c",
        "cursor": {
          "ref": "6ca8371b-0bee-4865-a108-543df28c6863",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "76cc22b4-58c8-41e9-9bd7-bf4e122253e4"
        },
        "item": {
          "id": "b4aa9f50-a262-4503-84f4-6f4f5059f66c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4592f719-3661-4654-902e-9376296194c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1c094-e596-4599-af94-dd61bf19029c",
        "cursor": {
          "ref": "ed34b7a6-35ac-47f4-8ee8-ea8df09a14a9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d6758a7e-ff23-4cf8-a7a2-c7d61e214567"
        },
        "item": {
          "id": "e5b1c094-e596-4599-af94-dd61bf19029c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b6c9733-ec94-42df-94f5-d544412ba7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5b9cfe-f826-424d-a9c9-db4f64a75097",
        "cursor": {
          "ref": "6f8b8db3-70c5-49b0-89e9-b4198f4d6614",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "74b2a2c5-8bc0-4df3-9c0b-7349624ab3a2"
        },
        "item": {
          "id": "1e5b9cfe-f826-424d-a9c9-db4f64a75097",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ecf5ab2f-b693-42e6-93e6-52f0e06de733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5492869-a5de-4893-8c2d-dbba811b8550",
        "cursor": {
          "ref": "a2a21261-1a1d-4efc-85da-e0db3ba74acf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "523eb26f-657d-4701-bfef-366ff52b44c9"
        },
        "item": {
          "id": "a5492869-a5de-4893-8c2d-dbba811b8550",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "260223dd-35e6-4ad4-bd47-55d00b0bb6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b4cf5-478f-405f-87f4-978f239d83cb",
        "cursor": {
          "ref": "21d38417-c0e1-40ec-9333-981023d75192",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b56b464f-39dd-43b4-b83f-8bd761207bfa"
        },
        "item": {
          "id": "1a8b4cf5-478f-405f-87f4-978f239d83cb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "90065ffc-115b-4854-a8d7-a2235a9dc80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e188f6ba-128e-4de9-9d14-267a616e7448",
        "cursor": {
          "ref": "4cc6ab45-51a9-48fd-a6fb-355301646bcc",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41dd19e1-5b76-44c8-916b-2e93cde97aa7"
        },
        "item": {
          "id": "e188f6ba-128e-4de9-9d14-267a616e7448",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "be50bd18-0d1b-4820-9658-11ca57507780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6086e1e1-9031-4852-b533-dda4528bfaa1",
        "cursor": {
          "ref": "8651b01e-d241-43b4-b4ab-bfdbf5bf1ebb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "08f783a9-a757-4239-bd21-7c72f90a7cae"
        },
        "item": {
          "id": "6086e1e1-9031-4852-b533-dda4528bfaa1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "57f7e247-fa60-45eb-8d6d-7cefbda2bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9ad33-f432-42bf-a5d9-c7e2b4eeb9d3",
        "cursor": {
          "ref": "fa746813-ff9f-4fc4-befa-24981cf44aa9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "98f65a3c-5263-4809-b979-8754c938af21"
        },
        "item": {
          "id": "46f9ad33-f432-42bf-a5d9-c7e2b4eeb9d3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb9886dd-7377-41f6-8862-0677106cebec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449fb90f-2f4c-4a29-84e2-f1ce054fc688",
        "cursor": {
          "ref": "5a365355-44b7-4223-a30f-17aa9c5717fa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a1885b8c-7bdb-4fe1-b72f-23003b54c6ef"
        },
        "item": {
          "id": "449fb90f-2f4c-4a29-84e2-f1ce054fc688",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7b348620-f74e-4e4b-9714-7199573c5f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17fb367-c788-41af-af23-107861318269",
        "cursor": {
          "ref": "5c6c72a7-7c04-4e7f-a709-39d5f9ce002c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d5c457c8-8044-4110-83dd-76814716e4e6"
        },
        "item": {
          "id": "e17fb367-c788-41af-af23-107861318269",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b32260d-f33b-4e90-95c2-f15be32ae365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887f736-5b38-40b5-b347-e04422f90cde",
        "cursor": {
          "ref": "ee1898ff-c5a8-4ed6-a012-d2cece7e57bf",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9eed9b14-b5e4-4eb3-9b3e-6d7a654c49b0"
        },
        "item": {
          "id": "b887f736-5b38-40b5-b347-e04422f90cde",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ed846bfd-1af8-4ded-8ad8-d464e9aaf1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59fb183-74b3-40a2-aa3b-b8095bc72e0b",
        "cursor": {
          "ref": "25d17892-a73e-4a6a-8069-542ad27e3f3f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f296b726-ef0b-4792-bf1f-911377d00374"
        },
        "item": {
          "id": "e59fb183-74b3-40a2-aa3b-b8095bc72e0b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26c2c69e-3f0d-4562-b371-9520a5bcf1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c712dd4e-15e6-4193-8f49-3483f008d422",
        "cursor": {
          "ref": "f10c87bb-3993-47ed-a4a1-b11bab158ecb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cfc6b014-43f8-432f-9c7a-c5eae2fb6065"
        },
        "item": {
          "id": "c712dd4e-15e6-4193-8f49-3483f008d422",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f956d4bf-59af-4ddc-8b54-6e5264cd130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3a99e4-ace7-4a95-80d3-8b234ecfa404",
        "cursor": {
          "ref": "a784c84f-3cb3-4881-b4f8-278305562e16",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eab12069-bfb7-4076-b16d-3bad8928dd69"
        },
        "item": {
          "id": "5d3a99e4-ace7-4a95-80d3-8b234ecfa404",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "81c52e6a-aa01-4301-941f-fa04851c35fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af277e-67df-43be-9b65-10e83960f438",
        "cursor": {
          "ref": "6873ad9c-a002-427f-9212-de715ee69cd2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "69dfe4a0-f3ac-4145-877d-11d02a029fba"
        },
        "item": {
          "id": "d9af277e-67df-43be-9b65-10e83960f438",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4814ed15-c492-4e00-8ba2-cd7e390e8e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e847dbfe-4f2c-407a-a360-bf76604ce4bf",
        "cursor": {
          "ref": "433d280f-8c35-4161-af7d-8341edaff304",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "04e79705-f152-4577-a743-e6169a57bcfc"
        },
        "item": {
          "id": "e847dbfe-4f2c-407a-a360-bf76604ce4bf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "50f07137-8e02-4dcb-924b-794f393efefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b9bad8-aba5-4156-85ba-f8375012cb3f",
        "cursor": {
          "ref": "219444ec-d5f5-4593-8395-f4d3a7c48aa2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f07bf6b-cb70-40a6-b441-6326d604c596"
        },
        "item": {
          "id": "71b9bad8-aba5-4156-85ba-f8375012cb3f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "74917487-1c10-4e53-b851-7dc1afd93bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dc60a0-29d1-4804-bb75-046123a57748",
        "cursor": {
          "ref": "c9ce459a-ab06-4c90-a8ea-5b741e4cee79",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e2f1833f-c3e2-406a-9ab9-295cd63f0d63"
        },
        "item": {
          "id": "a7dc60a0-29d1-4804-bb75-046123a57748",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "17cf9f97-a7d9-42e5-8302-dabf828324ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42000165-bd30-46e8-bbc6-634fdae7f77d",
        "cursor": {
          "ref": "084e0c85-ee94-4f31-9896-79d0c5fa618f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bcaedb2b-d354-4840-b799-35466a37f560"
        },
        "item": {
          "id": "42000165-bd30-46e8-bbc6-634fdae7f77d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1560dfe6-2eb9-425a-ab35-87d0a568a0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f02df7-c568-40db-9ab0-e7ef99463cb8",
        "cursor": {
          "ref": "2d4401ea-b9f6-4f4e-a653-5c72db006aa1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "46b31cb7-3358-4409-98a1-77d32fbe0f11"
        },
        "item": {
          "id": "43f02df7-c568-40db-9ab0-e7ef99463cb8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de025915-fca0-4b75-9a11-bc0e61444764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20d2d8-dfdc-41a8-8394-9de27c733229",
        "cursor": {
          "ref": "fe8ef26a-d71c-4274-bd4f-ed3507bffc62",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0bc91344-08e1-4740-a048-cd9acd1d05d7"
        },
        "item": {
          "id": "1c20d2d8-dfdc-41a8-8394-9de27c733229",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bea626b1-65d4-4040-bbb0-0490756edb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dfd3c1-90ad-49e4-a721-45e3f3f8cc80",
        "cursor": {
          "ref": "52b6b186-9945-49cb-8d88-ff48cbdcabce",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9cb58c30-f3b9-4954-95a4-26a81b222a60"
        },
        "item": {
          "id": "69dfd3c1-90ad-49e4-a721-45e3f3f8cc80",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0707b252-ac8a-4d91-923a-a7b3321f0744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a1071-0352-4972-9a3d-8251e4e98090",
        "cursor": {
          "ref": "7016f20c-c345-44f4-bb25-78d387a2ae1d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f99905e6-4410-4db7-ad03-8ae22242fd0c"
        },
        "item": {
          "id": "5d2a1071-0352-4972-9a3d-8251e4e98090",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "338ea6ef-e1cc-4af3-ab92-f28ade9be1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b207330b-18e6-4813-b64c-c69ab423bf53",
        "cursor": {
          "ref": "a8016823-4af4-4f58-a3f1-7ec08c1c76ef",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "928f8cb4-024d-428a-950e-63568268d2c9"
        },
        "item": {
          "id": "b207330b-18e6-4813-b64c-c69ab423bf53",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "72b4e6a4-c8a1-4181-b447-a509361cdaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f46ce7-c083-4de7-9044-171dbb0f0146",
        "cursor": {
          "ref": "b3754427-e663-4b96-a94f-36bd48fadf85",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ac6b740-2866-4d07-ad45-ea83b72a3fdc"
        },
        "item": {
          "id": "f4f46ce7-c083-4de7-9044-171dbb0f0146",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1956146b-3368-4496-a27a-76afd52d08b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60538418-3c27-4044-9b16-e7d1c64c0421",
        "cursor": {
          "ref": "ef21e045-5a40-495f-b78e-d9d8ab08ddeb",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f4b99a5a-e3f3-4797-8868-79cec2091219"
        },
        "item": {
          "id": "60538418-3c27-4044-9b16-e7d1c64c0421",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5c8c81c5-3ce8-472e-afd5-0dcb70bdd879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9801ebf5-603c-460b-b48d-85ebb1483e1c",
        "cursor": {
          "ref": "be95ff74-0a7f-4ecd-9a68-442a173dbacb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "58a5a5c0-cb23-473d-973b-747d57aefea7"
        },
        "item": {
          "id": "9801ebf5-603c-460b-b48d-85ebb1483e1c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "790efa16-1f2b-4af2-ba14-279845566c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda138e-94a4-4757-beff-b41e8b5e808a",
        "cursor": {
          "ref": "011bfe1e-900a-493c-aceb-222b9d23cddb",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bd22e65c-c708-4ee0-927c-d1a25700099b"
        },
        "item": {
          "id": "ddda138e-94a4-4757-beff-b41e8b5e808a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "357896b9-9a0f-4e7a-9732-b0426f08f866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4028d5cd-8a55-4726-b931-acaf8d976015",
        "cursor": {
          "ref": "65f7ded8-7cc8-4d60-b804-42a28988cbd3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4819374a-1648-4f03-bbfb-fd1fa65e1c27"
        },
        "item": {
          "id": "4028d5cd-8a55-4726-b931-acaf8d976015",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d1ea52a1-027f-4ba6-963a-b18be77751ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b9f82-8b73-4d83-a80a-550a551da42f",
        "cursor": {
          "ref": "f17315ff-c073-41fe-ac08-b45c2b77f1cf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96083ee6-f750-41e8-9ff1-20b57f3cbb05"
        },
        "item": {
          "id": "ab3b9f82-8b73-4d83-a80a-550a551da42f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "783712d3-fb4e-4233-bf80-9d098ab92759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bfddb1-0226-40c4-980d-f5bc4048fd63",
        "cursor": {
          "ref": "fa447978-95d9-4cde-9bc1-fe1ed85cbfb0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "064c3f0b-a691-4bf0-9e3c-1fe2c48b3b45"
        },
        "item": {
          "id": "b3bfddb1-0226-40c4-980d-f5bc4048fd63",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9121be65-368e-4b14-a7bb-2d4b6ee266a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b471993b-8804-47cd-bf56-bdc26e405882",
        "cursor": {
          "ref": "a3e8f4cf-d19e-4a2e-83e0-9765553099d5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "45e2d6c5-7056-4c33-835d-fd97b7dbfb0f"
        },
        "item": {
          "id": "b471993b-8804-47cd-bf56-bdc26e405882",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b88ea45a-d315-4fba-bd5b-cb5a0b01011f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc53613-b2cf-4d83-8478-2e3eb8e7900c",
        "cursor": {
          "ref": "e3e5a5ec-59e2-43ce-af77-8929af159723",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e3237d30-bb79-4175-8557-545ba571fc09"
        },
        "item": {
          "id": "7cc53613-b2cf-4d83-8478-2e3eb8e7900c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1398e61b-f2fb-4597-8e1a-385d848d4b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d6e57-f085-42c2-b8ba-61ae6f65b4a4",
        "cursor": {
          "ref": "1a257d84-92e1-4b75-b5c7-69550cfde159",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "71ed0b4b-2c9c-41e5-b71f-f7b7ba803a2e"
        },
        "item": {
          "id": "069d6e57-f085-42c2-b8ba-61ae6f65b4a4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5f4f2781-a653-4197-97fc-7618a4e6bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972bff80-350b-445d-afa0-554e98cd9fa8",
        "cursor": {
          "ref": "72b2a756-6340-4dd9-9eca-0ce93a26e23b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f192693-4dbd-442c-bcdb-3d29250c4328"
        },
        "item": {
          "id": "972bff80-350b-445d-afa0-554e98cd9fa8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3270396e-11ca-43dd-ae79-254dbba5b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe81f84-9ab3-4a3a-9cfe-ee2ab1fe0f1a",
        "cursor": {
          "ref": "9ffa24a9-264e-4ffe-946f-880c90543dc4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "adad1345-511d-47d6-8e8f-9ac0761e2dcb"
        },
        "item": {
          "id": "2fe81f84-9ab3-4a3a-9cfe-ee2ab1fe0f1a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78fdf563-6e9e-4e57-a1ab-0bfd661d5d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369dd721-4b32-4207-8714-0c4048a3a83f",
        "cursor": {
          "ref": "9f69bf41-598f-4d2e-8122-22f176461e81",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5eb4e40d-63dd-4ad9-be9b-d6ac5546596c"
        },
        "item": {
          "id": "369dd721-4b32-4207-8714-0c4048a3a83f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "27558381-3362-4812-80dc-7f8bf50e3e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3b43b-8072-4eae-924f-bc04824e523a",
        "cursor": {
          "ref": "6e6d58af-8331-46f1-8699-2603d5fa31f6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3c0ea51a-7d23-45ec-a299-93d7f39ff27d"
        },
        "item": {
          "id": "b8f3b43b-8072-4eae-924f-bc04824e523a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2d582bfa-0904-4970-9e73-b4f48fcaee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82a4ca-5be9-49fb-88e8-38ba7dce654a",
        "cursor": {
          "ref": "330eda83-8761-4c7d-ada8-257c89c2b10a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e71d6778-04af-4f97-8eec-57f1e742845e"
        },
        "item": {
          "id": "3e82a4ca-5be9-49fb-88e8-38ba7dce654a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c40bf08f-a0ac-4955-bb3e-3cc43daf6ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d3aaf-aab5-4a01-8776-959d23081c56",
        "cursor": {
          "ref": "4b0a7d13-1b61-4af0-9122-a94de3419ea5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4385856f-5bef-48bd-bf5b-44a6b746cac6"
        },
        "item": {
          "id": "349d3aaf-aab5-4a01-8776-959d23081c56",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6b89b3c0-751e-4d86-b032-5378f77ffcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68a42af-de3e-4181-8816-17db63db97bc",
        "cursor": {
          "ref": "62192010-5330-4b8a-88aa-733cc269cfcd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b436ff3a-6b9a-40c1-8ca7-c626cdc7b70b"
        },
        "item": {
          "id": "c68a42af-de3e-4181-8816-17db63db97bc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2f41fb1b-bb62-4b1c-b7bc-5b86b8ecbbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c14778e-d141-4417-84eb-2c3a963c146c",
        "cursor": {
          "ref": "e384d95a-ed43-4cf1-97d3-ca78078b76d2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "062eb4e7-80d7-4a84-887b-ebebdf99b2c3"
        },
        "item": {
          "id": "6c14778e-d141-4417-84eb-2c3a963c146c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "832cd07f-a303-44a1-8ffd-9528275e6e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9029749-d4b1-4dc8-9921-478521ece4bf",
        "cursor": {
          "ref": "bc631b2a-1429-4f9c-9e36-f203eb0cb4c4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f258c3b1-2c80-4e09-87d5-96f65f343de5"
        },
        "item": {
          "id": "e9029749-d4b1-4dc8-9921-478521ece4bf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8191205a-48c0-40f8-851b-176bed9265d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d9ca99-1fa0-4847-af04-3d7d294ced48",
        "cursor": {
          "ref": "e9d0e34c-05a1-4086-a277-56192455f467",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "efc7d3b8-f4b7-410c-b799-8a2cbdd67ac5"
        },
        "item": {
          "id": "74d9ca99-1fa0-4847-af04-3d7d294ced48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3b7aeb20-4c32-432c-9094-4150ef761ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d710869b-2694-4d61-b26f-1d06fac929f7",
        "cursor": {
          "ref": "0442ebb8-b191-4bb2-8113-803144836cf9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d565a56f-71be-4f79-bfeb-4608f12f9338"
        },
        "item": {
          "id": "d710869b-2694-4d61-b26f-1d06fac929f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "647ab5b2-3808-45c1-9dcf-1aa2a494455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91dd995-e4e8-442c-9027-bda41c95d83a",
        "cursor": {
          "ref": "1738e1fa-cff2-4522-9a1a-1eb835dea1bb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f569cf4e-4141-4235-b06d-cece096d6efe"
        },
        "item": {
          "id": "b91dd995-e4e8-442c-9027-bda41c95d83a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ada82880-a81e-4a7a-a593-3a8dde945851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de266ee-b1e6-444f-9337-0347dae209a1",
        "cursor": {
          "ref": "5250c31b-22f7-45fc-8281-64662962ff20",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b83cb998-d083-4415-926a-abdf40b68d48"
        },
        "item": {
          "id": "1de266ee-b1e6-444f-9337-0347dae209a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b72ff8c0-6743-49b3-a0ce-ef20ffa3a592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35475df6-41fd-4f95-bd88-ff0622900344",
        "cursor": {
          "ref": "efed1ffd-f56d-424a-a30a-a72d6d741ded",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9417c221-3e0c-459e-b4a0-a383dd35abe0"
        },
        "item": {
          "id": "35475df6-41fd-4f95-bd88-ff0622900344",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "54ca6cbe-0589-46b4-925c-140d0f870b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54ccd6-2c44-4490-9548-ed351467689d",
        "cursor": {
          "ref": "4784f6f5-41e5-4058-8f97-50aa2d1f35ec",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea31a09c-56c3-4638-9804-cd2c879eec31"
        },
        "item": {
          "id": "ad54ccd6-2c44-4490-9548-ed351467689d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f1c89a6-d015-4f2c-b7c7-99c7002e82c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db295e9-ae8e-4903-a3e6-462f0bdc294a",
        "cursor": {
          "ref": "5a14ba7e-292e-4b15-b8ca-d15c7f72925b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2355e181-63f3-406b-bccb-54e0ffcc7f1a"
        },
        "item": {
          "id": "0db295e9-ae8e-4903-a3e6-462f0bdc294a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d4c5f66-d2c9-4a7f-afde-1fa02ce2a6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f088f70-aa6e-4828-9385-aae14181c76a",
        "cursor": {
          "ref": "9a86aaa0-cd5f-4445-8e0b-ba260061735b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "35867f2c-3cc9-4083-82a6-f00c28e2142d"
        },
        "item": {
          "id": "0f088f70-aa6e-4828-9385-aae14181c76a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8f2388d1-ac26-4bae-a3dd-5fe4484de463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f52cdf-a977-4c07-b825-37ffd560b68d",
        "cursor": {
          "ref": "d5eb8f36-7559-4622-9fcb-88ce525e2afe",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b9d3646b-b4c1-4f99-a54c-b8fae9931a75"
        },
        "item": {
          "id": "e7f52cdf-a977-4c07-b825-37ffd560b68d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "692b169d-1106-43f2-a1dd-202e1233ecbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072ce3cb-8392-4931-870b-4d263720fe1f",
        "cursor": {
          "ref": "63068317-2fb6-45b2-bc52-23ec9cc8282d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "47e24816-d12a-4113-ab90-ab3f93e42e4d"
        },
        "item": {
          "id": "072ce3cb-8392-4931-870b-4d263720fe1f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a892034a-5485-4f5b-b8c5-907f202f8f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8869db5b-ee60-47bb-b9c7-f07042ac341b",
        "cursor": {
          "ref": "8d6862a4-e2dc-4d7b-9ce0-df472966b014",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "decfb2a7-4ce2-48e0-a5c0-51175faee69f"
        },
        "item": {
          "id": "8869db5b-ee60-47bb-b9c7-f07042ac341b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3cd8e4d8-5910-4510-b7a2-2472e621fedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd8606-d569-48e4-9a73-12d8cf89f6c8",
        "cursor": {
          "ref": "b7573ba9-140a-4165-b532-e1a859f988d5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7d4d52d5-e645-488d-bcaa-eec9d012fad7"
        },
        "item": {
          "id": "efdd8606-d569-48e4-9a73-12d8cf89f6c8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a927154-34fe-4542-a152-25960828e1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7744e1-c42c-40cd-95d2-e183a65017ba",
        "cursor": {
          "ref": "1b27f4d1-698d-4507-b2f3-99d7eac69dc0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fa86f8da-ed17-41d9-bd63-f2974298be92"
        },
        "item": {
          "id": "ef7744e1-c42c-40cd-95d2-e183a65017ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ff5f9bb7-a3f7-4ea4-9c6c-fc6d6a563929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725179bd-7f6f-47c2-8755-14368c1d0b72",
        "cursor": {
          "ref": "dfe19aa3-c342-47b2-a699-1a6a209f8179",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ca91487-c116-4dc6-819e-9eb0fbbbf9ae"
        },
        "item": {
          "id": "725179bd-7f6f-47c2-8755-14368c1d0b72",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "29786863-e622-41e8-87ac-fcc2055a172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60561dde-66b0-458d-8cfc-e1493af33dfe",
        "cursor": {
          "ref": "119d6e6c-d870-48cc-9327-7ae683558255",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d124b3c7-a4b7-4451-a6af-cb1e56463928"
        },
        "item": {
          "id": "60561dde-66b0-458d-8cfc-e1493af33dfe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "83a9093b-a849-4560-b816-305fde34f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b8e1a4-9795-43fc-9103-682b9f4d3797",
        "cursor": {
          "ref": "e2d5a93d-5480-4a7a-b3f3-7e27d24fa2f6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4792e5c8-b1b9-4b48-9613-8dda82223192"
        },
        "item": {
          "id": "a9b8e1a4-9795-43fc-9103-682b9f4d3797",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "776ce35a-0bfb-4839-9a71-ff8dd14851ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4a43fc-9ade-4936-b6aa-5f1c173ee2f2",
        "cursor": {
          "ref": "3ab23292-303b-4196-b254-c983440eb8ad",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c711b80a-8a25-4805-b618-36182eafd50a"
        },
        "item": {
          "id": "1f4a43fc-9ade-4936-b6aa-5f1c173ee2f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cf901d91-04b3-4769-80a8-43c2de563261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843f367-cb79-466f-9905-a6837b803894",
        "cursor": {
          "ref": "43d5ca46-0b37-4478-9c6c-4e81a685f19b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "115640cf-cb8a-4553-955d-3a63598d48e9"
        },
        "item": {
          "id": "c843f367-cb79-466f-9905-a6837b803894",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3db7c383-18c9-4f98-8b06-d92de9020963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c027af-1ec6-4d7a-b942-62d07d0f4097",
        "cursor": {
          "ref": "dd10e514-c635-441f-8cb3-5e024b954e0b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9f07f1a5-2539-4da9-ad8f-73e7b967da5d"
        },
        "item": {
          "id": "15c027af-1ec6-4d7a-b942-62d07d0f4097",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e5eea2e5-185a-4928-965c-4b82759a64fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa483e3-7464-41aa-a37d-3d2c47d27b12",
        "cursor": {
          "ref": "d455e6da-aef6-4c29-a1ea-c77f27562107",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a4eb80f2-0b18-49f5-989f-bd83d43ec361"
        },
        "item": {
          "id": "aaa483e3-7464-41aa-a37d-3d2c47d27b12",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "554e0cb9-6065-4e73-8d57-069485754a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ff9924-ce85-4b35-b86e-661a437909eb",
        "cursor": {
          "ref": "739d4b1e-008f-4df7-9315-fdac6d044422",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "96c37e08-1daf-4fe6-9f66-eff3384fd35a"
        },
        "item": {
          "id": "43ff9924-ce85-4b35-b86e-661a437909eb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d9d0a83b-26ba-4c27-a011-0964b13a00ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bce56-8ff5-47b0-888a-851ea6ab5836",
        "cursor": {
          "ref": "ece74bc9-6edb-406b-b866-e0a78602ce71",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "44222ead-b1b8-483c-ac41-18099e41f3d9"
        },
        "item": {
          "id": "3b1bce56-8ff5-47b0-888a-851ea6ab5836",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a6b28f6f-75d2-4882-b563-9d452c9921ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9438fa39-826e-4dd2-bd8b-64a1e131fdbe",
        "cursor": {
          "ref": "c8c8b3e6-be82-467b-b851-4c2031975995",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "937ca498-b6be-427b-9f32-99211bbd11e2"
        },
        "item": {
          "id": "9438fa39-826e-4dd2-bd8b-64a1e131fdbe",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a1a3b75b-d09c-47ef-a253-37aa6f608b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6070eb-f027-45e9-baba-ba5d2e8099f5",
        "cursor": {
          "ref": "c952581f-fb20-470f-8c10-07ff73ea9e9e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "56d6d0ac-a021-42cd-aea1-2864ffc94015"
        },
        "item": {
          "id": "3a6070eb-f027-45e9-baba-ba5d2e8099f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ce59e90-85ce-4bc5-a0d7-adba153b0d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9318836a-a732-4f33-a398-47ed7e6bf1a7",
        "cursor": {
          "ref": "ceef87bd-473e-4d35-980a-6a0bc32758f1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a514629f-9629-4e0a-bbf6-93169c6bffa5"
        },
        "item": {
          "id": "9318836a-a732-4f33-a398-47ed7e6bf1a7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "be05bfc5-e7f7-4635-931e-39ec23a57a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c7e71f-72bd-46ff-89a7-81a1473bb422",
        "cursor": {
          "ref": "873ed7a5-9129-4250-8dbd-9dbb7dafb9f0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "24103562-5889-484f-b858-b7e47a62b7d0"
        },
        "item": {
          "id": "01c7e71f-72bd-46ff-89a7-81a1473bb422",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2fde1fd9-19bf-46a5-abd8-c57fcaa72b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f09e392-9a14-4131-b68f-175072d8627c",
        "cursor": {
          "ref": "bdf11f88-1989-4852-a7ac-98e9bc3829ef",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6b8a3085-3185-4940-b374-557b2ef2e78d"
        },
        "item": {
          "id": "5f09e392-9a14-4131-b68f-175072d8627c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "caf1006d-141e-4e9a-a7b8-5f91961e8fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e5c65f-ed3c-455f-b0a8-1abea3b95342",
        "cursor": {
          "ref": "020d166a-49aa-4ec9-b170-a005fa16668a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2049d0f9-cfe9-468a-95b0-89d0e783dd30"
        },
        "item": {
          "id": "07e5c65f-ed3c-455f-b0a8-1abea3b95342",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "68226284-64aa-4999-8609-be26dd67f7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32af788-2c33-453f-ac89-eae45ff69440",
        "cursor": {
          "ref": "20cdbfc4-ca91-4590-a1b1-452cbc4b094b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8309a1a5-f723-4c4b-a37e-2f40589dece8"
        },
        "item": {
          "id": "d32af788-2c33-453f-ac89-eae45ff69440",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6946dba3-f23a-4871-b654-7259c4686177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e8709-77f1-4086-ad99-22db8b86dbde",
        "cursor": {
          "ref": "def5853f-b2f1-45a1-ada7-289fb96f69d5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "05caaccd-4b48-40a4-bc4e-5dc2ffa00cda"
        },
        "item": {
          "id": "ad1e8709-77f1-4086-ad99-22db8b86dbde",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13189a12-3487-4c54-9cbd-e2e54cddfa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1a35b3-a527-4618-8eeb-997535e24c60",
        "cursor": {
          "ref": "817d1ca6-31ce-42ed-9989-520aa16360fb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "51743c29-aa3b-4ada-8acb-c65e28908add"
        },
        "item": {
          "id": "9c1a35b3-a527-4618-8eeb-997535e24c60",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "708640d0-827b-4feb-9a59-eb37b4c9d1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf292619-8246-41eb-94fd-05995f1c6463",
        "cursor": {
          "ref": "19c8269e-b886-46d6-91f0-6853c5ea526c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c180de6f-4de5-4dbf-9d44-eda05e9b3af1"
        },
        "item": {
          "id": "bf292619-8246-41eb-94fd-05995f1c6463",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a9110a84-0fb4-4657-b01a-4d81ac48232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242fce04-3763-4c6b-801a-d7dfb57f3b6c",
        "cursor": {
          "ref": "04467f9b-b6eb-40ab-b580-bd9e9e4ee33d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c00b305f-1ab8-4596-856d-aa90d1363e3d"
        },
        "item": {
          "id": "242fce04-3763-4c6b-801a-d7dfb57f3b6c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8c6619c0-291f-45dc-be47-b4cd37f47166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d7b3d-0ed7-4d2a-8f00-ba9e0666e974",
        "cursor": {
          "ref": "ad6563e1-483c-4c69-b5e2-09848497c3f1",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "73021b81-8b99-4b18-a7c6-e3b023c02433"
        },
        "item": {
          "id": "407d7b3d-0ed7-4d2a-8f00-ba9e0666e974",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cf12be84-9666-47db-a129-91106378e617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714ca26-0c96-451e-adc3-2408677c1a5f",
        "cursor": {
          "ref": "89c65fc5-cd4d-4074-a24b-b237c5bac00a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3b81cf00-7c31-4e6a-b129-faae8888ff73"
        },
        "item": {
          "id": "2714ca26-0c96-451e-adc3-2408677c1a5f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6f26a1eb-fcc6-446e-920f-4350d258fd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2cd3c-3031-4533-a21e-b9cdea5bff81",
        "cursor": {
          "ref": "a20c6dac-60b7-43ec-934a-504675647198",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "826a8acc-0544-42da-b9c6-0f14dbfbdfa6"
        },
        "item": {
          "id": "15d2cd3c-3031-4533-a21e-b9cdea5bff81",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8f3e63e-0dd8-4673-a819-bcb1d161d0ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9098d0-6538-47b6-a124-88110146936f",
        "cursor": {
          "ref": "bd51162c-1bb5-4735-aa5a-4174fb213691",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a207f504-0a19-4bfc-a06d-12540b2be671"
        },
        "item": {
          "id": "0d9098d0-6538-47b6-a124-88110146936f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bfc807e2-d278-4fb8-b572-6e52e2ff2033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "46f024c4-206e-4aaf-af0a-a82b804f2735",
        "cursor": {
          "ref": "ca8cccc7-00ad-48b5-a015-0a7f7113d103",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aa1c6bdc-6151-4355-a4ec-254adda35275"
        },
        "item": {
          "id": "46f024c4-206e-4aaf-af0a-a82b804f2735",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7c782504-79bc-40af-94fc-fd9865054070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4f1136e3-a894-4f62-a854-471b117b1c01",
        "cursor": {
          "ref": "6aa68b0f-a714-439e-b57b-d694a1c0f7a8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c14c6724-a853-420d-9cb4-758cbc34e4c7"
        },
        "item": {
          "id": "4f1136e3-a894-4f62-a854-471b117b1c01",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a4e1b4e9-b818-46d0-9ed6-e17341e6b1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b13fe0d5-c213-4f40-9aa9-b5dc5bb5f44d",
        "cursor": {
          "ref": "eaff0791-aa76-40e9-ab00-942840ae14bc",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b74b920e-445a-4a51-af8a-003c057d5741"
        },
        "item": {
          "id": "b13fe0d5-c213-4f40-9aa9-b5dc5bb5f44d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a5695b1-f584-468e-9351-b0219bd1bbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "83f8b9ca-54b0-4d4a-b03c-83c26b3233d1",
        "cursor": {
          "ref": "109d5b9b-a09d-46ca-9f2f-8ba4c8efbed7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e0bdd1c7-826d-40c6-bbe6-303be6820349"
        },
        "item": {
          "id": "83f8b9ca-54b0-4d4a-b03c-83c26b3233d1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ece6fa5-d982-4739-8fff-75d86426f082",
          "status": "Created",
          "code": 201,
          "responseTime": 8958,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "237b3890-dd6b-4f1e-8f86-febc649425d7",
        "cursor": {
          "ref": "ba8e1c5c-ecfa-487b-bc2d-a5c807b2aca0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3786e248-eaf5-49ec-b7ac-4ed7ca210d51"
        },
        "item": {
          "id": "237b3890-dd6b-4f1e-8f86-febc649425d7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e7c4de7-3727-4edb-8e69-0219a2a783a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4da8d1aa-2da8-46d4-9929-c3021336c5b9",
        "cursor": {
          "ref": "b4b4b4f9-3650-4ceb-9039-fc2a9b817801",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "20469976-3649-4672-8cb5-d856be339959"
        },
        "item": {
          "id": "4da8d1aa-2da8-46d4-9929-c3021336c5b9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0b91e85a-7948-4567-a046-880e861f900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e655bdce-250a-45f0-a34f-46b33f1f3f37",
        "cursor": {
          "ref": "9e8373d6-8656-44b4-8a87-53ea7f91704f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "70066cf8-0e95-43ce-ab6e-a7b3e31fe0bf"
        },
        "item": {
          "id": "e655bdce-250a-45f0-a34f-46b33f1f3f37",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "796cd0c8-01ca-47c6-b869-4544ab99646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aafdec-e6fd-4ac8-92b1-c97650716675",
        "cursor": {
          "ref": "d44e514a-261f-4924-a6ad-afadec2bf219",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0059b086-5899-4c70-bc13-b34add55c12c"
        },
        "item": {
          "id": "41aafdec-e6fd-4ac8-92b1-c97650716675",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f8916b2-632b-4ff2-b510-20b2da38befd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24bc3a5-c259-4fe3-aa9d-b724b8fe9a70",
        "cursor": {
          "ref": "1e204056-ecca-42b4-944d-9bb0e47b564b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0a427b6c-e779-4df7-a4c5-748f5cd4097d"
        },
        "item": {
          "id": "d24bc3a5-c259-4fe3-aa9d-b724b8fe9a70",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c9a75d5f-5b7c-4a1c-bdda-d9d0928b04c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a1eb85-5eb3-4017-aaa6-7c48e2fd3ab3",
        "cursor": {
          "ref": "aab3884e-e6c3-43a2-a810-50502570c9ec",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "612f3e85-d9c5-4af1-a04c-7d6987e65212"
        },
        "item": {
          "id": "a3a1eb85-5eb3-4017-aaa6-7c48e2fd3ab3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "976c2839-7d4e-4bf3-a04d-cf52a775ef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10931ed1-9872-40fe-abd4-1b9cba0206a0",
        "cursor": {
          "ref": "231d4328-39d7-475e-a094-2f5932f3c525",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ce9c09dd-2c0f-4ea0-8378-513e58a7bc73"
        },
        "item": {
          "id": "10931ed1-9872-40fe-abd4-1b9cba0206a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b31b5e6-aef8-4223-946c-a043bb8e0ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f56e26-c6ef-42f0-a869-35e41ec470ad",
        "cursor": {
          "ref": "9cabc4b1-debe-488e-9231-417d804f5652",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c871192a-3c60-43d1-b586-434b0cdffdd7"
        },
        "item": {
          "id": "33f56e26-c6ef-42f0-a869-35e41ec470ad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "22160ff6-2a49-469d-9f3e-ad5064dc0df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa16fe-ad80-43ea-9f9e-d693e7626823",
        "cursor": {
          "ref": "7de148ed-47e0-4e10-a3ec-0e1d6b9c03f8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eea8e90d-a5d9-4421-bf33-0cb647744be1"
        },
        "item": {
          "id": "28fa16fe-ad80-43ea-9f9e-d693e7626823",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3651a801-f94d-4f92-85a7-babe7b1247ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577cf2f9-549b-4613-ad98-9d89f8f7984b",
        "cursor": {
          "ref": "98aa013d-05a3-4900-bb9c-9ebeaf274d9c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "025de2b5-36bc-4017-a61c-99bfb36d53af"
        },
        "item": {
          "id": "577cf2f9-549b-4613-ad98-9d89f8f7984b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd25953d-b282-4472-8c81-9271010d61f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2f8829-7bfe-4557-97bf-9a1de7f0d389",
        "cursor": {
          "ref": "6c5fa859-7dca-48f0-9b7c-29d74d3354db",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eba766a9-63db-408a-9b3c-d341d5972f61"
        },
        "item": {
          "id": "1d2f8829-7bfe-4557-97bf-9a1de7f0d389",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c791d454-cc8c-4b7c-9301-b3f2fedbd886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7d6eaf-8a61-4fe1-bfbd-133990928419",
        "cursor": {
          "ref": "9febe34f-7b31-4254-9777-dcb7b90644a9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "91992e6e-7abe-4cd6-b4c0-96d986f512b6"
        },
        "item": {
          "id": "ba7d6eaf-8a61-4fe1-bfbd-133990928419",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e4142fd9-d383-453b-81c3-ebd6769e6c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68e8676-d565-4636-aea8-3eb44531012d",
        "cursor": {
          "ref": "183066f2-4aa2-41b3-853f-01b8b0748e01",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b4f98770-c54e-4e02-ac91-a1c7c943d206"
        },
        "item": {
          "id": "e68e8676-d565-4636-aea8-3eb44531012d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "602239ac-09c7-4479-9408-d22956926566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137aad02-a1ff-4fdb-99f5-2fa50d4d17df",
        "cursor": {
          "ref": "75d855bf-f787-485a-8fca-e34fd58e666f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8081562c-a21c-4b61-bf15-4fd3b39b5cf1"
        },
        "item": {
          "id": "137aad02-a1ff-4fdb-99f5-2fa50d4d17df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3239001c-493c-4c7c-bad2-0fa18f75e792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d41238-b1b2-45ca-8cd6-06012f6f2106",
        "cursor": {
          "ref": "13ab85cd-d094-404f-93a0-6f44424ebecf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b0e21890-fd52-46ce-bc95-3e0d3ffa605a"
        },
        "item": {
          "id": "07d41238-b1b2-45ca-8cd6-06012f6f2106",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a51892cd-c4d7-47db-bdae-40253fb0a6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f89d9-a77a-4f25-a9be-a430f2baf60e",
        "cursor": {
          "ref": "75c95587-620b-4795-9db3-38773bc80da3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38ab5ee4-33cf-4240-b5aa-76fd1e10fbfe"
        },
        "item": {
          "id": "0a1f89d9-a77a-4f25-a9be-a430f2baf60e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b73605ba-d976-4b61-a6e6-2843875d4743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57364e3d-db5f-4931-a0d9-6e32d533e280",
        "cursor": {
          "ref": "68090358-a1f9-48a9-9bec-48d95d957d0f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b9eca440-1222-4f89-b715-8f657c31fa93"
        },
        "item": {
          "id": "57364e3d-db5f-4931-a0d9-6e32d533e280",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84a63eb8-c080-4e0d-a8d8-ed4c8d84ae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d854ae94-aebe-44a2-8214-455ccfb10482",
        "cursor": {
          "ref": "d2f375fd-21bf-48dc-aafa-f22abd57a866",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b98e25d-da42-476e-a208-f6b39aa4c554"
        },
        "item": {
          "id": "d854ae94-aebe-44a2-8214-455ccfb10482",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf76b8b1-8b82-4261-9009-3570976b8c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c6b1b5-ca57-45aa-84b7-d23cae19007c",
        "cursor": {
          "ref": "b9926b3c-bea4-4bcc-97b9-3f9d34e1de45",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "89db2e82-a5c7-479d-83c3-35f00bc94af6"
        },
        "item": {
          "id": "00c6b1b5-ca57-45aa-84b7-d23cae19007c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb59e47d-87dc-413b-90e3-9c685089274a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 123,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "eb9d248a-19bb-4ffc-8b16-57e590634bf9",
        "cursor": {
          "ref": "80d031de-303a-4f2e-8a76-c1d537f059b9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be9f76b5-2bbc-4552-8eca-10a647a43086"
        },
        "item": {
          "id": "eb9d248a-19bb-4ffc-8b16-57e590634bf9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bea7a2ef-35a1-421e-b965-d2660e6eda6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de36704-cb54-4af1-b661-28adea602591",
        "cursor": {
          "ref": "3a7f8a14-24c9-4474-b262-048039d13753",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1c6e99c-f895-4a94-836b-2cc5bb1e0de2"
        },
        "item": {
          "id": "1de36704-cb54-4af1-b661-28adea602591",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a09582c4-16e7-4573-9749-60933a66098e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c25194-7c3c-4238-ac6a-c8d380b4e60b",
        "cursor": {
          "ref": "c0d48b35-1a86-473e-8ad2-c4f17daeb659",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c382994-3982-4ca6-9c02-f8436b5ff89d"
        },
        "item": {
          "id": "a3c25194-7c3c-4238-ac6a-c8d380b4e60b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9c30d0e4-e57a-48bc-90b2-01c593f2ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0a84e1-911a-4daf-aba2-7af6e410e47f",
        "cursor": {
          "ref": "7c9233a8-7831-48fc-8892-20390eb429b4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b446a02e-882d-4d5b-80d2-fc7ae456975c"
        },
        "item": {
          "id": "6d0a84e1-911a-4daf-aba2-7af6e410e47f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7bcf4a00-7d3d-4b08-9e09-254a989e40f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb35f2-c732-4b4e-82da-22d1c561d76e",
        "cursor": {
          "ref": "68151e87-1970-4259-bec3-6f26f8b6f1a3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b230bc49-c368-42d2-badf-ced8c2453981"
        },
        "item": {
          "id": "efcb35f2-c732-4b4e-82da-22d1c561d76e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f75bb309-c05c-47ba-b06f-f81cdbfceb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483fe885-44a0-468d-a9ed-b9cd86bfc4ff",
        "cursor": {
          "ref": "8b5aeb19-d760-482d-9707-acc47d09cab2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33f265dd-0f36-4e91-a725-ff2ed12729f6"
        },
        "item": {
          "id": "483fe885-44a0-468d-a9ed-b9cd86bfc4ff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5f5c5f9-24c2-4bee-baa8-60940850e9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135cac3b-32e9-4400-8068-95bef7e5cb17",
        "cursor": {
          "ref": "263f04e4-721e-4bcf-8048-527e707105d1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "537fc6f7-ce88-4eef-891e-9b7cf8c7108a"
        },
        "item": {
          "id": "135cac3b-32e9-4400-8068-95bef7e5cb17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "185c55ec-21a6-44f2-b14c-7bf01544c246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39817a1d-66bf-4cf0-a048-c9672862ec14",
        "cursor": {
          "ref": "5d22f228-193b-4498-901a-f53722de57cc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "387ea62b-ae86-4595-99f9-3460978c46c3"
        },
        "item": {
          "id": "39817a1d-66bf-4cf0-a048-c9672862ec14",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "96ee2c34-eb1b-4b96-9e95-4af0c5aadb67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "be39f3af-3d13-4b0d-8008-8e00c7bcd1e5",
        "cursor": {
          "ref": "38d35e1e-c93f-442f-9ad2-b0891047b953",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "47c3f25a-3d92-43b1-8085-b5dbc2904b8a"
        },
        "item": {
          "id": "be39f3af-3d13-4b0d-8008-8e00c7bcd1e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7614904-3a99-4f92-b353-40204306c51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d29cad-c80c-46f1-b7b9-968d0343952c",
        "cursor": {
          "ref": "8e5cb4d6-cd9a-42d9-99a1-2eaff2cba97c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "caf994d6-afb6-434e-929f-ab096a9816dd"
        },
        "item": {
          "id": "56d29cad-c80c-46f1-b7b9-968d0343952c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecc60a51-de8d-42cd-ab6d-6251d14f5aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f655d1-6e76-4959-8c9b-7e03047708a8",
        "cursor": {
          "ref": "79584d41-b683-448b-a17c-a202ffb4d961",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d45941d2-2009-475c-9eb2-057bc9743e7e"
        },
        "item": {
          "id": "a3f655d1-6e76-4959-8c9b-7e03047708a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "826c279f-1350-47a3-afcf-1dae6f2320c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb4ad44-bef8-4c2b-9835-cdc5b08e4d16",
        "cursor": {
          "ref": "794fc287-a5bd-46e1-b4eb-93aa66d10a98",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1e344d55-6b16-4a17-9261-0513ec21eb37"
        },
        "item": {
          "id": "1cb4ad44-bef8-4c2b-9835-cdc5b08e4d16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e9ce3e91-d955-4155-8e64-41b5f6cc07b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee7350b-907d-4c83-8d5c-17818305ef3c",
        "cursor": {
          "ref": "dcf9058a-3909-4eaa-9065-5f0de1dc6850",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "52960c5c-8351-405a-9703-440c07004b9d"
        },
        "item": {
          "id": "cee7350b-907d-4c83-8d5c-17818305ef3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2e4fcc6b-d964-46e9-9d24-efab014af629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57953dcd-31e0-4ac1-8a86-442a77b5c254",
        "cursor": {
          "ref": "0817bc0e-2019-42b6-9903-22cae47efb8c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1071fc9d-0f62-4c74-8b4b-c07b72eac39d"
        },
        "item": {
          "id": "57953dcd-31e0-4ac1-8a86-442a77b5c254",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b17aa363-b2e7-4064-80c9-43f1bd2594e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ec9ed-8d3e-4ec2-a1db-1f2e78ad49e9",
        "cursor": {
          "ref": "fd21085f-0d31-44ec-8b70-9d73e67315cf",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "75679938-9c7b-404f-a359-3c815f6f7ea8"
        },
        "item": {
          "id": "c96ec9ed-8d3e-4ec2-a1db-1f2e78ad49e9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "87ce6594-57ea-4398-baa6-25182d0317a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 116,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8ddd11da-3f4b-4c95-a568-ac649af9e8c4",
        "cursor": {
          "ref": "1cbe3491-0e12-431e-984d-c9e4d890ed34",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f3d4e132-0c8c-4afe-81fb-8019ccbc673c"
        },
        "item": {
          "id": "8ddd11da-3f4b-4c95-a568-ac649af9e8c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0038fbe8-d544-40a0-8408-a53892e396c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6898ea-a335-4ade-8c07-e14246ac8443",
        "cursor": {
          "ref": "76505b43-ac8a-4019-85a3-77b14a209df6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db7a433c-5cd5-4a39-9f3d-651a10c67314"
        },
        "item": {
          "id": "3d6898ea-a335-4ade-8c07-e14246ac8443",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2544907c-7481-4ae1-99b4-4f4b8352f234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d50633-8968-4274-9027-8d4d9e6bf330",
        "cursor": {
          "ref": "5003688d-82f9-41a6-b30c-2308c9ed62a2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4a868ae-d59a-4d6b-8fc1-9d238a8d6135"
        },
        "item": {
          "id": "b8d50633-8968-4274-9027-8d4d9e6bf330",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fdc93396-80bb-4844-b834-8eb6ee265c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86909a1-b782-44f2-8a23-5746eecd9089",
        "cursor": {
          "ref": "e1a216b8-9c3a-42f2-8dcc-7b1f938f3e5f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d5fa538f-fa9b-42dd-89b3-5f4f5849b2f3"
        },
        "item": {
          "id": "b86909a1-b782-44f2-8a23-5746eecd9089",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0bd5bbb9-844b-4eec-a62a-744b07ebea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c078f3-8b62-4a66-ab64-ef48b419891c",
        "cursor": {
          "ref": "7656a26a-c1b1-4b66-a62c-a39e19e3cab7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b1d0da3-4050-442f-96b4-a5a8d21ec134"
        },
        "item": {
          "id": "f3c078f3-8b62-4a66-ab64-ef48b419891c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0932bb7c-9be0-48d0-838a-0f5bda731d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a633d5c-b272-4d77-a7fc-339dcf840381",
        "cursor": {
          "ref": "37b5c874-949f-4c00-9165-5ff762b6730a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ef647edd-fcad-4780-afad-7edd9fe52795"
        },
        "item": {
          "id": "7a633d5c-b272-4d77-a7fc-339dcf840381",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90729d3a-8400-46b5-87cf-681af1edffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b004647-60bb-4654-ade7-ccc3ac297c25",
        "cursor": {
          "ref": "248af1c0-2c4c-4d15-81ba-dec58f430788",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "26b83591-a360-46b7-b673-d2ab80e6dace"
        },
        "item": {
          "id": "6b004647-60bb-4654-ade7-ccc3ac297c25",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9436a025-97e0-4e9e-8656-e17400426202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19adc10a-c7d5-4a77-b36a-3612241898db",
        "cursor": {
          "ref": "8cbaeb49-10f8-4d9e-9fea-381a020fc1f0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "49355fee-6e04-40f1-808e-19ad30caaacc"
        },
        "item": {
          "id": "19adc10a-c7d5-4a77-b36a-3612241898db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "498e9206-9061-41a9-86e8-cd795f241005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370db840-9215-4dd7-bb31-8446be5e58da",
        "cursor": {
          "ref": "e5da68e8-6bb6-47dc-9648-f6cfa9f990f5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a2e0b9cb-08e5-4386-9e50-532cf7c7ca69"
        },
        "item": {
          "id": "370db840-9215-4dd7-bb31-8446be5e58da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "11f65ddb-7827-444f-9367-f88a7e468c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee20328-c789-4273-981e-be96e0bc6fe7",
        "cursor": {
          "ref": "90734294-9451-475f-a779-f9e692a4d3b6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ed536c54-cdf8-4011-9ca0-79b27be92993"
        },
        "item": {
          "id": "6ee20328-c789-4273-981e-be96e0bc6fe7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7eb7de0f-0685-4c86-a44a-5f6b2eeae23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0227e18a-86ab-41e0-bedb-fb38891f4b0a",
        "cursor": {
          "ref": "b0fd6cec-769b-43d8-b853-05f9834c9a78",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f313a1f8-9b6f-470c-be88-e8239b2d327c"
        },
        "item": {
          "id": "0227e18a-86ab-41e0-bedb-fb38891f4b0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d4767895-5683-47ac-9a23-ef88a8a2ce08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abc44e1-480a-484f-bd6d-f2de891111ad",
        "cursor": {
          "ref": "4e5e4097-3189-4b6b-92d7-2c5eacaff885",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "24cde0c4-2b16-4623-b98b-11c30da465c5"
        },
        "item": {
          "id": "8abc44e1-480a-484f-bd6d-f2de891111ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80de6a5a-989a-42fe-bf3a-80f9e4aa6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ddd6c3-e4d0-4df3-a5db-3fce22f97e44",
        "cursor": {
          "ref": "2c8feca5-32a5-4144-9cc5-efbc59088861",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55965a45-b3a7-4810-8766-1a519d1cf1a4"
        },
        "item": {
          "id": "b7ddd6c3-e4d0-4df3-a5db-3fce22f97e44",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ceec02b-cdc2-4a65-b995-e5a3dab6b0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9032554-6a89-4873-8483-836143c113dc",
        "cursor": {
          "ref": "1234dfff-e7dd-4331-ad28-02dbb63c11cf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8df4013f-99a7-471a-9f46-660bedafd599"
        },
        "item": {
          "id": "a9032554-6a89-4873-8483-836143c113dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d5a22896-b1fa-475a-a81b-2c42ae82ffa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e273c7-0ecd-4d78-b54f-68965018ee3d",
        "cursor": {
          "ref": "1beb936a-ec47-4804-8556-883e1faf300f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "14aae167-ac63-49dd-ae05-62ce87521067"
        },
        "item": {
          "id": "b6e273c7-0ecd-4d78-b54f-68965018ee3d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c68b62f7-928b-4bf0-aa79-4363b8ccfeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de31b7b-2797-41d7-87b5-d3f2ed69cb80",
        "cursor": {
          "ref": "bf154fb3-a970-49a2-a443-e01d35a97a41",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a6defb0-d4c4-4776-8c84-9bfe7e91cd4a"
        },
        "item": {
          "id": "2de31b7b-2797-41d7-87b5-d3f2ed69cb80",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d5ee499-6081-4056-822c-bb6a1cc80de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce33224-ed8e-4737-b1e0-411e7bbb703e",
        "cursor": {
          "ref": "d395d8e8-5383-42d2-b83d-fb0f284e9610",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "96fe6e07-055a-4aff-915e-59375fe39625"
        },
        "item": {
          "id": "fce33224-ed8e-4737-b1e0-411e7bbb703e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0173770b-c0d4-497a-b4d6-67f13d13fa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40ae37-bffa-4ae6-b21d-ff7b243f706d",
        "cursor": {
          "ref": "2d7d7f8a-5b66-4f46-86b9-4a992ef20177",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0de365c8-f5a6-4753-95f8-3fb8011fefda"
        },
        "item": {
          "id": "2a40ae37-bffa-4ae6-b21d-ff7b243f706d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d42069c0-eab5-420d-9782-8536de64b6c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "cddb3a50-c47e-4ec4-9b00-b7c21514e4b8",
        "cursor": {
          "ref": "54e33875-7954-4c7f-b037-f38030c7b67e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "87e0eec4-98a4-4fc4-8ccd-7c87e1ff2798"
        },
        "item": {
          "id": "cddb3a50-c47e-4ec4-9b00-b7c21514e4b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "77829673-06c7-4e5c-a6c9-72b0dace1700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f583b79-6595-45cc-bb63-6a99461e39b0",
        "cursor": {
          "ref": "594a16ec-c532-4c0a-b0aa-5417f6c23183",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6cb43315-799c-41c8-b6da-32e54d93a1f5"
        },
        "item": {
          "id": "6f583b79-6595-45cc-bb63-6a99461e39b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95a59f04-5696-4539-ac4c-e6cb01258ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28518b7f-7286-44de-b447-be435bbf5235",
        "cursor": {
          "ref": "1479fb74-71df-4205-ad85-f1c31d48be83",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ca279a7-8bbf-4b71-b09c-32fce75bb0e8"
        },
        "item": {
          "id": "28518b7f-7286-44de-b447-be435bbf5235",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "40292b49-5a57-40dc-a0db-5ee17851c0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb103cf-ee6b-4558-baa6-f35c321a2265",
        "cursor": {
          "ref": "e2386a79-b3af-463d-ba99-fb9bf59560aa",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "398ba7f7-5ea1-464c-8e81-8493e909c214"
        },
        "item": {
          "id": "8cb103cf-ee6b-4558-baa6-f35c321a2265",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4da4be2e-4c75-4ae3-b5a0-2ed8750ea8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479a40d-6a7e-4331-abc7-cb27d10ea4de",
        "cursor": {
          "ref": "b79e2adb-9422-40af-aa37-31cee7dbd31c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ffb926f3-75e4-4f7f-8f41-5d54f751b21e"
        },
        "item": {
          "id": "f479a40d-6a7e-4331-abc7-cb27d10ea4de",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3c91b73f-4119-4280-bfea-64fa230aa29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50188fe4-2eb4-42e7-8e9b-77433742ffef",
        "cursor": {
          "ref": "c62e92d9-5af8-4112-99f4-9fe085cad4fd",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b3225e2a-bb9b-4416-bc48-3d3dc70a29f9"
        },
        "item": {
          "id": "50188fe4-2eb4-42e7-8e9b-77433742ffef",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7d05843-b351-4dc1-8327-8d1ffe620a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07449952-83b8-480e-83b4-7383911c9a84",
        "cursor": {
          "ref": "32803f98-4185-4fb1-9b38-b8c814fa8888",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a549c99-2087-4df7-9be5-64c207d95912"
        },
        "item": {
          "id": "07449952-83b8-480e-83b4-7383911c9a84",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b3bd0d7d-69c8-4143-94ee-ad8ed8c0a24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6d4ae2-1e0a-42d6-bc94-75f94299e300",
        "cursor": {
          "ref": "f840a28a-b70a-41a1-b6ae-0fbd0f39ea57",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8ec3378-117f-4f96-8e31-917c0cefad0b"
        },
        "item": {
          "id": "8c6d4ae2-1e0a-42d6-bc94-75f94299e300",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b6a6857b-33d6-4f2d-8cde-87267ad9a519",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "ce1d4ffe-a0b4-402b-8521-94ce93e22fef",
        "cursor": {
          "ref": "8ae314b9-2ca6-4e1d-8128-49ff1a13aa02",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cd67fdd6-7998-4c58-862d-eb0f7cf0446b"
        },
        "item": {
          "id": "ce1d4ffe-a0b4-402b-8521-94ce93e22fef",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "89de0d05-f827-4d0b-bee1-b0e72b40adef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969e752-8338-4a65-875e-30e7c79cc157",
        "cursor": {
          "ref": "d916fbbc-643e-4ca0-aeeb-721d4031294a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7777c6f-6b81-4af5-bdf6-6d586f84b577"
        },
        "item": {
          "id": "6969e752-8338-4a65-875e-30e7c79cc157",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed341f6c-a1fd-4b79-9380-088cdb4a624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a914069-ebea-40b5-ad01-7afc95881851",
        "cursor": {
          "ref": "d9a14594-92dd-4f6e-bf80-117e749b7e1b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "15166036-1c68-4e41-a7c9-fe28279f0ebe"
        },
        "item": {
          "id": "5a914069-ebea-40b5-ad01-7afc95881851",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9bcb709d-a946-4d44-809b-da0fda2f812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3d47a0-60b6-446d-9e50-1bd070a56f51",
        "cursor": {
          "ref": "0c967b94-40a8-4c03-a9bf-8f899761904a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a3e4c86-e69e-49fe-931e-0cbdc7297181"
        },
        "item": {
          "id": "5f3d47a0-60b6-446d-9e50-1bd070a56f51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a4b21d9-c1ef-4b5f-8afc-08223a85e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6f0f3c-3195-4fb2-97e3-8b3dccd41188",
        "cursor": {
          "ref": "c4ec789a-f6d0-469b-9ff3-464c8ddd2c16",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3ba89bc1-ed00-4adf-8506-f630f618c575"
        },
        "item": {
          "id": "2c6f0f3c-3195-4fb2-97e3-8b3dccd41188",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01b7fcd1-339d-41f5-b5d2-9070a1fafc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51d17c9-9d25-4568-bedb-157df88c52b2",
        "cursor": {
          "ref": "c42de16f-81ae-4a4b-8fc9-53ea3562528d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "84bafa67-6fd5-4747-a21d-34732a876e3e"
        },
        "item": {
          "id": "d51d17c9-9d25-4568-bedb-157df88c52b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "450bbb06-2a73-45e0-a290-a825869716bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272babdf-29d9-4193-8684-2046dd36fbb8",
        "cursor": {
          "ref": "a246a9ce-9d33-4391-9729-ad6a02614e34",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82cce6b0-cca8-40e7-a7f2-1b3f66fbb9bd"
        },
        "item": {
          "id": "272babdf-29d9-4193-8684-2046dd36fbb8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b541857d-1913-45e5-b46e-7394334f9c5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "6ce2a19c-afd0-42c5-aedd-4a34f3cd731c",
        "cursor": {
          "ref": "74e1ea0e-43e7-46d3-b04c-98e51febff70",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21be2165-de12-4790-9dee-d58dbbd5ff74"
        },
        "item": {
          "id": "6ce2a19c-afd0-42c5-aedd-4a34f3cd731c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b30b912a-c6b4-4fcf-b9ff-34b7ce24792e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "3f69527f-317f-4ca9-8555-2c7e24dc0faa",
        "cursor": {
          "ref": "bf7e3677-0656-4e54-9c9b-4f54eae9a113",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bb7884b0-c624-4355-b081-79f6efb35e8c"
        },
        "item": {
          "id": "3f69527f-317f-4ca9-8555-2c7e24dc0faa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70f0c6b1-8dac-4df2-909e-5184713b1237",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "56804258-a33d-4b30-bc09-d68338743c2a",
        "cursor": {
          "ref": "35c55e25-278f-4dee-98c6-9d7e01d19312",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2de6bc27-a934-4a51-8e3d-62f8e4a44108"
        },
        "item": {
          "id": "56804258-a33d-4b30-bc09-d68338743c2a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "582f9e10-489b-42c9-bb0f-5cf1060cda65",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "a1104d84-df55-42b3-8a03-1b004050705c",
        "cursor": {
          "ref": "cdd5de12-754c-40a5-b549-c6f02b08f111",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "46449216-9b7a-4697-87a3-e3e5fd1a9671"
        },
        "item": {
          "id": "a1104d84-df55-42b3-8a03-1b004050705c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "34e9e512-d591-433d-8aea-e61c9ae1e8a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "b9788c71-49df-4b53-8e01-080bb6841b5c",
        "cursor": {
          "ref": "902014e5-a8bd-45ef-bb2a-a53bc08fb815",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3cd1dd7f-9646-4404-8f3f-df170dd12a79"
        },
        "item": {
          "id": "b9788c71-49df-4b53-8e01-080bb6841b5c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "940d8b2d-e6da-48ac-b54c-96fac1c4dc97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d649feb2-5e05-4f16-94b4-7b8c27191727",
        "cursor": {
          "ref": "ff0fa3b7-99bd-45de-9c44-365dec7d6bde",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9790f631-8822-4ef8-aff4-96e30536b288"
        },
        "item": {
          "id": "d649feb2-5e05-4f16-94b4-7b8c27191727",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a0aeedd-66d4-4c07-89f7-aec04ae58a8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f404db-36a1-4dfc-9b55-80e5c802db17",
        "cursor": {
          "ref": "94c98147-1b73-4eea-a3f6-eadf0380a36e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc02c016-cf80-4a01-b09a-888eb4cfc8a3"
        },
        "item": {
          "id": "72f404db-36a1-4dfc-9b55-80e5c802db17",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "75afa28d-bd41-479d-b401-1ca5c503e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0990bc-bc76-493b-99cd-6d81a920f98f",
        "cursor": {
          "ref": "8379a8b7-ca06-47bf-9916-0fbfd169f1be",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aea9b0d6-d582-41e1-8c94-2f3c379da269"
        },
        "item": {
          "id": "7b0990bc-bc76-493b-99cd-6d81a920f98f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "379e8863-f209-40aa-919d-065a5452cbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6294f0-0929-4d40-9dce-b16f4489425a",
        "cursor": {
          "ref": "c70e71a9-a9a4-4212-835a-e01a22fba434",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e2862519-9627-4a99-bea4-c264123315e1"
        },
        "item": {
          "id": "7c6294f0-0929-4d40-9dce-b16f4489425a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f8391e4d-4fc8-4fef-8648-affdbf8fa7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c902722-8dc5-40ec-bca5-754d7bd3d25b",
        "cursor": {
          "ref": "d3d9a480-9073-485e-b980-b4548aa46d06",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5d7c9a06-85c4-4295-af05-75fac80062a4"
        },
        "item": {
          "id": "3c902722-8dc5-40ec-bca5-754d7bd3d25b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0e760b60-b239-42b1-92ba-a7520e1c5e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c7fd6-2b7b-43c9-b4a1-d899bdd86a86",
        "cursor": {
          "ref": "21ab2aa2-03ed-436c-a7aa-f9fd97e2185c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c4f63609-339e-441a-ad77-8c12b0a2a4ba"
        },
        "item": {
          "id": "ef6c7fd6-2b7b-43c9-b4a1-d899bdd86a86",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "688a2548-7b79-4ee4-9a44-9c1e6802f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb7827d-1ee1-4087-bf8b-db9b05ec7d01",
        "cursor": {
          "ref": "54951a7f-bf4c-4237-a493-e6b907a51f5c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1a1d13c0-b510-4ecf-8d24-d3a50c2b7fa1"
        },
        "item": {
          "id": "ffb7827d-1ee1-4087-bf8b-db9b05ec7d01",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fa188d07-d715-4942-9add-ed5e2293b547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b894432-ab29-4db2-93de-24e93b2f1eb4",
        "cursor": {
          "ref": "76f45f49-d72e-422d-8a6e-876248cdf443",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "947731ad-8e67-4bf8-b32d-73660ae2c78a"
        },
        "item": {
          "id": "4b894432-ab29-4db2-93de-24e93b2f1eb4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "84ad2d2e-f210-49fd-ba28-2ed9a71eaca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1fd4a3-8aa6-4230-8426-b47328e9f955",
        "cursor": {
          "ref": "a5fd8f95-92d3-440d-8d93-67881984a64a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5a76269f-ee1d-40b2-8c2e-a8b07175d0c6"
        },
        "item": {
          "id": "7e1fd4a3-8aa6-4230-8426-b47328e9f955",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f1575bb4-9ff9-49c4-b8db-4d18a304476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a3e5c9-fce8-4e24-be28-348d5286f03b",
        "cursor": {
          "ref": "a87aca2c-3e58-49c8-9d0c-3d1dcf76c146",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7dbf0693-03a5-4c16-9730-45d14a324a85"
        },
        "item": {
          "id": "14a3e5c9-fce8-4e24-be28-348d5286f03b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "68c20706-3361-480f-a33d-740b0e00cdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06e52c4-1e58-4f77-b4cb-6bed73d1ef19",
        "cursor": {
          "ref": "3af945ac-887a-4def-9c87-ada119c7d0d2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f327eee-1bd0-4a97-b221-20a36e63058f"
        },
        "item": {
          "id": "d06e52c4-1e58-4f77-b4cb-6bed73d1ef19",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "103c515a-9a23-4087-a35f-bf2b23cd05e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f44abb-070f-4e74-9f5e-b92c49dd9a14",
        "cursor": {
          "ref": "192db67d-28db-4e8a-a873-b50812469447",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "58acdf71-02e7-4e3f-9602-0784e68fd35e"
        },
        "item": {
          "id": "68f44abb-070f-4e74-9f5e-b92c49dd9a14",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e8a24f1-645b-4d79-a8bd-4386f76c5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba70614f-fd76-4c44-8376-fcb5bffa37c5",
        "cursor": {
          "ref": "bbe14adc-9089-4810-9a4d-1a5a2c80905b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dd0d083b-4950-4916-a500-2d1958e34979"
        },
        "item": {
          "id": "ba70614f-fd76-4c44-8376-fcb5bffa37c5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "57072c6f-7f6d-4b0f-8346-d6b59d1eee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9f2f72-af84-4357-980f-46673db77029",
        "cursor": {
          "ref": "071094fc-0bc7-4626-b65f-0ffb189ffbbc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0c6b7987-abfb-499b-8a26-6c6b66a5ce8e"
        },
        "item": {
          "id": "3f9f2f72-af84-4357-980f-46673db77029",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "475dc6ea-59cb-4335-b94b-49a7dc3bf01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25dfa92-7b10-4918-a92f-bfe75367fce6",
        "cursor": {
          "ref": "72c63998-b3cf-41bc-a666-55c0a36fc158",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5c362e3d-c23e-4a87-8055-469917c92600"
        },
        "item": {
          "id": "a25dfa92-7b10-4918-a92f-bfe75367fce6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5d1c7a95-966e-4760-a057-de571b190841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a7f3d-d052-47a6-af2b-784f07100613",
        "cursor": {
          "ref": "bca7a9cb-1d86-4629-af33-5d3e19e187f8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e11d174-efc8-44ee-98cc-0b17a6aed500"
        },
        "item": {
          "id": "f66a7f3d-d052-47a6-af2b-784f07100613",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c7a9e20-92b6-45aa-bb1c-f9c26bc1d8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b1124-b006-4ae6-a21f-1ef341ff3744",
        "cursor": {
          "ref": "8e0f5e56-3ffd-4aae-a9ac-41331fbe8b32",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e9556180-040d-4e57-a70d-397875fdc7d6"
        },
        "item": {
          "id": "dd0b1124-b006-4ae6-a21f-1ef341ff3744",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f945ba17-8a35-485a-aafb-5ebb300b4b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032b61a9-e284-43b4-b1ce-3186c7e73165",
        "cursor": {
          "ref": "68ba0873-9be2-4f0d-9b14-ee352d6d1e3a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "496dfd23-6dcf-42c8-8970-b205536a03a6"
        },
        "item": {
          "id": "032b61a9-e284-43b4-b1ce-3186c7e73165",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6fd58c61-ebce-47f8-bd39-fa07567b2302",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "b7596b7f-db65-42e4-a061-5a0fcd52baea",
        "cursor": {
          "ref": "03e38e74-4316-413e-aadb-4a56943f3f69",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5dff018-e158-4c8b-a4c1-a440b712e796"
        },
        "item": {
          "id": "b7596b7f-db65-42e4-a061-5a0fcd52baea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0752924c-479b-4c93-8994-7f51a87d0036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d031084c-f10c-4ac3-bfa8-609f4974f533",
        "cursor": {
          "ref": "a1a3b792-9ab0-4b08-bc20-c20246f5b330",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "92dd143a-0ce4-4a9c-acac-b917d4d02644"
        },
        "item": {
          "id": "d031084c-f10c-4ac3-bfa8-609f4974f533",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "379903cf-0e47-402c-b3d8-c85b160a13c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350d0d74-b1bb-4a64-8037-0feec283a2ff",
        "cursor": {
          "ref": "abc3473b-63ad-4574-bb87-aa3a6d740e4e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c42ed812-8dd9-44e3-936b-f02ff170983c"
        },
        "item": {
          "id": "350d0d74-b1bb-4a64-8037-0feec283a2ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bfa166a8-7bb3-4674-90cf-fb41477cbae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb591898-993b-4897-8ff2-b7f6aafa3609",
        "cursor": {
          "ref": "f67446c8-6ee5-4733-83a3-a55eff5fc850",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "98eb975e-7662-40ad-9044-a536a0685926"
        },
        "item": {
          "id": "bb591898-993b-4897-8ff2-b7f6aafa3609",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6ed9ebae-dfb5-4cfd-a8d6-3686955d9025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54632f2-b82f-4404-a750-f5d7cfc191bd",
        "cursor": {
          "ref": "1bdc75ac-bf36-4c0b-b27d-eba4165e56ca",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9d0b60f-0929-4257-8ddf-f8caf7fc5660"
        },
        "item": {
          "id": "f54632f2-b82f-4404-a750-f5d7cfc191bd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2949fba-ae48-42e8-ad45-d79b70a3afd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f80818e-75b1-45a5-a04c-1a4635e43bec",
        "cursor": {
          "ref": "6e056481-0864-452d-974d-9844309e6be3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "27fe55c9-44c3-4f05-8acf-95f2233f1ce4"
        },
        "item": {
          "id": "8f80818e-75b1-45a5-a04c-1a4635e43bec",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0758c308-5bf5-45d1-bf13-d7c97b6b758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb05b5a-16b7-4ae9-b36e-903850e59a00",
        "cursor": {
          "ref": "f180d3b6-807f-410b-a114-9463798ee611",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f0af5d7b-8c6c-48fb-9aee-390d7c0cb5d9"
        },
        "item": {
          "id": "dcb05b5a-16b7-4ae9-b36e-903850e59a00",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dc0facd3-298e-4bc2-a0c8-91cf00704b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de49e4fb-5f5a-4869-bb9c-49f416b7781e",
        "cursor": {
          "ref": "095b0440-2d4c-4ad6-9b69-beb9eb5ff99d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51fdd059-a879-4b9f-a5bc-9f48853e292e"
        },
        "item": {
          "id": "de49e4fb-5f5a-4869-bb9c-49f416b7781e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "803ea31e-3707-482b-a3f7-38ab39fe5ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a59467f-0dc5-40f6-a8fc-d0dced1ad95e",
        "cursor": {
          "ref": "3e49c72d-c26b-46db-b844-04cffb25bc79",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5ad791df-e12c-4ac3-aa09-faaa0c7cb5d0"
        },
        "item": {
          "id": "1a59467f-0dc5-40f6-a8fc-d0dced1ad95e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2c83a511-4930-4721-acd0-40da2b58bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272a18f-9158-43b2-9491-83baec6e3fae",
        "cursor": {
          "ref": "f24b086d-c9e8-47a3-a8db-bad4ca8ae569",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4577360f-85ec-4cae-992c-edbc053e194f"
        },
        "item": {
          "id": "7272a18f-9158-43b2-9491-83baec6e3fae",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b383e8a6-59c9-47bf-9f96-cf02d07bdbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420bb67-2c0f-44cf-823f-f1b7fa928874",
        "cursor": {
          "ref": "718d211a-2d84-4aac-ab07-82ab49f02529",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "93d2a7c5-e4eb-4141-b592-bf364efb49cc"
        },
        "item": {
          "id": "5420bb67-2c0f-44cf-823f-f1b7fa928874",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7aee51bf-b469-4fc0-9377-d7dd1461a595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2641f9dc-018f-4201-9b54-09128f428e06",
        "cursor": {
          "ref": "76603c71-373e-4bea-8795-1da783022016",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "74473437-74e2-4608-bd22-9c268956f955"
        },
        "item": {
          "id": "2641f9dc-018f-4201-9b54-09128f428e06",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6fa9bce6-dfb7-424d-b79e-fbb1ae4c7fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db024d0-1f49-4fe6-9d01-1e676a4d1014",
        "cursor": {
          "ref": "21b54594-c09f-4293-b6c8-6a57ed68db18",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c548fac5-9b4e-49f5-8090-477f02f0fba3"
        },
        "item": {
          "id": "5db024d0-1f49-4fe6-9d01-1e676a4d1014",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e25f1a72-41b4-4972-8589-02dd55197b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c923bd-418a-408d-b7a9-41b5f4246f47",
        "cursor": {
          "ref": "04d9ca99-629d-434b-997a-e25b27bc13b1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0c0eb765-2679-4086-a153-45ab5288be08"
        },
        "item": {
          "id": "21c923bd-418a-408d-b7a9-41b5f4246f47",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "88764e4a-da53-41aa-a87c-2a3e1a06f3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026bbbfe-ca0f-46e8-9588-ac1c3854ea6d",
        "cursor": {
          "ref": "fa157298-68d8-46ed-a5b9-88fef0269a6a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cf355acc-2693-481e-bb50-8d86106866fe"
        },
        "item": {
          "id": "026bbbfe-ca0f-46e8-9588-ac1c3854ea6d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4c80d1d4-7f99-4408-a532-dd83481ac79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a6cebc-c9ca-4619-97dc-aed24e780a1b",
        "cursor": {
          "ref": "f333ed9b-ef0e-4358-a2df-86df03a2f32a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6f0b114c-00e2-4163-9842-b3a29cb05369"
        },
        "item": {
          "id": "75a6cebc-c9ca-4619-97dc-aed24e780a1b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da17a719-6671-434a-bcb8-9863721a269f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67351aa-bffc-4d07-8c30-a88a30e231d1",
        "cursor": {
          "ref": "7e0c4cb5-c1c2-4163-a289-77cb69cba2f1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe4cac1a-ae0a-4a3f-b645-e023726bae6f"
        },
        "item": {
          "id": "b67351aa-bffc-4d07-8c30-a88a30e231d1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1cc382e8-07f3-4036-a547-520b7ce8d424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c404b0b2-0daa-4685-b082-220f73cba975",
        "cursor": {
          "ref": "d6571467-105e-4171-8ecc-f964e40cb09a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "346c48b1-5803-45bb-80a5-e721ff8aca8f"
        },
        "item": {
          "id": "c404b0b2-0daa-4685-b082-220f73cba975",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2c240fab-1dac-4111-8857-96935a750f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6789a421-7437-4b3b-be81-a5dfda94af38",
        "cursor": {
          "ref": "b4ee1141-0cb2-490b-9abf-fe2e2abfbd0f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "11cae973-4400-4433-a554-7f932d1f2f07"
        },
        "item": {
          "id": "6789a421-7437-4b3b-be81-a5dfda94af38",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "270fccb8-8a71-44f6-ae4d-72a06d1abbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d1fe96-4145-4dd0-96f0-8a728eedf30c",
        "cursor": {
          "ref": "1e8de91e-2a83-456b-9047-de200a8b9b0a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb75aac6-53bb-4333-8a0d-61aaab33e44f"
        },
        "item": {
          "id": "04d1fe96-4145-4dd0-96f0-8a728eedf30c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "577c2f5f-05d1-4029-9d36-3cdd3c27927c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de81e17-204d-40bc-8d90-d7132f5e40a9",
        "cursor": {
          "ref": "b26cebcf-4a1d-4c9f-9603-37b6b4f972af",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "900f606a-6678-44ea-ac8c-932daf592fa9"
        },
        "item": {
          "id": "0de81e17-204d-40bc-8d90-d7132f5e40a9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2fc8adde-df02-4bfe-b447-a6a6e26e68c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f0a917-5862-4566-92a4-02d152378ed4",
        "cursor": {
          "ref": "8bfa2670-0a93-471d-9121-f7fa7383a34d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a534c2de-487e-4141-b6fb-bdff3263b2a4"
        },
        "item": {
          "id": "62f0a917-5862-4566-92a4-02d152378ed4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8b124d88-89e1-4858-8ca4-033d986b228b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f175feef-c09a-4823-a163-f4514be8d34b",
        "cursor": {
          "ref": "f83d32c3-ba2a-47a9-8087-84194ac3ea64",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a497d63-5f98-4ae0-8629-918fd242a9e7"
        },
        "item": {
          "id": "f175feef-c09a-4823-a163-f4514be8d34b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "866358cc-ac69-4dd6-b0d3-b29a59dcb47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2ff834-4471-45c4-8ee7-56a2361aa9c7",
        "cursor": {
          "ref": "e4968ef6-4831-4821-9403-6a4b55311715",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c9ee6147-ca23-4b4f-ab0d-5017f27cda95"
        },
        "item": {
          "id": "0a2ff834-4471-45c4-8ee7-56a2361aa9c7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b549330-13cc-4235-b05d-084c271e8614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3068c9d3-a921-49a9-9ab1-7173ce359521",
        "cursor": {
          "ref": "1f2aa3ae-4634-427f-896a-d21754f976ff",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "da8afc64-4efc-41bd-93ae-fe65cf5ad873"
        },
        "item": {
          "id": "3068c9d3-a921-49a9-9ab1-7173ce359521",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2cd19d27-e913-41d3-880a-286143cf27d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a97b125-ba33-4c74-96be-8655ef98f6df",
        "cursor": {
          "ref": "659404de-7215-48e3-91e2-434c36e8c18f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e3d04db3-2f7c-4999-8ba5-555c14b39976"
        },
        "item": {
          "id": "9a97b125-ba33-4c74-96be-8655ef98f6df",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e0b43034-e4d6-4ebb-9cd2-061fd05825b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66b4331-85dd-4411-af21-538cf8a252cd",
        "cursor": {
          "ref": "8e1a5235-ba58-4f94-9a91-99bdd4afbf4c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f603a7a8-e237-4fcb-9c0d-35346f350fee"
        },
        "item": {
          "id": "e66b4331-85dd-4411-af21-538cf8a252cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a9be11e0-bc30-4993-aefa-e1322d8fbaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7617c2cf-8a1f-4199-8818-1f33eae9e10f",
        "cursor": {
          "ref": "cfb86f2f-9f45-408e-90f4-061abc7d6e07",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe38f74d-a4b7-4fdd-9dff-faa6c71614b3"
        },
        "item": {
          "id": "7617c2cf-8a1f-4199-8818-1f33eae9e10f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ac397761-2d0a-493d-8f3c-6a79de5cae32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81489d4-4107-4d16-ad71-0b464cf851b0",
        "cursor": {
          "ref": "f7c8391b-8b2c-46ec-a120-6f2e9856bcbb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "83cb2a0f-a669-4ff4-ba83-2dbcc0cb001c"
        },
        "item": {
          "id": "e81489d4-4107-4d16-ad71-0b464cf851b0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b1694f6a-b582-4d18-b34f-460801bb4591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df3551d-715d-479e-ba23-96c373c10557",
        "cursor": {
          "ref": "03c82883-1787-4e12-bbd9-d553d0f249cd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "830d54d5-00da-47a0-b89a-64a9838a48dd"
        },
        "item": {
          "id": "2df3551d-715d-479e-ba23-96c373c10557",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1f4a229-04bb-4b24-8e45-572b8135ba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce271d99-0376-4f82-9457-70cfd063dfc7",
        "cursor": {
          "ref": "649df650-59bf-44de-b868-e52de3b27b55",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cba57a33-52b2-4729-b20d-63893f3f22d1"
        },
        "item": {
          "id": "ce271d99-0376-4f82-9457-70cfd063dfc7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2fea3400-7e9e-41bf-9fa8-2b87ff4367e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21597958-4c01-4ce9-a23b-c02029e68f49",
        "cursor": {
          "ref": "604357a7-c45c-40f9-b9cc-80c378b26761",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "706b41a8-3e59-487e-8406-af16bca30263"
        },
        "item": {
          "id": "21597958-4c01-4ce9-a23b-c02029e68f49",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "765fd00c-eb2b-45b2-9ca9-effe631a223a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81552ba7-06b8-474e-bdc0-f816c134a948",
        "cursor": {
          "ref": "fa1f6c2b-bcda-40e1-a544-c776de02978e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "088ae6f5-0aec-4459-b055-cd4bc9f49d5b"
        },
        "item": {
          "id": "81552ba7-06b8-474e-bdc0-f816c134a948",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54d32965-21c2-4411-a41d-8aa94e07f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca010ae0-a487-4a3e-b407-3c1f319c3e6b",
        "cursor": {
          "ref": "73bcfb2f-e01e-46ec-81fe-5125940ff7cc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "28f98cb0-16ab-42b7-a4b3-013ad6f911e2"
        },
        "item": {
          "id": "ca010ae0-a487-4a3e-b407-3c1f319c3e6b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6da7199d-abe4-40d3-b866-103b078aa325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25a6b3d-f8d6-487c-950f-eb131df0ccf3",
        "cursor": {
          "ref": "84470e09-bc1b-4637-be80-9e74fbd060ad",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5bcc91e7-d215-40fb-acda-68273575165e"
        },
        "item": {
          "id": "e25a6b3d-f8d6-487c-950f-eb131df0ccf3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f3705339-0bda-4ff9-a799-87ea85274cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1181bb9-9248-4c94-8210-df388d619665",
        "cursor": {
          "ref": "9fbd4acf-24a4-47e5-afb1-1c939e5ace75",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "06822d83-b9f9-4d8c-8b5e-84ab7996eb16"
        },
        "item": {
          "id": "a1181bb9-9248-4c94-8210-df388d619665",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "11963cfa-41bd-4d31-88f5-edaa8891b4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77292d0-a5e1-4cca-8cc1-fa24782fa4f3",
        "cursor": {
          "ref": "dc566ee2-a932-4f71-b023-72215ba806b6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "70762681-69e3-44b5-84e7-bae41ff1a41d"
        },
        "item": {
          "id": "d77292d0-a5e1-4cca-8cc1-fa24782fa4f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0f853e86-e4a3-4a93-b5fc-7bd6259341c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba495e-dbc3-4c96-be8c-791f687247da",
        "cursor": {
          "ref": "a25263fc-90b9-4d67-8781-a68ba80cff5d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "27d8c6fc-6dc4-4aa1-a927-be55d59c5a89"
        },
        "item": {
          "id": "90ba495e-dbc3-4c96-be8c-791f687247da",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8e0cfd75-00d0-49e2-b33c-61192b12d6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f4116-468e-43b3-8540-8343d893927c",
        "cursor": {
          "ref": "5e966f55-963c-43b6-83ca-18f1157053de",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f9bec522-af7d-4463-a7b0-79c32108cc4b"
        },
        "item": {
          "id": "3b2f4116-468e-43b3-8540-8343d893927c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3cbac6bc-a697-4f78-8a64-6e35f7199a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca483ba-ebce-4202-a3f8-0bcd405e03d9",
        "cursor": {
          "ref": "b529745c-1bec-4429-a2d6-918194ddd174",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8413b383-b988-455d-8171-94715d896cd5"
        },
        "item": {
          "id": "6ca483ba-ebce-4202-a3f8-0bcd405e03d9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1f2f8660-d8c9-46ac-9f2f-6000d7de2416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b6cbaa-4fdb-4b30-a9de-2fc814bc4c93",
        "cursor": {
          "ref": "a23ac593-f4c9-4aaf-a47b-f8cd3b8f84fc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9f9e6475-910e-4214-9cc2-b6e1b7022c78"
        },
        "item": {
          "id": "b0b6cbaa-4fdb-4b30-a9de-2fc814bc4c93",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1ea2f602-fb01-48da-8140-4e75440f2c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77096db6-e5ba-4aee-bcf2-94dea9b72424",
        "cursor": {
          "ref": "64322053-1904-44b5-a8d1-279250d6dce9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a6213969-c602-4011-8937-66b8be7a93c7"
        },
        "item": {
          "id": "77096db6-e5ba-4aee-bcf2-94dea9b72424",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "508caaa3-a32a-482d-ae76-f0d473a06fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ee1e01-1150-46eb-b9c8-f41cdf1a45a5",
        "cursor": {
          "ref": "8d8d57b2-b567-4dac-8e80-c470ee93c499",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4cd6b558-c175-4835-b450-d5c9500d2839"
        },
        "item": {
          "id": "55ee1e01-1150-46eb-b9c8-f41cdf1a45a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6fc93fa4-9a53-4a8f-bc38-ae9b58edc382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae99b12-7eea-4221-9583-1360cfe3b056",
        "cursor": {
          "ref": "8a97c498-6c9e-4d64-827a-2fe159c60265",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ed131c6d-4c30-447f-a88d-9ee68b4ed9ec"
        },
        "item": {
          "id": "eae99b12-7eea-4221-9583-1360cfe3b056",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8ca5cc29-64d5-44e7-9419-f2afb2e67b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5e4d45-a8d6-4545-ad2b-92641c4f95db",
        "cursor": {
          "ref": "ba4946c7-9db0-4cd8-a849-c1d1f95506ec",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d804196-30b8-4f66-9061-c006d943c023"
        },
        "item": {
          "id": "2f5e4d45-a8d6-4545-ad2b-92641c4f95db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f570464-e728-40f4-9d49-dd3ff5ee77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa01d16-a660-4026-a2ae-a8768ef7ce7f",
        "cursor": {
          "ref": "e9dad463-0d00-4fe0-8792-f1f37f26e9f7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d767dbd3-1dd3-4f1a-b011-e308eafa183d"
        },
        "item": {
          "id": "dfa01d16-a660-4026-a2ae-a8768ef7ce7f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d71beb11-6d17-4f3d-88ae-2f5c0c0aba30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1879a-5299-4547-a6de-318c4a1c8ffb",
        "cursor": {
          "ref": "36c85bb4-3435-4753-bdb3-5f9ebc163820",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e1fe379a-2119-4d36-954c-5af8aed5e786"
        },
        "item": {
          "id": "37e1879a-5299-4547-a6de-318c4a1c8ffb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d69dadb3-1ab8-40d9-ae76-4b80567aff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea54822-d5bf-4347-93d1-f3b2d55e1f4a",
        "cursor": {
          "ref": "0c1268be-83fe-4601-8cb2-43fb53b7bd27",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "07a80adb-20ca-4b35-a3ef-aaf9eef14d54"
        },
        "item": {
          "id": "cea54822-d5bf-4347-93d1-f3b2d55e1f4a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8989dc77-5a00-4fe4-a4c2-1ec57b1211aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bda7b7-ea96-4774-867d-816896a65f68",
        "cursor": {
          "ref": "6cd757e2-55e5-4a9f-b79b-d8a7a0a6a121",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "133f6815-0f2c-43d5-90e6-1990fcda8b27"
        },
        "item": {
          "id": "a9bda7b7-ea96-4774-867d-816896a65f68",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8fbd53b7-416c-4888-a13b-761af7e5a5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a21e0-c903-4068-9bd4-3da121fd0352",
        "cursor": {
          "ref": "508594c1-1462-47ac-943a-cbd1fa3f7c8c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0674c1ba-f10e-4797-b530-edbdd11811b4"
        },
        "item": {
          "id": "d39a21e0-c903-4068-9bd4-3da121fd0352",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4cf61bca-f801-4dcc-b351-5004523e03b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f775b9-4233-4ca2-a8f5-991054d4ac39",
        "cursor": {
          "ref": "64563e47-50f7-4450-8166-eeb2aa9424c8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9749c250-bc08-4a56-a11e-f02ca4f62b6e"
        },
        "item": {
          "id": "e0f775b9-4233-4ca2-a8f5-991054d4ac39",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5e3a0dfd-ada9-45b5-871c-370bdc5dda33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3813ee8-803a-4d34-9d7e-3a428e7ea09b",
        "cursor": {
          "ref": "b8964d4d-2e0b-4916-baaf-fd79fd68625c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0ec5315c-b85e-4e3e-add5-4b66bddac13a"
        },
        "item": {
          "id": "e3813ee8-803a-4d34-9d7e-3a428e7ea09b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8491cc17-99e4-41c5-99cb-1d239ad359bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336e5810-71b3-4176-9900-d2b399c3362b",
        "cursor": {
          "ref": "80a0ee0e-58ae-48a4-8f41-fbd5be9af04b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c64f22c-3625-42f2-9fce-7cb698d94ff8"
        },
        "item": {
          "id": "336e5810-71b3-4176-9900-d2b399c3362b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7c74b20f-16a3-4096-a723-c2d00797cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695d95c-4a33-46d2-9d9e-98a34d2506f5",
        "cursor": {
          "ref": "875d9725-8994-443f-9261-5e6d8fd68041",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c403a0e-25ee-4083-ba13-96e3f518c251"
        },
        "item": {
          "id": "f695d95c-4a33-46d2-9d9e-98a34d2506f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "43f319ad-5a7d-4058-9751-ff93da89a0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe7fd2-e2e2-4330-ad87-e88d776f4ed0",
        "cursor": {
          "ref": "5ac4981f-9bd0-4027-8ce7-b91d18102999",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dc2d132b-8a6d-4f8a-ba05-229b4edf0cf2"
        },
        "item": {
          "id": "cbbe7fd2-e2e2-4330-ad87-e88d776f4ed0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68dbb039-23a8-40a9-a265-610ae3509d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7086d3-4699-47df-abcc-3722b3b4d7a1",
        "cursor": {
          "ref": "92de0070-4ecd-48f5-b820-24f5eae471b9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8f87041f-da2c-44f2-a15f-5a3cd85eca71"
        },
        "item": {
          "id": "1e7086d3-4699-47df-abcc-3722b3b4d7a1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "36d11299-35e8-4e93-849f-866ce5a7c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f48913d-4dbc-4827-a66a-b303e1880111",
        "cursor": {
          "ref": "7365b049-2d69-47ed-9502-46f27371c411",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0dea3937-a2ee-4238-8166-08022c25613c"
        },
        "item": {
          "id": "3f48913d-4dbc-4827-a66a-b303e1880111",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "87983d13-31d4-44d8-934c-db2f9129fb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90698e0-ca57-4304-ba3a-e84baa455cf0",
        "cursor": {
          "ref": "cbaeb995-0c7f-49dc-8101-8872e72d5e7e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c24ce58e-d45a-406a-812e-6d2173aa7903"
        },
        "item": {
          "id": "d90698e0-ca57-4304-ba3a-e84baa455cf0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "313c6623-ea23-4f32-94da-48c6096ef6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108cfab6-8ce9-4f2e-b31c-71afd9c6e963",
        "cursor": {
          "ref": "06b06b11-92fa-4de0-b4f0-d3a820828ced",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "15a23556-06fb-43a2-9d3a-d3d6a68a93d5"
        },
        "item": {
          "id": "108cfab6-8ce9-4f2e-b31c-71afd9c6e963",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1e9a7234-5273-47c8-9df6-135165280449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574f70f5-af99-4583-86d5-083423972667",
        "cursor": {
          "ref": "8629b6fe-dd4f-4ccf-bcde-6b9ca1f7aa96",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a983356b-ba51-45a2-a47a-03b5a9180201"
        },
        "item": {
          "id": "574f70f5-af99-4583-86d5-083423972667",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ec2a6f9-2d4e-44cd-b485-8970b5e093e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8e9d33-9e80-49f6-8a97-e85cd3a4f55c",
        "cursor": {
          "ref": "a67ef8ec-bff6-484d-a5fd-0c6fc322007f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f187f5a7-db69-4748-86a0-9e96d3e92d0b"
        },
        "item": {
          "id": "7a8e9d33-9e80-49f6-8a97-e85cd3a4f55c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "90223ec1-9903-4361-bfc6-d2db2be474ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8e9f0b-48b6-47ea-8ac6-ae0e1058fcf1",
        "cursor": {
          "ref": "e151199c-f652-41ec-8c49-2084ebe188e5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fb678fd3-0074-4100-be15-1aa2b74b163a"
        },
        "item": {
          "id": "5b8e9f0b-48b6-47ea-8ac6-ae0e1058fcf1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1895209d-dc37-4c53-84e7-b2371d265507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb7089f-1ee7-4787-9a65-d9e93dc9aa47",
        "cursor": {
          "ref": "04115518-a448-429f-a38a-1087ee26f40d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "57dad57f-c55e-46a8-b2ce-ba522d0c279f"
        },
        "item": {
          "id": "edb7089f-1ee7-4787-9a65-d9e93dc9aa47",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b1aa54f5-e663-40a7-9779-608697eb4738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce41b012-4236-4cc4-b5b2-d774d5cfa8ab",
        "cursor": {
          "ref": "8d3c3050-facc-441d-ba5b-0b0d68751bc4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "29450933-f490-45eb-aebd-0570d0435d25"
        },
        "item": {
          "id": "ce41b012-4236-4cc4-b5b2-d774d5cfa8ab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cfb8fb58-cc0b-4902-ad35-761c95975172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b748043a-d7a7-402d-8f95-e4067d1038fb",
        "cursor": {
          "ref": "2ba95041-371a-407a-b2dc-66a446ed0904",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2cb9892c-a592-4411-a54b-6aa230c6a5bf"
        },
        "item": {
          "id": "b748043a-d7a7-402d-8f95-e4067d1038fb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac79e500-9270-4389-a368-09f03c24f973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16732a-62b9-4092-9804-22386423eba8",
        "cursor": {
          "ref": "13d1eb1e-9aa9-4fcd-a581-0042152a167f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "df74d9be-0907-4f17-bbb1-357271e0f414"
        },
        "item": {
          "id": "ae16732a-62b9-4092-9804-22386423eba8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d644b32d-332f-435b-9e79-80fa40f5da53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30ea6fb-16f7-4384-b720-2778eed62762",
        "cursor": {
          "ref": "932aa57e-33b6-4fb9-8c42-c7f67f0fa02b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f70e22d-693f-44e7-a3ed-713d250e93bb"
        },
        "item": {
          "id": "e30ea6fb-16f7-4384-b720-2778eed62762",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1b8b2645-e64a-48ee-b44f-7c04f73527e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8af94ee-3a03-4ca6-8a85-b16f722afbcf",
        "cursor": {
          "ref": "9d9f0735-ee3b-4bf7-89e7-efe44ca62131",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d90cdf34-4d2d-4711-8f1c-ad434c732b74"
        },
        "item": {
          "id": "b8af94ee-3a03-4ca6-8a85-b16f722afbcf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b1627aad-d307-4143-8519-719387a7b727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46092ba-806d-45ff-ab2d-9237cd8225e1",
        "cursor": {
          "ref": "580bdd03-372c-48b0-aba9-80e390d23aa2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a1f5525b-54c6-44e5-bb6e-acbc1435077f"
        },
        "item": {
          "id": "e46092ba-806d-45ff-ab2d-9237cd8225e1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5cd3c472-eb90-47b8-a844-66b4c4ed556f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02cfa76-8dc0-4163-97bc-dacb075b62f5",
        "cursor": {
          "ref": "2c5d9d91-eb65-475d-b1db-49b7ea5c8477",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3d97b19b-6ebf-426a-9749-f5ff10961015"
        },
        "item": {
          "id": "d02cfa76-8dc0-4163-97bc-dacb075b62f5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6665beab-c291-45a9-8872-3e182682c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae271e6-db95-428a-95f6-6a7844d7071f",
        "cursor": {
          "ref": "860c5f68-617f-4ba7-8cde-76ba951a0088",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5d184935-f009-4030-bc49-b7184dbaded4"
        },
        "item": {
          "id": "6ae271e6-db95-428a-95f6-6a7844d7071f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a3769c9-31fb-47e3-8c00-90a897dd254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fb2758-23ff-42a1-a310-f8db529c003f",
        "cursor": {
          "ref": "c6ba88d2-210b-4141-a98e-19e5d008cb40",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "43f74252-c8be-43bc-a831-a233942d82cf"
        },
        "item": {
          "id": "67fb2758-23ff-42a1-a310-f8db529c003f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "30feeb3f-77bd-4028-b25a-80a7ad1510d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e116ad-a615-44b6-b1fa-2c90f46338b1",
        "cursor": {
          "ref": "6c862426-7ae2-4bc9-a702-7a55d3b292a7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "006907fd-543d-4a47-b8dd-f2ec9420138e"
        },
        "item": {
          "id": "43e116ad-a615-44b6-b1fa-2c90f46338b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b5d0b945-bd38-4e87-b49a-5f1e3ee6e1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538bf0b0-c238-47b8-bad8-61e6772b24ba",
        "cursor": {
          "ref": "59b2b49e-986e-4f31-867a-107724e8d861",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "16633ba5-fb7f-4cd7-aa59-5e413ea6c503"
        },
        "item": {
          "id": "538bf0b0-c238-47b8-bad8-61e6772b24ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f38e364f-a8e4-4c4d-b845-f81355881eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8fd60e-8327-4114-a1ba-fdd41d15e6e4",
        "cursor": {
          "ref": "b5598276-092e-40ea-a8c4-26890547db4c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "30c4e284-b275-4d9f-81e9-1308b6a903b8"
        },
        "item": {
          "id": "6b8fd60e-8327-4114-a1ba-fdd41d15e6e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6147bbff-fe2c-464f-bf40-1608c78c5a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b1840-85d6-4a9e-b238-ef65bace7edc",
        "cursor": {
          "ref": "ff287de3-a22a-4d95-a88f-f5334eef9b05",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7aeea9fa-06ad-4da7-8689-2ff1e6110aaa"
        },
        "item": {
          "id": "604b1840-85d6-4a9e-b238-ef65bace7edc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a203bb84-1cd8-49ba-8ba6-5f0becb46332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d524d2cd-29ca-48ca-939c-160133945777",
        "cursor": {
          "ref": "0adbf70d-ad6e-41c1-bf21-9fa9109f8e61",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5170615b-7b2f-400c-b280-02233c05432f"
        },
        "item": {
          "id": "d524d2cd-29ca-48ca-939c-160133945777",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fe9172d3-786a-413a-8f74-1b7647f2b714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d3b505-a66c-4028-aae1-e8ae279ce4b9",
        "cursor": {
          "ref": "404d1ecb-9c18-4591-a00d-e3d778533331",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2d921512-62bf-4871-86a5-1b3e14cc47c1"
        },
        "item": {
          "id": "54d3b505-a66c-4028-aae1-e8ae279ce4b9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a7d21285-fc24-4f31-b7bd-d624e53f6f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec524d6-295c-4c45-bbe2-04511639a9d1",
        "cursor": {
          "ref": "7dec73d5-5b11-4211-b8b0-2e4b00227b49",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "67b92aa4-fd2b-4482-a700-6ed621fa7e86"
        },
        "item": {
          "id": "dec524d6-295c-4c45-bbe2-04511639a9d1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "92e5ac36-fc14-4f2b-b0f5-d35ecdb3bec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb094a8-2463-4486-84d5-e6ac3e81af2e",
        "cursor": {
          "ref": "ed6b51a2-e8c2-4d3a-9fa3-3aa4c6433399",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b60cf60f-839b-4926-9d3d-4d9b02948b3e"
        },
        "item": {
          "id": "eeb094a8-2463-4486-84d5-e6ac3e81af2e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f931c8b8-eab3-4949-b3ab-46d890e155f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbec674e-dc1e-47f2-af67-626fb29ac3be",
        "cursor": {
          "ref": "fab37f65-282e-4725-b7b2-48541a8a326d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f8264eb1-e2eb-4438-a316-e592022f0b42"
        },
        "item": {
          "id": "cbec674e-dc1e-47f2-af67-626fb29ac3be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3c00c3fe-8505-4971-b0ce-2cc092ff5200",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c374f43-93fe-4eb3-8956-8911f7b48423",
        "cursor": {
          "ref": "1144620b-79c2-48a9-914e-895b3c7d1d10",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ed64cc47-f2dc-4cb1-8b44-432bf6fdcbdb"
        },
        "item": {
          "id": "5c374f43-93fe-4eb3-8956-8911f7b48423",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ee841072-6d94-48a1-9967-9daf85de8e05",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cee9f5-ffbf-4582-8a9d-ab04de0dc1b0",
        "cursor": {
          "ref": "f5b73fdb-2ddc-4529-8842-5469ac9d0ad5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7edafcbe-2637-4ecb-bc83-1d6fec88744d"
        },
        "item": {
          "id": "43cee9f5-ffbf-4582-8a9d-ab04de0dc1b0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "be8339a1-bf6b-44f5-b561-ec465757a8ca",
          "status": "OK",
          "code": 200,
          "responseTime": 2289,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bea7cf5-afd1-4c5f-9a1e-e892dbadb3dc",
        "cursor": {
          "ref": "c88b4c6a-2c93-492a-a7a7-ee562375b7c4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7533540b-48d7-46e3-b36c-80c394418ce5"
        },
        "item": {
          "id": "3bea7cf5-afd1-4c5f-9a1e-e892dbadb3dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fd6dcad3-684c-45c6-acb7-5dc322d9c5a9",
          "status": "OK",
          "code": 200,
          "responseTime": 2823,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b523112-d9fd-405e-9acc-6a04dd23febf",
        "cursor": {
          "ref": "6a8c7dc6-6e3b-4d9a-b299-d180a34bc91a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b47f70f-79d0-447d-938d-b611a0891f8a"
        },
        "item": {
          "id": "9b523112-d9fd-405e-9acc-6a04dd23febf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "306dad73-7133-468a-98b8-8167ce8b884c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b523112-d9fd-405e-9acc-6a04dd23febf",
        "cursor": {
          "ref": "6a8c7dc6-6e3b-4d9a-b299-d180a34bc91a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b47f70f-79d0-447d-938d-b611a0891f8a"
        },
        "item": {
          "id": "9b523112-d9fd-405e-9acc-6a04dd23febf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "306dad73-7133-468a-98b8-8167ce8b884c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d368fea7-f962-4e1f-86a8-b257348ea198",
        "cursor": {
          "ref": "909b7be6-b940-45ef-a1bf-8d2df910c427",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cce10afd-0c8a-492a-bf8c-6000ccbf8e2b"
        },
        "item": {
          "id": "d368fea7-f962-4e1f-86a8-b257348ea198",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7aae04b0-abe8-4a0d-b581-3c0b7b95bc10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaf2429-befe-4656-917d-e01d49a0fd92",
        "cursor": {
          "ref": "dce31418-7abb-42b1-a1bf-19ad1e552a9f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1becfe07-39cb-4800-b97e-d3b5857d0c52"
        },
        "item": {
          "id": "ddaf2429-befe-4656-917d-e01d49a0fd92",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "862f0a56-1406-4826-9480-e3c2fccf0833",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}