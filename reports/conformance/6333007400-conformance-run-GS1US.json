{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9abb8503-d361-4bc3-ad09-bf85ae2b19a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "88920fbc-e237-4eff-86ea-cfd2a00566dd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a89ff9c-4ae3-4335-b65f-e65e723f600a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "696049c7-dacb-45e8-a16a-9157071185d1"
                }
              }
            ]
          },
          {
            "id": "e3586cb8-6f88-441e-a153-86dbbb4ad9a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b38c2203-9170-46e4-a42c-a5bd3eb0040b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36e1d9a0-4166-41a7-ae52-c4bd9184bd76"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "443d28a0-f399-4993-9b8b-7f151961db14",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bda63532-f1c0-4f84-979f-db6aeec9fa93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2084e3e-e44a-4e1a-8fcb-deac0b60f700",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b466483-936c-4aa3-97e7-fc26ccdb184c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cee5b2fd-2d85-4376-b52d-85e29a9d118e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3f13935-4a2e-4545-88a7-4e2b67d1a25e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e82f3bd-5131-45ee-a958-839ea0527f0d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a4af9d2-2443-4f11-83a7-4634449e7803",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "509169b5-5893-4997-ae2d-05b0e01e2d07"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "060c8a75-7774-4f91-9715-f14e32f35cd6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a5e51925-1539-4c91-ae15-445694c2151e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9d35ed6-c38c-4197-9d15-3de4339301ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17529dff-0bb8-4a59-be2d-eded4b311914"
            }
          }
        ]
      },
      {
        "id": "65b58b0c-3bc7-47a7-8116-6a779210c464",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6b437c1-46f6-4c2e-97fd-dbf2086c9b50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fe04992-0959-4631-ad3c-9b66c1ff552c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8817c875-d22d-436f-9250-818b66a45091",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eacd9f6-31e2-402d-9d82-81328b89ded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "993c1eff-8be0-44d8-90c7-7251bf44ac16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34346be1-a48e-4a1d-9440-33dbf1a8384e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb91361-8931-4b4c-9d49-e0d7d11c575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ee198ff-24e8-4954-b90e-3af63ff76097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6c8af6-330b-4695-b026-b5a8e5fd50d0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c2933-ef6a-4b9f-bfca-65cbbe40404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2297b080-c351-472a-b343-caa0ed5e1e5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ced78ca-5a6f-4332-88e1-9392df811e3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "722da2c2-8486-458d-a9ae-a37a3fccb892",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f57ac5-671d-4042-bd0e-188d34363f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca2a388f-1aac-4c6b-88dd-6eca87643107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8547c770-ad53-4b6c-8b16-841f8b27d22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063af914-7eb5-4ad2-afb6-172fe63aee6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc480e7f-f5e3-4984-891b-df057d2a852d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72f5343c-e9cf-4ce6-a8b1-c8bb96e31bdf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a20783e-115c-488e-a880-4baeeeb9ce45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "517042cf-d9f0-4a39-ad77-4db32aa0cc6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4af1003e-4692-422a-9193-96701a5513f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "997d29e8-0ca5-4523-a844-a3f7081d4c2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1f67d7c-1c8e-41bf-a287-05f56d2eb5fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fb80510-8c83-4470-a040-0f26e13db739"
            }
          }
        ]
      },
      {
        "id": "88c44da2-254b-457e-bfd1-f71dd9115356",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7bf67894-7208-483c-a6d4-8b1717082fcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdbbea68-f9bc-4577-94f9-9e19563f8936",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "04d13990-ebe2-4930-9fff-0ee8c120e781",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4c022b-8527-499b-81fd-faa3146683af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2e45b4-f766-45c7-8a3a-155de1a646d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e636469-f78f-4952-b786-d281e78082b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18fd2222-1788-4dbe-b0e3-fa42e9bc861d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39cb28c-c3b6-4b23-ba7c-82fc28a4d2e5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9b9f64-8f35-4e85-9b23-a0c41bd2483b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b621c-d62b-4b86-a2d8-ac26960a7a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767d50e-b532-4f99-993d-cf402032fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88420675-72f3-4fec-ae21-d8d186c3bf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee78a10-df14-4ef8-ad31-d59a3ecb9f17",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23a5ded-e644-4b5a-b02f-b167dfa93cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbeed4e-ccb1-4454-8799-d162070bc820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125eae98-1a77-42d0-93b6-325ace258280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78ad013c-32c9-4cb1-8f20-c7b765864d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d11ae31-c029-4cf8-ae1c-f92515bad741",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da046aea-dc5d-453b-bf22-e4feaa3e3e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9b8e1b-950e-4445-8ac5-b0e38e541bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacfa454-6eff-49de-9821-3731c4e0fca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2a80e4-2047-496b-974d-6530bbdcb043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b274270-8499-4bc2-925d-e0a82d0b49d0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8e2106-c9a1-44ea-8cd4-6dceefe05cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcf044d-09df-4a99-a89d-644d288e2333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995c3111-8f01-4f9a-8eb1-083194aba71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac22de8-dfa5-44a6-9df3-5873ca025de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf92178-2491-4a42-8381-da0ad9151e69",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa8863-2a1c-445e-856b-5a73a730779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f5d93c-9d19-4165-8063-15bc64f50e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0a2d43-6a08-4bcc-9c75-bb4ff8c760ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc650d2-4b78-4204-9022-915f529cbfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db2c960-c7f5-4952-be69-c9d64661b33e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef20a86-3a25-491c-a7fe-34b368f8e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bc6c55-09c3-4348-88a6-779252c85610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0d221a-8be0-40d6-b66d-480a94a78712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edb0b709-aad6-4146-8439-24939075ed15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24ee6fc-99da-4517-8f50-5303702fc2e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff344b4-6f72-4d7b-9ef4-7a1d919d7871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a13f63-1162-40d0-874c-e0539c9016a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933d149e-3cc9-4873-8ab4-5565e5190cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c53edac-a803-42c1-a216-f71a3bc83edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a5aff4-3802-4404-a4c0-0838dfdc4485",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a4bcdf-feff-4b4d-b4cc-a464cc22e079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0da7e6-493a-477e-9d6b-33e6da486cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649ff9b-0baa-4f8f-915a-812ad9b712ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7afed91-179e-45ea-84b7-00b885755753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eeedc48-2ba9-4f5c-837c-80d3e87dd839",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d999b2a7-943b-4b7d-839d-c028437c3268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eba7c0-6786-4c42-83b5-eb00a0efc09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e4d07e-3d52-4d06-a93a-1ce63ab1a5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea1cd1ec-8ce2-4463-b2a5-1a94f32bfba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c61003-8b99-49a6-a489-47cfe0b32825",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc191bc-9393-4f93-ac65-bbc81baddcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a5590c-5ae6-4083-80c6-25407361eff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edd1f24-3f1b-47b9-9e5d-a2806ab2de1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4233bffb-c87c-4334-b4db-7b4f9d99a415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ddf281-c16e-45c9-a123-16f86d9c026d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d56164-a016-4799-bfed-3714eb0b6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a905c927-e896-490b-a0cf-acd3920be709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc36d86b-007d-4367-bec1-0718d4d7b821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f1e2ab1-2daf-4205-82f5-09d2c66b7c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed9035f-cb27-4f3d-8014-0232821b4ea6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacec001-12cd-453f-a4fe-6e0c4e846f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9f77b2-7399-416d-b966-5aa1c8e83090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e03f58d-108b-4c8f-bf6c-6fd2b7738e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebe6ac46-79d1-4493-8a27-bd0fd638f21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63e1fa-2ea6-4049-8eb2-934479d7de18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d9d2e-a75c-4e6f-ac42-2407397ab5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d57a86a-25de-4f68-81ad-60fe8dc9f886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef45d8e-98b8-41ee-8835-e7d87a56fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60b3ef53-6878-463f-a81a-8d7dc319e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3542ceb1-500c-4b81-ae8f-163d67b06ef3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed63a0-e1bc-4199-ac26-7dd413d310ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db071371-267c-491b-8417-33b50255bb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4ddfb1-4b41-4885-9d4e-d8492d9583bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07a9396-66da-438e-a8dd-01b75ae9e614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a3860d-5892-434a-86cd-b051bd2390ab",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946c7cd6-1041-4d9b-b19f-b2f405f6623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef819c9-2110-4f69-88bc-cee70a9ef387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7bbad6-1f0a-4bf0-95bc-c8e1f58e811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "150deaff-6977-4e26-93e7-d87f26f87706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd5cf5c-2441-410c-b009-8ba87ca4812c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb99b9b7-916d-4a36-87ad-2cb1eb746ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc75406-0d6d-4261-a7ff-4e68b2f70188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04aaa9-0adc-4171-b64b-2338b6a6cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c3b45f-aadd-4f88-a967-f2ef73e37bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29203f7d-755a-47cd-a28b-216ae8e560fa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f9e82d-37fc-428f-80b7-ac7d4ab8400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e444cc2-67d0-4a74-a36f-430fe3d8388e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af021635-c72e-48ad-ac86-bdfd633edb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "687d5a1e-767a-40a7-a432-e49022010c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc5722-3a13-4fc7-a054-e7450e7b2335",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0870427f-1094-4fdc-896e-9c07d31c002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c7fefd-cc17-4cbb-9df5-bf6f2f66d109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec54015-e727-452e-b27d-8605acb1f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1af092-d337-4694-8e85-1f5df1c3c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7452c06d-9ad5-40a2-aec2-efe56d820ae9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9c5f0c-ddc0-464d-b2aa-e8b9b87183e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5775e36-2b98-4fa2-9fbc-549c79137f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcbffb7-699b-4623-9b0d-df829d177ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ab3550-8ebb-4b05-84e4-e0d99fc33a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b738636-faf1-45f5-a8c6-27f22405ee66",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beedc53-b18f-41c1-b3ec-9592545a7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cefbfa9-b0ca-4009-874d-6af81af628bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7fed49-3305-48cb-9ff8-97f2b49964ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b276dd05-5af7-47c8-b299-72faad6d865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf5394f-5334-4ae2-b357-d4ec5120d9c5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed53a6-fa12-47ce-942e-afbeddca2153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da7f8ea-97e6-4b14-9ef6-264d7823638e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc2f15d-8f26-4937-9321-65d84af0c712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5d6142-001b-43df-abd4-380324766f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9ea21c-d5c7-4cba-af5c-164675cb2386",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26562c72-a7f6-40e1-8f0b-0d58f5d1cb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411787b9-d7bf-4454-b160-71f2a287cacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116360c7-ce69-4c01-a7ed-14c1e7975b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51d18721-d428-4dcd-bf08-d030eed30b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe316f56-237c-4783-8dc6-23912b10941c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2abd6de-fafb-4b30-8481-ba007e5278a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a2009d-e4ee-40ea-9d4c-ac8a386d5324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6de9aa-ed0c-45ef-927d-bdffdb7a2f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a8f9d7-b9fe-42de-ad53-bbb0e27b4b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291a87ff-8359-42d1-8515-8d46eaa86379",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc57c149-2887-46ab-a4b4-2935c217a074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e858143-76c5-47ff-a9e0-2b82497bef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44cef10-ea40-4f2c-a593-5fbbc8151d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c78d4d29-5f03-4fc6-a900-e18121a9a36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb41436-83ba-4a8a-89e0-7f63f076fa91",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef205d33-b857-4e99-af4e-f50473bff33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e07238e-7339-431e-afa5-2e13235de7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236741ef-9277-4fa7-84b0-4a1079271c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada69e09-81ea-485c-82b7-8ec911a27c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb588a2-8677-4d4a-b1f8-598067f7701e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6dbb3f-5a13-4ed1-acf5-a30dba725d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa098c30-38c4-4ec3-a17c-d4e924437c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2591e5-5b4e-4093-b4c2-27b794405517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21b85cf0-a275-4e43-96c6-dc9f0d0c4571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fa7347-7db8-44f5-af72-7821ebe908c1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a5407-1354-46e9-988d-6d93624d2e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547552ab-2f15-42c0-b380-7d6d9b91cbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc28c764-c3bc-4443-a90b-a0434bca8761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71957a59-9e48-4206-a329-2c3830ffd36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfdd1f1-6473-49f5-b73c-db0fe68c1bec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f26e2a1-771d-425f-a879-8e97c02b3477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366ed217-b55a-4f6b-94d0-d8f750e45b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd99b5-7234-4782-8d1f-6d62bff5eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ae2b6b-c0dc-4d02-83c8-1711ae62fc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cc3b2b-bf4a-40f7-b470-c7797e0b0dfb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78cbeb8-adbd-4180-92a0-e6a90100148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f68adc-a8e8-4952-9bd3-168f94d62a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673e5cfb-8dfa-49f0-a15f-d9655349e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf5f0d1-f30f-445b-ace9-9a40bf74fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9afce6-032a-41e9-899f-78863a1d6072",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f797d-89b7-4f52-b15e-57ee12408086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c984dc84-9b7b-4287-9797-051c1ed5f737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c91890-affb-432b-b1e3-29c9ad04c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcb163d-4293-4b89-92db-1202fd83a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b47a8c6-e295-46aa-98c6-349ce7ecfe56",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba9aefd-718a-4884-8b5d-dfd410f3cedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6068d6-b6de-45bf-8d0b-3ea1219ecf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4775207c-385c-4c92-b4ea-e0a52074f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1709eae-b719-45ac-b628-63a1302633f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bf1f36-f1e3-4a8d-abe3-c3e92dca9ae9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f535487-d0a4-462d-aade-03daf2946b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784fab78-c9ec-4094-8fac-2fb2b64a2c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87b002a-6b05-4e56-af88-febd8bd017f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4685902-cc94-4dfc-a1d2-2371112b5b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75729bd-9613-4d69-a4d7-337c05155133",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffc83a0-8950-4c5d-85bf-920c8d278378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4ef3b8-4dde-4846-830f-aa7e4b3d7cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f06344-5d33-4122-8ef8-7ea73d904f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e485ed5a-f31d-4b33-a13e-4c2798f950a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cb9dc0-6c94-446c-afd2-6b3563b990ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92122543-b999-4098-a7e7-c2942feeb397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eaa258c-9644-4506-a96c-f4f5f6db0fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c622d4-a598-4ca4-ae1d-5f34107816bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c13356-ad12-4069-9a5b-d0eef3a7fa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b515793-ae49-44e7-8d8e-1f842231873c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d3a5fd-b39a-44cb-9a3f-6334bde267fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f9dd6d2-5695-4104-8366-f5ab50bfbc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf374cb9-2d8c-442d-9312-6aa4f1b65142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "645ca923-c771-4974-a482-5823622c3576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d7d57b-dc0d-47f2-97f4-8dc6f5ac220b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e53a2e2-b9b0-420a-b058-9ba88ffee265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b428f3d-26fe-4cf0-b2ab-a05562d80d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0889b78b-81b5-4ef1-9356-340cb57fcc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6219440c-9e1e-482a-93b5-1a4c5684dda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68996ff2-189c-414e-b166-b300b19b6759",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52652c23-abae-4bc7-aa5c-569a2574de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27cddb6-d285-41e5-b613-b3f1d24f716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f03f65-7c7d-49ab-9b27-1edb1bab727c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01433e0-5175-455b-bf5f-3fabc7b784a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5772cd-9e9c-401d-9cb2-7f912949f087",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61e67a9-9885-4807-a97a-77b90d90b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723d7457-18fc-42a1-9646-e3b2aa27849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391fed25-37fe-4d93-8170-0fe65282a1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f3fe3d-c9db-4f3d-89f2-fba70ed32aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ef9e2-0f34-4634-b4c5-287f7dc46b7f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8b4ea6-0b87-4f46-a962-a2aa1bfb4987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a7958e-9170-465e-b9f9-3dec32faca19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1353d-2c9e-492b-a007-707c0c8cdf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f50d9c4-f9c4-4cda-9eb6-28965a18273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733059d2-3183-4c7e-b5f6-f63e97c8dcf7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b03baa-692e-4332-985d-1d7147b5495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56df268c-fc82-4e54-b954-26209473d0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d02bafa-0541-4519-a441-665ddabe258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbe59ab-f06f-4cc5-9945-7d1994f31241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68889deb-d34b-44c9-8177-d082e994e92a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0fb614-35fe-493a-baa3-9acb0eaf8f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93141fda-973e-4e19-ae1d-265fc2bb21d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d66bb-e588-49d7-8e7f-f81595d3b862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b57a75ad-ef1f-4c68-962c-c2bda1186395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bef138-5dc0-4442-9e22-ef924cfad68d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf5e317-e608-455e-be38-acda7db67d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91aacede-1ef0-4e0a-978a-a5aec16702b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f8293b-4615-4d11-9c85-da77e6491d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2378ac7-5c21-4877-a0db-6053b3cfae02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b5123c-f2be-4285-918b-5b45216251f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5d262-26b9-4370-b60b-bf3e912bf045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1096e8cf-7b7f-405c-85ce-8287969f679f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabb04c6-f918-4f9e-bbe8-f9fb9961936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe258c0-aaa5-4104-a837-3f3a1f6927f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc77110-2587-4b5f-ba2d-5c36123ab76b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e386d8-0a39-406c-a694-6838a083c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e857ebf-c21e-4eec-b577-052eac7d086c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854f3fa3-c1fb-4cc4-9021-f3e426012336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a980f044-a617-4e5e-a986-3a46fff72c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217043d4-ecdc-43c3-b678-3ce97eea3879",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ae3f91-7ec3-4a24-b208-b75e3e7e3a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e471c3-56f4-4705-97d8-3a7d7c14764b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09d690e-4c62-45e5-8012-3a3c7d164ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "310ccabf-db19-42bb-8ff4-0b700b1f4885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c30de4-6464-4351-863d-6f15837fb673",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fa0c16-a755-4118-8a97-242c59d8ccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232943fe-2655-440b-89f3-c2433a26b394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c23f1-b2bd-4cbf-b137-f0bad2140678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "954e696b-a705-4e21-bc5d-ecf7e096c11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d5bdc8-a4f1-4a75-b03b-30dbe729f503",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3cb08b-3a9a-485e-bf95-a50259a692e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a082dcc-c0a4-49f5-a175-ff0e16356990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91835095-896d-4b6f-a89a-fb0e0a796ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48460ad0-9ecd-4df2-8987-1527762ad8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a700fc92-2dbe-40db-9aa0-de5e4953a6c5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac49ab07-9d6c-40c6-8e8d-19cfd387a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903ccb38-256a-49e0-9520-02745ef0a93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282d8211-39e9-4b4b-8619-57d0c60eb3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4db9680-b062-4ad0-a398-fc72adfebb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0792f2-7485-4bdb-91f9-9b6ad0cda67c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e82b1d-6c5b-4cf6-9fd0-b2a00bfb48d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f68f0d4-257c-474a-90d2-edc97bf4ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe9b1de-7eda-414b-8aa5-e87a856b7b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b15baf38-328a-4ba3-a4de-84cbc1172f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65cdd40-0d7c-464b-9874-ffc829be51f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a00939-3618-4bef-84e4-11786cd276ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102ad939-93bd-4a9e-949e-5952c7c2a048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9ff3ce-d6f1-4ad0-908c-4a5441dd6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "894eaec4-992a-4f95-a57c-1272cd8a4ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b4ca2d-77ae-429f-9b7e-b30778f61c00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cea3cf-be29-403e-bd3d-6768d0b80ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b236cb4-8741-4da0-8fcb-6cb10b2f5317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051776ce-4663-4c0d-a724-2df77f12f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eaaab96-6f3b-4f3a-a50d-2ff6f753412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576cadd6-2e55-4d6d-ab1b-6b524c1389cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fe3e69-3bd9-40ee-95fd-4a2671a8094e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b6a3cf-0ecf-4031-a3aa-4f4f8d3ee190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e78b0f-1ff0-4cab-8f12-f4104197682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31152b58-f85e-4b2f-998c-6ded0b9bc246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9c84e-61f3-424a-8d1e-b78f54da7c79",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f45471-a319-45a9-a5f6-dc5ce12cccca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789360af-9c19-47bc-95b6-90015ed6c5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37246262-a9c3-43e6-8111-df7404dccd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8431b85c-4db7-4ff8-bf51-917a67c25ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c85b79-ebfb-4467-a06d-d7992512a317",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd77866-b1de-47e2-93ef-5ba29484a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c19546-d4da-4362-8010-ddc62382a3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc652586-1230-475e-999f-3bcd6b20661c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e73a64a-4807-4842-867f-f31a84615fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027a3adf-72b3-4cac-8d56-0a2669397256",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92f8c84-8c6d-4d60-9c60-82ceee583b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c19bb8-8921-4c39-bd00-144f7a218388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf2426-d866-4b31-b673-17cb7e9cff9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6045a595-1939-4c47-b882-5e0d7fa73a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baad766-bd2a-45b1-b9ee-97b9fcdcf2c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e26f13-ae4b-434f-92cf-fa1d8d61a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7674757a-efdd-43c8-ac3b-a52fdfeef843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9372e7e-05e8-4d6b-a898-3fe29320dea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd14469-c5a1-4bcf-a1c6-618297f0698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648be68b-b1ee-444e-ae7b-c010284e379b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50107e1c-a923-41af-9048-24d462dfabdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a763a963-5997-49a9-89f7-1437f1de4039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8914c184-e557-4896-bbcf-83c9b71ff8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1496ee32-32a5-4024-aea9-1d9e9bbe8e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54bfa70-5a34-43be-b988-64d7f40f4503",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5471404e-0e0a-44f7-9dd4-4449ecc30bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a1f05b-c172-4f67-a44b-69272e83794a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b56032-0721-4ff7-a60a-4558ebe4572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2ff997-0987-4d6a-a73b-91f4a5df1077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c1725c-fd07-44ed-a8dc-767c1093e3ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7ed420-d6d4-4b37-841f-1b567ff0fc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395f1c52-0b15-46dc-9231-3071bf2de461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b765803-afc5-485c-8da7-ac7014fc9726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0b266a-165d-4b04-ac0f-422adf5e0120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c14165-1aa1-4e02-aca6-33081a44c465",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc091e3-4ff6-478c-9b31-734c19bcce6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3394a4a2-8238-4a42-98b4-173177afcd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd55754-262c-43fb-a220-9b83c64024b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e65b97-c2b2-4a32-b62b-9f5c9d56c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309f7bf-ba96-4f6f-b066-46793196c5c9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0584228-3aab-49a5-8a07-4f1e81a84a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf8ca88-c856-4ae7-a41d-a6e3dec01d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5107adcd-7366-4902-ae56-44ea8ff88320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae0a97e-d9ce-4f8a-8ccf-c55bbf222b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22664a02-a499-4075-8fde-d4fb40deb870",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565d071-49d5-4553-8232-fab61df7d90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd19c268-6f53-4929-93e7-6fb399c7389d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59a64a-82f8-49f1-b26d-5c7d1df45113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27f4cd7-9064-4305-8e82-29ced7e01150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09783bd-1838-46a3-806f-b1bd76e39e6a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6875ab9-d0db-4513-83a7-f7d90263b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7801e1c3-0836-4125-a8b2-6d84d74f2117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8ef784-3fc2-4c97-8d68-b06421904e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2310bb8c-bf38-4c19-8a95-826f6197500a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b4379b-796a-4c8c-94b0-ead1117d5cea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf11cc82-f6bc-4614-9c2e-5850258e0335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e45db6-5d42-4147-85de-b7db5cbb931c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8414a24-5874-4164-bbf0-464ac0625fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd69eb5d-db07-494f-b60d-001c580dc2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a47d8c-37a6-4c7c-9aa6-b5f2c6d3a2e9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceece5dc-3752-4583-b6ca-04cf5db47db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4f6069-1fc1-4832-af9a-be5ea7df9015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf4eb36-607d-48ec-ba06-12e16f0c5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4027f8af-0664-49dd-8c00-ec38871d5709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ce55d4-9be1-4df6-b8c0-77cbc455b00b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73b8fca-409c-4c87-ad9a-021dbf6de4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2acbd9-0bfd-44e0-9dde-7bb9ead49bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c391d90-37f2-4100-a720-aef8436fde60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36c98ede-6bfc-4170-9419-d58ec51320cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16552e51-d0e6-4403-99a9-66da289574b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020dd6c4-ea35-4459-885e-e08d50edaf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accb8014-e9c7-4e13-8cae-8511a2422290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9364d-1d85-40bb-8451-762abb77fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2659157-c184-41ab-a384-758f431f8e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6941937-472e-41be-b607-3430999b9b7f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b6ea69-b305-4c5b-be3b-544f8bda3b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7e6e95-6e6f-423c-a37b-a29f3f695573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a16313f-1f20-45a5-af54-54853ab54ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83db2ce3-d4f7-43a4-a270-38ff17756bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a801eab-bc60-4704-8bca-200733c9cce9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8bfeff-85e0-451b-9c76-3fd01e7807ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d29ed3b-4a1d-48ca-9795-af8c88482478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e1c8b5-9318-4c1e-9211-c70583bbd25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a6f4ba-b2cb-4677-9346-a83ae269f77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cd48ff-966a-4263-92aa-6f613a9dd816",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8939cbfe-ce00-4f3e-958d-4ae6877c8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e36f14f-4971-4628-bd6c-e7be721362f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d2a69-dc73-4128-b2e2-99f0ae314132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15689f5e-fb48-449f-86cd-06f5aedf99df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0466c28-1a37-4d5c-800e-0b695b0dda68",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d0b2da-c461-493e-904a-3ddb978bd5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162aab8f-1f7f-4b46-821e-f7b90f59a44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89455800-b6b8-43ac-bc3a-32b7429433d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e481ebd8-d360-4f2c-ac76-838ee2316ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15154d7-6605-4aad-88b4-0bb09ae3c337",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a28b6-c63e-4c8f-889f-471870df354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e538d8-8fbb-401b-826d-965476bcd80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283ec57-4a24-4adb-a294-99b38462fac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4e4c5c-b901-42dd-8a1f-c02beb1a22c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd9ea45-9eb2-4fba-b4a1-146a472133ee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ecdcd4-1624-4a43-bef7-147fb6a2fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15646d8-13b2-4839-a4c9-b7b8bf5861a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd4e8ab-9fbc-4b33-89d6-844e0bac2bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "118c7198-4faa-4d51-a3ed-cfaac9bfff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4315ce6a-8ca9-46b6-a455-56a68087c287",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833488b-f02f-4d95-aa64-9a55e2a7859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3827bdb-6d6b-476e-a918-f7eadb2358d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fedab5-c329-4dbf-ab8e-e28e20d56433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "186174a7-09cc-4efb-b485-6eda3fb77c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ddea69-31a7-4504-aa93-020225a45233",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08380ccd-f114-4ba5-bda1-c646cfff4865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f4290-b9c2-4ff5-b7de-1c9bf3ce6729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0f6e9-9bc3-4a6b-9de5-026c78eea743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1757e574-fe5c-42d5-95e7-2f43636f0a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9df48f-3d96-4d43-b209-a3ac5b2bf68d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfab4735-3c39-43b3-8e46-84d4174e5444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0171d1e-167c-4030-8e0f-2d8ec7f9a0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d09496-2efd-4d34-849e-a663c017fe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0703c7c-0b38-4310-a677-6d6c2cabb235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575b4c69-ccbf-4f2d-9b80-34a83977edf6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583537cf-98bd-4aad-b90c-3fc865cb6e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a94502-08be-40e3-aaf9-77fdcbb10cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeec5e4-4a12-4811-b237-fe44d6c7369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62390bc7-9de7-4374-8193-a00fc5d123a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef205862-293a-405a-bab5-7bf54b4f8e22",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1d0d40-231a-47bc-90af-0e65b648d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9b388b-1d2b-4252-95f4-2b28e4e4286a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54edbf63-e02b-4947-975a-524d70bb97b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "835287f1-c898-4100-a4fb-c13e83aaac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f85c71e-492c-4a52-84b4-933dce9118da",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8a87b-340e-40a8-b909-a6ebc01e478e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015e53ae-b0d8-48a1-b8c4-bf15789eef94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a1df3d-c375-47eb-87cf-be3a4b839cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d49c44a-5795-44f7-8514-22943fe7f221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d67991-c277-4f61-af5d-94b6edb39e09",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5b2e8b-ea60-4103-961d-7c1174fa8171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d441ff3-3181-4be7-a8db-c52979e360a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b7f99-75c3-4627-be49-2e2558e26f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71a513c-d66e-459f-b31c-abac5c1ca3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593644d7-a522-4d14-9b37-ba5d62107408",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05525a65-d8dc-477a-a364-5e11645a777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5730e11-3916-40f4-8b8a-900557db723f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781336a1-23f3-45dd-9163-29ebd92b2a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26513000-8303-44ec-81d6-ab168214ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb622b3-1415-4ff4-9865-cc7c702e4748",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44f5bed-0d8e-4228-8644-eaa18c4ea4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaa4ad3-522d-4540-a73c-6487f08cb714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebe40f5-b37d-4b40-9f87-99fea96c95d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc5f344-f4da-4db6-b3b7-3d898ef97b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5935f22-5015-45f6-b6f8-24314af340b0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5947ae-b28e-48a6-99a2-66fdc86cf89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871fdbf2-fc84-43ee-8b43-e0acd147589d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bca617-e404-4224-b124-1ea5bd5d2ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60bdd7ab-0174-42d8-8f4e-853e2ddd6122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e065a746-29be-4ab6-9074-af1a54af34c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223df744-cfbb-48b6-b3ae-1b29206e2948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a889d6-7035-4bbd-bb41-e55094619c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fc59c0-f7a3-46be-9638-8bb20d369b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c8b782-bd0d-4b83-94d3-d049fb8f0c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bd59a2-9c91-4be8-bf62-64aa7d86efea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62addfb8-62ce-4577-831b-72be84f73143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fa2ba3-900d-423b-b0cc-2ff3a4d5093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8380230-708c-458b-a03f-e4b6d6815658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f8f4af-ef16-4484-8e29-f1b9c172692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df3ecdb-9c13-4d71-9e95-29e71584bb09",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fec0643-473a-41db-852e-5c8fc1accc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24aa829-9ab6-415a-a7b0-193e93a2798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069915a6-40c8-4d36-89e9-ce5ca9621b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d9d468-8491-47f9-8840-b92f505100f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690c9759-c314-45a3-8149-00a4a5855900",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220adfd1-b9e1-4c81-9aa5-31d1342255b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba65568-6b0b-44c5-a177-55e7b26fc8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b36c68-c4cd-4ca7-b372-8f5cc49175ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "823f94eb-b0c0-4ba1-81a7-ef8cfebcfa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68add9-5afc-4a0a-95fb-24999a2ee61e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486cc82e-3ccd-48c8-9fea-8f0b594caf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4378324-4241-4cc9-b74e-70286bc839c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac97e72-3dc8-4906-904a-c4fea81118f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40dc4435-d7e2-4c33-b32e-03249cc8eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e804c90-a925-4d81-965d-ab4fb1922b8b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32a6f3-34b1-4522-96ce-3efe231627ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34e2199-43f4-45ca-99de-3151e1b6addf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7de05a-48c0-4cc8-8052-6c388b291725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ae4749-11b6-486c-96e6-924f18e133a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11062847-d4b7-413a-91bf-7b3e3f1c5cb3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e879690-363a-4f20-80b2-364fb69015e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6c8713-ae60-4f8f-93ee-e9264da4133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96f5b9d-2eef-4584-a71d-89037dab730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc84286-9622-4d59-ac1d-bd9cbc5ed279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76c8a25-9fd4-4c11-a39e-bcf08d0548ba",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af83fa-2349-4cbd-87b5-df0d90b9fc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e56be08-ee13-4035-9664-17a7b7a8e89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb89460-183c-415f-ac89-c4c0a75c8f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c73bb3-db29-4241-8aac-6a2db464f60f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a045db50-7f9c-47d3-b498-f88ed8844fb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8efb966b-7588-488d-96aa-6ee61cb2db11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f7acf5-dddf-45c4-a50d-4670a98638c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8dd4845-dc74-4583-a283-7ec89389aa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e000bea-8be8-4413-91b1-0b4957bbfded",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db36fa18-1eaa-4a28-b285-fddfa3032f56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d0ea9a5-f87b-40ca-ba40-28eeed2ff6ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "780e9ed1-fbac-4739-b907-c7951fc310ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a94c76b-bc6d-4585-ae8b-a184bb7acafc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "519e1e56-107a-4157-90f5-70c1402d2d4f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61ea2112-7bbd-4ab2-93e9-bf64ea49572a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8426d1f6-1423-495e-8f7c-2b30e6ea18ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ba2f858-21ad-4860-92a4-010146e0ea2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "986cbf4d-0166-42ee-b785-b03384993b9e"
                }
              }
            ]
          },
          {
            "id": "1aacd6ab-ac82-401b-abb3-a88b591cf2d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c996849-41fe-4292-bb26-b796201f2e0f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bf66c90-0408-4239-a634-17e354702296",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70711091-2f18-4fde-9e20-b6ea6bef8fc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31e6f3f4-8295-45b0-b244-a0c766d46f8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4514a0c9-8f8d-41e0-a5bc-96d423a13384"
                    }
                  }
                ]
              },
              {
                "id": "90281191-b230-4b99-9a65-169d7c536a51",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57badbb6-3437-462d-b491-c66e00a6c89b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7228b4d-1f1f-403f-acae-6c5a9b0a89ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4a2cbcc-6fa2-4c30-ab89-cbf08f3108a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fad5bec6-d665-4647-a1b0-e7f714ecbdb7"
                    }
                  }
                ]
              },
              {
                "id": "7b7947f9-2fbf-40fe-91a6-40a33f441643",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d20e94b6-2d2d-4623-a56f-cc9739ba8acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc57b3de-f596-4403-93e6-52281706c157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dc9b0f5-64b6-4520-aef3-e1da870c2925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db6872ee-8618-4a20-b65c-0f6f9c82fffa"
                    }
                  }
                ]
              },
              {
                "id": "059b9eef-2a33-4944-9591-9581eb81ae0a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fadc0d87-63bc-42e7-8e9d-dba86a9c04db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b863d35e-2749-431c-8ce1-4ed0c07b4eff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58abba13-58ae-49a6-9e8e-e274bc60dc85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ba0a6679-b0f2-4419-a485-ffbf9ea208ed"
                    }
                  }
                ]
              },
              {
                "id": "9a5fedfa-d0b1-4f32-b7bc-c4af4d2ef3d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f3761a-bc05-4384-833f-c82a951e9d9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b6ba05d-41e4-4746-a0b1-e672764d75ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beea57f0-bc35-4c4e-8391-e128ff1bed26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "14045daa-3f60-4235-ac9d-94bba546fafc"
                    }
                  }
                ]
              },
              {
                "id": "7f636163-8e62-4b26-9b44-882fd1b2b3b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ffbc8fe-13ff-45f7-8daa-3860f3fba865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb68bdd6-9f5a-4e0c-b033-3cb5a3f6e82d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbaf0b8-7a49-492d-b567-6d20df1d99c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36472e54-a235-4010-a0d8-3ae7f7a75c98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a972a914-1f7b-4c58-84d2-f2d650342914",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "261ce8fd-2e06-4561-9dac-82a28186cbce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e27e36c9-52d2-404c-83fb-cf2f77ba5da7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8945b44b-8c99-485d-8fa6-2546f3673d79"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7746542-88bf-4d8a-8342-507cfbf493b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d3f5a824-321c-4761-9b86-e25605a0f0fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "580a7db8-b8a2-4e6c-b4eb-e866eea140f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04c3e887-9c6b-463f-8bad-f90d6914aa05"
            }
          }
        ]
      },
      {
        "id": "a0666bda-8a8b-4868-952f-3fd04053f363",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "103a8f49-c54e-45de-9e03-cbaa4fb3d934",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8029b8af-e6af-4c46-8748-0793587b6eb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6eda3864-c85c-43d5-b66f-472a086d2418",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80af03b4-7318-44f1-9bcf-ef56106d455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bd0f4c-cde0-403d-986d-cbcaf4d93901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939053a-3ed4-4a74-bbd3-66193d13cc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d32adca-d88f-4b3c-9560-2e9fcb8cfb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4f712b-bd3c-4927-a43d-078ad08a6b74",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe028a75-c624-4b92-8f53-45d6412c54fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16170854-cac5-4113-a7ce-d8600a70fbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818773ca-dc68-4bcd-93f3-d589e59f4503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc955af-27e6-4ea3-9b86-0c5025b1fc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c334fd-793e-4188-b152-851fe975305d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f1800-bd2d-483c-b2d4-6bdabfbb63ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2059447a-1bf0-492e-9513-426de4e8dc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0c0ce4-6137-4844-9f47-8f981f4b2b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c731f243-c8b5-4b14-b48e-25ae4e40c704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac43f88a-8c4c-4729-a436-fb6b7c8f6260",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eed099-996c-4b54-a248-0d5e8aae0bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184f5bea-acb0-4cce-9b55-923695eab4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dbddad-0b09-4cfd-80dd-07b0a4ab05e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd667d9d-df65-49c7-a2d1-a8b8f30710df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a5b8ef-eae0-4531-827c-fbfc51229be7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f5ccb-e316-468d-91c3-addb28abec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9813abb-0c1c-4c00-af06-c28546c4d913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e32942a-363c-43ed-8f2c-1991f9f64c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec461f8-3655-4e60-9e4d-b50f20f44795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a873970-04e1-4b71-b36e-c80d0901bc54",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a99fb6-57af-46f4-b9c1-bf4e71a9248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e01686-7142-481b-941c-74b8bae42585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a382bd8-78e2-456b-a042-a0eb0ff5546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04e70317-0ea4-4b5c-a524-3cb33843166e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389aab7b-75ed-49e8-9d26-e9ec7bb6dd69",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f104344a-3cb0-4fcd-bf7b-38aa4da813c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71be7411-e0f7-44b8-bf32-ae474e5a7fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63627a12-4616-4a19-a86a-1911f395c977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e083b255-6cba-4ad4-8889-c839098d2b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5f8658-2ad3-48d4-bb04-a0f41a739060",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9859d17d-f69e-434f-bd7f-71f7ca2c7bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101e4364-d68f-4298-94d7-68d90c9e6213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702ad00-ddb2-4030-a61e-94e8667195ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc09cf2b-7803-4148-a5e8-37c4f7a7666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2e7d0-6d7b-418c-8e12-2d713022b16d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4b534e-ac01-4b7d-8fc4-8f3f5b113418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44b535e-48f8-464c-8500-3f297cb02424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cc5bda-42ac-4d8d-85b2-b6684160aaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b1e3d7-5ff1-43e4-a1bc-c1ddcf21d7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dea448-5d33-4b77-94c5-bd4a3aa3a1f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c317722-aefb-44d1-a807-eb7ac7d703c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a0db0-8dd1-478e-a1c1-06afef316f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d221b6bb-258d-441c-b311-4cbd8745a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d681b3e8-7e85-4996-9c67-5cd626895b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9003c93b-1de0-4b06-9d49-134ecbdbbe08",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e237ef28-26cc-4e1a-b459-a5979f0984d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f47804-7427-4629-9082-7895d7261d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4d9a1d-de4d-459e-a6d9-2fbe05ae09c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2eca3071-b2aa-4b13-8642-01103956c7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f353349-55df-460a-ab74-84c09973acaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a494988c-32f1-436e-88d6-2befb5081fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2d4f6c-3352-4740-b6a2-77916eefb4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef985de-8e78-49a5-b238-0f6154316ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3278a534-d839-4119-b3cf-62c29fa513a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e3ba0d-4109-4294-971d-8be7d67b0a1c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986678aa-f992-429c-b0c1-192aebdad36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9792f4c7-4290-4c9b-a472-f2975c423a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b96842-d7db-4c6c-97aa-596a97c3542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d1a426-6955-42bb-8e1a-ba5ed487151c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35fbf2c-3947-489b-bfc4-4dd4b16fe173",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f27c097-e323-48d9-94e8-c2e93d5b3599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2799fab9-ec9a-4c31-a9e9-c0a6104dd99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc9980c-f581-4250-9340-0b0db97bc520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "656125ff-9dbd-47cc-a274-ca03471ec99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b1cf23-6262-4740-aa7e-30485132ed44",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2571f7d1-8a6c-4759-afaf-19d57eb3417b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6825ef2-66e2-4013-9ab8-4b223f40f3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef6ac49-c03b-48b0-81c9-d31553fbd5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff8e6dd-6c84-4dfe-a02c-82787927a642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b45256-6c01-43e9-a7c1-a1b7f6763182",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e889125-9e84-40a3-b47a-9fb5a5bb80a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f536edc0-8a57-4b26-b20d-57fd4bfc99f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401162c-5938-4eec-bb5b-53570c3ae66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78febc69-9d4e-46ec-a883-b088f5eb7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ee94e-c75b-4557-b91d-5b82b887467c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e75d9e1-54b9-447b-89e7-3821cd11acf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd83f75-ec21-4c21-8985-30c3c6a5f84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6316e-572e-41d9-82f1-45f9d418dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc10c11-0a1a-44f5-b9df-97d6e00c9d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d95c9a4-884a-4395-b94b-9be42a121abd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b37f31f-a9d1-4434-a231-288ad1fb416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0accc5e-e8d6-45d0-a58f-c5ac4e956c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c827fb63-37d3-45f2-84c7-c87039759f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bee8c7-d052-4faa-a0b3-9c3aa99abc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020619be-70d2-456e-a530-ed569253a327",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabdbc39-68ce-4f4b-b227-695035f726ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68f488a-15b6-4a0a-ab77-9effe50b9eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d778851-89be-4122-b9e5-264463f21ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b91583-526b-4d92-9e0d-b88d9a379661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07ce9f-937b-4cf1-b5b7-60bb38ac328f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f2d2d5-bead-4616-aed2-d77bf21222b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc2453f-c59d-43c0-ac8c-e93094d0de61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d89ae0-ab32-45b9-b677-4883b66ec02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8405ecc0-6215-4a54-832f-6325473003c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e3e5de-6afe-4c14-91bf-97a3ed93f650",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b3fd6a-7fdb-4c43-89c5-a338b954189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e6f49e-3afe-4b35-8c56-3733a5fb8d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec3a698-67c0-4bbe-bf26-78cc96c29119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c33c76-2d40-4022-8ec1-297958a96e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b25f9-b1d0-4400-b616-74d9adb1fa9d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb688f6c-dca2-4b34-9002-146ffe9425e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3fc3f5-be32-473b-a926-488a295d928b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587a79f9-64e4-4dc2-8ecb-d5ea81aec4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50ab49c-c111-4df0-b928-2fa4c3ad5be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d351e4a-42c7-4bf5-87db-73db64b8c500",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6d4fb-9a01-4c6c-944c-6c6224fa7313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5117c0-421e-4c70-bbcd-648617bcaa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5bd12b-04d0-4b53-8f6a-64b1563cbc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8312c627-4855-4b7b-a633-f8e85e93aee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b57ca4-4ab5-4ea9-9b95-41561d5712cf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ead433-a626-4211-a9b7-79454f34230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd74aa4-d1af-497e-a758-026f4eb896b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759f79ac-d66d-400a-93ee-60298149af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6a89c4-dae2-432f-91eb-a950da64017b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b2743-426b-43c1-a02e-60b0cfa639a9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5b1fc0-2725-41f1-bf12-d819940f0215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4653ce05-7fe0-44f4-8c89-0c724597e81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86eb7dc-1ee2-47d4-ad6d-5f56f7ff2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fbd9d9-7bc6-4c0d-8b37-cc075f14a80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3667ffe2-cebb-4a76-a6c8-735073cb2de4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ed8a1-c207-4fb1-8d01-da3166272d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c006d34-03bd-4e26-953a-80764880a2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8ac45-e51b-44ab-b3a9-c92bfce716c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca8513-64cf-46e5-b72e-22afc0c034d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e9da57-ea1a-480c-ae4c-c52cf08a13b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c523b-8b73-4a9f-90ba-d5f827c429c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728c5d95-f0bc-45a7-adb9-1b8fa4322b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6246867d-1eca-46f6-b329-0397a741979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc12750-a8b7-49a8-a079-df3673656eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed929ad-3e4e-4c16-87b1-eca1dbd0636d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b34a2e-6c24-4be3-ab13-2bbe0a9d1c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5421362e-6ea1-4042-836e-429cc6610d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2594436-1cac-4ab1-8183-7638b501b53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2be3cb-1fa2-4391-8360-6bbfdda4ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454e139c-ff6f-4586-a8b0-c07444d9705c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9faf7c7-27df-49dc-9acb-f3700afc9f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244d6a03-1bf1-4ee8-9b52-a691a0a10fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4042c5d8-f1f1-4827-bf06-8bdb5494e7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76870a1c-d989-4583-88fa-6c4d1d5f5ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3358062-f82c-42f8-b198-5cb9ddbe32f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ad56b-147e-4dd7-a515-b79b62b964b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54f6bce-a19e-4c58-9060-a9aa778bb81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0909493e-bcb1-4b56-85b6-5ce3b5f7b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8777f5dc-c4fd-41e5-9832-3827bf4cb75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf96166-4962-4f40-bf1b-542707b61b73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5fdd15-1505-4c88-b20f-35c05f372c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e61a0f-5e96-4b2c-a5d4-dc4256db4465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ca41c-bd73-4687-b160-f366dd042596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4e9f67-9bbf-4c2f-b201-c870e25cd240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21755d5-ad35-4d4a-8cc2-db3bd9a81186",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa9ce7-5675-430c-93b7-e05aca84c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab079d6-b4b3-412a-aa48-f045b8412fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1248de30-925f-49bd-8d29-0579ca443e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c3f085-c9da-4295-a58b-69cce9b722cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b72e520a-73d0-428c-be66-a0514af24a89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af717a04-04df-4bf1-9abf-bf3081812a72",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e19e8d-d1f2-4547-bffb-8713bdf555a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e63237c5-db2b-41b3-aa3a-24fc80cf10e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0380f99b-a2d0-4963-8246-915ba8d71cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f30d6957-61dc-4b91-990f-18e0bd94e947"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ccc95d0-d02f-4f12-96fe-150f2eda56cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31d5432-45b2-40f3-8e43-c7d21bc892f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c58fa1-c0c0-4fc8-b482-56b8bb5c756b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08824d80-aaf5-4a54-be70-43a2b7fa47d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69499e9a-da5e-406c-b43a-6d04be5f8fd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55a038f9-17a2-4972-ad0c-d7e2b49b7936"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "475f06e1-64e0-475b-aa7b-2fb2beeb6af2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c091c735-9df5-4e88-812f-77e2742397dc"
            }
          }
        ]
      },
      {
        "id": "4febdf99-40b8-4364-8da9-a893e377f770",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "451d58e1-1010-4727-a138-c33f99be6f0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b0a0432-4b3f-4abf-b706-d840888802a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ee88f39-130a-4f51-831e-582b06d402ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81d5bd1-6db1-45ec-b1b2-c5dca498ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb621bd9-aad9-4247-b70d-d3818242452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e2ff54-b49e-412b-8519-3303227cb9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7ef850-1f40-407d-8660-d723d28a73a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b35e1a-9b0d-4a9f-b4c4-d862aee84b3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd461ffd-3727-4f32-9b65-340f28e7278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ee5bac-2b9b-40fd-9800-80a7f0ce0b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9155ee14-a284-4580-af90-7aa8e9f3f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe910b8f-a3d6-4150-ac99-ebff313e9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acc853b-f099-4527-8e89-0e252cb79dd2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f2a2dc-2b1f-4df2-8840-d243a29fe3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fafe56b-170b-42fe-87b8-f879aa430009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621cb618-e1d0-43fb-93a3-0287a5aa8c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53c95d5-5202-4e53-af2b-1e78797190ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ae8ab8-49c3-4cc9-adcd-94daeccc2b41",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f6c171-576e-4d0c-8ca4-f3a91371625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b92764-bd8a-43fc-ae87-4c5e3fc7b522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c63017-5257-4074-a718-c7fa7da58993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5a950a-546b-40a2-9303-bc172ef42149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02c2c42-cc73-4457-b217-cf0ce039baee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beaa8d9-d7b7-44e1-99d4-de2a044fb7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea4236b-71ad-40c5-8d01-975075f725cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b3fddb-68dd-465a-85f9-86ea71c47190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d19846-fa99-42e8-be61-1eeacb14bd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b6c396-795f-4e47-9786-0bcbd6f165c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e7af9-5e08-4b19-abd5-5ea516375f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8327d952-fa4d-451f-a719-df47ba1ea122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda062d6-f87f-414d-a239-0d75d9d0206e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff42177-3de1-4332-9fde-1d91e956c259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a8f0f8-740a-45da-a9e3-ee06c31c90df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba34de74-a108-4255-8f88-440024daf7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544f95eb-6393-46ff-96c6-42c377d1b603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ca9f19-e9c0-4f54-a068-2569a2554cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b90a6c9-23c2-43e5-ae36-3d283df94dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d52d6-df23-42de-8246-237c87e31453",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a5c8c5-f665-4d55-918b-1083f910991c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0264d4e-3c39-478f-a5fc-8ae4d25c2a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf63cfb-dec7-45fb-8fc1-c57bcf46a021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "895f6f3a-d9fd-4d7f-8c28-e74288763356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e0fb35-676e-4de5-a120-284309d373b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dc8f3c-3d2d-44fb-8c05-f9932425e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf796c7-aaa0-4702-84e5-3c10e939eb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6916b52-7b2e-4469-a5cf-739042f09ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34372f2a-1b94-4e9d-9d1c-ef48155f4021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b6ea2e-c53d-4edd-921b-1bac550bf3ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38f777-43cb-40df-85c8-d48159591d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740af88a-9d00-4e47-b1ac-303f3ab8e700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcc3b7f-ed93-416f-b29b-48eceffdf7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae496353-770b-4e02-b9c7-af93d1a00d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97831b14-d1c1-4144-a0b6-3122624ce4dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b68421c-93fb-4ab2-b9e7-ff1dfefe5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b1f174-a7f1-435a-ba8b-1c07986e60b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78958b9e-93a6-4bd8-8cc6-f60035894b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e25f28c-4602-41e1-a5d4-dc36faf03995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0931a2f0-25b8-4c01-b2c7-81f349b72cba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881f3fb3-aefa-4b40-b424-173e4f965218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d71b6a-7564-426c-a66d-040a6c29cbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e611ea73-77d7-4f79-8ab4-ebe262524a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3a2d01-d624-44f8-8a59-c66f065a3d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574e4dcd-cac5-46fb-ad19-d15dd7536864",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51263ba-6ee5-462d-87e2-fb8f7f2674d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aae4010-5496-4f41-a9d7-1d2e13d52414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d789d-d284-48f1-8cae-aa6a012c4ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1d5700-2ab7-4f59-aa58-479c43c1727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada1ee01-7278-43ee-91e9-4ba334ffc517",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164b8016-e9f2-44dc-ab30-79459bc6b387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98275d7e-3ac7-4b19-86ba-3841c0b6f39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a59f27-5a5b-4705-a256-a77fdf3f3cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b43d8f-91c2-4ea9-9032-3963f5299d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895a8c9-627e-4f9c-bd5f-de3026ac3b17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d692aaad-1f2b-4bc8-bf78-b14988c9ea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8d687c-5630-4d80-84ee-ccd3793f8136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d1d39-d519-405a-ae8b-fd38121208b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a939ecae-6a39-48da-bb31-c97dc4928c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aafc128-88e8-4beb-aeb7-dff062e06dc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e53724-2431-4549-9bb6-e5eec5e4ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f228c859-9229-4229-88b5-421ff6cac115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ac2cb3-0cbc-48f0-8ad4-1c3c5777118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df838e8-7b8f-448f-aa1a-96376274505e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d395ba50-db67-40a4-828d-a65420dd690e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceeafc3c-a763-43fa-a084-92b6d1bf7f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94f8fc9-fc16-412b-85d0-ec3d49d99734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5ce7a9-6307-4ea1-9684-510d23c2b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6ec462-0273-40e0-b7cf-cd3b59200acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bf4c28-ce6e-4ee3-a5df-80ddc5565866",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6828d57c-5744-4080-96b9-78e389afdd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7352cf-b4d3-46a0-9776-509c42da5a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe14ba29-4181-435e-a305-dcbf3edac31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7047f6-7275-457c-b5cb-62f0ba28b9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064b4e5c-a0ed-4d4b-b17c-ce0a1a10722e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74694d60-a524-4fe8-8961-df1d4b166557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0db2a7-f3ed-4f42-8fa8-77fc0b4f6175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c06dc6f-d3ef-4c57-aba2-11cba42b915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2221d694-2a6d-495f-a4a3-5a182aa4d831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc01bc1-75fd-4150-8ada-086566f9de62",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c2d2bd-f577-4920-b5ef-d5019a38c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be759bde-ee5c-4813-852c-cbc2c07b3a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f4a511-832f-4e36-912b-3e7338884376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27434308-247a-45dc-8df6-8126dbd9efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73901fc-5eb5-437f-a900-9418994ea905",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd62e4b-974c-4928-9082-cf6eb6db7378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f7aabf-e35c-40d4-a94c-2996ba65c01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c41a812-424c-44cd-ba4a-8a5d5cc14e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5affae55-7c08-4365-b4b9-f14ab93102b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d835ed0-3129-466f-ac43-e411aef04304",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5341766-9680-4ffe-a9a2-312bef53c3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6662e91e-482f-47b5-82c4-2a35a5a8e5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f201438-b001-48fa-95c8-d93f8d075841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00588ca1-7cc0-460c-b1e9-a64bbbbd81e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f33f2-d970-4e7c-8b3c-663c3dd85612",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1456fdd4-02c9-44cd-964c-97dcd8b3a721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119554fb-fcd0-48bd-b959-61f11edabf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fa7d55-d165-4033-8194-75c9d0ebd50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fa0d34-09e3-4af1-9c0b-8aab9c22a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b4c0f5-9961-4ffa-80b5-9ce848ecdc3b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5f36c5-5480-4cc2-85b4-d4a2981be339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c564cb-14a1-4f71-ae7c-c2ed5e84071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7bb19f-fd7b-45e3-aadf-1ea67562f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c93f7a30-ea86-4ec1-b03e-215832600ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b1881-61e7-4012-8ebc-78bef5de7de4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b6e03c-90f0-499d-ab3f-fabe846cbce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573b3ec0-c3b0-4993-b3f9-aa854c71996e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051fb582-9b12-45da-afda-2bfd37f1e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc757e4b-c2b6-4cd0-a2c7-2267cf88559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884e96a-5822-49a0-bc31-4b9e964ec91e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2404fc18-53e6-4716-a5a3-1ade4734dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eacb703-8327-45db-95a2-16b349f6fec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d8353-0990-46be-af87-045c77d78dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30439e4-019c-47f3-a3a2-3b6037d47473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba9f295-541b-4eca-bdb2-26657c85ae11",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d7f139-600d-43de-bd42-c322ef774038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2038c0a8-9731-49cf-93b9-b9eca64cf8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c39450-96bb-4851-8912-fd617e0ff139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7034cf-4886-4f0a-8817-8b42ff176d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff2a9ad-e37f-4f49-8633-69c0bf436df9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3935df48-fcaf-4eae-98f2-0097a440346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e443285b-1103-4307-8ab8-cd4519a6e093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39350e10-b992-4eb9-8e99-c838ce47ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57b537f-9731-4584-83c7-c2eacfbcc7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f60c83d-10bb-4a67-9fa2-75fc971129bc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae05f3-e5dc-4ab4-b706-5e9c9de0aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014735c1-c9f4-4460-89a7-69965c0c7514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc171db-877e-4c49-92a0-e62db6d0fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4fcb52-f190-43f1-8daf-dd5c72834a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2598ccb1-035a-44d3-bab8-7ee2f01e2ae3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9989b5a5-6943-4900-a142-9e2532534278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a75e54-df5e-4a90-908e-5cc7043e4608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb41f045-551e-4587-a3d5-345ace27e825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d07d11-a535-4f05-89e9-380c12a7f26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b4dfbf-8d86-45eb-a704-de0378d852e6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eeb59a5-d73f-4f1e-bd3e-f5778795b114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70703f59-be6f-4edb-b79f-b4fcf0d083b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9645b-976d-4f1d-a98c-6a0604e2a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297ee08d-3e6e-43bc-827a-d24391e5b9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd539c3-a42a-4d0c-8a47-de08c949dcbd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d061255-b3ab-433b-8669-f23d0e1b6ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b44921-74da-44bb-9328-03e2dd63a544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ca6913-5aab-41df-9331-9315a9d4c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94dd0db3-4090-483c-8330-1d980a3c3061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24f79e0-c684-4fd2-8d21-d06097e1857a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b91315-dddd-4640-b460-552611acfa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4adc15c-a8ee-40e1-b771-4f20b3f1edda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163ae7c9-8553-417b-a6bf-07c44a049b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb8e062-fbfa-4942-846d-268d31032719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51207f74-8710-4186-ae07-32a205da976a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4045fff-c504-4cf5-81fa-edc22d4c3b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be438a0c-4db6-469e-aa2c-57c6a4768411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05669fc8-564e-4d57-b1c1-69f34c7d35a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5256a49a-f14f-4393-ba09-05bd05f17e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec50e2d8-7a3e-47f3-bf9e-615a46ac088d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ef048-77d0-4a17-b15c-6c10909af98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2272dc6c-fbde-4244-ab33-c1bdc140e02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e0abbd-8d14-47f3-bce5-988646842c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632c2363-cb9a-4ce9-8ff4-15b111541889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29a68b4-7e03-476f-8e8c-1d9c16fd5e90",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5a9129-3d60-46a1-93a5-e611cdabbbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e645a96b-9a0f-4e37-9353-17b283c7d581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb8d26c-835a-496b-8e8d-6c0a8895788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddb6e47-953d-42e3-8505-f15b932261f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05879749-2fc3-4398-a0c8-433307ff48de",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd951c-39b1-4db5-a00b-41d6a3716077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e05472-2146-4a4e-8798-ce835a2b036e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a72ce5-55c5-423e-9257-3bb9ed537454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05823996-6efc-439a-918a-cc7e6bc305b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53afb5b2-2b3c-470b-87b8-674121a6faf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5465a45-54c5-4460-b9ea-d7df442b5542",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7485f56-e39b-454c-a0b5-64ff7014e44e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d56fb1-e621-49fd-a314-7b0fb9410937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf0aba6-30b7-4069-a22c-410d410316a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7302e00-4ffc-4ac4-8752-8c00fd4c20e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd512003-77ae-4025-931a-12ebfaed28fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23f95605-543d-4f5f-9a88-47254ee98bb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b735cc01-8559-4fb3-98d3-c9a9a706bf35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f278c820-2cdd-4958-abd8-b8d8e0f5a842"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c0288fc-2f62-413a-b62f-1524c74b6317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8890832-99ce-4ef2-b3bc-7ef56d496a92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d79cb93-bc45-4183-9d27-308f6dd4c397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8742f857-dd26-4419-9bc6-7a4c5843d327"
            }
          }
        ]
      },
      {
        "id": "f60baf1e-7030-4730-bf13-56b2563339bb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf3f1aa0-eb3d-49da-829a-967d7ecc2fc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c08186c8-4d72-445d-9a11-48c0ba425932",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76a603e9-0e37-4a0c-93e7-5b5e383669c5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a41890c-075e-48bc-8f96-e32f17b3b123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b3bac3-3cf9-4a4d-afaf-fd72f0fa1b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae38d2fc-6e57-4b52-b8be-d012145b4493",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1babf50-51eb-435c-9171-244810f04812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eb3b27-1c70-4c3b-a1c8-e73af213d614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f9df24-1135-464f-9962-be5606c84595",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db96400d-b9c9-4156-9352-5f80bd442b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd0b551-d139-4a41-8a19-38b9e86c15a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d5bd09-7ff4-4e39-85b1-36460bb9345d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0ac2c2-25f8-48f5-8245-222f7235399d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4725cb-78d4-42a2-9a2c-8b1d3672d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef0974-81fd-46ce-99f9-c60d4a529695",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0bfb79-9e78-4a93-8e06-d52cf728f898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f62af1-5e6c-419f-b6db-16226012e1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac4d385-4244-4a16-b9ba-6ab38822d56b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06079b9-3d5f-4ee8-abc2-b409aa8c08f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c641b3-4b4b-4288-be2f-b893f6670094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f752d15-9fb8-4bd9-aaf1-f72812ab56a3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475051dd-3ef4-4a7a-8652-42edf100d89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d39b8a9-f81a-464d-8656-43a8de539ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d8db60-9031-4b1a-a3f4-33083cebd482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729b580e-7bfa-48a6-bcab-33a9e33248fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9013459a-5c65-4aaf-b69e-c741781e8695",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b81646-26c9-4165-b9b5-7e214d05925d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0033a47f-02e5-4a74-a6df-76fd41171cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13dd257-feee-4559-a0dc-9b54178e76c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2488b4-20ba-4c7d-a6a6-8cf78af3c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836e204e-1985-4177-b922-f500a30ef1d8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70e42fc-41c3-4249-b303-682d757f6826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06243afc-898f-4631-baf7-80ba907a5609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa748883-2722-4f65-be1c-cd4df0f8e93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839b9207-1850-4273-ae45-99954f544be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8b9c9-a150-4b95-a82c-a4e24b85b35f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41b2d4b-7d6f-4400-b330-979a32a39108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d7ff9f-d92c-4e82-bd4f-bd40bef40a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ee10a-7688-4db5-a9b5-658a84d1ae1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14593ac-2f8d-4655-91b5-b50592f22abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6cb2c8-73f1-4a41-9a64-fc2d9578a85a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aade852-108d-4dfa-b459-095395d99402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6634fb9-8308-4e5c-bd3c-bb3b9ff48f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986f297b-851d-405f-a218-2ec972359425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ff4b3-9f3d-4bbf-8d61-e776efc30cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c401c3fe-da39-4540-8b1c-be0afbf1cea8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dbdf59-237b-4c4b-9a34-71e5217c518a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115c242f-6b08-4952-a791-538bc0759e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac7b4c-5b56-4f73-aa4f-52a8a0ccbcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f453ac3-bdcd-4478-b101-4320d2460382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061f0ba2-30db-48d8-9d9c-b854ed5b646b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d110c2a-60ec-4564-b5b7-b9da965d04a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168f2bbc-cab6-4cbe-9d33-23f76ea64c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9be552-4ddb-4cfe-8d9b-ce352d0837c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06868c88-a0e6-4e56-b49e-60aa980c5390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29aaf8b-507f-4297-9d62-674b0d1be6bc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd66480-e27a-4a40-b660-97658e8aa978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd28549e-99bc-4fef-8807-2cae724e0025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f6a29b-2706-4a38-a266-f8c027b76bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcfe01e-fb77-4ee0-ab3d-3204938339c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44eba56-36fc-4b9c-a770-ac1822b1d0f6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b517fcb-024c-4302-9b9b-b66135527bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0438de6-3fc9-4681-ab9d-e4fa1e60f6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf8bdd8-7310-42a2-8eef-59b1e28190a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7f7771-0900-4220-8d80-0b48deeb8b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb844fb6-fbbb-4bce-b6e1-5a7c749eace3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d532aa-aef7-4056-a59d-4527fad26a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29fd8370-dc69-479d-b2e6-f4e0273e8255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a62b28-293d-415e-a445-8a413022a0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb61dfac-482c-4f5a-a59c-39a08794fa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3162c097-84a4-4a6b-bb45-5c3b688d6766",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed381ec5-b408-4662-97d4-1e3ba7a0865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1a58e5-ceca-4ff3-a837-28802ccc4397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa6022a-4fda-40ab-9953-065066433b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af77439c-8280-4e07-b7ce-ba327e65f866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb90c09-df5f-4c3f-9e90-d94210ee1567",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f649d1c1-eb3d-4255-99a7-731d84336da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e41617-96d3-4a01-92cc-5ba4f8401705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2454066a-5d77-4ec7-9348-789d966b99ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5755015-a998-43d1-8e10-23296add3c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6584d-9d8b-4793-9215-691c3cff1cff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed302fc-6c80-41e6-9cda-c7c749d458ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab91dd89-4ab6-4e50-a072-2f618d1b6124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d3779a-5e15-4461-90d7-9c644829cdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb1cd02-f700-4841-ab23-4413efab590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f7b8ef-aab6-463b-a9fd-a6652f2e1eb3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a3c48-157d-4ff2-bc62-b2002cbba7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe3a0f7-18b7-47ba-8d5a-d4350a275eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47db257-7b30-488d-96aa-702adc3efa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6574a7-b860-40cd-85ff-c7dbb8304da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaeb674-bc4a-4dc3-aa83-25af1323bf6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e50946-b3b4-432f-b5cc-ce287c5c9b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ded4aca-757c-49df-9ca7-e8c78ca2dd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ac64e-2b6c-40d5-801e-9c328b076702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fb39b3-08e1-4952-b018-ff30db98f281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45970bff-6915-42fb-97a0-9e69484487a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985f4441-826a-4de6-923d-08f6eca94a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6672aca4-ce89-41d6-b6d2-4bcd8a6e1ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f25785-88f6-4ebc-b528-41b48e4c290c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c623cf7c-e2d2-4e9d-9508-4a3aac3c3ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b879e841-1ffb-4690-8e39-ae8cac491c3e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fe4a06-75f3-4eae-b3c0-cfdf209f2109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1731f720-9544-4ec2-a7c9-a905061c5adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5ef957-f3d8-45e6-8b0e-e2ce31c352e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9674fc76-b61f-4fdf-96d7-263da352736a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02c31d-70d7-4d5e-876b-0e6df4a3da36",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d18b0-a9d8-4c88-840a-9836ff879714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1201faa4-35cb-4340-b6f8-59848686f6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31be028f-2ea2-404a-8ca9-6e97d6409e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d347f26-b119-43ce-85d1-63b23aebe187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68515e1-ad60-484a-87a6-5cd8573ec086",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24518f6d-1bdc-43a1-a065-12d21e044b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c828b12d-1fa8-473e-a24d-188122897a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db21003f-38ee-484c-a6ce-67821b185054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2435aa1a-5828-4005-9b48-41f60c7ed4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa272550-b76b-41ec-9434-7ce62032a6a6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b14218f-9e22-411a-bb48-6ad4fd92a939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd61674-6c53-4a6f-bf9e-3e5ad2c03267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3588ca50-b832-4e49-87cf-6072729edb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3678e2-4a44-4646-bd7a-c94ed17f2b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a85d13-1733-4875-8baf-056f470c7178",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7d20a-2c3e-4167-93a9-a1b7b5dc2ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d04778-8b95-40d1-93ce-635a6205efb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2ff11-204b-44f1-847c-c2ed2ee58d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb97d385-4373-4622-a42e-1dd4d545c441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b1d67d-0e5f-4e9b-a794-779336772c02",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632b325-1a8c-4674-8a9a-1504b3c0bad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0bdb34-dc78-4097-9b0d-8dc1977ea8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b0c85e-b7b8-4d7a-a8cb-47e46efbfd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02bc060-1202-4f2e-97b4-b12a737c5c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad84744d-860b-4f11-a4c5-7b724d7a15f1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0890cfb-7d82-439e-be16-222dcd04a77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86f7fa1-52ca-4e36-a21d-c6533b17393a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec96318-8133-44bd-a52b-71b9bd106e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe40604-a050-4d05-96b1-d90b81f43f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d1deb9-c220-4ad0-aa81-f6e97de4f1da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4369f489-ea12-45da-a2b2-13f92a319dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7612659c-4ea1-45ae-8c35-11ec157984e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4968d2c-a044-4075-9123-80ca69696e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aee99a5-3cf2-48b2-8cb9-0cb3852e123d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6582964-9c72-47b0-a281-10020b397bf9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e8c450-30ca-4635-afe1-c900fff65411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069909c3-7d99-4d63-a4d1-a13f7895fc98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51130bea-66b4-4cc7-a637-75cb8b724aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d8593d-f9b6-4b34-97ae-1e444ea9901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca007a4-1340-4d78-be33-ed57c8cb3e9a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce9b16-9b7b-41b8-940b-464e8ff18084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbd5e78-4b75-42ff-b386-c88f962fd074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0f8a97-9a59-4a35-a210-1f956374dc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d657bc1b-e79f-48c9-a4ba-e8d286387bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa659dce-8335-4ac9-935f-3dbc56bfc988",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ee156b-0fac-414f-ac54-c08456b684fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20031e0a-c131-4226-a4c9-51f73f53ff3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a4d57c-3ce8-4a0c-a8e6-51d579326a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd20024-9f9c-42f0-bca8-56380faa44a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c670423a-f784-43db-8684-ff5dcae4c85b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a285b66e-24ee-44a7-8adb-5535f6f9892c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cab7a2b-3bf7-460e-8719-5c02c8c2572b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694157b9-f0a0-4956-ba97-70d4557ead40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6a76dd-76e6-4d1f-ba3f-955434d0e348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aad6680-13ee-49c8-b82e-8127501213c3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75325e1b-6bbf-4e2f-a612-e0dc5cd0cec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f6396b-60d3-47ae-9526-005d39ac8227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb113543-6980-4249-a628-500d6c80e64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904930a5-5229-4398-8920-4879af83136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbe3722-07da-4435-8b8e-f2ebf63170bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b861410a-e769-45bd-9181-c6e04716a438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db95666-7e9a-4072-a793-c8173d3661d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c3b1fa-2b51-40a6-a182-01d1b7aae47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beee84b9-cf38-4def-a6a7-ec0c47262315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c2cd6c-4c35-486e-b99a-de4fda5a6317",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d7f80-8c85-46e2-9d62-e3a3f78b6e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd9fb42-9424-4f65-abe7-c09756bcc2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824fc7f3-8d93-4946-99c2-91f908f0054e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29534f20-d33f-46a0-ae07-4291d8c42ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f3df01-fa5a-4ccf-874a-82fd0fefc95b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f38c7-6433-47da-b9bf-9713e432c554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb8f18d-dd30-464f-9e3e-e4e601269df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a4a5a-b248-4e9c-b9e1-496630beff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ac2b9f-c912-47da-871b-cba9f281d74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d136ba-b162-4e49-a916-6a4628c52afc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0a2fa7-a90b-4ec1-a337-e5ca168c4784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f5e3d2-7aa2-4c95-9a34-8d4246a530b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a6e324-7c0b-43d0-a4df-c16c3687bcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9174a275-83a8-4be1-ae6c-620218d7a1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a687d96-d96e-4a86-aea1-4685f7073597",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c88f7b-8473-464f-89ac-5aa041f1c956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31438ba-d44e-4220-bf1b-54230d0db7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0cc183-a91c-4b6c-b7c2-f0922af8d1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68990e1-bf8c-45af-8f8f-ac2276eafc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2aad7a-1b1f-48c3-920a-e8d374282668",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90b6999-df38-410e-9861-a4330e438b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a24d63-180b-47a5-9f77-4636f4d0ade5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669ba742-a887-4641-a215-fad031a72aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22792f06-869f-4073-b72e-df4586128f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52faa639-4884-41d2-9924-62db11c920e8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346b9b53-2452-426a-8906-0ad72792bb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db11a2f4-1f7a-4c5f-b201-5e228a97585a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3941c960-e511-4753-9ee5-d284b1240bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd18d8df-e39d-48e8-89f0-c7cfb1134cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4af6bf-09dc-4f77-bbc1-fff83fbe87d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51c299-23f6-44ce-a85f-2e1094850fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7d82ce-c28f-43a3-a022-b2523427ce9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376d30a0-e9f4-4f46-8a60-4d2255ec27b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a02aa2-dd95-4661-8a18-b35abc3cb18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfae7dc-9a4a-475b-814a-5e311267ebaa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d12b9e-7656-48d1-ad97-6cce7493bd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619f7154-ddd6-431e-b619-67f03a9313d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6b2289-9297-47ac-93c3-a3cf521cb0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e5996c-8685-4c3c-8db2-cada23fb6787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8cf755-3619-4e70-a91f-7c320a885e92",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e78e63-c153-48f9-84f0-5a1ab0c974b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966d1dba-2a94-492a-af3b-7b0f6e1cb02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8358fe37-06ad-45a8-8d3a-8e9d66645c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9555a197-d179-43dd-a21a-a3435aae6ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d4c45e-c7da-4fbc-86de-50d6de13cda7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c475477-47b4-46a0-930a-5ff2fac2a153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f68144-c59b-41d0-a6bd-8de398e70e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4c5a6d-7c1b-41c0-8db9-8592b653c96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8559038c-1d1f-42b0-a30e-16c6db38c6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d40b8b1-bb36-49ef-9ebd-55c025f403eb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2318c699-c97b-49b7-9937-5f021de14b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c797d2e3-2eeb-4f9c-92e3-c0e6d8f58424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4086119-62ca-45a8-85a1-c76def630adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ee0410-68e8-46e8-9de1-e7405a9aca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cb6fb8-6c11-4d60-961e-a2f6d1a2b86d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2081d85-f67a-4f7c-a1b1-bde951cfd126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a351072-815f-4c97-98c2-51545b4a31f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0676d2e3-a6f8-4e87-b9c9-742277dbe56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a7ec5b-b282-426b-be32-a625b133b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ab1988-49a0-4737-935e-a07754e4ee1f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690df3b8-e742-43b9-b03c-0fa69468e64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cd0a24-b4de-4920-a972-6cfc4d893310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726de5d-dedd-4137-94e2-ab16aa25e359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd26c18a-c828-491e-8dae-6e0c198ce440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476162f2-90d0-4af7-a534-0d9aa8675661",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c1fee5-7296-4814-8b44-96361914da1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711366ca-dad7-4091-9181-65176060a285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c397a5-9418-42d4-974d-5a929c1ddab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e89178-97ca-45e1-8589-b6c8d3daecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10dd01-3cd9-4bce-bfaa-01a9c8a19e5a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e64853-edb2-453d-8f06-1e9f907efa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae6a23b-ac9c-4743-978d-11b27bc01bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28127b2-3091-4d13-824a-d23a027e29c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d34ac12-1348-4b3a-9995-ae061c36982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b21ee-ccf3-4657-8f8f-cb4e8db1a6ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71ea2fe-cf43-4b6d-8fad-c78ae77d01f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a472e5a-c76f-4d21-95f4-94b2e177cbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2178168a-1892-4204-8f1c-6123d77c636d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf26087-b897-4e05-ac2b-872a962b2422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9d2547-8e4d-4901-9c12-0f84143c6e91",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7436f9d6-d088-47e1-b613-5d3cc127924c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ac4c7a-69c7-4f92-907f-18c00820e558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9aca42-5259-43a4-9994-a86964d66ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455f7c63-d85e-41e7-bd97-bcaa3ad8eaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbd625b-227b-46f1-905a-3b440ece343b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc1b1c2-fc80-4f03-ab6d-e92fcb1df2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2b57fc-df47-42d4-a8be-de3d76548edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41922624-9f28-46b2-998b-76005727b9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01774ecc-512c-4f02-a129-6865aa3d0ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9f80d8-5139-42bd-ac7b-44b76e3d9e61",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da70ed40-b8de-48b4-8017-fbda3cac7c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b578df8f-9e7f-4fa3-bc1d-81e3c3744e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc24ea-c53c-4ae0-9f43-d5f45e50e86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16601c6f-6bff-45f0-9125-f2eb1b85c17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fa8ad1-941d-46b1-9202-5ca090b35a9d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3bbb7a-e289-4106-8e8a-16cd2db66597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afffa95-4cd7-4850-970e-b960712b8fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8653fd61-e19f-4f6a-bd8f-bbff9ab78c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c95c4-a02a-45bb-a615-5b477cf0ce3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7e756c-3db8-413c-8983-33b1a281f79c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd08f1a0-9c1e-4aa1-a27c-0fd9c52536d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef20f6-1e45-4f20-9cda-099ec61e0d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a2e2eb-e4d1-422b-a734-6f7739eab363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff61d76-a60d-4323-857e-4b0f55848e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b622ff30-6dbb-4a08-9ef0-9c043644ed5d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7e63a7-ae07-4d85-924f-37a8648cd3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4e9b01-a30b-428a-a65f-8772d76a10b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6911c71e-b0c7-4854-8cba-9d7f745fa7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d291e46e-83dd-4367-ba7e-494528dc2030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bff2f39-e6d9-4ebf-be76-fcd436425154",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d4727d-213f-4583-8afd-18e376a35124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe46b58f-3af4-4589-8e0e-ca980a39d71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6617db61-c77d-46dd-8194-06cb337de2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3593b979-87d8-4bd6-aec2-5dc5e9fcf4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d142f43-11ab-41f0-b47b-797318526970",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e25d70-3575-4255-bbfd-442f6b6df20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d803080-e730-4bc4-acb1-5dc52bbac96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9246eda4-7df8-4eb5-a421-7f963a3d7e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa35249-04a6-499c-bf4c-03ecdc9b56e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9f6cb-cb37-442e-8a99-7a19d84da8a1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1137f5-025d-4a23-8122-2f938cdc72a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b847379-049b-440d-9293-66b461adb094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304b2650-fc33-44b0-99bd-3ca53c8b82f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0244332-955b-4aa9-a1bf-527a8ea56b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a59d63-0b0d-40f8-82ab-c1526d92becb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4555a8-1ccb-42e3-b808-51b0d8e6e55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809801ac-a772-43f9-a18c-5a3ad0c476cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ea283-f56c-40b3-a30a-4b99d026e862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5ac397-0d78-4ae0-9ceb-fb70d514983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840334fc-f6c1-40eb-9c8e-0b3b919b2e4a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661f4cd3-7ff0-493e-a3ee-6890305e1b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00a8605-8a91-4f62-a1b3-fec0dec55ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8692522e-fbd4-4101-859d-17c8a81720af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d88785-ded4-4d05-86cd-cc3b5b782ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c437fd-fb78-435a-a2ca-c61bab3dbb04",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa9a4a7-f046-4ed0-9e0b-806044331b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3bc865-e588-44e6-9a5d-5817f79857a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9e5ac-6b01-4188-bb70-58679b7edf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a23089-9112-4e65-9758-fe8fba9188f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa86060-816f-4070-a8b5-c7a555c09d6d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d61805-8893-4776-87d0-33c37df58e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee5dbc89-8ed3-4340-8abd-bd51da8562b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e56ca66-d3ec-4d43-acdf-60859958519c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467ce00c-8dac-4cf8-a8a9-6194936b2777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88308b1c-10f0-42ab-a77e-f93ac71b797a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc7352c-0988-41f2-8245-1ff4e4045259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df3be27f-1073-4b18-9756-39982443df59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bbb517-3ba8-441b-9654-c5476ee0093e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37e3d75-4f48-4594-a71a-75f581c300f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758694dd-c0c4-4aa7-8d83-0478df6055be",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fc9033-ead9-46de-95d3-40506fa8cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93c4651-57cd-40fc-be84-939cd2aec8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b2dc5d-5420-46e5-9fb0-c1247afa0e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec493b0-ef39-4b0d-9bb4-7e3a66420afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f28964-4764-467f-9735-94b25ca5bdc8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf6230f-51c6-4c4a-aa96-9c6f11ccb58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2edefdf-34e6-4237-bb5e-5626c2e1894a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de9d82-2b0f-4152-8b80-dd8aa99b0c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1946af-7aca-44e2-beb6-b503078dc9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40824a0-6789-4396-96a0-13be2bb87240",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735c1540-7b44-479f-812c-b73e84e00b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca76bc0-e20b-4617-a434-dd51a626282f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18200dcb-0a15-4279-a2d7-a22c1cfaec58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21c57a4-8392-43d6-8447-13612abea25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9968e71-9e37-451e-b663-96443f3c18ec",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cba469-4960-46e8-a664-0074cd0114ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed398eb-934a-4b1d-af77-4a34a3580dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc18f515-990e-4605-85bf-c97ac21594c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb1a54f-4d54-4578-a3d1-bbd2fa77dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee89f4e-8add-492e-809a-f13ae03df9fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8336a3-259a-4042-9f83-c4d15d6193b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a560dd5-6a94-4a55-80e5-cff1f9c56ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04b83fe-13d2-471a-8e5d-cccc31b7fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415c0e3f-031f-460f-a53c-7460654dc768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1db763-fb06-48b6-aedd-7e6472aa6aad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46263040-53db-437a-a6ba-8a06e8d0e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff29c994-591c-47a4-baed-5a2925c9cac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f29d33b-bb21-41db-8d74-6e14d1565ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bedd88f-e28f-4ff2-ba4d-4301b40e6865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c724902c-5dae-47f0-bda1-219889733e8a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b9c387-f313-4352-9031-abffbdb0cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ee35f5-4975-4036-92ce-f7855df85af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c79ed8b-ed4b-4ef8-9f7a-eef8b4b7ef24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f766cf-9407-45d7-97c2-11619ba26f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8be76cc-6066-4557-96a4-82d05a6f0781",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f293f948-8c53-49c2-a709-9e867ba9cef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ec0869-8122-429c-961e-c17620659890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53acd17d-5d5e-4658-9c05-73aaab9ff72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a940a462-b5e5-4169-9cde-63078c1616ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628446d1-6bad-45d3-9997-45970dad054c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7225b1cb-faef-44e1-87f2-b13a89fcdbac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d34b5a-b17a-4ef0-a7b4-afb16d83957f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd72c801-0f3e-46ba-a0a8-50e4d8c21c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23295171-bc64-4ff3-9029-dd5491efa32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a4b445-c9e5-426a-9fb8-712954cd46cc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76a382b-7a90-47c3-b8dd-dec25b0f6a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8afa381-3a11-49e3-929c-9615de2f1fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb3402-ea15-4757-afb6-e01e8dfbe286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484e7ac0-d6f1-45ae-9766-bca09fc1a46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd995619-1161-47ee-bc79-ed44e1b706aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e347a75a-6b4b-4407-9c87-3aec953cc437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab72b158-60c8-4c06-8775-8eb32ecc5cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a47851-d97b-46ce-9b0d-b5cab8c45e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19b4df9-6389-4433-bc0a-04a9bdac8d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b96d06-c559-4ccd-a17d-8e3e7d8bc9cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2768d5-9886-419b-94fa-37f805ef54d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1ce6db-13e3-46d8-a52e-68462167e792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fec970-a7ba-4b79-9853-e152a74ed1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7609e94-e7af-4b13-90c4-ef10a5ccadc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf00caa-c577-455d-a5ff-a9be8c1a5eba",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbcf4ae-1efa-46bb-9a80-211ff24d5848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8462147f-c594-48af-add0-6e08906cc669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358c932a-b537-44eb-be01-6f5d6bf20330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb189e1-0d1c-4dba-919f-87d1c3868670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0882401-1274-4a84-9963-0b1b6bf00d58",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3622043a-3f10-4180-80e0-51117746412e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8717d0e-c5d0-4297-96fe-a4c08e8a3820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3ae617-7f47-43c0-8571-e3c8b5b6f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436bc3ce-7288-4709-a998-d0bc1817609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb440f62-6243-4fa8-a92e-05b366b8b633",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261cc64b-b5e1-482f-8997-27bc3be4818f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f08911-75a0-4d76-b314-e24aac3fb247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67b15a0-f1a5-4920-8e55-201fb56b8427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c16ce-b201-498d-acf6-0a58d59d51fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a70a25-57a3-436b-aa68-5b31c8f151a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43656649-3c03-436d-a8aa-896ac416a71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141fdbaf-dc52-4b81-bdc9-b808b2fb0088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d3647a-e89d-468a-b9ce-c4d3632d823d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3854f28f-40de-4490-aa95-50cbeecf2e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe84c7f4-c5da-4081-9b75-c236191833e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c163f2a-d9ec-4ee2-bf3a-aa8ded0f234a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9751e7-b33b-4d88-9947-eecc6fa3e8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee111702-212d-4b6a-a5ff-20b192f6c6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b08f2c-01cf-4ff5-a3f5-303c8ecfeb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8902f747-da00-4321-b577-dd16c0ad2ae9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36572fed-a444-4d69-8a87-171149df15e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe52339-ebf3-4c94-8614-f96c8359ccb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2c5011-379f-4a1d-946d-77c931aebf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87247c0b-3f0f-4a16-addf-8f8d0de6b238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598b91a8-61e5-44d1-91fa-d99f9cbadc58",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5701949f-ac48-4224-a5c1-796171553f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5e3153-ad5e-4825-882d-4d1ff83ffa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30809773-817f-47ce-9517-43753e5b004f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8b063-409a-488b-81fd-5f8bef7fc24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f254732d-1a36-4ccf-a7b3-c1e45750dbb5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ecd588-14be-443f-8aaf-c53e3ed3c5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf9cf6f-487c-4c23-a5f5-b8431b1cc4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1592be52-2889-4ebb-aa58-1982090c0279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac82df3-28f4-40fb-8349-ae6ff702eceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef4cfd0-6c95-4e3e-8aa7-942042fb4265",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cccdfc4-c3f9-4811-9d1b-dad136710e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b68b6f9-7957-4e74-a221-837a546e4278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15deb460-b970-4372-b439-41d6019d51eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6cad8c-3466-4aad-a185-3822d08ed181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5305318-90f7-4383-892e-d3ee8cfbc873",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fde9c9-a26a-4c48-8a0d-aef0a4247000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf10aa5-6d2a-4a25-bf0c-3034794e8f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d7e6a0-e778-4ec9-a3c6-094915b31a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4799f44-45b1-42aa-8f31-aee589f784f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ed5e7a-045f-453f-9a3d-d92ee896948b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db04d943-ebc1-4cef-bdb2-fdfda265adef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712703ac-5616-4a14-9c2c-1e563e479264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad274d-5d60-4608-a14e-55718776bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ffb2bd-3901-4fa2-896e-9801b0e35dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30899680-bf25-44aa-acc9-48bf99ae802b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764d0179-4439-4674-958b-21c4b39f69e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67bddd2-6248-48f3-ad84-6e6e1b1476f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad31f69-7b0d-4ad5-835c-39ab43f7076d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed4af2a-6418-4744-a432-815e9b8ee58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36efbe23-63e7-4d63-a754-225e6b42a024",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb24ba1-2092-4a76-ab90-e82b219492c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd51030-5370-4ca1-bf61-3327b82d3b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717efb88-a6c7-4504-83cb-6154bcdf35c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722ef396-cf38-4235-a3bc-6de788c843dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df78d93-0abf-4363-b040-6b1276fd5e34",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a1ae1f-63c5-4ff9-8a5c-005806dbea25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ebd5d4-be48-4b41-928d-85cbd419ceb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cb2ea7-03c9-49a4-aeaa-8f52b621f6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535813d3-c25b-40f1-b4ff-519d5608ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62403e5a-97fe-4054-b1c3-7a95998231d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec48983-2f05-4aad-9446-dbe94cadc8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6ae61c-d81f-4bcb-ac0e-b319ef8a7ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fc3862-0d76-47f4-983e-d17a1036c2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d3b93d-481c-4900-a9d4-b585ed07d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e584c13a-0eff-4c1a-a638-b47d5e443d84",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7052e374-83c1-41a2-939a-644eb139402e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4314a9bb-d860-42b3-b420-f7532fd905eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7226f8d8-31d0-4cdd-9b9a-0c757ecf2546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bd273a-658d-43b7-a44e-89303fcc24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec27d89-10ed-41c4-86a6-edf3872965e3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0bd37b-d7a8-4d24-8cd4-cab894ae5194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3330cda7-c5eb-4cf4-94fe-ae8048fade24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e6b3e-6d41-4e17-a98b-35e5b4d1d492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca40656b-32be-42ac-bbb6-729ba3d90cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5883b814-426a-41c7-bb70-18fc7251ea5e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7bb176-21d1-463f-8a9c-073006909afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e448e3-de9a-4970-aaf0-0df1445e635e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1990c69b-9a50-40bf-9371-725a5167be54",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797b96af-b22f-45b0-a357-d1fb846b79de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1161143f-49d2-4d2c-add7-e6de7f578c4a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae9679c-fb3b-4e39-85a1-428e19529148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfafec1-a38d-49c5-97b4-3d82038112e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef94707-da16-4c70-87b4-231e351ef77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f26b2a-057b-410e-8a83-14d4f0b960c1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "110c5f6d-9215-43f4-8524-5ddf5a1bfa44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b9153aa-32fd-40e6-82a8-48ee2611eb37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1d0d804-2e89-4695-b26d-cd840dda555c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e84da28d-2d4c-4bc6-a489-6a17a47a8625"
                    }
                  }
                ]
              },
              {
                "id": "5a297469-f041-4c1f-8d68-2e6c024ad888",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "780437db-2243-40b8-8bf4-9fb738b073ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6718a5-c43a-439d-a60e-28bcb38d082a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f810374f-2eb7-4d09-a67d-668f1cef35c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be7d7e-bfb3-4784-a1ef-57c181e620eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71e6a17f-8388-4ede-a469-ca09ae7ffcbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "894adf6c-a237-4c60-8679-90acbb066d16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30837c65-0c84-4514-87d0-e73a19623577"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e5b6b6-b5f4-4a2d-9f5e-9eeb15d77f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d69c6f99-902e-4d47-8f2c-070744a3ba3b"
                    }
                  }
                ]
              },
              {
                "id": "4f582e73-610b-435e-b0b2-064516ec4970",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8b6ad38c-da4c-4348-be27-100bd9cff587",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee012cb8-b73c-4ca6-a2de-61985a071745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "057e3022-1cea-4f19-aab3-7cafebe78aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4842f82-20dc-4ad6-b70a-94a3146cfe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243a8b52-8130-4103-b422-6d83defeae95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f6e0461-4735-41bf-9f5c-6e3ffe1dcfe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0104ae7e-3d33-41c7-ad61-d12f15e5a4c2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091f0178-8147-4107-9399-a3f9e22fd631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1771b9d6-fda8-420a-a11f-fa1f02c523d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf1bb673-5599-4c72-956e-b1a71c9e9127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0667f3e2-d73d-419e-9447-6a4ed76c2071"
                    }
                  }
                ]
              },
              {
                "id": "d2b28c8a-465d-442f-80ee-32fdb2e586e0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "040a933e-f3a2-417f-b180-98f8fe700af8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dc14ba0-439b-4c3b-a849-aa84e125cfae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11d5a921-b77f-46bc-bc22-b73e3f74ecff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4def8ad1-8a33-4897-8302-f2370b08cf8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1690639d-a333-44da-bca1-8b840da52131",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "efadf719-7944-4a3d-ac9e-c5d373932246"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00aa4431-230d-47e9-8209-bd495dff3e37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad07b0f-f9eb-4c02-9518-359e300d0e6e"
            }
          }
        ]
      },
      {
        "id": "f890374d-26f1-4f3b-aa4f-360caab3cab4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cc22951b-6353-4ae4-877e-f23a49560c72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "375846c6-80b0-47dd-83cb-f4dd505378a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b54667a-cb0e-4634-ae04-ee330fd40eea",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed0b35-b341-49ef-a212-1fd2d479457e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a7b6836-4e8b-41e1-a8b6-a708dfe469f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77fefcc-0e14-4b0b-a5ca-df26662fec24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c78c5ab-3e11-4763-a6a3-279eb22708fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67a98f37-0f4c-48cb-8719-31c1283820f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96d4f84d-298d-40fb-85b0-e0b368573fcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed32a759-a8fe-43db-9c71-a310f1d999a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5a754c9-2b58-4a76-9223-32add45ba0b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec237d71-cf40-49d9-8fc0-a86b39373b65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2dce15a7-22f5-4d2c-96f1-c4afe0760fa9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac447ab1-6b92-4b40-94da-7d7e11d5708c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "722a5caf-b512-402c-a3be-4743fe728723"
            }
          }
        ]
      },
      {
        "id": "718969f8-cf0f-4adf-9eab-a1b11fd8c362",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e31e30f1-39f1-432a-b19a-b0508c371718",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b357e4c1-2eac-4ad3-984f-2e9176ba06b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "def3275e-27ee-4b38-894d-c25a024b1093",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ea86b1-6f40-4261-90e4-889f8e11ad54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb918565-95e2-47a0-be01-d7a1689830ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f735dd0e-dc19-4264-9872-a6c40d3eaead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46805ebf-12a8-4bcb-8b1f-408ed041dc32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a88ce1a9-5f2d-4663-b1a4-547ea9419a3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936b974c-8e8d-4593-8d78-d1edd624fb41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52484e1a-86a0-448f-9b94-bb7576e732ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05e9823-6a59-4f29-944f-235514ff8851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f8dd012-f0b2-4586-b82f-9474205a2933",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6c93636-f4e1-46d6-8cc0-dd76096fb494"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15c9cd47-5e63-4e5b-857e-87e701d23990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b62b89a-aae7-499c-80a3-e2edfd26dbe6"
            }
          }
        ]
      },
      {
        "id": "a9264742-8408-482e-8ac8-128c6b645fe7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21767a65-7872-4386-b8a0-3118855826d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b691a140-94da-4e5e-b77e-14239055b474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "228122b0-7766-4bbf-8ad1-b00eac2e0ffe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a51bc7e-e3e1-4726-b173-f2062e2caeae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16c5d70b-a471-4724-b994-528903ff5592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ca54b-b98a-4b51-a82d-a04813d6b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07d3e55b-890e-4518-a9c5-c643756dbfa8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94b40c83-8e4a-47b8-b2a5-be7e8ab5c2bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d08cf5b-ce96-4076-8e4b-b43cfed0fbc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a6e508d-7855-4d20-a70c-95c777d52a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "666b4ceb-1fbe-4ee0-a3b2-ddd39b097d81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1da914e7-f46a-4fe5-8b1e-72b80187dcd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31cd2587-e4a1-426e-9b88-03b5acc8ed30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c5a5437-5ee7-49b6-afc2-9d86f6b06185",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef6e7d9f-3a4b-4d9c-a161-a88b394f5379"
            }
          }
        ]
      },
      {
        "id": "09d92998-ab3d-4615-98fa-16bf397ae7b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e7e30d9-5761-4b65-82e5-d8af74b6fc16",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9625d3cd-dd2a-4c5f-83bb-5abae185df3b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1401b8ad-6892-4e36-9c6a-077a33ce3726",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "797e2f41-6e21-4d3f-a8a1-0230201bbf0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c3c9df8-010f-479a-b2c1-7c3869e1003f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 164.1021126760563,
      "responseMin": 7,
      "responseMax": 5522,
      "responseSd": 468.35958121883255,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695861205234,
      "completed": 1695861265629
    },
    "executions": [
      {
        "id": "88920fbc-e237-4eff-86ea-cfd2a00566dd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a63259e-b9d8-4ab5-bc9c-c5e7e8828f58",
          "httpRequestId": "01aa2495-a6e2-4424-aca5-41e6381cd5bb"
        },
        "item": {
          "id": "88920fbc-e237-4eff-86ea-cfd2a00566dd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e93bccbd-697c-4e0d-a599-fbf8aaf7acd7",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "e3586cb8-6f88-441e-a153-86dbbb4ad9a1",
        "cursor": {
          "ref": "7c515adf-dbf3-4fad-932d-c7bba32738c6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c3102739-9611-4c72-aada-7a87bbcd2c34"
        },
        "item": {
          "id": "e3586cb8-6f88-441e-a153-86dbbb4ad9a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9f3bc991-371e-40e7-979e-c1a1db7681ca",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d2084e3e-e44a-4e1a-8fcb-deac0b60f700",
        "cursor": {
          "ref": "df3bae3c-a2ed-4002-8a3d-987ede4654b8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b4c28fe1-1c59-4035-a5f1-a1952be5241a"
        },
        "item": {
          "id": "d2084e3e-e44a-4e1a-8fcb-deac0b60f700",
          "name": "did_json"
        },
        "response": {
          "id": "07cd0d55-59c1-4b00-89a2-d31eefa2c13c",
          "status": "OK",
          "code": 200,
          "responseTime": 287,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817c875-d22d-436f-9250-818b66a45091",
        "cursor": {
          "ref": "cf573fdb-7bad-45c2-9b77-fa0279e6ce39",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82ae85a1-2560-48f0-bd15-af0a576262c3"
        },
        "item": {
          "id": "8817c875-d22d-436f-9250-818b66a45091",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0075ddc-e7e6-47bd-94a9-3cf1a0c9e660",
          "status": "Not Found",
          "code": 404,
          "responseTime": 960,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817c875-d22d-436f-9250-818b66a45091",
        "cursor": {
          "ref": "cf573fdb-7bad-45c2-9b77-fa0279e6ce39",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82ae85a1-2560-48f0-bd15-af0a576262c3"
        },
        "item": {
          "id": "8817c875-d22d-436f-9250-818b66a45091",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0075ddc-e7e6-47bd-94a9-3cf1a0c9e660",
          "status": "Not Found",
          "code": 404,
          "responseTime": 960,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34346be1-a48e-4a1d-9440-33dbf1a8384e",
        "cursor": {
          "ref": "57fb2c16-1754-4e9a-8149-3b909cac6817",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8de82f00-b7bc-4d17-b13c-6bf71e3620e7"
        },
        "item": {
          "id": "34346be1-a48e-4a1d-9440-33dbf1a8384e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "002d55e9-6c7e-437e-85fa-e1234b5278f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 545,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6c8af6-330b-4695-b026-b5a8e5fd50d0",
        "cursor": {
          "ref": "222764e7-8253-412d-bf51-3b5da1fbd90b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4268097-fe50-4ca2-90a3-00ba73d914d5"
        },
        "item": {
          "id": "be6c8af6-330b-4695-b026-b5a8e5fd50d0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9886468b-4823-4661-b7c3-222f9ed7dcb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 763,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722da2c2-8486-458d-a9ae-a37a3fccb892",
        "cursor": {
          "ref": "e95f46a0-7604-40c0-9e47-d1118f7f43cd",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "301aa3e3-93b5-4a20-b005-112ee9e9a7eb"
        },
        "item": {
          "id": "722da2c2-8486-458d-a9ae-a37a3fccb892",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e65dd682-ef73-4bc8-8b7b-cc1fad6758c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 560,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f5343c-e9cf-4ce6-a8b1-c8bb96e31bdf",
        "cursor": {
          "ref": "4e9f355f-3e43-4aa0-a5ce-71287e28b87f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "137316c1-1327-4637-bcb8-ee620bef5c52"
        },
        "item": {
          "id": "72f5343c-e9cf-4ce6-a8b1-c8bb96e31bdf",
          "name": "identifiers"
        },
        "response": {
          "id": "ad63706d-e137-4844-8f49-69b010a7e517",
          "status": "OK",
          "code": 200,
          "responseTime": 913,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d13990-ebe2-4930-9fff-0ee8c120e781",
        "cursor": {
          "ref": "9eed652f-db03-47fe-baa2-e52b8b555b3a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4ddee99c-94e8-4e97-a27f-9a0a00962fbb"
        },
        "item": {
          "id": "04d13990-ebe2-4930-9fff-0ee8c120e781",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7997008f-4f55-4236-8bfb-b017a86924dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39cb28c-c3b6-4b23-ba7c-82fc28a4d2e5",
        "cursor": {
          "ref": "198c002d-c925-440c-b394-d1162e149a1e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9a27642-ea1b-43c4-aaa9-3ddda9afc652"
        },
        "item": {
          "id": "f39cb28c-c3b6-4b23-ba7c-82fc28a4d2e5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e823221f-4f03-4218-ba2b-da31c1becbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee78a10-df14-4ef8-ad31-d59a3ecb9f17",
        "cursor": {
          "ref": "8b6b844b-4efe-4644-a2eb-3352c78d114d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ce8d6b19-f78e-4fea-85d2-22ccbe2aa83c"
        },
        "item": {
          "id": "3ee78a10-df14-4ef8-ad31-d59a3ecb9f17",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "78c238f0-f58f-40c8-bdb1-1150d1b9d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d11ae31-c029-4cf8-ae1c-f92515bad741",
        "cursor": {
          "ref": "bb5ffcbb-7f98-4081-a0d1-14deec1067ed",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ad03c10b-fc84-4420-90fc-da615c644eb5"
        },
        "item": {
          "id": "3d11ae31-c029-4cf8-ae1c-f92515bad741",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0178d9c0-983a-4e85-a071-333b0f77fd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b274270-8499-4bc2-925d-e0a82d0b49d0",
        "cursor": {
          "ref": "45573943-3055-49a2-ae59-613afc3c29af",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "40a32671-d85b-4da8-b551-cec4565107a2"
        },
        "item": {
          "id": "0b274270-8499-4bc2-925d-e0a82d0b49d0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3520b751-48cf-4f9e-8f22-2e4eaca6b505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf92178-2491-4a42-8381-da0ad9151e69",
        "cursor": {
          "ref": "747ff6db-4baf-4280-969b-a95eb9eba3d0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b569bd6c-8228-4302-99f8-8c0291125b7b"
        },
        "item": {
          "id": "5bf92178-2491-4a42-8381-da0ad9151e69",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "86b0a64a-bed5-4ed0-8550-74016acc9071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db2c960-c7f5-4952-be69-c9d64661b33e",
        "cursor": {
          "ref": "d780b59d-053f-4f27-aea4-b7891f38ba62",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eaf2ce81-b11f-44c6-aa40-d00a6b9148c0"
        },
        "item": {
          "id": "5db2c960-c7f5-4952-be69-c9d64661b33e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19a2d2e1-5936-43ed-8279-89f4d62025c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24ee6fc-99da-4517-8f50-5303702fc2e7",
        "cursor": {
          "ref": "b41cdeb4-d33b-421c-a579-a5faa9ce33de",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9456ff7-40cd-40ce-bf13-6f13fc2d550e"
        },
        "item": {
          "id": "e24ee6fc-99da-4517-8f50-5303702fc2e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e60f7f39-2be3-4991-914d-21ae291577e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a5aff4-3802-4404-a4c0-0838dfdc4485",
        "cursor": {
          "ref": "ab154eb5-089c-4812-91a4-da7de5f8d878",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ab12ee95-f3fc-4cba-92e0-d549b46d1b40"
        },
        "item": {
          "id": "14a5aff4-3802-4404-a4c0-0838dfdc4485",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca60d1ab-edb9-4068-9d5c-106c2e0b26c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eeedc48-2ba9-4f5c-837c-80d3e87dd839",
        "cursor": {
          "ref": "cc27166b-9937-4c90-9b5b-4a085ed271c6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "802f485f-3b52-4afd-bb64-7fbd3c1ec4d8"
        },
        "item": {
          "id": "2eeedc48-2ba9-4f5c-837c-80d3e87dd839",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c96b4e2-7aa6-4bf4-a7cb-e807a9626389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c61003-8b99-49a6-a489-47cfe0b32825",
        "cursor": {
          "ref": "f451b084-93fa-4b63-8810-fdbe339e01b9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "60ff3e17-9841-4dad-83b8-a382cc75600f"
        },
        "item": {
          "id": "19c61003-8b99-49a6-a489-47cfe0b32825",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "155e280b-e1e7-48b8-b07a-bf70ee12a575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ddf281-c16e-45c9-a123-16f86d9c026d",
        "cursor": {
          "ref": "b6ee2952-91e2-4c2d-aef7-8f895d9063ca",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20db2a46-134a-4ddc-85bd-180ca7330d0e"
        },
        "item": {
          "id": "02ddf281-c16e-45c9-a123-16f86d9c026d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18918352-d101-4d80-a7b5-47e0c19d3bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed9035f-cb27-4f3d-8014-0232821b4ea6",
        "cursor": {
          "ref": "c096f82a-09c0-49b4-8fc0-11d62f679c87",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4e008549-e741-4362-85a2-0001f1b886db"
        },
        "item": {
          "id": "3ed9035f-cb27-4f3d-8014-0232821b4ea6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "30d41068-d27f-4c4b-a1eb-c218a21f6720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63e1fa-2ea6-4049-8eb2-934479d7de18",
        "cursor": {
          "ref": "4d9b0a7f-6bf5-4bd3-987c-73842bd4f2ce",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11ca9c18-d37a-4b09-adf7-74cd61fd7aa3"
        },
        "item": {
          "id": "3f63e1fa-2ea6-4049-8eb2-934479d7de18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26121c2f-cf39-42fa-9c1e-653c3210a19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542ceb1-500c-4b81-ae8f-163d67b06ef3",
        "cursor": {
          "ref": "d6f48fc9-a209-431a-8c47-1b3ae20266fc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de9ee39b-a7ea-46d9-a13c-5c6a49abdb4a"
        },
        "item": {
          "id": "3542ceb1-500c-4b81-ae8f-163d67b06ef3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3c5c8a57-c7c2-4235-8fca-f11901e4ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a3860d-5892-434a-86cd-b051bd2390ab",
        "cursor": {
          "ref": "accb3f51-2516-4bc2-aed1-fa8b9e16c9a6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1de4fd91-d3ce-4d29-af94-1a7b4d774cfc"
        },
        "item": {
          "id": "53a3860d-5892-434a-86cd-b051bd2390ab",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5bdffb40-07a3-4e43-b9e0-93292187c444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5cf5c-2441-410c-b009-8ba87ca4812c",
        "cursor": {
          "ref": "d1be5a89-a9a8-465c-bb96-0a4624b2ea52",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "494fd362-ab44-4986-879d-e46102ea5f76"
        },
        "item": {
          "id": "abd5cf5c-2441-410c-b009-8ba87ca4812c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5f88bc1-486d-42c2-80ec-1316ddbeae18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29203f7d-755a-47cd-a28b-216ae8e560fa",
        "cursor": {
          "ref": "edcec2b0-e7be-4220-bd4a-b124444f879a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f7f1d752-1d37-4358-85e8-b982da43ed99"
        },
        "item": {
          "id": "29203f7d-755a-47cd-a28b-216ae8e560fa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b574a489-1acb-4c4b-942a-5882eac35fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc5722-3a13-4fc7-a054-e7450e7b2335",
        "cursor": {
          "ref": "c8b81351-6bb0-45cf-bdc6-86994bf263ce",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aab697be-c26b-4edc-ac70-c326ffd45724"
        },
        "item": {
          "id": "94bc5722-3a13-4fc7-a054-e7450e7b2335",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e5276e4b-747c-4441-89fc-58f879bc564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452c06d-9ad5-40a2-aec2-efe56d820ae9",
        "cursor": {
          "ref": "18ec591a-c2ef-42bc-b1d3-63d7cc8dc1e0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a28c7415-6514-4213-a8a1-55fd7d6cb2d8"
        },
        "item": {
          "id": "7452c06d-9ad5-40a2-aec2-efe56d820ae9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d7159189-c320-43fe-a6b9-f79ff28224b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b738636-faf1-45f5-a8c6-27f22405ee66",
        "cursor": {
          "ref": "87e4c756-7b67-44f3-8daa-4adf4d5de8b5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "24bce67b-fa5d-4dd9-81ad-a60136ef4d39"
        },
        "item": {
          "id": "3b738636-faf1-45f5-a8c6-27f22405ee66",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e9bf3c22-1607-4ebf-ba78-e71332744a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf5394f-5334-4ae2-b357-d4ec5120d9c5",
        "cursor": {
          "ref": "c4ac5ff0-6e1a-42ea-801d-197bfa0c58c7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8552b63f-5c30-40d7-9c80-e2d17d83eef9"
        },
        "item": {
          "id": "ecf5394f-5334-4ae2-b357-d4ec5120d9c5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d2da60ef-b40e-4035-aec3-fefffc4b3054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9ea21c-d5c7-4cba-af5c-164675cb2386",
        "cursor": {
          "ref": "99ea305c-c3d0-4e9f-8874-34df9b7a3c53",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f5a331ca-cc2d-4d6e-bcb1-2860e079b93b"
        },
        "item": {
          "id": "8e9ea21c-d5c7-4cba-af5c-164675cb2386",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b50224ff-52fc-467e-95cb-c71f38052798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe316f56-237c-4783-8dc6-23912b10941c",
        "cursor": {
          "ref": "19e8842f-ef7a-4688-bde3-a2ca3b28e606",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e9bcdd39-5ae7-44f3-bd25-66c1ebce96ea"
        },
        "item": {
          "id": "fe316f56-237c-4783-8dc6-23912b10941c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "493f2a7c-a863-4379-9a9f-537a7af293a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291a87ff-8359-42d1-8515-8d46eaa86379",
        "cursor": {
          "ref": "deb8f402-de0e-40e5-8b1a-b537dcc8a533",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b0f9b1e1-bd9a-45f3-9edf-d8e69d93f7e2"
        },
        "item": {
          "id": "291a87ff-8359-42d1-8515-8d46eaa86379",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3f1db2e0-075a-4996-8018-940238998df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb41436-83ba-4a8a-89e0-7f63f076fa91",
        "cursor": {
          "ref": "08c30890-1dd1-4d1d-8740-537e738e16ba",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f6940a62-5f02-4aa4-b086-31830fd1ce26"
        },
        "item": {
          "id": "dfb41436-83ba-4a8a-89e0-7f63f076fa91",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1a03604d-7cf2-4e37-88a2-80ecdf7aa7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb588a2-8677-4d4a-b1f8-598067f7701e",
        "cursor": {
          "ref": "b971d281-37b2-43f9-8e90-918b11909043",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7609d909-d32a-4965-b4d6-5574a1fd52ff"
        },
        "item": {
          "id": "4bb588a2-8677-4d4a-b1f8-598067f7701e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "393e1969-f1e6-45f5-a60c-cdd1fbcf98b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fa7347-7db8-44f5-af72-7821ebe908c1",
        "cursor": {
          "ref": "24f25ff0-7d74-403b-a124-abc28a3756bd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4302aba-2b50-47ac-8965-e8f725559842"
        },
        "item": {
          "id": "94fa7347-7db8-44f5-af72-7821ebe908c1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "11619f5f-c865-40ec-9c4a-1eec34217041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfdd1f1-6473-49f5-b73c-db0fe68c1bec",
        "cursor": {
          "ref": "44cac742-8e8c-44de-99e3-1679af191843",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "71185993-8aa9-4888-9469-105d45c96521"
        },
        "item": {
          "id": "bcfdd1f1-6473-49f5-b73c-db0fe68c1bec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "415b5329-3f2c-4507-81c1-e3b7e1846dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cc3b2b-bf4a-40f7-b470-c7797e0b0dfb",
        "cursor": {
          "ref": "f7631263-d53f-4ca1-937f-fe0cd7723d3a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ce5511df-a02d-4bab-8dfc-30955d8aeadb"
        },
        "item": {
          "id": "87cc3b2b-bf4a-40f7-b470-c7797e0b0dfb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10f5d804-61b2-4978-b4d1-8006685201b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9afce6-032a-41e9-899f-78863a1d6072",
        "cursor": {
          "ref": "ccbd0322-a81d-4308-8809-a1f69158a1a1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6a388f98-ccad-402a-9da9-87fa98ec59ca"
        },
        "item": {
          "id": "ff9afce6-032a-41e9-899f-78863a1d6072",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6378a2ce-2e0d-4e15-97f9-e5daaf41fd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b47a8c6-e295-46aa-98c6-349ce7ecfe56",
        "cursor": {
          "ref": "c81c3825-b70f-4a1c-88f2-4d632d195baa",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b754af18-7926-468c-8086-78298ad0c16c"
        },
        "item": {
          "id": "6b47a8c6-e295-46aa-98c6-349ce7ecfe56",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ebd16291-f81e-4d8a-904b-5203ac2f2550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bf1f36-f1e3-4a8d-abe3-c3e92dca9ae9",
        "cursor": {
          "ref": "9ac8a00b-6a81-4bb8-bc02-32229792cd3e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fcfa288e-23ed-4f15-b5bf-61b2ddad6539"
        },
        "item": {
          "id": "80bf1f36-f1e3-4a8d-abe3-c3e92dca9ae9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5293323c-f5b7-49e9-903b-21f9c9f83d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75729bd-9613-4d69-a4d7-337c05155133",
        "cursor": {
          "ref": "178d88d2-6eb1-4e12-a16a-86cba506ee6b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7a984e6b-1979-42eb-8ec9-64db82c483ae"
        },
        "item": {
          "id": "b75729bd-9613-4d69-a4d7-337c05155133",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7e7e430b-ad3b-4313-b52f-12b433530eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cb9dc0-6c94-446c-afd2-6b3563b990ff",
        "cursor": {
          "ref": "c4ab00e2-9144-45af-a23e-0a9f9412827a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8966314f-954f-4a71-805d-0e8561735346"
        },
        "item": {
          "id": "f3cb9dc0-6c94-446c-afd2-6b3563b990ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "565bc8e1-ea0e-4cdf-8b0c-587ea764d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b515793-ae49-44e7-8d8e-1f842231873c",
        "cursor": {
          "ref": "679ffbdd-129f-4b87-a8f8-5fef34837e30",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ab39b06d-f872-4691-b03a-e87e7ac17c1b"
        },
        "item": {
          "id": "8b515793-ae49-44e7-8d8e-1f842231873c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cea3db47-83cd-432b-b288-eabed2bfaa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d7d57b-dc0d-47f2-97f4-8dc6f5ac220b",
        "cursor": {
          "ref": "1c845f19-43de-4aa9-89e3-ef7fc55f41ae",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5720ad13-46f5-4726-8b96-69a0f0b9bbaa"
        },
        "item": {
          "id": "48d7d57b-dc0d-47f2-97f4-8dc6f5ac220b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "65c4b344-4c5b-4df3-8876-27e581bd8d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68996ff2-189c-414e-b166-b300b19b6759",
        "cursor": {
          "ref": "09735d3f-52c7-4363-b560-37a174292a3d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3deca721-c940-42e1-b5e8-a01fd12c9bcb"
        },
        "item": {
          "id": "68996ff2-189c-414e-b166-b300b19b6759",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "67531c6a-d867-47e8-9e28-cf6ed801ad81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5772cd-9e9c-401d-9cb2-7f912949f087",
        "cursor": {
          "ref": "2e82f3f0-90d6-410e-a1b3-9d29670f1122",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0571eb8a-cdc0-4b73-ac27-96b55e776b88"
        },
        "item": {
          "id": "5f5772cd-9e9c-401d-9cb2-7f912949f087",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "314f90c3-c957-4c72-aead-7bd7e0940be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ef9e2-0f34-4634-b4c5-287f7dc46b7f",
        "cursor": {
          "ref": "1f0142c0-cb36-4663-8731-ba74a5e5af53",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b6f9dda7-05a5-4a98-8a7c-dd5ebcde36cf"
        },
        "item": {
          "id": "1a6ef9e2-0f34-4634-b4c5-287f7dc46b7f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2f106ce3-dd5b-41ff-941a-13adb6917fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733059d2-3183-4c7e-b5f6-f63e97c8dcf7",
        "cursor": {
          "ref": "a8c15cb7-1447-4a19-a8c3-e11ceb058968",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f840e14-7904-4da3-a6ff-185b4d57224f"
        },
        "item": {
          "id": "733059d2-3183-4c7e-b5f6-f63e97c8dcf7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "74c811c4-8d4d-4b66-bf68-21ad63a95cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68889deb-d34b-44c9-8177-d082e994e92a",
        "cursor": {
          "ref": "40bad79d-88f4-4ce8-9b61-bad1b90a74b8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b18be671-ab36-444f-86cc-a229fc1310c1"
        },
        "item": {
          "id": "68889deb-d34b-44c9-8177-d082e994e92a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "df5d971b-0358-4188-bff8-e942e6935001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bef138-5dc0-4442-9e22-ef924cfad68d",
        "cursor": {
          "ref": "0222ecd1-c899-4f45-ad99-79df138325c8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d6f5a5ec-d31e-43f9-8b8b-1ac432e2b223"
        },
        "item": {
          "id": "10bef138-5dc0-4442-9e22-ef924cfad68d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5cb1323d-1c62-4663-bcbc-337c2ceffaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b5123c-f2be-4285-918b-5b45216251f1",
        "cursor": {
          "ref": "ce4f44c2-7249-4837-9ec3-09ef7c88c540",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a9df8d28-c2c0-4790-996f-d34053574313"
        },
        "item": {
          "id": "a6b5123c-f2be-4285-918b-5b45216251f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "58817b28-fbe9-4014-8a13-996b87a2d93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc77110-2587-4b5f-ba2d-5c36123ab76b",
        "cursor": {
          "ref": "67053e3e-1821-432a-9dfd-6f8448b75a82",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ca5e4a2-cfb4-42b6-82bc-ac32ce189634"
        },
        "item": {
          "id": "bdc77110-2587-4b5f-ba2d-5c36123ab76b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ef4385d6-3fa0-4879-954f-33152128c827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217043d4-ecdc-43c3-b678-3ce97eea3879",
        "cursor": {
          "ref": "bd2bcb86-4553-4aa6-b2c4-162454198855",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8c1adc57-6df5-4f2e-bcfc-bbffe7c1636a"
        },
        "item": {
          "id": "217043d4-ecdc-43c3-b678-3ce97eea3879",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cdd51220-e92f-4c6d-b67d-0759a941b21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c30de4-6464-4351-863d-6f15837fb673",
        "cursor": {
          "ref": "2be04979-6646-4bb9-8667-76835b664a8b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8d45a81-a963-4cdb-ac37-c0f62a957d37"
        },
        "item": {
          "id": "e0c30de4-6464-4351-863d-6f15837fb673",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fd7413c1-fe15-48e5-8aba-d8c3d2a42bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d5bdc8-a4f1-4a75-b03b-30dbe729f503",
        "cursor": {
          "ref": "de00d9f9-5c17-4278-82a8-a2fee02b65d8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d257d37-9d60-4186-aa34-754103fcbf94"
        },
        "item": {
          "id": "d9d5bdc8-a4f1-4a75-b03b-30dbe729f503",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c93ee863-7c64-4ceb-8fa4-ece73d49c345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a700fc92-2dbe-40db-9aa0-de5e4953a6c5",
        "cursor": {
          "ref": "5a13b69f-4b6e-4911-95e6-82ee3ba60a52",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31112356-94a5-4bb2-ae5b-b62a53303f11"
        },
        "item": {
          "id": "a700fc92-2dbe-40db-9aa0-de5e4953a6c5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc2ced86-aecb-4bac-9bbc-2db935c04d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0792f2-7485-4bdb-91f9-9b6ad0cda67c",
        "cursor": {
          "ref": "109a1afb-49e3-44a1-9bb9-74e8becc856e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "604394a7-2f1f-4066-9bda-4ff558fc0863"
        },
        "item": {
          "id": "6a0792f2-7485-4bdb-91f9-9b6ad0cda67c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47b9000d-6638-4f32-a5be-a61ad30f8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65cdd40-0d7c-464b-9874-ffc829be51f0",
        "cursor": {
          "ref": "fe0722bd-632f-43f8-bcb2-6d9a328af2a2",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "12772e68-4ddb-4796-9ffa-24b5cef4cee4"
        },
        "item": {
          "id": "b65cdd40-0d7c-464b-9874-ffc829be51f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "527d745f-000e-47e4-bc46-67b0d64c1e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b4ca2d-77ae-429f-9b7e-b30778f61c00",
        "cursor": {
          "ref": "16b09618-11da-4176-b009-9c0ab6ddf940",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "294f911c-cb26-4ee9-8982-dfa907bab8b0"
        },
        "item": {
          "id": "26b4ca2d-77ae-429f-9b7e-b30778f61c00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "000d2b09-fff4-451f-b181-be8125abd736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576cadd6-2e55-4d6d-ab1b-6b524c1389cb",
        "cursor": {
          "ref": "8d909c78-9b7d-4233-beb8-ddc2e3cf48b8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "058481ae-717d-4d6e-b01f-cd00580eb4fe"
        },
        "item": {
          "id": "576cadd6-2e55-4d6d-ab1b-6b524c1389cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e39388b6-b336-4c2f-b432-fba0b2cb0ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9c84e-61f3-424a-8d1e-b78f54da7c79",
        "cursor": {
          "ref": "0cf6e8cb-4af5-45d6-8286-bdcb61a854d0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "264fb389-f23b-4972-a236-9a1e0b3dc968"
        },
        "item": {
          "id": "85e9c84e-61f3-424a-8d1e-b78f54da7c79",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3323694-7000-46b0-a4f0-864390d4c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c85b79-ebfb-4467-a06d-d7992512a317",
        "cursor": {
          "ref": "318e609d-d271-4117-9bde-2e4581012ef9",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b0a8a2b4-a1c1-4628-b363-614206d58e97"
        },
        "item": {
          "id": "68c85b79-ebfb-4467-a06d-d7992512a317",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "39b05e0b-52f1-44bd-a36a-e0ae1a46cb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1596,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027a3adf-72b3-4cac-8d56-0a2669397256",
        "cursor": {
          "ref": "16fcd42c-81ac-4610-be2a-234d31ed53fb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9808a187-5f00-4442-aa63-ee844987d1f1"
        },
        "item": {
          "id": "027a3adf-72b3-4cac-8d56-0a2669397256",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7a5a4df3-e436-4e13-8a8c-3c9dc9c1d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baad766-bd2a-45b1-b9ee-97b9fcdcf2c1",
        "cursor": {
          "ref": "49ed4f82-fc5d-4838-823a-b3cef7781de6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ea2ea09f-48ad-40f3-b60f-27ac8f86c611"
        },
        "item": {
          "id": "5baad766-bd2a-45b1-b9ee-97b9fcdcf2c1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e5372832-939c-443b-9009-5f28dfa52d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648be68b-b1ee-444e-ae7b-c010284e379b",
        "cursor": {
          "ref": "3b862095-5812-4153-accb-7ebbb213a1c9",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67d2f0ff-00af-4f8e-a86e-f1f9cb258201"
        },
        "item": {
          "id": "648be68b-b1ee-444e-ae7b-c010284e379b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2109989-a73c-49e8-b996-83d8f9acdf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54bfa70-5a34-43be-b988-64d7f40f4503",
        "cursor": {
          "ref": "9c6207a6-9905-405c-9332-c8db6b191633",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "46fd3dfd-a892-4112-92e8-c1a04cb59aee"
        },
        "item": {
          "id": "c54bfa70-5a34-43be-b988-64d7f40f4503",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "87b690b9-808a-4935-87da-37d076ab0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c1725c-fd07-44ed-a8dc-767c1093e3ec",
        "cursor": {
          "ref": "85509581-ff20-4460-b8c9-5a689924b34f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a6ede926-4f0e-47f9-93a8-7a4fa45b4ebd"
        },
        "item": {
          "id": "30c1725c-fd07-44ed-a8dc-767c1093e3ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e7232e98-dc13-402f-b7e3-795121b94233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c14165-1aa1-4e02-aca6-33081a44c465",
        "cursor": {
          "ref": "bc6b243f-6b75-43c1-92be-7061945a79da",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b34541a-a909-4065-a129-2ed2c868d0cb"
        },
        "item": {
          "id": "d3c14165-1aa1-4e02-aca6-33081a44c465",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a42d0d1-ab97-4a32-80b2-8fe8099816b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309f7bf-ba96-4f6f-b066-46793196c5c9",
        "cursor": {
          "ref": "3ac3065b-417a-4ad6-915c-09a4a893a7a2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "92a970d7-2cbd-4ae1-994c-8265770f969b"
        },
        "item": {
          "id": "e309f7bf-ba96-4f6f-b066-46793196c5c9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3277ad87-87ec-476a-8ab3-d7908f2b1f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22664a02-a499-4075-8fde-d4fb40deb870",
        "cursor": {
          "ref": "64fff0dc-3a82-4f72-919c-0b134bfaf22b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "850fe4ca-7741-4c03-873a-d379e94f07cb"
        },
        "item": {
          "id": "22664a02-a499-4075-8fde-d4fb40deb870",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cca18dfb-e300-4023-ae63-7c41de8c5687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09783bd-1838-46a3-806f-b1bd76e39e6a",
        "cursor": {
          "ref": "a4dd5515-a33e-4f04-86d9-58aee22aabdc",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a52e664c-4231-4274-b46b-8ac11e071593"
        },
        "item": {
          "id": "e09783bd-1838-46a3-806f-b1bd76e39e6a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "984408b7-282e-4463-b54f-8c2e16c840aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b4379b-796a-4c8c-94b0-ead1117d5cea",
        "cursor": {
          "ref": "af8684ce-4dfd-4a38-9686-d1e5154462a0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b750e1b6-2339-4f9c-bef4-0eaaf94bc205"
        },
        "item": {
          "id": "01b4379b-796a-4c8c-94b0-ead1117d5cea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d31ec399-5fc6-41e8-8722-9bee34acd4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a47d8c-37a6-4c7c-9aa6-b5f2c6d3a2e9",
        "cursor": {
          "ref": "945fa074-6ead-46ae-9148-3554e4012916",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cab92a3d-ee95-48d2-855b-036d5e781fb8"
        },
        "item": {
          "id": "f4a47d8c-37a6-4c7c-9aa6-b5f2c6d3a2e9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6b575d95-1564-4788-8637-4685cb8950e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ce55d4-9be1-4df6-b8c0-77cbc455b00b",
        "cursor": {
          "ref": "79d0a44b-4112-4c2c-91b2-b14ce71572ce",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7b2c6dbf-fa38-4abb-b5ea-1d4f5eb37791"
        },
        "item": {
          "id": "47ce55d4-9be1-4df6-b8c0-77cbc455b00b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73485531-0b4f-475e-ae1e-de13dc6b3692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16552e51-d0e6-4403-99a9-66da289574b4",
        "cursor": {
          "ref": "758359b5-dc10-407b-ac1d-fad3fc48a027",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9df4044a-8245-4315-ad6b-1596c815a3cb"
        },
        "item": {
          "id": "16552e51-d0e6-4403-99a9-66da289574b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "730648f1-8140-4861-b939-3dedd3207e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6941937-472e-41be-b607-3430999b9b7f",
        "cursor": {
          "ref": "0edc08ea-5ab9-476b-ae47-75f74849f522",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7dc4d22e-8063-4f3e-b2ba-350d943a0c30"
        },
        "item": {
          "id": "b6941937-472e-41be-b607-3430999b9b7f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1cea7c59-a4a4-4d28-8248-fdd5903dac52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a801eab-bc60-4704-8bca-200733c9cce9",
        "cursor": {
          "ref": "514d7a0a-7827-4fbf-be29-99272a1c7b2f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fc726451-b089-42ff-b5f4-52651808bbd2"
        },
        "item": {
          "id": "8a801eab-bc60-4704-8bca-200733c9cce9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c775289f-46c6-483e-91d8-fe9275491f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cd48ff-966a-4263-92aa-6f613a9dd816",
        "cursor": {
          "ref": "4e01b263-da5d-4430-906c-78e8a57575de",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8a426ac0-d268-4bbb-b533-8ff646fc7128"
        },
        "item": {
          "id": "f7cd48ff-966a-4263-92aa-6f613a9dd816",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "44c2eec2-851d-4d8d-b7b0-32a212ced694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0466c28-1a37-4d5c-800e-0b695b0dda68",
        "cursor": {
          "ref": "15cc5259-c1b2-44ff-a4f0-50d3a49a809b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0b6c2a1f-65d2-4e76-bae5-ff98f9a87376"
        },
        "item": {
          "id": "b0466c28-1a37-4d5c-800e-0b695b0dda68",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fceb8161-1adb-4310-b0bb-70a3cdb92364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15154d7-6605-4aad-88b4-0bb09ae3c337",
        "cursor": {
          "ref": "b6716274-6808-42e3-a219-0f59cf5b6118",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1db8a64f-6158-4174-90cd-54781f33daa4"
        },
        "item": {
          "id": "c15154d7-6605-4aad-88b4-0bb09ae3c337",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3a4ca658-2a9b-4b2f-9e1d-0ae02cade96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd9ea45-9eb2-4fba-b4a1-146a472133ee",
        "cursor": {
          "ref": "eb206037-5c9b-498e-9ea1-ec31b55e2f0d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e97d610c-b0c3-44b3-9b95-106697d142b4"
        },
        "item": {
          "id": "cfd9ea45-9eb2-4fba-b4a1-146a472133ee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b8da5151-3c93-4eef-a546-0f9ccd6f1c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4315ce6a-8ca9-46b6-a455-56a68087c287",
        "cursor": {
          "ref": "19e65285-0505-4248-9d3e-cdf03c94ffd3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f3646024-87dc-4abd-a5a9-d26474d0129b"
        },
        "item": {
          "id": "4315ce6a-8ca9-46b6-a455-56a68087c287",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87051af5-55fb-4adc-a686-526a49706f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ddea69-31a7-4504-aa93-020225a45233",
        "cursor": {
          "ref": "b7e61b9c-a698-4e08-a186-e1215f5f2350",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6f4bb64a-50f3-4de8-b9c3-baf75b101aad"
        },
        "item": {
          "id": "03ddea69-31a7-4504-aa93-020225a45233",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b0765e3c-d576-4970-9d91-720f35e93d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9df48f-3d96-4d43-b209-a3ac5b2bf68d",
        "cursor": {
          "ref": "d6fb53c2-e884-4977-aea2-c52e404b7179",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66a2dd25-4f91-47c8-b928-ee0b16e88c2b"
        },
        "item": {
          "id": "1c9df48f-3d96-4d43-b209-a3ac5b2bf68d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "61805951-5184-4aa6-9bc7-5b7eed491de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575b4c69-ccbf-4f2d-9b80-34a83977edf6",
        "cursor": {
          "ref": "ffd1bee5-9a50-4037-98a1-0690b3a6b1d6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e4a24d90-d4b6-4ebf-8ebe-420244dc7ba4"
        },
        "item": {
          "id": "575b4c69-ccbf-4f2d-9b80-34a83977edf6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52bcf0f0-2fce-484d-86b9-ed526647cb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef205862-293a-405a-bab5-7bf54b4f8e22",
        "cursor": {
          "ref": "6524e133-c981-4c98-a555-664c182ee491",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cbb5e685-85d1-4d31-9572-5fcf1c261f43"
        },
        "item": {
          "id": "ef205862-293a-405a-bab5-7bf54b4f8e22",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "38823534-45e6-47e4-a159-0680cdd0c15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f85c71e-492c-4a52-84b4-933dce9118da",
        "cursor": {
          "ref": "99bcda4d-1627-4ed2-b6c4-e3fa364b2611",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "040d920b-249f-4d73-8b45-6e1169a64717"
        },
        "item": {
          "id": "9f85c71e-492c-4a52-84b4-933dce9118da",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "411fb737-3a6c-4777-aa85-d9e71eceb84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d67991-c277-4f61-af5d-94b6edb39e09",
        "cursor": {
          "ref": "e2ce6c1c-5eba-46e9-a9c6-6a9715aba529",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b3473a23-8eee-40f4-a745-50aba19e6cbd"
        },
        "item": {
          "id": "f3d67991-c277-4f61-af5d-94b6edb39e09",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "399fbd89-deec-41c0-986a-c769c4ecef2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593644d7-a522-4d14-9b37-ba5d62107408",
        "cursor": {
          "ref": "f9b5d337-6c77-4dc4-8135-379bb4d9cde0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be334f57-93fd-415b-a590-d3f5671f4082"
        },
        "item": {
          "id": "593644d7-a522-4d14-9b37-ba5d62107408",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c10798f5-d302-4911-a47b-63502d78756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb622b3-1415-4ff4-9865-cc7c702e4748",
        "cursor": {
          "ref": "15021f8a-19b1-469a-b5b4-48ff405dbf92",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b8716541-9b98-4de9-9e15-ae2978528497"
        },
        "item": {
          "id": "1bb622b3-1415-4ff4-9865-cc7c702e4748",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ac8045b3-49d9-427c-93c7-5f0f3e278375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5935f22-5015-45f6-b6f8-24314af340b0",
        "cursor": {
          "ref": "2645c9be-1816-434f-be9c-ab8a0a88121f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "671fafc0-1674-4f49-bd13-e9936e89b019"
        },
        "item": {
          "id": "b5935f22-5015-45f6-b6f8-24314af340b0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d6c90d41-da20-4348-b181-2fb1603c20c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e065a746-29be-4ab6-9074-af1a54af34c5",
        "cursor": {
          "ref": "04e79d8f-ee57-4ca1-985e-27d74fa155fe",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ad19d280-479e-4b7c-a528-5525389b5f56"
        },
        "item": {
          "id": "e065a746-29be-4ab6-9074-af1a54af34c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "18ec2f92-5811-4cc4-be7b-6bbcf0cd7b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd59a2-9c91-4be8-bf62-64aa7d86efea",
        "cursor": {
          "ref": "ad099bbd-843b-4370-a0b5-8e7756e36ebd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "07ce4e7d-3906-4df6-85a6-4b3593a3011f"
        },
        "item": {
          "id": "80bd59a2-9c91-4be8-bf62-64aa7d86efea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "037cd70e-5e8d-4144-836c-ef1007ce7f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df3ecdb-9c13-4d71-9e95-29e71584bb09",
        "cursor": {
          "ref": "b784943f-1b0c-4675-8c39-bbf9257b2f1d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c95cddc6-c5fb-48f3-95b2-ec203714bd20"
        },
        "item": {
          "id": "5df3ecdb-9c13-4d71-9e95-29e71584bb09",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8ec654df-198a-494f-89d2-e73dbd1865ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690c9759-c314-45a3-8149-00a4a5855900",
        "cursor": {
          "ref": "28672dfd-557a-42ab-aa4b-7e846b1b5a7e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "112d8eec-31da-4696-9f3d-22c8a46f320a"
        },
        "item": {
          "id": "690c9759-c314-45a3-8149-00a4a5855900",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f969fe3a-2c9d-4764-83a1-2654383b58b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68add9-5afc-4a0a-95fb-24999a2ee61e",
        "cursor": {
          "ref": "9bda3bc0-66ed-4f41-87e5-1df19c403493",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e06ddb68-b06f-4a2d-b2be-f23ff1a39bc8"
        },
        "item": {
          "id": "ef68add9-5afc-4a0a-95fb-24999a2ee61e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "63864ddc-9803-4f17-88f7-40f05eab2649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e804c90-a925-4d81-965d-ab4fb1922b8b",
        "cursor": {
          "ref": "5a09fe30-2dd5-4ad1-a26e-80161d7a9650",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c745050-1aca-46e2-8448-d3b6392f1345"
        },
        "item": {
          "id": "8e804c90-a925-4d81-965d-ab4fb1922b8b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "23ac4ec9-ec6d-48cd-ac36-c3505da27d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11062847-d4b7-413a-91bf-7b3e3f1c5cb3",
        "cursor": {
          "ref": "c938d61b-0f13-4ab7-85ab-7881b37ab036",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d5940ca5-84ed-4ff3-b793-194c042d617b"
        },
        "item": {
          "id": "11062847-d4b7-413a-91bf-7b3e3f1c5cb3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fca703fb-4dcb-4a17-a2c8-ada1930ee0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76c8a25-9fd4-4c11-a39e-bcf08d0548ba",
        "cursor": {
          "ref": "cb52fb2b-6449-4c2d-b9a8-96953dbc5137",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b8287a77-3150-4b7d-b357-578db1f237b5"
        },
        "item": {
          "id": "e76c8a25-9fd4-4c11-a39e-bcf08d0548ba",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "59af3cba-a8a5-44c2-ad50-005f53a2257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb966b-7588-488d-96aa-6ee61cb2db11",
        "cursor": {
          "ref": "bc00deac-1a9d-4c10-ac8b-628e8734a99f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "12488516-690a-445e-92d5-5e8a035c90bc"
        },
        "item": {
          "id": "8efb966b-7588-488d-96aa-6ee61cb2db11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7e2f8364-544c-4808-a144-870a722760cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c996849-41fe-4292-bb26-b796201f2e0f",
        "cursor": {
          "ref": "a63e36fe-0e54-4cfc-89c5-1ca176e1f0d7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "520477bb-7218-4d0c-ab80-34c5578d0250"
        },
        "item": {
          "id": "8c996849-41fe-4292-bb26-b796201f2e0f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd884366-4681-4436-8270-246adc40d667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "90281191-b230-4b99-9a65-169d7c536a51",
        "cursor": {
          "ref": "c6a82b28-0bb4-4957-ad74-8e49b1890cdd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4d632b0b-115f-4cce-b0c0-c287d7708131"
        },
        "item": {
          "id": "90281191-b230-4b99-9a65-169d7c536a51",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e73fe0d-9c01-4272-8ae5-122e9065c198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "7b7947f9-2fbf-40fe-91a6-40a33f441643",
        "cursor": {
          "ref": "2a3d6b5f-ee15-42da-a1ce-df5809a7e643",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0184f38f-8ff2-4af4-9e5d-d3fa788dab50"
        },
        "item": {
          "id": "7b7947f9-2fbf-40fe-91a6-40a33f441643",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3582d3d2-0ba7-4111-a890-67ef2b02d9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "059b9eef-2a33-4944-9591-9581eb81ae0a",
        "cursor": {
          "ref": "b0d38c2a-3db5-4628-887b-7c5947d323ca",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8e308a5-3382-469d-a125-bb4b867f7d90"
        },
        "item": {
          "id": "059b9eef-2a33-4944-9591-9581eb81ae0a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e0a05d1-287e-4035-bb4b-011aef7561e7",
          "status": "Created",
          "code": 201,
          "responseTime": 5522,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5fedfa-d0b1-4f32-b7bc-c4af4d2ef3d1",
        "cursor": {
          "ref": "1f2b6af0-b5f7-46d6-87a7-73670a9bba21",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4dd7b92b-c634-4d21-8d65-57ab2297bc56"
        },
        "item": {
          "id": "9a5fedfa-d0b1-4f32-b7bc-c4af4d2ef3d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d357826e-365b-4ab5-adb8-fbf850120eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7f636163-8e62-4b26-9b44-882fd1b2b3b5",
        "cursor": {
          "ref": "54cd6c58-a687-4479-8b1a-a038f2b2a4af",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a44061a5-c6d1-4466-b5ef-6b6fea4ccd70"
        },
        "item": {
          "id": "7f636163-8e62-4b26-9b44-882fd1b2b3b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2eff3d74-e9e4-4b2d-a1f2-cb7c1067366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6eda3864-c85c-43d5-b66f-472a086d2418",
        "cursor": {
          "ref": "cfa4041f-4992-468e-9c9d-470e9d052c08",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "df571709-ab55-4a4c-9b4b-42c895418040"
        },
        "item": {
          "id": "6eda3864-c85c-43d5-b66f-472a086d2418",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c83dc09-fd72-43b5-b7a4-a9d1dfd3df4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4f712b-bd3c-4927-a43d-078ad08a6b74",
        "cursor": {
          "ref": "8479d514-9cb8-403c-968e-08915c4e159f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d0507a17-3b8d-4f3f-82f9-2b6f5a933517"
        },
        "item": {
          "id": "6d4f712b-bd3c-4927-a43d-078ad08a6b74",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ea0753a5-bb1a-443e-ab81-b037479652ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c334fd-793e-4188-b152-851fe975305d",
        "cursor": {
          "ref": "44496429-eb22-42da-b7ae-de6dc06c9475",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea4070a3-f411-4771-841e-e62fa107e4cc"
        },
        "item": {
          "id": "a7c334fd-793e-4188-b152-851fe975305d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "20b6ae4a-6f2a-454d-aeb4-d5919a287a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac43f88a-8c4c-4729-a436-fb6b7c8f6260",
        "cursor": {
          "ref": "511a37f3-7200-45cc-a6fd-c14102d852e0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4502dc87-7dff-4f04-9d4a-d009b4c42ec9"
        },
        "item": {
          "id": "ac43f88a-8c4c-4729-a436-fb6b7c8f6260",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4d3df06-df81-4e8a-b421-8c0d5750db97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a5b8ef-eae0-4531-827c-fbfc51229be7",
        "cursor": {
          "ref": "9de01b75-cb30-48d3-a9bd-c0a5cec85cbb",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "599e1e6c-1ab3-4c64-a7da-6121f1cb93e4"
        },
        "item": {
          "id": "06a5b8ef-eae0-4531-827c-fbfc51229be7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd3726e5-ba86-411c-9a1a-653ec8a18660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a873970-04e1-4b71-b36e-c80d0901bc54",
        "cursor": {
          "ref": "481ab8c2-61e9-4a0b-92c6-ed598d17e5e4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47b63a3f-723a-4684-b985-793445d59017"
        },
        "item": {
          "id": "9a873970-04e1-4b71-b36e-c80d0901bc54",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab6bf8f2-2a4a-43ed-b35a-ffc53538e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389aab7b-75ed-49e8-9d26-e9ec7bb6dd69",
        "cursor": {
          "ref": "3cd03d9f-d48e-45e9-a1fd-bfcdc8628f16",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2ea5b52a-61ee-4b72-9cd5-21edae4c66db"
        },
        "item": {
          "id": "389aab7b-75ed-49e8-9d26-e9ec7bb6dd69",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f0fd5ff2-2e48-48fc-ae9d-f9124b014b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5f8658-2ad3-48d4-bb04-a0f41a739060",
        "cursor": {
          "ref": "228023f5-b450-4ad3-a674-4ce11d77d54b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "55119927-aba2-4684-936b-263c3735ac6e"
        },
        "item": {
          "id": "cc5f8658-2ad3-48d4-bb04-a0f41a739060",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83702bfa-0fce-4e8a-b877-3726068616a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2e7d0-6d7b-418c-8e12-2d713022b16d",
        "cursor": {
          "ref": "9416c7dc-cb84-46ae-ba80-1bef519b9a99",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c92238b8-99c7-4d4f-81c1-fcaa220fdf0d"
        },
        "item": {
          "id": "a0f2e7d0-6d7b-418c-8e12-2d713022b16d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51935a8e-8680-4fa2-97a3-705f31256777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dea448-5d33-4b77-94c5-bd4a3aa3a1f4",
        "cursor": {
          "ref": "b12fabc2-6f01-4902-b84b-2e8cff26e5f2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "36bc3d08-2978-485d-b8ef-423200f7b9f3"
        },
        "item": {
          "id": "e4dea448-5d33-4b77-94c5-bd4a3aa3a1f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e4569da8-a6f3-41ff-8dc2-c321ef8342b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9003c93b-1de0-4b06-9d49-134ecbdbbe08",
        "cursor": {
          "ref": "2c4927fb-aabb-49ab-b2f8-b3f3620a6fe8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3bf98f84-b424-4e15-99c3-3e225b10348b"
        },
        "item": {
          "id": "9003c93b-1de0-4b06-9d49-134ecbdbbe08",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d31d8c6-e89c-4ef4-9662-1ff2a33fbe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f353349-55df-460a-ab74-84c09973acaf",
        "cursor": {
          "ref": "00aae64f-7228-4ba0-8e62-342a20cfd467",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "90827e56-ab85-4969-9108-14f7495625a8"
        },
        "item": {
          "id": "7f353349-55df-460a-ab74-84c09973acaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "029882eb-4179-45cb-bb1d-41cb03b6fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e3ba0d-4109-4294-971d-8be7d67b0a1c",
        "cursor": {
          "ref": "2f328c6e-14f6-43bf-9e95-ae8c36e6fb4e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f9926a05-edcc-4300-a608-7f51d1ba6927"
        },
        "item": {
          "id": "43e3ba0d-4109-4294-971d-8be7d67b0a1c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ab6e9715-93a0-4e17-8f21-f8bfa81c3874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35fbf2c-3947-489b-bfc4-4dd4b16fe173",
        "cursor": {
          "ref": "fbba63b1-dca3-4853-b3da-2e30d3286589",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b0dab09b-5584-4718-ac95-efcc69dba39b"
        },
        "item": {
          "id": "f35fbf2c-3947-489b-bfc4-4dd4b16fe173",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bbbcce80-c64e-413d-be6d-6aa15008e737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b1cf23-6262-4740-aa7e-30485132ed44",
        "cursor": {
          "ref": "454de7a0-63d8-418c-9182-1e3e7e06642f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "26e0a5b3-251f-4cdc-91d5-b32e665c2b26"
        },
        "item": {
          "id": "b2b1cf23-6262-4740-aa7e-30485132ed44",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a897796b-6b8c-4dd5-a8fb-e11d98253867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b45256-6c01-43e9-a7c1-a1b7f6763182",
        "cursor": {
          "ref": "f398f962-9f54-4b69-bfe8-4c47cb73fbf2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "74f6e1df-4acc-46b0-a450-3a2de4e7315c"
        },
        "item": {
          "id": "b9b45256-6c01-43e9-a7c1-a1b7f6763182",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9892087a-2d90-43c6-88f2-e87493011748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ee94e-c75b-4557-b91d-5b82b887467c",
        "cursor": {
          "ref": "ffc5547b-56e5-4f05-a0f6-7b1ef3146887",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c6e4731-800e-4b9c-9f74-e405d674c2c9"
        },
        "item": {
          "id": "1d8ee94e-c75b-4557-b91d-5b82b887467c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5b0e8c1a-6ed5-4b75-a230-a750051e65a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d95c9a4-884a-4395-b94b-9be42a121abd",
        "cursor": {
          "ref": "ba52c228-05a7-4639-8c49-8dc6261bc736",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8d8eaa74-0634-41ba-af4a-44344d1da036"
        },
        "item": {
          "id": "7d95c9a4-884a-4395-b94b-9be42a121abd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d97c709d-e043-47dc-907f-c341d1a2220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020619be-70d2-456e-a530-ed569253a327",
        "cursor": {
          "ref": "b0e5716c-0a5f-4d2c-829b-e56fc4925725",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3d5c2910-769e-43ef-ad2d-cfd886464a69"
        },
        "item": {
          "id": "020619be-70d2-456e-a530-ed569253a327",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27b4a5c6-094d-4526-9a26-2dbf8416b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07ce9f-937b-4cf1-b5b7-60bb38ac328f",
        "cursor": {
          "ref": "65da71f3-9c8a-4d8c-be66-8e75454dd607",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c3c8aa87-0504-4c51-b85e-9190573a99aa"
        },
        "item": {
          "id": "9d07ce9f-937b-4cf1-b5b7-60bb38ac328f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b06a4f1c-c265-4947-bf47-59a7fc0ae71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e3e5de-6afe-4c14-91bf-97a3ed93f650",
        "cursor": {
          "ref": "5224a47d-2e54-4a17-99f4-ae05ff1dd380",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7227c611-90d7-420f-b554-419711c756bd"
        },
        "item": {
          "id": "b3e3e5de-6afe-4c14-91bf-97a3ed93f650",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1aee8ac8-df84-4940-bb62-48170dc4f59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b25f9-b1d0-4400-b616-74d9adb1fa9d",
        "cursor": {
          "ref": "8a71d840-af2d-4fca-af98-4c0293f1e2d7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dda40beb-06e9-4d95-bfd9-c67c7c61d341"
        },
        "item": {
          "id": "ed1b25f9-b1d0-4400-b616-74d9adb1fa9d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f4e3d7e1-65fe-4712-95cc-672f8f71c697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d351e4a-42c7-4bf5-87db-73db64b8c500",
        "cursor": {
          "ref": "05c9d3e1-9bd5-440d-9a9f-124cf1f15583",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e4441f48-45a9-4979-a942-d6f0872c8363"
        },
        "item": {
          "id": "2d351e4a-42c7-4bf5-87db-73db64b8c500",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "18b51bd0-3ebd-4d07-b0d2-7ecc743d3e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b57ca4-4ab5-4ea9-9b95-41561d5712cf",
        "cursor": {
          "ref": "67855c7d-d56c-42fc-9809-8766fb06c7f9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "61b18435-0a51-48d5-89f0-472bfd4005c3"
        },
        "item": {
          "id": "60b57ca4-4ab5-4ea9-9b95-41561d5712cf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43d725d5-71b3-4b8f-bfa1-1802705d4ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b2743-426b-43c1-a02e-60b0cfa639a9",
        "cursor": {
          "ref": "ed055631-02eb-4954-bdeb-3f4de62585f5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "891148d9-7f91-4625-b1b3-6cfdb5153173"
        },
        "item": {
          "id": "c47b2743-426b-43c1-a02e-60b0cfa639a9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5ffc6396-0eb6-4ccd-93c2-5aae8a63cbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667ffe2-cebb-4a76-a6c8-735073cb2de4",
        "cursor": {
          "ref": "982555fc-c6e4-407f-bfb8-42f70eb2cb5e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "16c99234-48e8-4cd9-8b6c-ca7b4cd867a7"
        },
        "item": {
          "id": "3667ffe2-cebb-4a76-a6c8-735073cb2de4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b70a0a3d-fb82-432a-80f2-9c8fcecd4460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e9da57-ea1a-480c-ae4c-c52cf08a13b2",
        "cursor": {
          "ref": "0ee80c10-c1f8-42ea-887f-0b424bdfb4b6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4df9c79e-ed5c-4079-be91-0c2772eba725"
        },
        "item": {
          "id": "d7e9da57-ea1a-480c-ae4c-c52cf08a13b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88c4c479-34af-44c7-a179-a8f51fc2f123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed929ad-3e4e-4c16-87b1-eca1dbd0636d",
        "cursor": {
          "ref": "9df6db0e-4d3d-4272-b34b-f7c1d8bc2c16",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "237ade40-cc8c-4331-ab68-822d4de734b8"
        },
        "item": {
          "id": "7ed929ad-3e4e-4c16-87b1-eca1dbd0636d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "add496df-6524-428c-96cb-2c5d2b3d927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454e139c-ff6f-4586-a8b0-c07444d9705c",
        "cursor": {
          "ref": "a57319fb-e100-4686-a745-c29b4e61ec74",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8b35685e-7487-41f0-ad46-0c75810fc7d9"
        },
        "item": {
          "id": "454e139c-ff6f-4586-a8b0-c07444d9705c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1ec14806-17ee-4565-84ea-4a5669d11c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3358062-f82c-42f8-b198-5cb9ddbe32f9",
        "cursor": {
          "ref": "a386d12d-6841-46c7-9096-616d315e2203",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "495074da-78c0-493c-86c7-9ba6c5c88018"
        },
        "item": {
          "id": "a3358062-f82c-42f8-b198-5cb9ddbe32f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0953cef5-fed4-4916-a20e-528c340ec7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf96166-4962-4f40-bf1b-542707b61b73",
        "cursor": {
          "ref": "e8e860e2-8a4b-44d7-b8d2-ae438c1f0167",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b2050f6-d18e-4979-bc2b-19128a9af7be"
        },
        "item": {
          "id": "bdf96166-4962-4f40-bf1b-542707b61b73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5400c8f-6fb1-459f-8d99-a1bb71831459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21755d5-ad35-4d4a-8cc2-db3bd9a81186",
        "cursor": {
          "ref": "d3a0839e-a734-424d-a3ef-5625f2694eb5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c54b9177-b660-49b2-b10e-3f17682af5e3"
        },
        "item": {
          "id": "a21755d5-ad35-4d4a-8cc2-db3bd9a81186",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9de2d87a-7a64-42a8-b3d5-aacbeeb79834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af717a04-04df-4bf1-9abf-bf3081812a72",
        "cursor": {
          "ref": "4923af2a-b81f-4f4d-86ca-14336946c94a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b32ea33c-d4c8-4ccc-8079-086ae26176c7"
        },
        "item": {
          "id": "af717a04-04df-4bf1-9abf-bf3081812a72",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2881ddc1-e828-4f36-8b70-75adddd70eae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee88f39-130a-4f51-831e-582b06d402ae",
        "cursor": {
          "ref": "878f603f-55b0-4de4-8b48-880aa6dffedc",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "00e5252f-d60c-4c63-af99-f71212763f33"
        },
        "item": {
          "id": "7ee88f39-130a-4f51-831e-582b06d402ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "731af39d-6601-4881-bd5f-03637021049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b35e1a-9b0d-4a9f-b4c4-d862aee84b3d",
        "cursor": {
          "ref": "1faca35f-5ed0-4dc9-839a-e31d7470db8b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e446c163-402e-433a-8bef-a70523f5c64c"
        },
        "item": {
          "id": "a2b35e1a-9b0d-4a9f-b4c4-d862aee84b3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "48c724ac-175c-417b-b47d-ab12864c0580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acc853b-f099-4527-8e89-0e252cb79dd2",
        "cursor": {
          "ref": "53bf46dd-e2bc-4292-b8ca-e2e6e87d5449",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "207fef4e-6a3b-443c-ae85-75f4318862d9"
        },
        "item": {
          "id": "4acc853b-f099-4527-8e89-0e252cb79dd2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2cf01223-7f8b-4476-91ca-e7c3baf49c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ae8ab8-49c3-4cc9-adcd-94daeccc2b41",
        "cursor": {
          "ref": "df16e9fb-82fb-4f32-b1d3-de4ce651e99e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d9a5f3fe-4095-461f-8dc5-708b9f3797af"
        },
        "item": {
          "id": "c7ae8ab8-49c3-4cc9-adcd-94daeccc2b41",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a1a902fb-74d8-4523-ae42-636c6338b892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02c2c42-cc73-4457-b217-cf0ce039baee",
        "cursor": {
          "ref": "a53ec863-a250-4b82-b969-19afde05cc1c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "97c6469c-64bc-4dc4-ae86-146ea0e1ea13"
        },
        "item": {
          "id": "f02c2c42-cc73-4457-b217-cf0ce039baee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c12c1f2-8a17-465e-925e-016c2d996375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b6c396-795f-4e47-9786-0bcbd6f165c9",
        "cursor": {
          "ref": "7e04fc03-6730-417f-a99c-d73ed4fb1d54",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9fe793b8-3213-4c65-8790-e8fd9a42ebb5"
        },
        "item": {
          "id": "d9b6c396-795f-4e47-9786-0bcbd6f165c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1744e97-66ee-4fc0-bb83-2350181047f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a8f0f8-740a-45da-a9e3-ee06c31c90df",
        "cursor": {
          "ref": "6e078627-713d-4971-9dbc-2c2b295d5568",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f022bdcf-7910-4072-90c0-268846af7c1d"
        },
        "item": {
          "id": "16a8f0f8-740a-45da-a9e3-ee06c31c90df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "87374f23-8414-4197-b82d-2e240f8d3333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d52d6-df23-42de-8246-237c87e31453",
        "cursor": {
          "ref": "83eef124-d45c-47cf-9a98-9fdd14381ffa",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8196d56c-1d54-4b8e-b27b-ef1a91e42a56"
        },
        "item": {
          "id": "ce8d52d6-df23-42de-8246-237c87e31453",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3087b819-0313-4261-8de4-5de6147acca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e0fb35-676e-4de5-a120-284309d373b4",
        "cursor": {
          "ref": "aa98266d-1beb-45a7-91ce-c58a12c499a0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "452693df-8449-41c0-9eec-6f69e4bce2d2"
        },
        "item": {
          "id": "46e0fb35-676e-4de5-a120-284309d373b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ba36463c-b668-4416-86e4-abc15d730e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b6ea2e-c53d-4edd-921b-1bac550bf3ab",
        "cursor": {
          "ref": "00c76025-9773-4a6d-9a57-7d49da65a394",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e850f206-3937-45dc-956c-b66de480320b"
        },
        "item": {
          "id": "48b6ea2e-c53d-4edd-921b-1bac550bf3ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "51ba7220-aa5a-4aa5-9875-18d11e6b449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97831b14-d1c1-4144-a0b6-3122624ce4dc",
        "cursor": {
          "ref": "015099d7-5a37-4ba5-8e32-5555f8a5d95d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e0814e6-97d1-433d-86e1-f4679640635d"
        },
        "item": {
          "id": "97831b14-d1c1-4144-a0b6-3122624ce4dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8daa4014-a068-4b14-9a08-142136a60ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0931a2f0-25b8-4c01-b2c7-81f349b72cba",
        "cursor": {
          "ref": "216e59fb-52bb-41af-b73d-90d044e84600",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3fe6f027-3a99-426c-8bfd-eef78f0569eb"
        },
        "item": {
          "id": "0931a2f0-25b8-4c01-b2c7-81f349b72cba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "870526a9-11d4-4354-8bbc-206fe629ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e4dcd-cac5-46fb-ad19-d15dd7536864",
        "cursor": {
          "ref": "ec485159-6581-48c8-97f6-408f9fdc5524",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "049d9198-efa9-486f-8f0e-63e72e81f707"
        },
        "item": {
          "id": "574e4dcd-cac5-46fb-ad19-d15dd7536864",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d42bcc6e-d3c3-4a10-8742-de383f7f5d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada1ee01-7278-43ee-91e9-4ba334ffc517",
        "cursor": {
          "ref": "403ea3c9-eb6e-41ab-aa8f-8612d1c50e16",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e636661b-6f82-41c4-8f75-a82540b48e14"
        },
        "item": {
          "id": "ada1ee01-7278-43ee-91e9-4ba334ffc517",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4b018b94-78b2-4f7d-926a-f3e6c1bc8181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895a8c9-627e-4f9c-bd5f-de3026ac3b17",
        "cursor": {
          "ref": "be95d38e-95f8-48ca-8955-0c15574bc6fa",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "609a1823-314c-4ba4-944b-6ba67058d3d3"
        },
        "item": {
          "id": "4895a8c9-627e-4f9c-bd5f-de3026ac3b17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcbaad53-8f04-4a41-bed1-9fcbb88f0712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aafc128-88e8-4beb-aeb7-dff062e06dc6",
        "cursor": {
          "ref": "7c1a43a9-c249-4f2d-9061-295129f8125f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "496aff39-2d40-47a6-95bb-7e20271a824b"
        },
        "item": {
          "id": "6aafc128-88e8-4beb-aeb7-dff062e06dc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8412fea6-33eb-4012-9d9a-40ee6d2f8c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d395ba50-db67-40a4-828d-a65420dd690e",
        "cursor": {
          "ref": "c4f47b2c-caa2-404f-8fa5-8c30db612ea6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "481a6106-ab0c-4305-bd06-4a9ebfc9d76f"
        },
        "item": {
          "id": "d395ba50-db67-40a4-828d-a65420dd690e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dbaef697-de51-4027-90cf-778add378cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bf4c28-ce6e-4ee3-a5df-80ddc5565866",
        "cursor": {
          "ref": "18d967c0-635a-450c-a1df-1593711628b4",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "784758f8-66d3-48ae-b1d9-8d8974c41076"
        },
        "item": {
          "id": "33bf4c28-ce6e-4ee3-a5df-80ddc5565866",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "694e2d53-081e-438d-9519-c8138dbbde39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064b4e5c-a0ed-4d4b-b17c-ce0a1a10722e",
        "cursor": {
          "ref": "91747b33-d174-4af6-95c7-2b44bc2e67de",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "45953599-83ee-4ea4-87e9-7646af484fdf"
        },
        "item": {
          "id": "064b4e5c-a0ed-4d4b-b17c-ce0a1a10722e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "691c8151-97b5-4600-8908-e8bf2b1c919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc01bc1-75fd-4150-8ada-086566f9de62",
        "cursor": {
          "ref": "138afe2a-1bbf-4b5c-a41e-f2c9b4e27e66",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b7ab9d29-66af-492a-82bf-c44a17f7b186"
        },
        "item": {
          "id": "0bc01bc1-75fd-4150-8ada-086566f9de62",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "46ab965e-932c-488a-a39c-7104713abca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73901fc-5eb5-437f-a900-9418994ea905",
        "cursor": {
          "ref": "a19719f7-1a4e-4584-81df-fb1c669fdcb3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e6dd92d-62a2-4d11-bec0-8fa887ec27d4"
        },
        "item": {
          "id": "b73901fc-5eb5-437f-a900-9418994ea905",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3c3edce6-565b-4282-950c-65d75142b837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d835ed0-3129-466f-ac43-e411aef04304",
        "cursor": {
          "ref": "2f9abd84-ab5e-4d0f-adb9-93c2533e1b23",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bba35583-7ea8-43b5-a3e1-405238a2a943"
        },
        "item": {
          "id": "4d835ed0-3129-466f-ac43-e411aef04304",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2225494d-3787-45e6-b0a3-c19c1c7c2bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f33f2-d970-4e7c-8b3c-663c3dd85612",
        "cursor": {
          "ref": "3e82d75a-ed5f-4f0b-a949-3cba1ccddeeb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c0ee401b-ad93-41b7-888e-7ff6a9fe5d44"
        },
        "item": {
          "id": "536f33f2-d970-4e7c-8b3c-663c3dd85612",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71d62bca-01d0-46de-b7b6-605864b4a5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b4c0f5-9961-4ffa-80b5-9ce848ecdc3b",
        "cursor": {
          "ref": "10967086-9d20-4c6e-a410-1179d487e7c3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4564da9c-6d4e-403b-9990-c3d0bb5f486d"
        },
        "item": {
          "id": "65b4c0f5-9961-4ffa-80b5-9ce848ecdc3b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "32146da3-1205-4ba3-8fbe-77b429a81780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b1881-61e7-4012-8ebc-78bef5de7de4",
        "cursor": {
          "ref": "874a7f37-787d-47b2-aa65-9bf6125a5f90",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf617226-8158-4aef-860e-a6e2c6400b30"
        },
        "item": {
          "id": "b64b1881-61e7-4012-8ebc-78bef5de7de4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a5a549fe-ae69-4577-a6b2-21b6651b3d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884e96a-5822-49a0-bc31-4b9e964ec91e",
        "cursor": {
          "ref": "02247964-24ac-498d-b6b5-31c597fec1ba",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49fa668a-d359-4037-b3b3-1a53f321eded"
        },
        "item": {
          "id": "8884e96a-5822-49a0-bc31-4b9e964ec91e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2dedc36a-206c-41a9-a352-96451b4f3aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba9f295-541b-4eca-bdb2-26657c85ae11",
        "cursor": {
          "ref": "581f464f-9da1-4a08-a1c6-0b84e4b013dc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af8b0696-0e4d-4722-b409-ffcba6ae9ef8"
        },
        "item": {
          "id": "eba9f295-541b-4eca-bdb2-26657c85ae11",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41c6777b-00dd-4707-b2d8-1f029ea878bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff2a9ad-e37f-4f49-8633-69c0bf436df9",
        "cursor": {
          "ref": "c44683d7-8e4f-4b84-b3de-8f6ed8c078af",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ba1387cb-79e0-4d65-87c9-06a88ad520ed"
        },
        "item": {
          "id": "bff2a9ad-e37f-4f49-8633-69c0bf436df9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c00e6b35-ef6a-4999-9b11-df2408811a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f60c83d-10bb-4a67-9fa2-75fc971129bc",
        "cursor": {
          "ref": "f3c64a37-5e41-4bf6-ad62-8196291ff360",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c629aa2-d99e-46d1-af09-b6e5697b05e1"
        },
        "item": {
          "id": "5f60c83d-10bb-4a67-9fa2-75fc971129bc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aeba35ee-5e19-4d80-a3e2-ec399f72e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2598ccb1-035a-44d3-bab8-7ee2f01e2ae3",
        "cursor": {
          "ref": "53d41169-f5b2-4ef0-94fa-939ca59cd790",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a9240170-c8e9-4f36-bdae-f08bae20f1f5"
        },
        "item": {
          "id": "2598ccb1-035a-44d3-bab8-7ee2f01e2ae3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90dbeb63-bc4e-4c6d-b7d5-6ba3c762c0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b4dfbf-8d86-45eb-a704-de0378d852e6",
        "cursor": {
          "ref": "e00225bd-1e34-4767-80e6-462a3d45e8ce",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c00f4137-34db-4d46-a6b4-e33800b60cbd"
        },
        "item": {
          "id": "e4b4dfbf-8d86-45eb-a704-de0378d852e6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efa3b000-9814-4c35-8c8f-4584a18ed8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd539c3-a42a-4d0c-8a47-de08c949dcbd",
        "cursor": {
          "ref": "91b0ccfa-8d79-4d81-966f-907faa0be1a6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d6b600d5-6aec-4593-8e0f-bd1d954adf0d"
        },
        "item": {
          "id": "bfd539c3-a42a-4d0c-8a47-de08c949dcbd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4373b3ef-c265-4e49-bfe9-235264c9020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24f79e0-c684-4fd2-8d21-d06097e1857a",
        "cursor": {
          "ref": "e4cd159d-1c77-460f-be79-b2b7d24ce14f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c875eb90-6de2-4af9-b2e1-5f213e14a558"
        },
        "item": {
          "id": "c24f79e0-c684-4fd2-8d21-d06097e1857a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dafd4c88-ca71-4dc2-8e3f-4542cdc2adc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51207f74-8710-4186-ae07-32a205da976a",
        "cursor": {
          "ref": "a8ea12e3-136c-4d2c-8872-5b6e5a382a9e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "95e569af-0097-4b5f-9096-40e47765d60e"
        },
        "item": {
          "id": "51207f74-8710-4186-ae07-32a205da976a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6c763395-9bbf-4aa0-a91c-7ea078d9c539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec50e2d8-7a3e-47f3-bf9e-615a46ac088d",
        "cursor": {
          "ref": "8c53a0b8-8b30-48a5-8c4c-a8aa27b9651c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "332d1bf4-7db0-4871-9827-484a69f054f8"
        },
        "item": {
          "id": "ec50e2d8-7a3e-47f3-bf9e-615a46ac088d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6dc15d32-01df-4e37-a083-81f8f41b8824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29a68b4-7e03-476f-8e8c-1d9c16fd5e90",
        "cursor": {
          "ref": "6cb94cba-0784-4f6e-91e6-80e483ab827a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20627d44-2988-48c6-aae1-9254f5f5fda5"
        },
        "item": {
          "id": "c29a68b4-7e03-476f-8e8c-1d9c16fd5e90",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "115d208a-f716-48f3-9989-06aa0c7504ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05879749-2fc3-4398-a0c8-433307ff48de",
        "cursor": {
          "ref": "f6cfb183-7c13-4029-9999-8e03f5e9f349",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99b96fca-cea9-4988-8826-372da117ba01"
        },
        "item": {
          "id": "05879749-2fc3-4398-a0c8-433307ff48de",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "32645502-61c4-4ce7-85ae-1268c52fa75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5465a45-54c5-4460-b9ea-d7df442b5542",
        "cursor": {
          "ref": "e6d8d8bb-e6be-41e6-b260-2e286f91d7c1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d9fb5ab2-acb1-4c4a-87b8-cbf8a177e2bc"
        },
        "item": {
          "id": "a5465a45-54c5-4460-b9ea-d7df442b5542",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ed4f238-20c4-436b-852c-3a497140b6f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a603e9-0e37-4a0c-93e7-5b5e383669c5",
        "cursor": {
          "ref": "ae510c07-105b-4aa3-a749-b6e5919d2106",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ea98ae6-a89b-4ad9-860b-d349328b87e9"
        },
        "item": {
          "id": "76a603e9-0e37-4a0c-93e7-5b5e383669c5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bea49fa7-0d40-42bd-8ad2-33d2b590848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae38d2fc-6e57-4b52-b8be-d012145b4493",
        "cursor": {
          "ref": "4454aac9-20bc-4cd1-8c79-1751c7e9819b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5061a70-3905-4b7f-89ff-2f8e31f200ed"
        },
        "item": {
          "id": "ae38d2fc-6e57-4b52-b8be-d012145b4493",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ad1fadd0-2b6d-4928-b3d2-206cb647d9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f9df24-1135-464f-9962-be5606c84595",
        "cursor": {
          "ref": "8c15ddf5-cb5e-400d-84d2-b96cf76efe9b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6cb65931-93fc-4481-958e-149afc646292"
        },
        "item": {
          "id": "e4f9df24-1135-464f-9962-be5606c84595",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cb43ea2d-d80c-4253-92ca-dc0642ab835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d5bd09-7ff4-4e39-85b1-36460bb9345d",
        "cursor": {
          "ref": "384f4975-eae9-464e-b8b9-a3404e49672a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d23c2a2c-b783-48eb-82c6-bfb51b53bcca"
        },
        "item": {
          "id": "11d5bd09-7ff4-4e39-85b1-36460bb9345d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d3a6be93-acb4-4241-afe8-401f7309a76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef0974-81fd-46ce-99f9-c60d4a529695",
        "cursor": {
          "ref": "6f61cc16-0fea-41d7-92f8-6f2b7a81191c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1612be7-ecb4-40d0-89d9-1daf475daab7"
        },
        "item": {
          "id": "45ef0974-81fd-46ce-99f9-c60d4a529695",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19703a26-503a-40e8-841e-50383f0b6baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac4d385-4244-4a16-b9ba-6ab38822d56b",
        "cursor": {
          "ref": "0213f094-6ad5-4960-94ec-1d61b6d97149",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "40d54924-4467-466b-8f49-b08285d673fb"
        },
        "item": {
          "id": "0ac4d385-4244-4a16-b9ba-6ab38822d56b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "41cc861f-0c73-4294-8b3f-c5baee565dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f752d15-9fb8-4bd9-aaf1-f72812ab56a3",
        "cursor": {
          "ref": "39f8fde7-3bf6-4781-bcda-2f1cc64374f1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "63b367b4-ab7a-4789-9c43-9813d0072707"
        },
        "item": {
          "id": "7f752d15-9fb8-4bd9-aaf1-f72812ab56a3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bdb95ff4-76a4-4a7e-9290-e79445ca66e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9013459a-5c65-4aaf-b69e-c741781e8695",
        "cursor": {
          "ref": "abd0436f-1002-4b31-991b-c18f3631929e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cc6c24d5-99e2-4315-9ffa-1f6f9d9d6887"
        },
        "item": {
          "id": "9013459a-5c65-4aaf-b69e-c741781e8695",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "09e71f0a-6ec0-4b28-a82e-056cf12a5237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836e204e-1985-4177-b922-f500a30ef1d8",
        "cursor": {
          "ref": "bb5c5510-7c58-4ffc-a81f-793f6ad899b4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7ddce01-6093-4681-8331-d5b305119f8d"
        },
        "item": {
          "id": "836e204e-1985-4177-b922-f500a30ef1d8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81d93cbc-9c65-4cec-9fa1-b32ebd35c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8b9c9-a150-4b95-a82c-a4e24b85b35f",
        "cursor": {
          "ref": "06f4c57f-2650-4f77-ab42-332b27c967ff",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "252b6bd9-55ed-4bb7-96c7-52ce461bbf84"
        },
        "item": {
          "id": "7bb8b9c9-a150-4b95-a82c-a4e24b85b35f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "849350b9-4bcc-48d0-92ef-b5527fd308d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6cb2c8-73f1-4a41-9a64-fc2d9578a85a",
        "cursor": {
          "ref": "822a5e19-bb91-48aa-82ad-191bad21a9ea",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "35d7d504-5369-4430-979c-5d4f9d314405"
        },
        "item": {
          "id": "3d6cb2c8-73f1-4a41-9a64-fc2d9578a85a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7182a936-5311-4e31-89a9-b6879ff7d83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c401c3fe-da39-4540-8b1c-be0afbf1cea8",
        "cursor": {
          "ref": "e9e3da4c-86ce-4c06-a112-2caccc8e2d5c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3788e7dc-3156-4512-b6c5-3d3127e7335b"
        },
        "item": {
          "id": "c401c3fe-da39-4540-8b1c-be0afbf1cea8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "79ed362b-ca26-42ca-845b-c4cc0f8447c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061f0ba2-30db-48d8-9d9c-b854ed5b646b",
        "cursor": {
          "ref": "c892dab0-7680-413a-af87-56e83e06e0da",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60bf51b5-b911-420b-9201-98564dc2a98f"
        },
        "item": {
          "id": "061f0ba2-30db-48d8-9d9c-b854ed5b646b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86de6c4f-25ed-44fe-bbdd-b56b56d0ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29aaf8b-507f-4297-9d62-674b0d1be6bc",
        "cursor": {
          "ref": "7af97e44-87f5-4eb4-bbe1-a776ed380542",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d18a5153-2c95-483f-ab51-7d515749f032"
        },
        "item": {
          "id": "d29aaf8b-507f-4297-9d62-674b0d1be6bc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f7868996-bfe7-4a37-be0b-f59171f4513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44eba56-36fc-4b9c-a770-ac1822b1d0f6",
        "cursor": {
          "ref": "6b45169d-4e39-430e-bdfc-5c009c7d0af5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ffe20d68-aa0a-4cd5-b158-877c89cec040"
        },
        "item": {
          "id": "b44eba56-36fc-4b9c-a770-ac1822b1d0f6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9a8a95d3-f7ca-4c05-b777-4d986040b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb844fb6-fbbb-4bce-b6e1-5a7c749eace3",
        "cursor": {
          "ref": "4fac3af8-84ca-453c-aa79-b054f5aa6580",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4b98995f-d277-477e-8fdb-0995d8efe014"
        },
        "item": {
          "id": "fb844fb6-fbbb-4bce-b6e1-5a7c749eace3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e1906231-6333-4e7c-bc1b-999063385daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3162c097-84a4-4a6b-bb45-5c3b688d6766",
        "cursor": {
          "ref": "67d77e3b-b71f-4468-9bac-c8c3edeb849c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "980cda24-efdd-4dd3-9002-f9c46d022eb3"
        },
        "item": {
          "id": "3162c097-84a4-4a6b-bb45-5c3b688d6766",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ce0491b2-9390-4682-b85e-8f5b85740475",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "0cb90c09-df5f-4c3f-9e90-d94210ee1567",
        "cursor": {
          "ref": "283eb045-e241-4b40-acba-2c900d72f7b0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0a47c001-adf1-4709-9832-34136378deb0"
        },
        "item": {
          "id": "0cb90c09-df5f-4c3f-9e90-d94210ee1567",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c1ff9c3b-eca4-4bac-afe4-f593eea95763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6584d-9d8b-4793-9215-691c3cff1cff",
        "cursor": {
          "ref": "1e9fb122-6e04-4f8c-884d-feb3d3721f0d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf679e90-23b2-4fb1-83f5-d9cf699e3dd2"
        },
        "item": {
          "id": "cef6584d-9d8b-4793-9215-691c3cff1cff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a6c56246-7976-4b5f-807f-607f337bb58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f7b8ef-aab6-463b-a9fd-a6652f2e1eb3",
        "cursor": {
          "ref": "1de384f8-0eee-4318-998b-e976dc322a04",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32ec0f99-9c93-4c3a-90d9-671904aeba68"
        },
        "item": {
          "id": "37f7b8ef-aab6-463b-a9fd-a6652f2e1eb3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "79d0988a-0aba-4702-88e4-91ec374d5878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaeb674-bc4a-4dc3-aa83-25af1323bf6a",
        "cursor": {
          "ref": "0de062f6-44b9-4a8e-93dc-eb8ad46d68b9",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b74bf4e5-40d9-4fce-bb4e-258197a85e6d"
        },
        "item": {
          "id": "ffaeb674-bc4a-4dc3-aa83-25af1323bf6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2507b2f7-6a24-4da0-9ad7-a131a373c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45970bff-6915-42fb-97a0-9e69484487a0",
        "cursor": {
          "ref": "9aa569ed-258a-4ec0-afbd-ce0f2c51a75b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "496431e7-2ad7-4997-b502-9c37729c7382"
        },
        "item": {
          "id": "45970bff-6915-42fb-97a0-9e69484487a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12860467-b452-4297-81dc-a76cd3b47329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b879e841-1ffb-4690-8e39-ae8cac491c3e",
        "cursor": {
          "ref": "a84e0c21-6bec-4ed8-9949-d32314cd6e13",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bfffed5b-f896-4097-ba86-95604c7d79c7"
        },
        "item": {
          "id": "b879e841-1ffb-4690-8e39-ae8cac491c3e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c947a128-2dae-45f9-bab8-7a97f6add86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02c31d-70d7-4d5e-876b-0e6df4a3da36",
        "cursor": {
          "ref": "46e19810-67e3-4944-9700-fcde4eb8a861",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d0358adc-dd9e-45a4-b19c-757d9621998b"
        },
        "item": {
          "id": "2b02c31d-70d7-4d5e-876b-0e6df4a3da36",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e1a1fc0d-edd1-434f-a8f8-e37cdadc8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68515e1-ad60-484a-87a6-5cd8573ec086",
        "cursor": {
          "ref": "aa63d92a-67c3-42da-afda-9aacf85fcdc8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a794adc1-0158-4fca-b678-49bdc5613c56"
        },
        "item": {
          "id": "d68515e1-ad60-484a-87a6-5cd8573ec086",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0c91e919-b31b-405a-a62d-fada1102fcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa272550-b76b-41ec-9434-7ce62032a6a6",
        "cursor": {
          "ref": "510c5b28-773f-46b9-831c-a1b339afa2d0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5460e289-97ec-4c4a-bcf8-61f468a91700"
        },
        "item": {
          "id": "aa272550-b76b-41ec-9434-7ce62032a6a6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "99792a01-a15e-44ac-865a-ce7b61e9c5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a85d13-1733-4875-8baf-056f470c7178",
        "cursor": {
          "ref": "ad85054f-4066-462f-83a8-ff652bc73346",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad2ab173-3a36-4b4b-92b9-2544334df84f"
        },
        "item": {
          "id": "81a85d13-1733-4875-8baf-056f470c7178",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce6f5ad8-e3fe-473c-b95d-9c01809df00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b1d67d-0e5f-4e9b-a794-779336772c02",
        "cursor": {
          "ref": "069bd11a-3369-445a-8dbc-7b91f8104d57",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01b55066-ee69-4663-a8fd-8b8017eb14c3"
        },
        "item": {
          "id": "06b1d67d-0e5f-4e9b-a794-779336772c02",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a8dd7f5-a421-461c-90df-69d2f2fbcb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad84744d-860b-4f11-a4c5-7b724d7a15f1",
        "cursor": {
          "ref": "eb0bf677-b191-4ce7-b3b3-f7a4a23d315f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fd24f865-179f-46d2-834c-8169bc9f988c"
        },
        "item": {
          "id": "ad84744d-860b-4f11-a4c5-7b724d7a15f1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1daaca40-a9ab-4c71-8a7d-e575ff693156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d1deb9-c220-4ad0-aa81-f6e97de4f1da",
        "cursor": {
          "ref": "a0ccf8bb-5365-4d13-9457-2a543052a93c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "000e74cf-7a6d-4ebb-ba85-cffa2f1185cc"
        },
        "item": {
          "id": "74d1deb9-c220-4ad0-aa81-f6e97de4f1da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f855ff1f-e14a-4263-93b7-72714ca35276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6582964-9c72-47b0-a281-10020b397bf9",
        "cursor": {
          "ref": "d5f5879d-928e-4026-95b8-ea8ea37e3535",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "95e1c7be-d619-4f1c-b8a3-289da959b9c0"
        },
        "item": {
          "id": "a6582964-9c72-47b0-a281-10020b397bf9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b86ced13-36df-41f3-b861-43d3d5af2d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca007a4-1340-4d78-be33-ed57c8cb3e9a",
        "cursor": {
          "ref": "77c13d71-ba22-4c9c-a433-67a0c577040b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "002aa07c-fa7a-4605-be40-da63866a4dbf"
        },
        "item": {
          "id": "9ca007a4-1340-4d78-be33-ed57c8cb3e9a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6bc39fd3-2f10-4698-83b3-4951ab40e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa659dce-8335-4ac9-935f-3dbc56bfc988",
        "cursor": {
          "ref": "6003f16e-9093-4783-98ce-3db8c7d18c82",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "35020b3c-f993-4ab5-817e-846f24a955ad"
        },
        "item": {
          "id": "fa659dce-8335-4ac9-935f-3dbc56bfc988",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cfd64b48-e9b4-4569-beb2-0758ef7240be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c670423a-f784-43db-8684-ff5dcae4c85b",
        "cursor": {
          "ref": "5dad5c65-3274-4aea-95d3-a8ab98094416",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed782671-58af-4757-ae88-6320fac006ea"
        },
        "item": {
          "id": "c670423a-f784-43db-8684-ff5dcae4c85b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a7b44d3-789a-4cba-b250-f59645bbdb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aad6680-13ee-49c8-b82e-8127501213c3",
        "cursor": {
          "ref": "d604416e-5629-45d2-ab1a-543506601bfd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d71d7e90-fffb-41e4-ab35-2757de186975"
        },
        "item": {
          "id": "1aad6680-13ee-49c8-b82e-8127501213c3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "95688827-ec96-4019-86e8-a76ca7641f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbe3722-07da-4435-8b8e-f2ebf63170bb",
        "cursor": {
          "ref": "bfc077e2-7c98-440d-a0ec-5154d85e4342",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "07ab161b-ce95-4325-b86d-880d6205a322"
        },
        "item": {
          "id": "bbbe3722-07da-4435-8b8e-f2ebf63170bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f16fde9a-7f95-43f7-9747-df31370ae930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2cd6c-4c35-486e-b99a-de4fda5a6317",
        "cursor": {
          "ref": "5d7f29ba-2d72-4731-b6be-d50974d5cfab",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eaf77a8c-5035-4493-b619-a5bef33f9be7"
        },
        "item": {
          "id": "88c2cd6c-4c35-486e-b99a-de4fda5a6317",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cdfd4d7b-992b-4bfa-a45d-f694aee7bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f3df01-fa5a-4ccf-874a-82fd0fefc95b",
        "cursor": {
          "ref": "46379002-d77e-4886-b91f-9e6e5b89211b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "77994b40-6bc7-408d-a0cd-fba695d3813a"
        },
        "item": {
          "id": "04f3df01-fa5a-4ccf-874a-82fd0fefc95b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d08ea6d4-f847-4105-ae22-dd449b53fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d136ba-b162-4e49-a916-6a4628c52afc",
        "cursor": {
          "ref": "ef9d7b26-1dc6-4e30-bafb-3c6704494022",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cb144354-9a51-477e-9551-7e06a9ff304f"
        },
        "item": {
          "id": "16d136ba-b162-4e49-a916-6a4628c52afc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f0b50c3b-209b-4b11-ab40-21e25002a693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a687d96-d96e-4a86-aea1-4685f7073597",
        "cursor": {
          "ref": "6d21f121-2c15-4658-a6ca-70c0c6647648",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "92ccbbbc-dad3-4bc1-ab30-cd9363e842ba"
        },
        "item": {
          "id": "9a687d96-d96e-4a86-aea1-4685f7073597",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "931f83c7-4565-4476-a129-10e53fd95647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2aad7a-1b1f-48c3-920a-e8d374282668",
        "cursor": {
          "ref": "60640e99-83f5-4b8a-bb3c-04fe1aa1de76",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "72acaa98-01b6-4e71-b4bc-db3ed8c1a3ea"
        },
        "item": {
          "id": "3f2aad7a-1b1f-48c3-920a-e8d374282668",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b87116ec-f885-4c83-a685-fbf674c3d1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52faa639-4884-41d2-9924-62db11c920e8",
        "cursor": {
          "ref": "28bc5c31-80c8-4763-8158-c4d532b44df3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d784cd5e-45e5-44b8-b244-83b0036ae44b"
        },
        "item": {
          "id": "52faa639-4884-41d2-9924-62db11c920e8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a5076b9-9a02-4fc9-bbac-7eb22ea52dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4af6bf-09dc-4f77-bbc1-fff83fbe87d4",
        "cursor": {
          "ref": "94712a31-5ffd-4fb1-9492-2e07abe485a9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7504d63e-a19d-4f14-ba77-399c77a79fa7"
        },
        "item": {
          "id": "9e4af6bf-09dc-4f77-bbc1-fff83fbe87d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6fb0722c-e1fb-469c-811e-a2dd3a00bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfae7dc-9a4a-475b-814a-5e311267ebaa",
        "cursor": {
          "ref": "7edc0ce3-7471-490f-a929-f97408ab2a77",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "99a8910a-e844-4393-8288-2a9dd249c68e"
        },
        "item": {
          "id": "4dfae7dc-9a4a-475b-814a-5e311267ebaa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1c96c06c-fc46-4fbb-bb2d-1d7af04da967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8cf755-3619-4e70-a91f-7c320a885e92",
        "cursor": {
          "ref": "e64aee30-ef8b-459d-b418-fc95da6a49f2",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "92199e55-6aab-440b-a9a2-f2975e9bc5a1"
        },
        "item": {
          "id": "2a8cf755-3619-4e70-a91f-7c320a885e92",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a41a48a7-437f-4404-b245-54bc609eded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d4c45e-c7da-4fbc-86de-50d6de13cda7",
        "cursor": {
          "ref": "020ac2a0-805e-474d-8dfb-05cb381e760e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bbb43cad-7ec9-4c68-90ea-c1ed3bf7e41f"
        },
        "item": {
          "id": "05d4c45e-c7da-4fbc-86de-50d6de13cda7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f6317660-ecf1-4234-b95a-fb2c792facc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d40b8b1-bb36-49ef-9ebd-55c025f403eb",
        "cursor": {
          "ref": "1cfd0c50-2f66-4ce4-a610-512d6efaaf34",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3ca6c806-b66d-46fa-88cd-c0499f2c63d2"
        },
        "item": {
          "id": "8d40b8b1-bb36-49ef-9ebd-55c025f403eb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2201d58-ec6c-4c00-8378-9f2460f4a34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cb6fb8-6c11-4d60-961e-a2f6d1a2b86d",
        "cursor": {
          "ref": "abb2d084-7b14-480e-a494-f15dea0a18ff",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2145b67a-2858-4e4e-85c9-53b38bfadb58"
        },
        "item": {
          "id": "21cb6fb8-6c11-4d60-961e-a2f6d1a2b86d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "61b9ed00-a554-4071-abb3-ca62194e132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ab1988-49a0-4737-935e-a07754e4ee1f",
        "cursor": {
          "ref": "70ec565a-665e-4e1a-90dc-7aa05d4cb529",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b67957ba-c6cf-4314-9da9-9b6860cb5349"
        },
        "item": {
          "id": "d6ab1988-49a0-4737-935e-a07754e4ee1f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d5dd057b-5229-41f2-a088-f7d946fb1f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1167,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476162f2-90d0-4af7-a534-0d9aa8675661",
        "cursor": {
          "ref": "0f0d2cc0-e30b-47c9-851d-197af7adf89e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "52f9c847-a82b-457f-9d54-27deeddd33fb"
        },
        "item": {
          "id": "476162f2-90d0-4af7-a534-0d9aa8675661",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0697a516-e106-4f24-ae18-efe0d8f01208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1229,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10dd01-3cd9-4bce-bfaa-01a9c8a19e5a",
        "cursor": {
          "ref": "cfdd2af7-530e-42eb-9b49-c7756c7dfe4a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5202c530-e3ce-4cf4-8640-846c6fa5fc2d"
        },
        "item": {
          "id": "1d10dd01-3cd9-4bce-bfaa-01a9c8a19e5a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0e82cee8-6c3b-4498-9974-d73e7a849a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b21ee-ccf3-4657-8f8f-cb4e8db1a6ce",
        "cursor": {
          "ref": "599516a7-75cf-4557-afbc-583b2d9e0f1f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "168f035f-3770-4933-ba45-42fa73051bf7"
        },
        "item": {
          "id": "d29b21ee-ccf3-4657-8f8f-cb4e8db1a6ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9ad3a0c-6629-40c6-bb6f-b2b925742b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9d2547-8e4d-4901-9c12-0f84143c6e91",
        "cursor": {
          "ref": "e98f3e62-40e5-4dc9-9b7f-de4c2e450f70",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e9f409f9-f638-47a6-a5e9-93201990a203"
        },
        "item": {
          "id": "ca9d2547-8e4d-4901-9c12-0f84143c6e91",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0f335525-4c7b-430f-a0ea-92cf6cebb06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbd625b-227b-46f1-905a-3b440ece343b",
        "cursor": {
          "ref": "76bfcfa8-bbac-4a5a-b04f-78717be6b02a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "35344dcb-5c17-40e9-971f-67d43c8b0fe2"
        },
        "item": {
          "id": "5dbd625b-227b-46f1-905a-3b440ece343b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e617e4fc-d301-4201-a985-9d63dd946137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9f80d8-5139-42bd-ac7b-44b76e3d9e61",
        "cursor": {
          "ref": "8f52826e-d553-40f8-ad5c-34c2c96650dc",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f0a33430-e3d7-4976-bc5f-b5e276b2b94e"
        },
        "item": {
          "id": "9c9f80d8-5139-42bd-ac7b-44b76e3d9e61",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1b6fd107-4a46-402d-a153-7419ab262f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fa8ad1-941d-46b1-9202-5ca090b35a9d",
        "cursor": {
          "ref": "62299e0e-e25b-41f0-9dfb-3f5a6bc0b322",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3eeb82e5-e107-4b8d-b05b-1f9f16b5e19a"
        },
        "item": {
          "id": "04fa8ad1-941d-46b1-9202-5ca090b35a9d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16451198-8bfe-4f8a-85dd-1ca0438e7f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7e756c-3db8-413c-8983-33b1a281f79c",
        "cursor": {
          "ref": "c033cf71-2428-410a-afed-9f9c1b9a5c11",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a07f933b-2b60-45f9-8326-5708963dda11"
        },
        "item": {
          "id": "db7e756c-3db8-413c-8983-33b1a281f79c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "03a097e5-abf0-46a4-9114-b44f6bb7bccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b622ff30-6dbb-4a08-9ef0-9c043644ed5d",
        "cursor": {
          "ref": "2b67abfb-84ae-4cda-b19f-0f865fbd4048",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c855892d-88db-4493-bf8f-0ae6c50a12c2"
        },
        "item": {
          "id": "b622ff30-6dbb-4a08-9ef0-9c043644ed5d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6716b096-9352-43a6-89f7-7f95fd29b5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bff2f39-e6d9-4ebf-be76-fcd436425154",
        "cursor": {
          "ref": "944db73b-935a-44f9-a1d2-dc72037ade3e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "924af357-85d7-4de9-be0f-7b58134712ca"
        },
        "item": {
          "id": "8bff2f39-e6d9-4ebf-be76-fcd436425154",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "520c11a9-724c-492d-8f3e-df474133692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d142f43-11ab-41f0-b47b-797318526970",
        "cursor": {
          "ref": "ca0b8feb-7484-4e48-ae9d-2c5bf2cb5395",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ae29183e-7bff-4e8a-95f6-385f2f156c9d"
        },
        "item": {
          "id": "4d142f43-11ab-41f0-b47b-797318526970",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d9dda625-b270-40fd-8cb9-d5943a3d194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9f6cb-cb37-442e-8a99-7a19d84da8a1",
        "cursor": {
          "ref": "89f2da20-51b2-4061-a326-fc5267933983",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "03f1bb16-79dd-4243-8622-e2896d50e88a"
        },
        "item": {
          "id": "eab9f6cb-cb37-442e-8a99-7a19d84da8a1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d234a787-718f-4d40-bebf-5a1ea23418e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a59d63-0b0d-40f8-82ab-c1526d92becb",
        "cursor": {
          "ref": "a04cb75c-cb36-4fd3-a8d0-dd7620b52ba3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78347571-2513-4902-b8fd-595926c30219"
        },
        "item": {
          "id": "b7a59d63-0b0d-40f8-82ab-c1526d92becb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64445b35-2349-473a-8c60-d1692bfea0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840334fc-f6c1-40eb-9c8e-0b3b919b2e4a",
        "cursor": {
          "ref": "58913d1c-a589-4878-9d9a-90021e4e48d2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f7679829-d16b-495a-aa1b-5267032c8e3a"
        },
        "item": {
          "id": "840334fc-f6c1-40eb-9c8e-0b3b919b2e4a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9613d627-6bfa-47ef-805d-66d325564800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c437fd-fb78-435a-a2ca-c61bab3dbb04",
        "cursor": {
          "ref": "e0626582-5f4d-4781-b0aa-0c9563a88030",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9f0f3a8f-c485-4045-8dfa-5d8b99754d0b"
        },
        "item": {
          "id": "41c437fd-fb78-435a-a2ca-c61bab3dbb04",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4b211f2e-5226-4977-a4f1-500bd2f7f2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa86060-816f-4070-a8b5-c7a555c09d6d",
        "cursor": {
          "ref": "bd923649-fad7-4523-ac1d-d4d5e7e604a3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dd8b1ae0-699c-4d5c-96d4-844d382011fb"
        },
        "item": {
          "id": "2fa86060-816f-4070-a8b5-c7a555c09d6d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e088a388-d2ed-4037-b9cd-29b1393340ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88308b1c-10f0-42ab-a77e-f93ac71b797a",
        "cursor": {
          "ref": "86ca351a-e49e-429f-aa64-fc32a9d8279c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6a28045d-00b1-4f4e-a325-6ab64925c233"
        },
        "item": {
          "id": "88308b1c-10f0-42ab-a77e-f93ac71b797a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c54b5bb9-6ff5-433b-a4a7-6c8530eb06d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758694dd-c0c4-4aa7-8d83-0478df6055be",
        "cursor": {
          "ref": "a346e747-c230-44ba-b6bb-8679a345f734",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f177c3a-71fe-4e65-b76f-952a9869c4ca"
        },
        "item": {
          "id": "758694dd-c0c4-4aa7-8d83-0478df6055be",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "39f2ef16-f3fc-47d5-a77b-61aaf175b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f28964-4764-467f-9735-94b25ca5bdc8",
        "cursor": {
          "ref": "3ee6ab46-edfb-4cf5-92c2-6b33386d2ecf",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "044a6c57-84ac-4f4d-a317-b35887536ae3"
        },
        "item": {
          "id": "85f28964-4764-467f-9735-94b25ca5bdc8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a0abf33a-8583-4aad-998b-9f60fca1ed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40824a0-6789-4396-96a0-13be2bb87240",
        "cursor": {
          "ref": "a9fd64e8-baa6-464a-9f93-16f858213310",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "071e2c48-259e-46b2-bc74-2fdfd9510cba"
        },
        "item": {
          "id": "a40824a0-6789-4396-96a0-13be2bb87240",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f13250f1-b3c8-444d-87f7-89797104b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9968e71-9e37-451e-b663-96443f3c18ec",
        "cursor": {
          "ref": "1e992644-f3b4-43a9-b062-ba8be664b51c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1bf74308-8e0e-497d-be01-8edd68f68269"
        },
        "item": {
          "id": "c9968e71-9e37-451e-b663-96443f3c18ec",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1fed1ba6-a381-4d64-8660-88f6a78082f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee89f4e-8add-492e-809a-f13ae03df9fa",
        "cursor": {
          "ref": "2a618b21-8b2e-4d85-b49b-3a2d1635adbf",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "706b53ce-f1e4-4a98-8082-c142fd6e9c49"
        },
        "item": {
          "id": "fee89f4e-8add-492e-809a-f13ae03df9fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df55bbdd-f2a8-4a22-8e6f-88d5a4d9b82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1db763-fb06-48b6-aedd-7e6472aa6aad",
        "cursor": {
          "ref": "c4548215-8379-43fa-8ad5-402de4242ce9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b5659f9a-f777-406a-b394-648501eabc39"
        },
        "item": {
          "id": "ac1db763-fb06-48b6-aedd-7e6472aa6aad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6ad554ef-2e37-4e61-80c7-32c03bbdf8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c724902c-5dae-47f0-bda1-219889733e8a",
        "cursor": {
          "ref": "f8826382-0cbe-43b5-9658-e0dc854f44e0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "76675b91-5b97-4d90-adba-8af95fe8871a"
        },
        "item": {
          "id": "c724902c-5dae-47f0-bda1-219889733e8a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "adb2d904-d79c-4cd2-9a85-423f1ce52d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8be76cc-6066-4557-96a4-82d05a6f0781",
        "cursor": {
          "ref": "e9ead820-e36a-41dc-94a6-87ffb14aa7ce",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "896e2878-d911-4a2e-abe2-f46c740f0a5b"
        },
        "item": {
          "id": "e8be76cc-6066-4557-96a4-82d05a6f0781",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "47662260-e262-4e16-836c-e1463c36b574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628446d1-6bad-45d3-9997-45970dad054c",
        "cursor": {
          "ref": "1cc9fbeb-9384-429b-ba25-3bc5c9379f6b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "77d002d9-09e5-431b-90dc-393c0e57faf8"
        },
        "item": {
          "id": "628446d1-6bad-45d3-9997-45970dad054c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d29725ef-43fc-4166-824e-74cbb27fa569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a4b445-c9e5-426a-9fb8-712954cd46cc",
        "cursor": {
          "ref": "2978c6ef-918d-4be9-b504-2eac563e06c0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2dd211d4-a259-4f87-8173-b95b3b1c73d0"
        },
        "item": {
          "id": "a3a4b445-c9e5-426a-9fb8-712954cd46cc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "43f59892-79d3-4089-b57c-ee4b73d88a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd995619-1161-47ee-bc79-ed44e1b706aa",
        "cursor": {
          "ref": "899b1b6d-5b41-4e0f-936d-be26c8967788",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4b06991e-6660-4280-97dc-d03f37f79162"
        },
        "item": {
          "id": "fd995619-1161-47ee-bc79-ed44e1b706aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "28e3e73e-710f-43e9-aed2-e998e85f85bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b96d06-c559-4ccd-a17d-8e3e7d8bc9cd",
        "cursor": {
          "ref": "4eaf59b6-d929-4bb7-bdfe-cea7f2a4b8cf",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4ca2e4a3-8082-43fd-a775-5a6660e271cb"
        },
        "item": {
          "id": "93b96d06-c559-4ccd-a17d-8e3e7d8bc9cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4cfc7081-901e-4efe-9089-6f96f3f3e934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf00caa-c577-455d-a5ff-a9be8c1a5eba",
        "cursor": {
          "ref": "7a3c8741-0b7f-4e58-a464-e2ec55447168",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "af524676-7d4e-415d-a84e-36d8aaed0141"
        },
        "item": {
          "id": "aaf00caa-c577-455d-a5ff-a9be8c1a5eba",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "54609904-71bc-4b34-808b-a3a3499b00c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0882401-1274-4a84-9963-0b1b6bf00d58",
        "cursor": {
          "ref": "eded3a34-f62a-445f-b949-594a0bbaf308",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fd8e72de-f3da-4f62-9c02-2271ff855290"
        },
        "item": {
          "id": "a0882401-1274-4a84-9963-0b1b6bf00d58",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ff44abb1-029e-4770-ba6c-22efe67a3675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb440f62-6243-4fa8-a92e-05b366b8b633",
        "cursor": {
          "ref": "14599bc8-c1a9-4c5a-901b-985dec4070b2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "070f325e-de57-40c9-a1c1-e355d8a649c2"
        },
        "item": {
          "id": "cb440f62-6243-4fa8-a92e-05b366b8b633",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a9ebd511-1380-4ffc-8dec-54e72c06ccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a70a25-57a3-436b-aa68-5b31c8f151a9",
        "cursor": {
          "ref": "1a78eb98-f848-4655-b5e1-edf868955669",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "843d44c5-c00b-4ff7-ad34-9ace79c87549"
        },
        "item": {
          "id": "f3a70a25-57a3-436b-aa68-5b31c8f151a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "18de5946-d579-46c9-b6a4-3290261bb6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe84c7f4-c5da-4081-9b75-c236191833e5",
        "cursor": {
          "ref": "1f9d53b5-4fd6-488d-8f4d-2aa84f5de7ca",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "62712657-cb49-4311-a0da-f79921edcbf7"
        },
        "item": {
          "id": "fe84c7f4-c5da-4081-9b75-c236191833e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d13863b1-fa4f-45eb-a4fd-ebc4720f92c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8902f747-da00-4321-b577-dd16c0ad2ae9",
        "cursor": {
          "ref": "c69b74eb-bd45-42f9-b44e-01362bde23ef",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "73152e74-2869-4611-a381-9f51968f699a"
        },
        "item": {
          "id": "8902f747-da00-4321-b577-dd16c0ad2ae9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b7981865-7420-45ad-9e8e-a6671350dace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598b91a8-61e5-44d1-91fa-d99f9cbadc58",
        "cursor": {
          "ref": "af52ea98-0da3-46f0-9eb7-0a1a1a70e9ae",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8325a324-23b2-49bd-b81a-fe856d0aa08c"
        },
        "item": {
          "id": "598b91a8-61e5-44d1-91fa-d99f9cbadc58",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70bf4b8e-2afe-4990-b656-8ba0432b8908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f254732d-1a36-4ccf-a7b3-c1e45750dbb5",
        "cursor": {
          "ref": "6dca093f-20df-4fce-b5a8-aca283692522",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "59975195-b1c2-4e48-8eeb-31117e6ea132"
        },
        "item": {
          "id": "f254732d-1a36-4ccf-a7b3-c1e45750dbb5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6aaaa544-53fe-41f2-b08c-b31074d3e82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef4cfd0-6c95-4e3e-8aa7-942042fb4265",
        "cursor": {
          "ref": "ccd1e174-c9c4-46bc-a8d0-9f658b1f8e08",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b4a95d16-a01e-4935-8c17-09b16d21af39"
        },
        "item": {
          "id": "0ef4cfd0-6c95-4e3e-8aa7-942042fb4265",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c502edd3-0d94-4fd0-9efe-8391118e1d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5305318-90f7-4383-892e-d3ee8cfbc873",
        "cursor": {
          "ref": "46027de1-bd16-4490-93a1-90f003cd2aa5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b6aca642-08be-4d67-8b0a-03ea24a147e2"
        },
        "item": {
          "id": "f5305318-90f7-4383-892e-d3ee8cfbc873",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "426978a1-5653-41fd-97e1-9a06b77fa4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ed5e7a-045f-453f-9a3d-d92ee896948b",
        "cursor": {
          "ref": "99f7b8ea-c1b2-4b26-8462-4d6fe4a70957",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3a93043e-7de4-4852-9ab2-c5663a574100"
        },
        "item": {
          "id": "78ed5e7a-045f-453f-9a3d-d92ee896948b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3ffbada-2c63-4dbb-bc6e-a2219adc564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30899680-bf25-44aa-acc9-48bf99ae802b",
        "cursor": {
          "ref": "c5d706fb-c212-4957-9b5b-b21507076877",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4750bcd1-1bf4-4cf3-98ff-c3f73695170c"
        },
        "item": {
          "id": "30899680-bf25-44aa-acc9-48bf99ae802b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a956fd52-ec19-44a5-96c8-eaf80fd20310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36efbe23-63e7-4d63-a754-225e6b42a024",
        "cursor": {
          "ref": "575ef0ef-1e72-4445-a84e-47f652874855",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cb96689a-209b-415b-9c01-704c7c7b549d"
        },
        "item": {
          "id": "36efbe23-63e7-4d63-a754-225e6b42a024",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8d9aabfc-11fb-49e9-bf80-d7d8a5ac1581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df78d93-0abf-4363-b040-6b1276fd5e34",
        "cursor": {
          "ref": "bad69dcb-af38-497f-bd7a-59da8a1d2658",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a997420b-25d6-443d-81d9-d80d8de4df4e"
        },
        "item": {
          "id": "1df78d93-0abf-4363-b040-6b1276fd5e34",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "615a3d58-3034-428b-a330-e4048131eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62403e5a-97fe-4054-b1c3-7a95998231d9",
        "cursor": {
          "ref": "1d039bf0-e454-4e0e-9c4a-a98b5b34eb53",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e4ee5053-7da3-4c4b-a0bb-3d1626c3baa9"
        },
        "item": {
          "id": "62403e5a-97fe-4054-b1c3-7a95998231d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "62fbfa1f-e0c3-4193-82d8-0ebe3cad3639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e584c13a-0eff-4c1a-a638-b47d5e443d84",
        "cursor": {
          "ref": "109ff389-7a5c-4f03-8bb5-bfd7aa0170a7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "372acf44-4d91-46a4-ae43-44f3a1d4cea7"
        },
        "item": {
          "id": "e584c13a-0eff-4c1a-a638-b47d5e443d84",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6873ae08-18f5-4ec6-8090-7946b38f127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec27d89-10ed-41c4-86a6-edf3872965e3",
        "cursor": {
          "ref": "42d107b4-5e98-4c82-bd3b-5973b88fbf65",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ac68d029-f2e3-428a-87ef-1cae5043dea9"
        },
        "item": {
          "id": "dec27d89-10ed-41c4-86a6-edf3872965e3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6aa0d3f3-4567-4f4f-98dd-4b82c02e9449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5883b814-426a-41c7-bb70-18fc7251ea5e",
        "cursor": {
          "ref": "8f8d29e8-f5a6-4a4a-8e2d-bfe0c0d7416e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "acc3d787-8512-4d2d-b5b8-872717178e2a"
        },
        "item": {
          "id": "5883b814-426a-41c7-bb70-18fc7251ea5e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8706c8d3-aa4a-4d86-9512-5c4fbd4b4d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1161143f-49d2-4d2c-add7-e6de7f578c4a",
        "cursor": {
          "ref": "be4eeca7-e0ae-404e-9f8b-21a1ade1ae46",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "159eea3c-9f36-459f-88cb-d4ab30ce0b91"
        },
        "item": {
          "id": "1161143f-49d2-4d2c-add7-e6de7f578c4a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "523fff36-fa60-423f-98d1-cbb1f2f715f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780437db-2243-40b8-8bf4-9fb738b073ed",
        "cursor": {
          "ref": "1806e298-040e-46ae-bb7a-79e5f03b0fbe",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d4ea65dd-33ba-466a-bf81-432c08987ce0"
        },
        "item": {
          "id": "780437db-2243-40b8-8bf4-9fb738b073ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ba8babc-6bc6-42f4-a86b-9c28db0aa27c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6ad38c-da4c-4348-be27-100bd9cff587",
        "cursor": {
          "ref": "0b76c2f7-53b4-46ff-86a8-89081f5c60ab",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ed3eb094-d644-4b40-8806-515890921862"
        },
        "item": {
          "id": "8b6ad38c-da4c-4348-be27-100bd9cff587",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1d174344-992a-4071-b35e-74c836a2ec42",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0104ae7e-3d33-41c7-ad61-d12f15e5a4c2",
        "cursor": {
          "ref": "e7aa9478-cf51-4079-a4aa-ef47cb7f23b6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bfc9a65d-fc61-462d-8294-3a708d3a0411"
        },
        "item": {
          "id": "0104ae7e-3d33-41c7-ad61-d12f15e5a4c2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a4ea001f-07a3-47bd-a699-da1cf2e7df94",
          "status": "OK",
          "code": 200,
          "responseTime": 3545,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b28c8a-465d-442f-80ee-32fdb2e586e0",
        "cursor": {
          "ref": "f935197f-7263-4221-ba47-02a5727591cd",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5b2c90c3-d342-4c21-a3c0-ffc0fc2fac72"
        },
        "item": {
          "id": "d2b28c8a-465d-442f-80ee-32fdb2e586e0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3f500811-94c5-4fa5-a647-007dbfa71ab4",
          "status": "OK",
          "code": 200,
          "responseTime": 3201,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b54667a-cb0e-4634-ae04-ee330fd40eea",
        "cursor": {
          "ref": "725569c4-88ff-41ba-af24-a79c6869dd6e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1b5af5b-3bf1-49cc-bdc7-2bf192a02571"
        },
        "item": {
          "id": "3b54667a-cb0e-4634-ae04-ee330fd40eea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57e42ee6-4e7d-40a9-8367-0ca576bbbff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b54667a-cb0e-4634-ae04-ee330fd40eea",
        "cursor": {
          "ref": "725569c4-88ff-41ba-af24-a79c6869dd6e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1b5af5b-3bf1-49cc-bdc7-2bf192a02571"
        },
        "item": {
          "id": "3b54667a-cb0e-4634-ae04-ee330fd40eea",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57e42ee6-4e7d-40a9-8367-0ca576bbbff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def3275e-27ee-4b38-894d-c25a024b1093",
        "cursor": {
          "ref": "71a54dd0-b81c-4c03-82f9-202a10d13cdb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d37ac6c6-c144-4a53-9690-b0d8a21edca2"
        },
        "item": {
          "id": "def3275e-27ee-4b38-894d-c25a024b1093",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "76d115d3-cacf-4c45-9b2e-b7a3f3bb555f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228122b0-7766-4bbf-8ad1-b00eac2e0ffe",
        "cursor": {
          "ref": "08d28267-f772-4474-9d0c-5da133e1dfa5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "32a7acb8-3750-474c-aca2-481f28aab95e"
        },
        "item": {
          "id": "228122b0-7766-4bbf-8ad1-b00eac2e0ffe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "29adaf71-6e78-45a0-b3bf-efc95dbc6ee7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}