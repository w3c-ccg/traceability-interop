{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "198e1225-b54f-4ccf-b243-cc81fb6a1069",
        "name": "Clear Cache",
        "item": [
          {
            "id": "68974c5e-4b83-43d9-999e-4f826a8cfe76",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a05c243-58d0-4723-bbed-7f5c5365cca8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "06d18b18-a89c-46b6-93e6-d6c11bb19cb4"
                }
              }
            ]
          },
          {
            "id": "84086ac1-545c-4f0e-b6c5-b19288c7e79c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5cb87a9-d9d3-4976-b398-aa3bf2d46313",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2de4f4d9-3254-488f-825d-4d4f70677562"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "70202e54-3379-481c-990a-287ec7cd1cb8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0bdbb32d-3006-4b6f-934f-6e70c7d3d7dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec332c2b-ecc5-460b-8868-bcfd66fa0f3b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebca776a-cd26-4b53-a94d-b47c4a41a0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fabead2e-a591-44cb-a3ce-2a726ba88684"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88b8dd71-6dba-46d9-b8d6-95b4f363315c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdc12dcb-5fb3-4c24-8b68-e98568f13e82"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d46c0608-f234-4c02-a5f6-0e1d0ce5478e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b10ebed-3515-4d0f-b447-04d9079d57ae"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d4e70e4-95a4-4f2c-8b25-923a6db4eb7c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7183ddb0-1808-4224-8e40-3ae2fdb04c36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05906c43-09e0-484d-8a5c-e5a222e8b353",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc53c334-e817-4b3b-b710-8d1c00eea506"
            }
          }
        ]
      },
      {
        "id": "aa9b9e09-a352-4518-ab1d-e43eb290775b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd6705ae-7b8d-4ecf-965a-fcd62955bfe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7b5d1cb-1efe-4452-83b9-3a13e2a562ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "439f6b04-61aa-4ebc-b90a-1ece560f1344",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f944f-af59-4676-b9ae-499d05a3e4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d769a8d2-c29f-4cd2-9083-7f77245334d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddfd1bc-26d4-438b-85f3-94109236e94b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9c037-5ff4-470f-8bcb-f346ee38556f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b630c2e-2928-4531-acae-acecb289304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ae2df4-19af-4524-83f2-3a962e0ed35e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887092f0-9b93-4ee0-82e8-fff8d5871404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe707eff-7cf5-4dee-83e9-ebc4fccec5f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0088631d-c652-4c49-9476-c006bba1c11d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94047b58-6df4-4053-a150-d3ac4e560ba1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1bfdca-8cfd-497b-8120-9d8de8a77171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a38cccfc-d91e-4219-835c-033a937b82f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a85e5a6-fecd-443b-93a4-87da7ea73757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563b9925-b1d5-4805-9332-064468054feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9298f2c4-bb8a-4b5f-970b-22363e6c3a5c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b9bef-916e-49fe-9b7d-5deb78e103f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "037284b4-3427-4b65-97b7-dcb0bf4936ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafb7b82-b9ba-43da-be19-928dd28d28ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9a13b565-6a6b-4128-84a7-55885700da00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "19684e0d-91f0-42cd-b738-43736dfd47fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d2ad83f-eba7-4f47-9ffd-493e11172522",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f61829a8-6ca9-4c96-9f01-e60f7c65278c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3b719bc9-1434-4470-abf6-18baccd72294"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03e75059-5497-49f5-9b4c-8adab2a65cf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a547b54e-02b2-44fd-ba0e-79e0160879f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9920ecc-2314-422c-8f5a-a6609a8e35ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb4fac25-f092-42ed-bb74-4247e5929617"
            }
          }
        ]
      },
      {
        "id": "68884c07-6dd2-4701-8889-4ca4b055f97c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6fde90f6-529b-4ac3-b1bf-204940bedb0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d9852dc-9fc4-4552-bc2a-84e542306fdd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0c439d0c-50c1-41d9-a5ac-bfce750dccf7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab90e1-32d2-4699-82e5-834670909ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a6b645-9bc2-41c9-af7b-01a002ed02b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9bc11-fa51-4a70-9c88-0c595a10fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "148d7f63-b1ad-48d0-a4ca-3f3f7500768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68786799-85ac-4f53-8dc9-2949d38228e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a8882c-2bc4-496f-9ea9-8261b599a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41264379-27a8-4b8c-965d-db2472934613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a5e002-e867-430c-941a-409db52266ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0be46dfe-6dc0-4ca3-b435-be6940cfa372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf466368-1ade-4e9d-bcd2-1670564f8afd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6850a904-830c-4050-8327-a8d683ba1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9f73a5-a123-4714-b0f1-c240250695c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d2de54-132a-429d-a8f9-c3114a89f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c10d1424-bbf4-413d-864c-14ba767f5237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149a895-7fca-4fdf-aacd-967319b45056",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac77c220-8724-43fa-97e8-096d14f7b797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f4bdca-1313-4bba-a698-68cf80401b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2073da20-e0cd-4d99-aa10-0f192e69d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3be38d-a2f7-4c1d-84c7-67846b8dd4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f30cc4-cd58-4528-86f9-57e5c3e4ef36",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff465590-c517-43cb-9d8d-9e2d68279df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf4fc28-b195-48dc-b254-81b44cc6bf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb4fab8-18ba-40f6-96c4-9ad7c9e2e2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1ab05d5-d4ee-4a6a-ba41-2d7a12aa5dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153510e-6f93-4609-b77b-8add2bddfda4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2776c6-137b-4265-8875-cc0db75cb5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bcafa2-8a75-4d37-9542-023aafa2646e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d806a9-3fe5-4a17-9b33-a02cf1795e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78ff0f56-775e-4175-ac1b-5cd0d408af22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d093515-4928-44c7-bf53-125db24dd989",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac0cc0b-7b08-4048-a861-d7f705602c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898e8652-5fc2-4e1d-9be8-28ff88f5abfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca12259-1ca2-4b40-9d83-36af0c1b232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77dd7dc0-4124-4ed7-8ef6-a33955b3be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa570a19-6788-433d-8296-b9a4a7ac9c36",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c7e10c-a893-471a-b562-b8874c2d7991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893ff7f7-14fa-444d-8f08-c175c3a76aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e471ee-f20b-4764-bd73-7b7437437af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6bd2937-d5b7-4bac-a5f8-630be60ac8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bfb757-9d0f-4f55-82cb-bf352d8a2b98",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247e7f6-f0ab-47c0-920f-f6ad8fcc9d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82da69a-35d9-4f5f-8b49-2867796319b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e130486-a152-49fb-ad48-28ea8aff92a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2778ed1-d560-46ab-a8fd-da7b92d18952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a202ee1-bc66-49a8-8532-0dbf5c6b52a0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadaaacb-fe62-4d65-a583-6a8b161585ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e206a583-b11a-425c-bf04-53c48fa6525a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb648ab-0d37-406a-a62a-bfca780ab082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f208f3-7497-4099-8e27-0877169f14e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43135731-4b54-49a7-8b9f-ff7c8fd2cb65",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49479753-f1c8-4828-8e51-db6a5253fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2685fc-dacf-44fa-8e81-c5ba108ef956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ec854-c29c-46ca-b5bf-2d8a65edda91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de54d21c-979c-4275-8b4e-cce751fdb990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1691d2-7081-430f-999e-05f57bc821f1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e22608-6f2d-4e07-bccb-8cfc93a313a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adceb89-9dc5-454c-8017-36439287ae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59deca58-16cb-4800-a382-36d83e679dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa3df21-0173-493d-8401-8fd6ebade624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea0ad94-b56f-4a5d-b1e4-b31318ee1171",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbbc2d3-359e-428b-a86f-3ad53a23b0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027630e2-95df-457c-b5e6-9f403f29d31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec2c657-fa5d-47e4-a62b-04a62c942cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a0a00c-7de1-452b-ac81-9e7f3da4762f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcabb54d-aaba-4bee-9e3d-3d99b661032a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a21f550-b8f0-4a88-9af8-53781fe1ea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23591abd-a8da-4bfc-9ae0-2ff13b28b50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14428237-d99d-4123-bc66-ca816a6a3424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461ff08f-7f59-4ee1-b217-2e629d0bf7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad36fe6e-c615-4ee0-a00b-c6d38415f1da",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96cfa14-2380-45b1-9bc7-1d0f4157910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57967971-f67f-47c3-b632-1972a5a8afba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c918d6-6bb4-4fd5-ab12-3097dc2f44aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a374271-f2a1-4318-a1e1-dd104b0f38a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d9b865-6f16-4ad9-8873-fa18bf13d6d6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33014f6c-6e91-4a5e-8d06-bd1763878732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a62ab64-29cb-42d2-bf5d-08de283093f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3f5c36-367b-4297-b8b5-3a987222bb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce303ee-f1a1-4b92-ad23-c052d97f0fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e4792a-5121-4297-bdb1-c13fd1369138",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c97dec9-43f9-4813-b58f-be3fdccc03e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1464010-72a4-4e15-8b0d-874cd6d73e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cdc65d-538c-4c63-8e26-5cf317a4c3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60718689-b32a-4176-a766-3bc225461ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba8e3e1-5237-45d1-9f5f-859ab295b8f1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2926fb25-54a5-4096-b379-bcbae929db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca580cb8-66ba-434d-8443-e7ad6e9150e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f951024e-9d0f-4beb-b5ae-3c7875cfa31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91768ac-605a-41da-8fd3-9877003f65e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5149441c-c3a1-4049-b7ab-3ebe91603d41",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e08ce7-23ae-40e4-a1e5-5799c62c9a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e95864-778c-4302-9847-56d7dbfa270e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7ecc1-9fe4-4d55-a83c-f1d67f331761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7cdfbf5-063e-4a09-a804-5624bde42212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd0cd0-23f0-40e0-b548-ae6f145499e4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a33dfcb-a3a3-4fbd-9e5a-95f41bdc02b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a3454f-dd2f-4c6c-8c67-ddf314290c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07850c13-add8-4cce-b7d8-3ac3ab5158e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "693dc712-7f77-496b-a22d-2192405f4b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc255a9-9aa9-4b81-865f-456852897ede",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76686582-ec2b-4ae6-8d42-ffa3f47c5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0aef1d-2338-488d-b359-c309caacca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874fdad-3290-45fd-af7e-cdefa6062ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a87d4d-aad4-4b63-adc0-82659f589583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d2ccf7-aabf-4440-84b0-c571472a4239",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bf0799-4e33-4705-b3c6-08f12bcff15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66a6ba5-6f79-418b-835b-489ee313e4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e44109-49a3-44c0-bbba-ead23d25f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90ecddec-d7c5-447c-952b-7eedc2d75a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaeaebf-360d-4c04-acb2-aada86494a8e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df599b3-972b-49dc-a5b9-e04446a7c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58bc08a-63bd-4974-be11-a845b965fcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d0ba54-7c5b-4f55-9a80-460d446abb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c59ddc80-3814-410b-a984-39a30efb8080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b7fd34-97d3-4391-92ad-a1c7ea55c972",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a8a932-b5e2-403a-9ddf-fb2288bef38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4565f024-8773-418f-b5e0-45487292a46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a007d39a-4cbe-4412-85cf-693ad491c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "233f791d-45ce-41db-9651-a1efdedcccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7553ab8-359e-4fdf-832e-c8dac13d1702",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f51acc-69c5-4db4-aac4-583cba82eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f476a61f-6ecb-459a-9817-8178effc334a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ff25a-1520-4eac-b527-107175d49b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e06a546-cb0b-41dc-a55a-db33c7bc23ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71a1f27-f759-4392-aad3-c1bb3678dc48",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a00856-d23c-47cb-a008-94e45d037ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d21d2c-0d08-43d8-a1fb-1463cc47724c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766708a-6f97-4b38-b100-37fb226f21ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a62528-088e-4c79-b4e7-2eef53fd0da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c1e6e2-4f42-42c3-a249-bbf73f9139bc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b95ccc1-221b-4178-85d5-1fc5359a9942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b61ba4-8481-4d3f-9c1a-c08163c1a486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55148d4-d868-49c8-8cf9-137d88bc98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76d6565-3e5f-431e-b632-f36cbab61611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371c27e8-1d55-4820-ae5f-9ee37e393bdb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719177bb-a59a-46a7-9ca2-45b674611106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bea624-a0a6-4cec-9f1f-6666c40fab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b682f2aa-cb2c-4901-8d86-97d050896d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e823c8ba-4d06-4641-a4a3-82283b603056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1a837e-fe3a-47ef-84b5-c6b675421619",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06ae053-d66e-4834-b44f-18392f3ad94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4a9414-bec6-484c-8b8c-ce7448dedc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae94f6f-3de2-4ba1-90bc-192dcc9f9d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a28e91-61ab-4873-91a9-328a572fb555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e128a955-0557-4204-a290-1285287918a6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d301ef-63d2-45a4-b826-1bdc86aef286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d210fd-b9be-4229-8639-ac636c2af2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5499f7-19bb-4c1b-b896-86a0586d6963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "140c317a-433a-46c4-be4a-3b328356f6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac134f-c132-4110-99d2-769384b05f9f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e66b04-9f7d-4d26-9937-17b95bc8cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf335a16-366f-4b7a-8671-8fea6919b0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc0cd23-57c2-4a8f-a282-a0cca837a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9582f770-4090-47db-8a83-66896b33a8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea117e26-1f05-4e2f-ba93-f59759be21d8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66249ebe-f06e-4341-bcb3-8047ab285ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1a217d-2258-402a-ae84-2e42eb0381d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c4b16c-60e4-4daf-b339-57a79a538a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7cd96d-766a-4c64-913b-d96de450b9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94bd6cf-26f9-4d89-a567-bb275afea5a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71980b25-3ab4-4129-86f1-e15b3c45a63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f134458-65ab-4bae-b1e3-45fa33c56ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce402d19-db24-4d69-8a17-e0b0de2d4bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceeaec90-b9a1-420e-8023-966ae150b34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be280517-04e9-4556-b873-af44d1388578",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e7e1f5-c36b-4fe6-af7a-409c963b8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae5e80d-e069-4ba2-a09a-48ce662cc74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cc13bd-6861-4110-acb4-e78dbdc2c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94160ad9-a94e-487f-88a7-f2df53718f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a098054-7474-412b-a649-e26b8ea10a8c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8741c6d9-af56-4a67-97cf-deb5f4eb4a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa50802-cd54-4dd8-bb88-0b301148f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054d147f-f471-4516-bcd7-a4eb9097eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f0af6d6a-08e1-4bb8-94d0-be9d1ba10413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cd98c3-5e9b-4aa1-8a57-53fad5e96e0e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbfcf75-f036-4e5f-afac-07eda078c765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b61020fc-8218-4a73-886e-f523327a425e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf103ae-8114-4787-bdd1-4813ab7aa9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb9ac7f-bc55-4898-8a71-6014320ab530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a64e52a-9f9d-4409-af30-0699b53321ce",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9d2cdd-f1fa-4027-9ced-8aff135cb265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b07916a-d53a-4d5a-98f0-323303490cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3ae63f-593a-4f13-9c8c-7ed1dfe1f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fab0789-0b7c-4900-86af-765ff4d9045e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44914bb7-79a3-491d-aeb2-280db638a4a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8ac229-10a0-4148-b7ef-eda62c9b70b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8564714-6812-4669-b362-27ac53187690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c986407-276b-4228-84dd-eff1596e7d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "399d19b8-0530-4592-b5b6-1b8ad63ce6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5ebb5f-0153-428b-a787-21a8878609dd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8380b9e-0149-46c9-8ef9-6782ee472fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abab12a-6227-4ec9-b654-f73b3f7b5b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795b6636-0c38-4afd-9455-a11233dbc710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9f99a0-bc02-40c0-a53f-458e6b6599f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bb7deb-87e1-4ad5-8083-8f3856348c95",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83109e98-625d-42c2-a417-e9c0546d752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69cb6e2-925f-4b14-be78-b35bec7172ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e785525-7f53-4f77-8c6d-541e01568a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bca1c69-cfec-4d98-a147-3e03ae402a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3873223a-c909-432b-a1a9-bcef246e3975",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4cbff6-e9eb-417a-83dc-826271eca281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04749e7-ae7d-41cd-8530-92fa96f3cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421a5c53-d009-4066-b55b-02fe7de2450a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c49267-42f5-4f52-b7f6-c5b11f8dbef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d082c96d-bba0-4175-8d13-a0cffa9f4367",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5faa918-e347-434c-ad20-dd9b740e301b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9df3253-5813-4faa-936e-3dd3cdac409d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8284c526-bde2-4008-a9c7-f9a077a8e47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e7237a35-2ebd-48a4-b5c9-19b3e1b98e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d79a639-f72c-450f-bc55-5af861f350e0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60923adb-6228-47d2-8338-d6b04388e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26303729-f273-4ff0-a208-78b88aa24710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd288912-4843-4b15-a74d-f23e57dd1a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d43788-98f2-41f0-84ac-05ca725bc337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1bb915-a423-480a-9bb7-0dae82d6daf1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67317d-0139-4570-9a8e-0b76f81d1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9680f5c-2896-4c18-8fd5-0847f08d7721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3f54c6-18f2-4a61-a052-42012c4ad755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8718dfae-e11f-4d46-ba50-b1e823303b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825eb839-1af2-4d58-bdcb-d33f61499e9e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2ef257-93e9-4f8e-95aa-44b3927e80ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82eced54-3316-490a-940b-c1f8971d8873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4904cc-6727-4b3f-8047-445538e8a7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29fc619b-56f2-4027-8e0e-41feca317535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0ef76d-6cbc-454b-8697-024981aa2ff8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9822f7-9e4d-4006-97f0-caecc818488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075e8db2-e463-41e8-90ff-5367fad126fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334d4c73-fd17-4611-ba4b-c195bdf3e771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "542eea54-6f52-49fe-881d-0200d95b75e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074de9d9-9d46-4bdd-840b-a648aea912e3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c1a3cd-8d47-4c05-a310-db5b00d71e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d334182a-fa51-4d1a-bf84-d06178c5a37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0706e9-7961-4c57-bbd7-44e28c1ab3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1d4314-82ce-46db-9557-126f1dfbac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ed4eb3-79f5-474c-9570-76c25ec7a685",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2e3ed-fe51-48ac-88ed-8f0d2b68da1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd08d2fd-9a4e-4aad-ba78-c164bf335cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65021f6b-7323-41a9-a805-afa5da531859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6715edc-8374-43d2-8037-1953db2ec1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62cf614-2cca-4e1c-8edc-6db2f8aa66d4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80956be4-654c-423e-8adc-b9a142b26fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6ac872-6ccb-457e-9306-71db0b0e3823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62498e06-0c00-4d92-a948-0aac7a857332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4108a2b-97a3-4a85-8d3c-d9ba604375a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcde0d4-3658-419d-8d95-99fa003cce4e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2db00-2b66-4922-9b58-b296978b2762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e3a2ca-801d-4de2-916b-833d9af7da65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e19cfb-4e96-42cd-896b-6f2d8c2d5f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e691d89d-7b65-4943-8036-4bf6519816d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4c547b-cf01-441d-9f09-528e36593c30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc900cb9-f383-4a4a-84ee-ee6fc7aaabe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a8261e-e935-40c5-a642-739d7173232f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d344c68-0307-498c-b06d-553b64cb03a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2c211b-41cf-43ad-8a37-9516ae9819cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4498b6-942f-4b68-ab60-7dd0579ec66e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c979a1-9428-4ce1-b595-fda4713731db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a966e4-d0f6-444a-bdc5-374184eeb77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662609c9-2e6b-45d5-8e5f-74488ac0944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2d399-4793-4845-a75c-493f1ed9d4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d359e8-335d-4ac9-9ae2-9d36033c1bbb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c48da54-bc54-453a-b052-f0e3593417b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975d32f9-e5cf-44d4-b1d1-84cd68b8f294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef824b4-5ba3-4d31-a538-5ef22211d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5076fe84-4d95-4664-b6b8-ba8ed7a777a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d063faa-8b43-41dc-99c7-a87834bce615",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272a25f4-3290-4343-9009-08eebd2699e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4278b2e-a92a-416e-bba2-4d1dae45a3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d29248-1133-4585-ade6-2099b602fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fadfec57-cc03-46fb-8b16-96cf7e2c5c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7905bfe-17cc-4529-92f6-f132281a46f7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e9cb3d-502b-44c4-8b83-ede9a73b550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31a905c-523c-40b8-9e96-8bbe3b4d9eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ec83ce-2246-416d-bc4a-8d9bead83493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12e0edea-98a4-4184-9316-d046c4e30a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab29dc0e-2586-46b1-9449-f60cb559ae18",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142b457d-abdf-4812-a431-b347a71e0a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190b28ee-6aeb-4c0d-8667-685cdc3a310d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f5f5a2-a31a-442a-9154-7d38b7b98489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a21fd1d4-7b3a-43ef-ac87-b172380e318c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fffa27-30ff-48d7-aeea-ae890f93b63f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34734c48-11ef-4596-817f-380067224428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e802ae4c-617b-4bd8-986e-2cddc87b71bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf4978-5c1b-42e0-b7a8-8d91c58ae338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f98069-9906-4c91-8df5-c6c17c7ef758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d3c2e7-ad99-47ec-bb34-37c52d3d6fa3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593599e7-7ad5-4cdd-815e-3c4795441e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05a5c7f-8ec8-4b92-a55d-22e643475624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83142d08-0b17-4302-8571-37da2e2a2c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e570530-498c-4edf-b865-364547b82473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ada0b0-6665-478b-8c2b-b7cde1d8be75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697688f3-62a3-4d7d-886d-84179d9138a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bad1e0f-93a7-4ad1-b444-a3eda04eea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0934c13-71fe-4dd9-9c98-c85cf1c27dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bf28d1-c269-413c-bc4d-0cd77c39575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9f56db-f51c-4da5-84b1-81ad1dc31058",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c3bed4-b46e-4799-818b-4a850124de48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9812e6-d1b2-40a1-892c-527197fd71b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c971382d-a6b5-41e6-b9f4-7908b4882360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5275ab7-1703-4b03-8b91-104526b0836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0bdc06-4e96-4025-a235-0e93ecb7cd92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75c205e-aa71-4b01-900a-5f6468f52d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9715e7-3287-49e7-abe8-61aef15de3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0c2be5-7eed-4426-b4e7-f3edd7582c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e003285-3257-4e64-bddd-7e38349e8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d4ba0-6d8c-43ad-81c9-57020508e351",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de16bb90-784c-4e37-b555-7c0fb1d2267b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d58ac4-b155-4e79-a7e0-4f31fd5a3870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29966dc-5000-4cdb-8a17-5c64d4947ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b054e29-cd5b-4a78-b947-43a4343df39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d49ebe-e79c-4cd8-b390-9f7a9bed7d0c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b8bf20-fa4a-438b-b74b-d3b8df7ca0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab602b77-5671-4152-b679-ac807519a898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847db2c7-98f7-473d-9f2d-9eb0061efbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59942b54-7a77-4137-81ba-d04d3071571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64d4c82-092d-4698-bcb2-9333b1711a45",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648309df-d799-4367-a5e5-10ee22c63758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f1622d-5609-489b-b34f-141397c50370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7e5755-ddff-4d3a-a6b9-95e2363a217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10ebfd7-31a5-47dd-aa64-856ef1d4773b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0635a3c-b588-4fdb-8d34-8dc3a66335b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb5bb0c-e14d-42ec-8a53-d5c583ecc406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedbdc28-e9ea-4163-b15c-231edc9f3b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7ee393-8396-4274-97cc-4608bfbfe9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57edff03-4d59-4006-8539-f287b6f0b2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f811f4-0a9e-4a59-9942-85d37194d413",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e40b5a-03f1-4635-a05e-688e5e71d658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8894c7-c673-41dd-a582-edb488b0deb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce395f-f0f5-40d9-ba23-e76eea361d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68654d65-f77f-4216-a060-c01aa9a655dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d16696-1c68-4164-81eb-b4bc378798be",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7750e3c2-7a8b-42d2-a16f-4b1bf6c8094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca49f3cf-9194-4eff-bd3b-8162d6e0954b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508f3d26-8062-4780-a2b7-5534aa5e73d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df010f4b-f8b0-458d-829e-8a858bf69f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8935769-59e3-4a07-91aa-bb314c620e38",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ada063a-7271-44a4-9b94-85ee92f39605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f384811-8294-42e1-8e30-376f85944817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babd89fa-78fb-4a08-943b-30a4fce2ab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "187411ee-0f94-49f3-9e0d-61de9f3a6d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fbde70-18fe-47e3-8c76-f29f2c54838a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d95ab29-b277-478c-98e4-7b67d36d4cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a08e14a-bf50-49c6-a04b-bd92781c918a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96618993-45f0-4168-972c-c288d06ca25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbae793-b82b-45bc-bd68-0dc2b621928b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478a0292-a1e3-4699-819c-d5f9706a87e5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef22061c-05c8-4c16-a97b-705a9fe8fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d34368-7cbf-4bcd-8f7e-d034cd5b04c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a1baa-cec3-4b49-ae8b-cb1cc8b1540e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a068a785-45eb-4ee2-8a4c-a695df8f0701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a701a19d-e5d2-4b61-83a4-8bac95f944a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8432b309-6d08-449a-8e8a-63a621c40ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f24a2-cabc-466e-8abc-5741a788c776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be1d910-52bf-4809-826f-f315a42b759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1871f6ba-6b94-437c-84e2-061d1abd81fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a15158-a877-4ad0-b5a6-ab78f190b1ab",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c19a9-6e5f-4c4a-8ac2-a1e4b9e079ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b16acd-daf8-4cc6-a19a-047f33bdb3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659c3ca-3dbf-4df3-b116-501b41bd85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e71b41ea-e5ed-4beb-85ab-153bf5fffb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641487be-bca8-4bbc-b794-f4eb66034c37",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6f54bf-710b-4932-b1e6-b927d1c24271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a498c4-fcb5-46e6-a121-9a50e97743d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b914b6-a62a-4d45-8da9-353c1c0fd206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afbd323a-8f6d-4333-b2e0-214ac7e94de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9bba09-6110-4bf6-a6de-db7d4a96b5a5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a402b-3996-4f12-8288-1f84b6a8124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45168f9b-757c-4ac7-80b0-e85abf7e7e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71b1e4-efbd-4a01-b949-6757ea8c026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29895c31-96a0-4730-bb22-b5d46a5a9aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb862b5-df1b-4b65-9b6f-eb26baa0814f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66248917-f70c-4268-a7d7-282ff8d91adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e95674d-85fb-4390-8dc6-4d9162c6eaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021ee5b1-ba8a-4429-8ca0-439d6c569744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e77dfc-dee2-42d3-ab03-f1e6917e7d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd1164a-de99-4d0a-9dcc-e297f17dfeab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ce2acb-94d8-4982-bbc2-ddad7fad3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed27021e-9761-4d4c-bb8a-cba272f7d1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7527c0d8-fc28-4100-b86f-b98e07765bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "739d279a-5060-46d8-8a4a-3dd148f7413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6578eba-091b-4771-8c6d-43d5266b33d6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e21327-d7ea-491d-9ad7-7e66289c5a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8159c12-da5e-432a-9c22-446fb700691f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e78ed8-24f8-42a0-8024-e8130fe8d11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea07c80d-3a0a-49eb-9206-957dc980a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5a8161-ffac-4dab-b2c0-fb0a2d091f62",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec6df81-6c59-4969-a7fa-621c3c8bb565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d8591a-ac7f-41db-a501-0d413037d63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe8b508-04ef-4f10-9cd9-f0e3372cd96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a41a2ed-75d4-41e7-af76-58c16eae6720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc96fa0b-3580-4383-971c-9352182b3c25",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869ef902-6d41-4bf4-a9b3-e5569d82d87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3116f8f0-2af0-401e-886b-56e89d5be409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d150be56-839e-4249-9d98-5a6fe08ddf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a880ace7-2f4a-46bf-b4ca-d2a81a6ddadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05baad53-68ef-4299-9199-ed7a672aaee3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56646187-9e9d-4d74-bb97-0e6a13abc1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5cba53-228a-4a84-8066-7057308aee43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b7c08-7077-4818-93cf-e230f77bb2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5b7a83-5ccf-444e-b258-65cfac15a0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bcb777-f50d-42fe-9f97-5313edb27a19",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc423c57-be95-437f-ad47-000d4ccdc95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8165fa4a-2922-41ad-8a6f-2cca64b0015a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c3b761-5a10-4e2e-b75a-c3850380c4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ba4ad6-8a97-4a55-9709-871a983ccf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a2938-12ed-4a82-9137-98025d745128",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cc051d-d4da-4a57-a71d-ed9161549e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae919dd-f4df-4242-89a7-52150733bebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6380ee-f79b-4a74-8389-198b390835a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c3a999-88e5-40f3-83df-d666d6061435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f81da3d-7595-4f0e-9d27-280a0071527b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760b6268-fde3-46a0-ae8e-3901aa7d0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873c061b-c50f-402f-a495-c6d0ba45354b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb2b4f4-5a1a-44fd-9216-9c8db94f5569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60c6ec6-1954-4a64-9681-27049e7bf246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a80afaf-7aac-4178-8151-ada97b1f685f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51ea897-526d-4090-a088-b1e242383f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7442a9-e73f-4139-ba5d-ed6c57611428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1d999c-cd8d-40d2-864d-3eea7aaa04ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56aaf4d-725f-4d0b-80ba-e71c8e1d5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413d15f4-bf5d-4dab-b2bc-07fad39ea966",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3594d290-ee52-4114-a5ec-4f4bf8ef9a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2957bf-1302-46b5-9678-617e1e48488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1ed008-c300-44a4-8da5-409f086423ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85dc723f-9e5d-46c6-b1fa-60b42df38212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634512ee-d1a4-4cc6-9062-614d2f7930b4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a9ec2-f080-4a84-8599-a3d948607dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9cbaad-2772-46d7-8b22-53136e46a7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7667c67d-c5e9-4cbf-a5dc-34723c3d0ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "320e3292-dee7-4c0f-977e-9a53973b1dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7334f83-0124-43af-bc6c-2913e9d41f04",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29255e18-330f-4347-b066-8455dc7e96e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0537cb-c28e-495e-9480-8603dc373433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd6929-bbcd-46e3-a343-266ea10c3491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "084c96f8-64e7-498b-a851-4516cf40b6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763c856a-1004-4174-a776-fd1c318180c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50262fce-61a6-41bb-8aac-a90dcda37ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d52e3b-8e82-4f72-9b08-d9ce2ad9b120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f60ba5-c514-4b80-931c-002a04f5d603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d023fdb-0fe1-41a2-b523-c4aa46935916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539e9b02-471e-48c3-b299-d0b0119ddfb4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4722b78-de0c-4e01-81a5-b65893f87191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f355c9-955b-44cc-b649-244543e1178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1687210-7aa4-45fe-b08e-82a0c27e8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f74b65c7-8c0d-4881-837b-24f37d857c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441c5233-46b4-4951-98e6-a29e6bb97135",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f6774f-647d-46b6-9aee-63e3876c7e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ace5c11-ff4a-47e1-b9a1-d90230a25c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea804b-77f9-43e3-a641-babf241275e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "879936b1-be06-4ee6-8af2-dff8164c439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f9d4a2-b307-42a7-a183-263b722358f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6280385-836a-47aa-9338-1be9e969d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bb8ad4-5e69-4eff-8e79-746591a99a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f1144b-e0f8-4ed8-b314-48121e779a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08896b20-d6c1-4f0b-bfd7-ed59bbf1f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca12fbc-29a9-44c1-ac54-07fa97f8d2ea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25b25bf-5034-4659-85ff-6b29de35c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a9bbd15b-86fd-48b5-b06b-109e6777edb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c7d0bf-3cf9-4153-adf6-cc9cd5a7780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de72b63b-ca6e-4260-adb6-c93f1a2598cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11b601f6-3d8a-4f86-8c23-30b2931ab88f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2e792c0-5a91-4804-a775-fcb13a89ecdc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced2c9c7-5417-4e44-926b-361b2fc51fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d15ece20-0078-41f5-a897-4cc2b0f27a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09fb710-c7be-4151-b6e1-d4207bc63e27",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ff7a0b-03d3-459a-aa82-732757fca931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde9c78-4f67-40d6-80d6-3a8fb6105180",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7f2d6d-f099-4833-9489-c01dc0f494db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4347bbee-30e8-4b9b-aef3-0935d2908918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aba9b3-3387-435a-a615-d899d7a1daa9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "562c814a-b9c6-4f17-970d-6534eddcca1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e75942fd-f3e7-4bb8-ae11-2fdbe5edd85a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e294b112-4bc4-4a98-af7a-9eae3059059c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec90bf0f-38b5-487e-b9ed-4707a1a1a276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e152314b-738a-4e31-9f29-d4ad1306f75d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30b459db-8c02-454b-ad4f-91078bf286fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7766f0d8-8cd9-4305-b983-a4e5567b36d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8d55b17-1e17-4f8e-83bb-d0ff390d29bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d29b727e-a63b-48e9-aff1-f854639dda6c"
                }
              }
            ]
          },
          {
            "id": "3169e1cd-1788-489f-a216-8253b9c3c1b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a078bb3-4312-4897-8177-6b902287bd03",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d34490a-2272-48c7-8705-c995098714ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3136828-fe10-4baf-95e4-a6fafc2ea7aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f339479-f6d3-4b3f-977e-dab0602ebe7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7ab2981-497e-41ea-95cd-e55d60a176cf"
                    }
                  }
                ]
              },
              {
                "id": "86c21214-af97-47f7-81b4-443316a65bc4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae7624a2-23cf-41de-9e24-b2a884d62596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a8e7b2b-8412-472b-9eb7-c38d07b4be10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8ecfbf-2dc7-4c6a-953d-d81cc20caf56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44e27843-5428-4cf1-91b2-de6d743302c4"
                    }
                  }
                ]
              },
              {
                "id": "5324686f-8484-49d9-85cb-6367f937c188",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8398cb29-f254-45a3-928d-a005e5ed647f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed2d8be9-f2d8-45bf-9331-378b0c38a624"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b9c2c9-ef4b-4418-8514-719c3ed8c636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59e11b78-730d-407d-af3b-6bf6566e8701"
                    }
                  }
                ]
              },
              {
                "id": "a024acbf-2d4c-47c6-8a0e-099d8a17de6c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad099c20-27ce-4380-bdd6-b1d749be0869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f82b906-d2ce-46c8-8bc7-55fe3834dbc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "092ec280-6f04-4034-8270-d69ae080a184",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d72470d1-d8f8-48e4-9719-e27560908c01"
                    }
                  }
                ]
              },
              {
                "id": "bb025318-7fd1-4d3f-bed7-fcc9c1ae983a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c539112-33e9-4d96-99c9-8015ebfddd67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7e130c0-e588-47cb-abaa-672c579cce21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f080b64-daa9-424b-ad97-ba2fdd0f33f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e53993c0-004b-4686-8c34-72173be438f4"
                    }
                  }
                ]
              },
              {
                "id": "15373189-60e0-4ade-8e07-aee73aa80407",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c8f37f-622f-45a3-b9cd-8ab449f940c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94e73adb-dfe1-4660-8706-13a56ecb7bf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935c4548-19a9-45c3-ae18-b2f737c94f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e85cce01-e63e-45c9-bea7-8a5bc8cd129b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c604be1-67f7-451c-a133-f15f11fff321",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4905f5a-a323-4027-a224-5295bbd0a93a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd84d2de-374b-4e73-a1bb-59b0cdfebada",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a200af3-9aa3-4901-a21e-1342f098c320"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1f76d70-1255-4dd6-8e9c-e2efb9876cef",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f133927d-a593-44bb-961c-e6f744d5448c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56024ae8-2c45-4310-b9bc-c45ea2e4b77e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ce49ab1-2524-41ee-a58c-c2f20a9594e7"
            }
          }
        ]
      },
      {
        "id": "4d14b967-fe7b-4675-81f9-612325f41701",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "88a11afe-9fa9-4ae6-81b4-82a6b96c35ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe64257b-5590-49f3-bbe8-a108bcb9bd3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bea215f5-b828-42be-86e7-b2d3358cf71f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5a0de9-4c50-44fc-86d8-311949da9c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadec2ce-3f2c-4962-81e6-808bfbd4e127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a3d480-8a24-4691-9787-761b3cdbbacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b425d5e3-ca4b-4914-889f-962539555c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d877917-2422-4cf6-93c4-46026e1f08a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2fe60-fd8d-48b3-935f-f0d52198630d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229dcc18-a620-4a34-9df2-4f3ec5e387dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ece143-5902-4e32-b878-e822fda4e4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "351dc19b-c1a7-4874-b979-a1c919890ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6ea88f-26b1-40b2-8c13-31f9c2e3dfc5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007fdbb-73cd-41d0-918c-17f5110a23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9720af1-94dc-44d2-836e-f3fc6ef5d85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b7338b-34f3-4fa3-bbe2-a9845fcae67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae72c133-7b49-458e-bbd8-7cbce39789aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e09f52-acb2-40b8-9d4c-560e59150be8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe5b998-a9c4-4932-904c-20334d185573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505a5c93-8f60-4c5f-aa24-c63a619ea1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516032be-d7fe-4ee9-835c-b3efa7a30799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46e1596-7ec0-4041-be74-5f73f70061d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c3ec09-e9ec-4303-bb0d-4d4626805f88",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84b8242-f8f3-40c9-9f56-e3ff8fe13904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a706c335-cd23-4b97-865e-24e1c6ea8e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3396e0d-3d5d-4dff-873e-c0c6f8965f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "163d9d4b-0b1f-4c82-b949-0846212ebbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036f71bf-176c-45f3-a5b0-7a0ac1f233ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d4c4b-c0cc-4141-b374-231db46615a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb80d21-eb61-42ff-a4b7-e25618ffd412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781df981-dd93-4eec-a258-8c7d11de6131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7515dd-b3db-4b17-93ff-2502335635ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986b169c-9398-45de-953d-b6a46c094ba1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41900422-5aac-46df-ab96-aa1ae0b3313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012a015c-4cf2-4150-aa24-bf376e826179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ff7ab3-ef23-46e9-9c29-a35713d143b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a27d65-d9fc-406a-b979-164387e09727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eded992-88ff-4760-89d4-25e9f25bbd93",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18db37e4-53b7-4b5b-9d89-33acd8896b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5647d69b-cad5-46f7-a20b-228189cc31c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24723dd3-a6f3-47fe-ba16-1dce803042fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df8f910-0acc-4ddb-a41c-2414b3052774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d59f5c8-9bf9-463a-af59-118edfdec309",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a708063-fa2a-4ad2-886c-7cff5c90544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f2c793-cb9e-4bd2-9c96-d7a064715533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db404172-6f5d-4944-9495-8d1b62545e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48c2376-7478-49dc-96d4-6892fd437cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e2393-9a7d-4147-a292-436b408ee76f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cfe14c-a9d8-432e-a13a-c130692a14c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f102c17a-9a00-48db-8759-0800da84b026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a81ed7-8149-4426-a24f-d74f6d27f73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0f67ab-41eb-4edf-ade8-6747cdf57c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6536ccf2-fcf3-4988-b959-6d47de4c78fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e21967-0742-40c6-88c1-680089fb94df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f35c793-bd96-4539-9ef0-0f300ab68d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f2182-087e-4d1d-bac6-271772231866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddadecf-a90c-4b2e-9b63-ae1aff8cbd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5698f-b7e9-429e-a9a0-56eec851f9c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0749859-12fa-4f77-8103-31834c6e21e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae97dc4f-f2e6-4bca-b454-b1edc63aaed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c5393d-5232-4f28-8966-480b2995210f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a51ad4-7052-4180-a690-1cb828cde9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4026c357-0d79-441c-8fb4-41257ea76bfa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c06561-9e04-4255-bb7b-5360de90d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d35152-c738-442b-9619-892cf9ba5feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8726d8c8-fd12-4ba9-80a8-0e0b171e9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17dcfff-ad0f-4825-b1d9-9b36b6870026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae4fd4-937e-4637-a67d-39d6eb0e8ea3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0b7b51-4b74-42ba-9a64-c340f83693a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491de035-0571-4e3a-b707-d7232896ec45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df61ee91-5482-413e-9442-0f7079296672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f671c639-7677-436b-b0c8-6c8ccb3ccff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba315de0-48c3-440a-8b39-d780dd2fdb04",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913b9c7f-d2a1-427d-b48c-de271637fb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d1a3b2-d0bc-48fd-9e59-d19e63a9896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db116e5-7e80-40e7-aa16-c994dca88163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dba559-a8ff-4d91-a287-719feedf4d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7573595c-0de9-4798-aa40-0806370a2ecf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c33e168-b7c3-449a-9cb2-b368fe2e01da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e25cbe5-fe02-4b0c-b508-51ca504587e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf7bed6-c483-404f-b7db-c0c6cabc5956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac043a83-d4f7-4f68-ac4d-a5e62188fc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb392014-2c8c-4fc2-aed9-ea060ba21ffb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6a749-7c49-4286-ad66-b7f0e19c276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f9b7e9-cf35-4024-8105-5a8651d790ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420621bc-110c-43e0-a68d-eb9f5fcfe03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e6e24f-966b-4cce-b1d9-5aa8ba738ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a211f-1994-4473-a00c-407c99139d1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e335b0-c8e9-489f-ac8b-a9abcf403411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8deeb79-9e1d-4002-85ec-283d4d101667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb24019-1e41-46de-a1ef-b3eb81dade96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac32678-d691-4d03-9a0c-8a79da6a019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e2c275-e3cc-4342-85a0-c202a248f394",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2b629f-458f-49f0-ac10-16a065f3b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae60768-44a5-442f-b0b0-706902dc4f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6fad95-2185-45eb-ba69-dc40bb998e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605bca04-d4a9-4ef2-8942-1dc1feb99673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566c242c-ef80-4869-ab62-aa32d37ab3f3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd864002-a7c2-4142-95b2-e67ad73f4da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99353b2-f3c3-4418-9e9c-f9b72c658b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f155c525-3daa-4e9f-b780-1680212f78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3683cbec-1d57-4f12-80e5-e75b8f4a47f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d669a8e-c1ba-45cc-89e6-2ecf85664c44",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e642b376-8bcb-48cb-bb9e-9e11713036ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa06f265-3ee4-46fb-bceb-4a02698058ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc202c-6b46-4fe4-9f9f-13ab0fca5a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5d07e4-efa9-4d14-99b0-8196850c5835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c78f67-e151-49bd-8797-17f24fc1cbd4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f10b15-48dc-49f9-af4c-33b9063a582f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35d65b1-6fd4-4ceb-8bf7-f066d05d13d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c4928-0c14-46b2-bd7b-0a0a1c51e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e3360-a997-4ce8-b96f-84b2e4916d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33607401-38a2-497e-adaf-81ed3f428b4e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564b7f52-01ef-4f71-8bba-33c8db7001c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cb076c-7978-41dd-9c43-d78870b41423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f46ece-538a-4e25-986c-022206ee7fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3522114d-0157-4b9c-8053-2114a448c118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c19cf3-0247-4cdc-b634-5b457c723800",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2759b53-9711-4921-9529-7904493f1131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b65f5d-720d-48a7-a846-6356f648df61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a434f3b-c865-4036-910a-dbbc79b6e8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac222db-2768-4008-b8ba-eb3fd911f441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de5a28-acc6-445f-b1fb-39c2fcacb029",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5332305-d7d6-4229-a0f4-a11508ea5638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b8a7df-2ca1-426d-a35c-cb3a4b03a767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a23257d-cc4a-4c45-b440-2d35161bc7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c284d2e6-defc-4633-85ff-4a7ee5281b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260d871f-f8ae-4bc6-a4f2-18f1843232df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb27f40f-77a7-43d6-a3d6-d22e1c5e1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c963aa2b-9631-4d2a-a0d1-1d36354c85d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f04144-09f2-4e21-a8b8-6115119adb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f04033-9de6-4e71-a73d-51f569bf95e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b7a96-6ad7-41b3-8700-e5e774b45396",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92941582-9f91-466b-9caf-e8ef9eb4a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8ea194-9464-4728-b052-6b6e3c794886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef49e675-13e9-4c03-a83e-1a4187e342b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6481ea8-e949-4235-9882-149e12054ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b213ff0b-3eb0-419f-b226-98e86b8987d9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de984c2-cf7a-47ef-ae29-2eec9573513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6536514a-da6e-45d7-b27b-2341463d42bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaa1b53-ef57-421f-bec6-e2b30129a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a52e07-dcae-43ad-9e15-ef890e0d389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fea614-8936-42be-a30c-04696b45e59d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1c2ad3-3c7e-40f1-9a7d-167f079ead03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22f4824-bd59-464f-bee9-65406f57353f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f79530b-7de1-4aec-822a-c4cff60642fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fe0ee9-cd96-4b50-9e91-edd899de1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8007bee-6470-488e-a3a9-004243f807e4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c60493f-06c6-475d-a33f-930837b281d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d0ab0-858d-445d-a222-baf8ec046d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bbbf41-51a7-42bc-8bab-0b2d0c109f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4882d833-9f64-459b-8d40-e080add04015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c50e3b-9c0d-4377-9477-7d8a1c5dccbc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf96724-3b7d-4a05-a1a7-6bbf0a934146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe83d62-6cd9-4034-a5af-75fea4d1469f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54543d62-782d-4b80-bbd9-c6004595ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a845cd-07d5-475d-85c3-172332e5e948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3254d788-ac3b-4774-ae81-b716cf783fb5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcba288-0710-4da1-a196-297071323c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9c4ae5-6322-4376-b027-f4120a80fb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e8e5f1-6991-4fba-ab68-94fcb082c810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2560133a-bfc0-4e5d-81ba-0b064a92aa5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e82f3e1-00eb-4f20-b023-4dfbc65f00fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1041ed0-9edd-47f3-ab04-6a68363c7082",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04e0aac-190c-44b0-80f2-56fad8673817",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a486ac5c-2b2e-4808-a771-65c1df1f79d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01a2ee6-6f2c-4be9-922e-ce76c95a77d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6edefec3-7b10-4206-9880-e8e41d5d796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bb7d4e-4927-4ffc-835f-ee76fa5ade92",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c45d7d-01e0-4a8e-ab74-10db69b153f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "326c2993-0ee0-45bc-b17c-6086d7b858ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97d6953-5f9c-4d31-9ee5-81d37d042bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef94a1ee-08a4-43c2-ac43-5a0554a78616"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41eb8b1a-cc18-409f-a55a-7093daaf4732",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d162e5-14f3-461e-b0f3-b3fd547f5ea9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a9d0fe-7f36-4dd5-8e70-35a14bc8f622",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f678888-7279-4f36-8d8b-9e4edf8defe1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "add018d1-2d23-4584-b95e-22efb7749069",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d434f2a-e766-4ffa-a96b-0c9a28def7c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a015d63-1375-4ec5-94f7-c589b8cc6c81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aef8d163-63cc-4f9a-a789-41fadef8ec8b"
            }
          }
        ]
      },
      {
        "id": "6066c670-dea4-40d1-83b8-f7e1b00f21a4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6f203d8f-b099-48a8-ad45-d1cc1b88dd69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2eba91c-9380-4def-80ea-84c0283a55a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3237803e-7a81-4e47-bd84-f57cf58a01f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e5e6c-813e-47a8-a1bc-89ab881150f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b93b7a8-a10e-4236-b833-cd64c52c43d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29af4c6-6dff-492d-9547-f3b67a856aee",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b53e55-92d3-43d9-8773-497e901f4223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b991e3-c38b-476b-812f-a7881997c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e0f12c-9800-4aab-bc54-6238d5557fc7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab1fe28-4e13-4881-9460-9775e2902bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afc7335-beb0-4a47-a502-18e19214997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2005ed-3315-4d3c-8fdc-ab55f95a8f37",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f7542f-6105-4a0b-847e-c4c2e38bbcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95891b35-8ef8-4271-99c0-27f3167e90c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccfc953-198a-49e4-8dad-faa8560847c1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a665846-54a3-408b-aa64-9869aa4a0084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db21044f-efa0-471d-9ca7-85b1fc495109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c47f19-ec0b-4701-b62b-b445c562f035",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dde625-1f92-4500-a42d-cd2429ff3b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e756d718-266c-429f-adde-56e1a5670b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26572e2a-edd6-4695-8976-fbae08d17532",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b228d07-5e0d-4971-b1c0-c2bbda44769c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51538be0-2c6c-4230-9bc2-eb43e8d9c5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc160287-334c-431b-8529-20030dd0d34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd05ebf-d46e-427b-9a0c-047f0bdc664c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63200c2-0059-4ea4-88e8-0770eff0f8b8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b2fcd0-d098-4882-974a-e2052b34ce54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b944d304-3059-415a-91a7-3ee44428ebf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65053930-21cb-4f35-a325-534a45850a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcede3ad-5551-413f-a5a8-1502ce25e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139a31e4-7f73-4a78-9065-0fdbd0e67384",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ddd750-2ff5-4653-be96-a4b42b9c1d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5d55f5-e7b2-4026-8567-cbb946d3383a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb12d1-21ff-4e73-9147-579231efdc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbde423-569e-4658-8420-a235cbb5f9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1492740c-4e9b-4cb5-942e-0fe248111102",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361ca10-5eb4-4aa9-98e6-387373e2cddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf76ccf4-2a13-44a8-8b84-4744126d0563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c28f5e6-5803-4bda-931d-64be09b7e639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4e3087-6dec-45fb-8cd8-7ec29071578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2819cfb9-8a8c-441d-b582-2708d517f26b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1009698a-f691-4953-acd3-c16422659e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea637c7d-690b-44c1-a713-15641af11c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e36fc8c-d24b-4dec-8468-a1762ed1c72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f38993-61ed-461b-9f55-35392f207503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def98b3f-523e-4d1b-98eb-0edc5f6f941f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae325d90-cf6d-471f-9de5-21ae80cafd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ee8ead-24b2-42eb-af0b-b40b8b7ed447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87d7e43-df19-41c1-8f70-797863980d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48c3352-1092-4c8f-b75a-1bbdc067ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d65ea-73ee-48b7-91c8-d3cea6bad725",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c39a184-cb6d-41a7-9e5d-ae74d6c82d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6422f20-baaf-4b37-a445-b1811b631829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc97aa3-1a02-44b1-b931-7bb05876f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5eadca-c565-4b3c-a403-b91e8d95cb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2019b74-7a42-4456-b3e5-c758b8515d33",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05627692-8631-4d94-999b-d3662a44d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8015136-e0ba-4028-b34b-e76ccbe7c17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e8efee-37b5-4ec2-a5e5-2de0d94c6c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b56ebba-b2c4-40db-9b76-ef4db3d130c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdf188f-217a-4575-b660-4a3a2aa202a9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466beafb-f839-4867-8c3a-b35e96989055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d59d4ad-5173-4b0b-b101-d273e1f605fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04148076-9475-44b0-8954-eef009ff6f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cbe0d1-f0e1-43f6-9cf2-7839400d9fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0e7c98-eb31-4f5b-bed5-e7a2356049c2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e979e017-ad06-4a20-8edb-6a82f5cd6902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f399ac1-096d-443b-bf75-c6bd77b6ef8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747cb2c2-f47c-46d2-8f69-340571c132dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafaa5cc-4ef0-4a1f-ab1a-66a52ae3f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80330445-d8c4-4702-80c8-01b849006f4a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688d982e-14a7-4bc8-940f-448045180a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46de04a3-93e2-4c3f-a88c-6b841f8ae8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53583de1-4b6d-49fc-8d42-0db1eedcd256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f092a9-5f98-405a-ae94-9369cebdb17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c84b52-5c50-4588-81d8-55ac8ec1cb48",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c44154-0cb6-4e65-acc1-222833376900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25171f7-3b24-4791-8f95-7894f2b57682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a927f-b7b2-4265-87bb-403cf932bc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79142b8-5ea2-4fda-a37f-f72908e47a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e5f65d-abf0-4ebc-bba3-ceb79d39c617",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7edeaa-c01a-4ee3-92df-d527af12461f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86ef97c-d969-4b1c-a05c-9034a20a370c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c29336b-597b-4dff-bd3f-31b7fc222a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96ffbc5-0366-4c27-b76a-c6bc14a66da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6ff7e5-b49a-4b3c-bfbc-b3ddffa1a33f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d66dc1-85e4-4340-a38a-e04f4b28a28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddff01d-8523-41de-8db5-22986b2fc74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a55ce0-7a80-40bf-b541-cd1677209f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cc4d92-0acd-45dc-a974-a278cc9762d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26690eb3-7b07-424f-82d4-3267a5d7e4e0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af93c22a-6e3d-4d88-8749-b787e54721f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd7cd2c-7c49-4d17-8e7a-d02a07dbe09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21714ec-1558-4030-9af6-b76205b8dd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0857e8-44eb-4bfd-8ce8-33f60436702b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6ecefb-2004-4a1c-9546-6ef5f6730fe2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b9edc-45b9-49fe-936d-5c6b5174946a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd121d57-ea32-4552-9c19-24fb0036721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad776de6-8efe-4c33-a766-42c4646aa989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858a4766-633b-4981-8229-e06b17512fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e564299e-bc2f-41df-ba3b-c3e78c35850c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8944639f-68af-481d-abb0-d849f508cfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c6f7ab-84e2-47e7-a7c0-75ff51ccbf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a475ed6-70b4-48be-aafa-fa19fe9eb898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e67962-a10a-467d-9834-36d3673a2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de7958e-3ea8-4d5d-ab1d-6011fc6965b8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf8c6a0-8bea-42d6-8cb9-3ca35c779c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74906e3f-2e77-43e6-8b5a-144d62886c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f898773-056c-4472-b8a2-4fbfed71493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef1895c-1cf0-4c23-b1c0-49357f1d5314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa28eedb-5891-4ac5-bec9-532ad608e243",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961ab174-fee0-4d5d-bc1b-46c7dfa0e605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e388fcde-1ca2-4801-92c4-710a01ea08a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2556c719-06bf-4c33-8de1-2a44b2cd2dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cabd6e-5c10-489c-8154-690e84fde5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbb8867-e8d0-4992-b6e5-c67b1ccbb731",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0a0f0c-2b82-485a-a1de-3ba2bc7348f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365274f7-23f7-4407-8deb-f450ed3da431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df97d1d-4211-4f2f-9fd7-49e81f90cf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4c7bf6-1024-45f3-b06d-f03e8c374e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f6e784-1517-43a3-b052-c0a18a6afe8f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db22294e-5b7c-4786-97b2-24dd0d07e988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb10c663-df08-40cf-9277-8bbdb5642a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b06a7a9-36a5-4776-8660-51179a2d07e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d79b734-b227-4d0d-a473-ecea6c450287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ce78ad-9a19-44d1-85c4-cb28385313ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4004f4ea-31b4-4edf-818a-7d11fe515cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06bb04e-7727-49d0-8537-93c50d089524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f61b7a-d9b4-4c47-a84f-da734c733300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4fa078-67fa-46bb-af95-227d2fbce65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bfc86d-5fd9-4c3a-bbca-f372ecb6b0b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ea0f3-357f-4de0-ba44-9230445d1d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41b6ca8-abc3-40b0-877e-0c8e52d5ec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e32462-70c8-411f-b45c-856f884bb198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81147621-12bd-4568-81de-7e131eeee52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17f1e92-d340-4894-bdfc-f4c6cb95c08c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41dfe86-0fa2-4dcc-97d3-c6ee1372cb8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de0d2d5-05be-463f-aa02-d1404ae919a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df28d31-c168-47ea-8cb2-0031c2904919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f03c3cb-cf8d-41c6-94fa-595e3c08d100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cbf25c-438e-4e6f-bda8-7e4ddda161f0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf56952-6b7f-47d4-ad65-af02622fbafd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03939ece-7a2d-4cc4-a72d-4d172a473328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49636d9e-4168-467c-89b7-3fa3b6d37a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa624f6-53a4-496f-9d60-12a77a45cb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e7dbc8-7b0c-495a-b324-56478bc331a1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d8fd12-2d31-4cbd-ba37-399388fb8855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9137d9c3-b1d2-4d6c-a991-087d7c52a14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be826b-befb-495a-8c25-10c37539dcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ef7149-5ba2-4da6-bad0-0818fe945e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb57bbd-38f0-43c0-9158-1d5a49e2ac75",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe23d4b-e0c7-49ec-9296-e2e3799df0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2a956c-e199-4e7e-b4bb-f8715622021d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27db0e05-facb-4d05-aea1-bc8d7f62f645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5117d68-9179-474a-ad33-9f5153ae9875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e995698-b16b-460e-be33-98c0513e390f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944660da-c53c-4ed9-9c76-14457321115a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8238903-ba4b-4845-8924-198232f20ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c127f088-6cbf-4636-b47a-1d2bf12652a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426903a3-9c35-4b44-86dd-1ab8eb037d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff4ffb0-00a1-48be-a20b-904685554757",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96d3a62-bcf0-4614-b85b-22e1c4892c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da5c518-9475-40bc-b706-1972fc28fddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7d99b1-9016-4df2-afae-ddefc9cb4c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2976e886-dc16-4cee-aaf3-c0a7581b554b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e07ead5-2d29-48b7-8d43-8c2720c4b1e2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fecfed-e933-4489-8996-a707ac5886cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e3f286-975e-4e05-8622-36495e0afbe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6f493-d7a0-4a92-885d-0e489c9d06b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f50da89-edd4-4501-9bb6-e01f8187e545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e07c65-9564-4054-a152-e2917a877995",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d1c70-5759-4ca3-a235-c517099f8ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346126d-d79e-4cad-9ea9-389b8c467ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94df2d5-14e3-4c3a-be84-6ceced343ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5ecf7f-8d2b-4504-8cfd-0b6c689c6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85309de0-bc6d-4b34-853e-f983155a32bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca3b872-cbed-400f-b58e-9364daa91ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7e0c0-f478-4834-b18e-3a0a9716f9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b262b5f-05b0-4639-8af5-2e4e20000bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338dc08a-4edc-4500-b1ea-28fae287246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93273c2c-fe78-42b6-b6dc-8945b5202cae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76144bbd-344f-4333-a2a8-1d5e1adaff74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae47ced0-c998-4669-8ab1-11719f7ff43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326dd12c-545b-4d0c-b181-20000dd37055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5a1157-1752-40e7-a3a7-2ce5fa4731f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8465b730-baf1-43ec-9ddc-6ae76b429e74",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddd8d80-2352-498c-b92a-3cac0b15b94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c198b72-316d-4635-bfed-d5d859d564d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e60cd9-8855-430d-8e33-e99a8e410b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a360b9-8868-4641-8433-5a9a6f1905ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15b218c-1f8a-4140-b14e-bd09a7bdef67",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e1dd09-4228-4121-a45c-e794f84d583e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9878ce7-8495-48fe-af10-b075ddb3c0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c4021-4bb7-4372-bf78-3357fc97ee9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfad08b2-15b3-4383-a343-a72d490ec923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e28cf8-8f97-40dd-b1b8-f4d87df065e1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8dd0af-c8a8-4d45-acb9-b7c71a63c23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f77866e-940c-4d32-b416-13d89808665a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f95633-1d71-462a-9e2f-d15d23e15073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b2416c-3f94-412f-8516-fccc8e2d006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7db43e6-0a6c-4996-b8e2-d476cf9570a4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95295208-d3fe-45ab-bf09-bd18c7cb03aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f958f8-8bcd-4bec-bda4-15915f3faae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd808535-f343-4cd5-9d66-58153a222548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011883e7-c8dc-40a7-8f62-db09ef4f0ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2729f-153c-4f1a-8b87-01ddefee726c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33f0232-d2e1-4c15-800c-fcdd3c9a8907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa86e8cd-4380-47be-89fd-5aba297f8cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4173476-11f0-4a3c-8608-538c376bece1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416037a8-a867-4c2f-8483-3ad47df91614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdced621-44e8-40a9-9d26-1044e785dd83",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10fd58-b0f6-4ed1-a3df-af2e3f67900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d560cf-3d61-4bc2-827e-e5d48976f63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7202ce0a-41cb-4a58-a8c6-985c0b6d1da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a867a2-af5a-4d79-89aa-dac05ae9e731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43d5834-8206-4db4-9dd2-df30c5485b14",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e214a7f-f3bc-4f7c-b3fb-28bdd2114d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4cbd75-b2f0-450f-a61e-fdaa9cb2b5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a9bc58-5269-4d6a-a207-72c750bdba56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be846d44-bd10-4376-b9cd-e6549a8bb35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9861d19-c968-4d1c-a86c-ec6fdf7b5d9f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048aebc3-6680-499b-a1ab-3490dae51324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6e52c5-e41a-4a33-9e7c-70a7f2b4b1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722e5cf0-4dc5-4fbf-a3fd-1ab8db082536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198fe1ae-452e-4d1e-94fd-0c1adfda3c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b60af8-616d-4304-adb9-99e11d544d20",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035cf044-d5d2-44c0-8282-f593c7e5ea40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e4061d-6e6d-498b-9d5f-3d34a68b767f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f4c2e4-34a4-4596-a373-8958e7843670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080100e9-f76d-4504-b1f9-de531c8b5bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c159dc-f9fb-4480-8615-fa39c2e15918",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef52521f-da36-48da-9440-09631322b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b901494-5e35-4659-8dcf-49e2fd6be364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96cbe82-2474-4681-9662-662b10a5463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2838ae0a-7616-40ee-883a-d5ea6b1b093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547b140b-14b3-4afa-ab15-2f356e37781a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb5038d-96e0-419f-97cd-8ad266262fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08442f8-0e42-40bc-8ea0-a7e45a775dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b718da9-9cdc-45bb-b951-35728192a8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbd2e27-8201-43ba-802e-1c69c2cef3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862d4514-33e7-4153-923e-06f9deeb2fbc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf319284-665d-4123-9719-610763815bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1244ef8-8e17-4abb-aa59-f4fa74d31c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a484f7-7a10-44e8-b3d5-fd713d3a7995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c32c62-3d52-4b09-acba-89458fbcd1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1033e0-1a71-43eb-a411-0dec0bcb09ef",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ee88a7-e47d-4b59-b32e-4471cd45ff47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930c8d18-0c02-4b6e-8c19-958fd8ade45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f908a4-8c1b-44c5-a53a-0c336a76ebe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31bc25c-4be0-4b7d-8b11-5708e3330f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c56546-4e5e-42af-a547-fd323ba2785c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7023792-ddca-4c79-8de1-1e531c263fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b257b352-0e73-43be-ab02-0278b17d2af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98287da-d5e6-49b5-adb7-43713af7a4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61416fe1-8dbf-4fd2-962c-eb5b42b4ea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c83498-f31b-4052-a88b-90abdee7c836",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2efcafc-9ce1-4a9f-ba50-e2b72080cfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba1ad4d-7311-41d6-a30e-449252cc20b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186e11ad-2388-437a-b06a-fc9b9897fc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd40b6b7-be14-4f29-968e-261575e50034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c601f1-460e-4ddc-85b2-8ab0ccd55583",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6db08dc-1ccb-440d-9cb9-e2ea0f81e7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd2b98d-1080-455c-979a-603622af7ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d89d2dd-f61a-4e88-b16e-69d5feb42a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a205bfe2-7c40-47fa-9444-c4639e25ae69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1195f-4727-4ccb-a06e-c41e4a5add20",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f397d9-1f36-4d31-b6a2-8455c3ca8704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e919141-37d3-4ef1-91b8-8d221a44e60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ffb4c4-961d-4c7f-8a96-5759b647da93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35e6d45-c19d-4905-ac38-2adf2e4488c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c3eba-cbdf-48b0-8120-dd281ecf248a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d3f95a-4618-4642-b8d1-66e2317c615f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b801cfa6-8aec-4433-aa05-8cab07f1a439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbcc02f-d2b7-41b7-8439-744e27cc5559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29bf605-76b8-42e8-8ee9-5ccafa372f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fcf0ea-7307-47d4-afd5-9b1f44ebcf06",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c026a799-a4db-455c-a99c-31cd2e6ddbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f01403-90d2-4d63-9f8e-8721dfd1a1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea59b73-e1f4-4824-a6e1-63db0c79bf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de131db3-5740-416f-bc2f-71b0397c162f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec95b275-880e-4762-b289-e4ab64e0084f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bb42ca-d670-4d51-807c-ba2805dcfe0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e4a245-5cff-4964-9973-0f5b6cc0a665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccaac08-de77-4ba8-ac36-e7ecee36473d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48defc57-2472-44bb-aefa-252378bdefa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defdc823-a317-4600-9a80-df505ea213ad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1229e28c-9568-4956-bccc-690aaf6f1cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b367a3-105d-4be1-ab1d-1d91f1c273d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f3d5e-bac3-4e1e-b348-d161edc75103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca58d311-eaf7-4f4b-870c-cbf9b802366c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec13a3e-689e-42c0-a3aa-f8cf0e1024ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267fa31-0a22-4b2b-a708-2683087cf49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb65a25-0e3b-4403-ae01-8386993ad808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4f8a2d-e126-4286-8ad0-5d1100969feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886825a6-89df-4ead-b4d9-0f8010bc28a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abc6df3-2132-4f90-9bd7-52147a847269",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d68da-e497-4223-998a-5fb07c1ecb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf0fb21-df80-4145-a190-e00f12608455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5745ed5-4fff-42fb-a859-04020207fee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a2fff5-d55d-4030-abfe-451db5d7d3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a3337-491e-4470-805d-dc2db16570a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ca7149-ab97-4864-80b6-5f5d9c505575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041d62db-951c-4c3a-905d-5c9b74e3e615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ed075-cceb-4eb3-8014-139ac5ccc251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8587ff8b-434b-4cd8-93e3-9aa399e3ffeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20310fa4-7a27-449b-add7-5d4d135f0c65",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aaf352-d8e3-4700-9eba-714c3ff6761b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2bc8db1-e8e1-4c86-926a-d8cc8f2198d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5256df3b-4f9b-4502-8904-3e01d5931f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39afe82e-3a0b-4252-8eab-290b9b7b6ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d206d7-dd32-4776-881f-6321079af7ac",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86756ca8-7e14-4b64-86b5-b22b6ead0f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bfd50f1-4d8f-4b66-b193-ae3c1c5fbc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f7b0fa-7f7d-4b7b-a750-84f2a49edfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea0185e-863c-4afd-9d04-af974eded327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b8efbd-e7b3-4b8f-97dd-107cff4055b5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4391a93-caf5-493f-a541-df9235c9dd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6942a032-e0f2-4547-bff3-81bf6790095b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bc8cd6-a5b2-4d3a-97ee-950608507137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d4c787-f537-4b14-9db7-b5b449627d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afebe62-fc23-409f-9fae-191d8a12f889",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13d30a-1e80-448e-82f8-794739d1373d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6b4d6d-16c2-4640-afb7-7fbb375a5a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e4fe39-fa36-4bba-8947-03ea91419a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bcd504-48a8-4947-840c-6b13a79e420c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a08067-02ea-42a7-8462-71ba7d2fed97",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c72fd3-ff27-4e12-9c29-79bdb3526dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70667c2-e77f-499d-b0f4-2f79fa4ed188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627e5a7-6c1c-4c7f-99fc-d194387087e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3d535e-1b79-4c54-8742-936aeb616e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe595d28-0f0e-49cc-90c0-a1c0b8849154",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb14c459-9311-4bb9-8cc3-1cc45fcca047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f36cc2-5a20-492d-90d6-3ee1d5afa8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f443641-3814-4d18-8c8c-7864d7457758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476d766c-3536-4ee5-b8f2-e270f66a1000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cfa9cd-aa8d-4937-b992-4373096265bd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b92e891-7e65-4577-8e3b-378fd7ddad9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55b9372-ec42-4602-8234-3e02a51d3562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bc3aa3-81e6-47c0-a305-fef0c1a7356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688efa64-5a88-49da-a27c-ca81bc946206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da5708b-9e53-45c6-a146-775841f23606",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9083d89d-a35e-4952-9b4a-e71979c3682b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4681d26f-f3ec-42bb-8d8a-db65689899ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86320e8a-6492-40e1-aa83-5aac18e7495a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31aa86f-dd1a-40ed-9605-2bc029f2c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661d388a-686b-4f0a-926d-a6c4e25ab6c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab8082e-9a5f-4481-b870-04420a047a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f3140c-0df8-4de9-9f2a-8c2ba51971bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7f21ff-af87-4dd3-9dc1-c3ed1d02827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78185f5-be1c-4d6b-a78a-c42148d64d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009fcb36-56b7-4418-b853-4518a5d4cdc5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81080a7f-f3fc-4828-85eb-be8396c791f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b573dfa-19fd-4412-a618-8d82fb4ae038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af6b01-5ca3-4d55-a009-c68e3da93b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed22754-cfc7-4d32-8f3d-fdb7dae6487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa117fe7-af03-4bde-abe0-bef5cdb73192",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6a1ab7-de61-41d2-b76b-ec2ae88b5a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "657d3add-c168-4b62-aa27-fa8cdc7acffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729d22d8-2f98-47d1-b8cd-b7cc49fc6351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17ab2c4-198e-4e4b-8998-140df507d439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e404f3c3-905e-45b4-a5d3-64bdfb2e5ffc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbcac05-f9c5-47a5-b7dd-c8c973a4dd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002c3f78-05ce-4c2c-b744-162a77f43f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f237a89-5bc9-41ff-be33-7c774feaa308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909cd685-4741-4285-9e7b-e69390dcff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa33ce9-dd54-4036-8842-7ca11b9127ec",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4778e73e-b050-476d-8fde-061cdc05b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e344a9f-f84a-45a3-8299-bc0778611cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42e5971-7de1-45fa-8107-9e6b767ccb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1a478f-65d1-4388-b871-5a20fa836c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55dee97-83ac-4e87-852b-4e7f194d170a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c872cc2-7224-468e-bc1d-f0384d6d8204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c475d2f-e1f9-4890-97e3-70bf4ea5bfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249088ed-fb66-4e62-8785-9103197efb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3dc0df-59bc-4318-b3af-cc8d038ee54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84016c6-64fa-44d1-8e64-55b39ed39e5e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40824cce-76b0-4571-8b81-e3c4200020b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f885bc34-db3d-4bab-bfea-88f576e398d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba657176-5d0c-486e-b3f5-8cb27ad7256c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4235ed1e-97a2-48c0-97c1-9100d2087be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81907d02-bb85-4e35-a40b-8f18d87e64d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfe65ff-2fa2-499a-9e03-b9469fb4365c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa69d27-4cee-459c-a4c3-51080bc43241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b49a94-6338-41ef-b9dd-ba5c9d9c8932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0df1bf2-8a1b-4373-b8f8-baa7128235f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d96ca2b-efaf-4adf-ab12-07efe8e08384",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687f5f4a-1b7e-4fc0-8ceb-fd302dec3f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048f2e1c-eb94-40b0-a2e3-a3cd3bd6fec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34948f45-f610-4cd0-95a3-5479d2bb1703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81a07e0-b7d0-4a80-a2ef-776d55c0e26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36c3aab-c973-47b0-92c5-da7f140b7236",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb20902-93d6-482e-9584-e6b4dc71a8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89407dd3-50f6-40f5-a5fb-5a6e898cfde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517755b2-3a9a-4de7-9072-9f688e8022ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68394c2c-da44-4e63-b9c7-8d18f3ea4cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b08951-0e2f-49ae-af80-f9e2d4e20357",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f51b7d-9355-445f-9130-4b9ec76a7d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a7c8f9-4844-4e9f-ac51-a3e20fad593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70693068-bb96-4248-a1c6-fd39ff80e72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cfafa8-e50f-4764-8ba5-b0ea740dad57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1cebdf-7644-4100-a257-b2dddda6a488",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24e2c7d-e0c8-45bf-a554-6fa533ac2b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e25d4a-4f44-43d7-8998-44710cd5d9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51d1817-a69c-44a1-a646-2eca986cd05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376b3b58-3921-4e81-be54-d745be6f821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243fd9f-880d-4c90-8f35-4d133e795901",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad037e0-537d-4494-b120-91e4c93362ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd77a7d-f48d-4c05-a17a-0b89e322836a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08f141e-fe2e-48e1-a869-be86c87dc526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278ca8e9-6541-4130-9ad2-bd2e41f86dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2076178-2e87-48b1-8ffd-1c89c41639b6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84854df-9d9a-466e-a12e-36b0b9a850d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8855a75-b88a-42fc-b49c-599fcfdec8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9fbe4e-2bd1-49ea-9e0e-340ec1489b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f9629a-4631-48b8-bd74-8729dba9c58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266c7dce-7feb-4a3f-be9b-e954db05b7fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfe7301-1c51-4a07-ab4c-b907439686a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065a4115-5df1-4239-8887-7fe1d73d38de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af745f71-dac9-4fd1-b9d7-7b5ff017e1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452fee52-093a-433b-a422-87e6c8141f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce766ba-da43-49be-89ec-02632b747b9e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bfa51b-63eb-427e-8d48-d723d747c03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efee138f-6e29-43f0-b919-251f11d7a638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb25403-11fb-4fa8-b661-847c751f8514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b8e72f-46f0-497a-95e7-843091ef8e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf30222-545b-4a1e-8abc-4661045fdb53",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a4afaa-adf2-47b2-9662-90a797f2fda7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c563263-377c-4fc2-be43-aa579d173f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb232dbf-669e-4e35-9cda-fc615f8fcb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb2b963-42cc-47a9-8425-ed555729c591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd520d8-739f-429f-88c2-7eb0b632e7d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f61449a-fc70-47cb-894d-a18fbcc87e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ebda798-ca2c-4a55-babd-619aafc3c2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21b704c-56e5-437f-bba9-17c6496fd617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da60111-f70b-4da6-9312-955146a1eb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85276cbc-6a4f-4cdc-b662-d7cac30e94df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715ecb7-67b0-4fa0-b152-0ac22abe65ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d34dd6b-3a94-47e4-aced-2c10532241dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6380d218-bc40-415c-a820-a240b8f3bd16",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903821d-6fe3-441d-b61c-e0cffe1a7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026e1d8-609d-43d6-a60a-863973cdd565",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5689244-c6f0-4864-a996-276377581258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec4549d-a207-481f-b722-88b4796d008d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b7ddc-15a4-4ffe-998b-3e1d43a538a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3119f64f-7a42-4ed4-90c5-dbe1427378fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e0c615-db48-42fe-8621-395f37e54434",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a51f7b-24e8-4e96-b315-99703233fd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f903ea17-fbce-4188-acbc-8cc02d60963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42a36e2-3f3a-4511-889d-0cb654cbebd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451099ef-5eb3-40cd-9ad6-94abcb8d8def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed90295-fc52-4016-abee-f570a3604022",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035babb4-8100-41f0-aa5a-47c7ab178b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd689cf-eea7-4ef6-8c53-c97260b86401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2926bc-3305-4b19-b120-3f198def128b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f200494d-8498-4a6b-b4e0-872c03808fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9372e0b2-f0d3-43b7-87ec-4adfb96d0e01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6dc907-0b4b-4843-baa6-51d1902d2018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9495fa-72bc-47bc-9c01-ca05b4b79251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b01d2-7fb6-40db-9dc3-c1f9ab52e68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323cd080-95a0-4db4-9679-88002d507853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a8591-34cb-493f-aa10-cbe4b034b6a8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8349ef7-2dd2-42f8-8321-eecc430196fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c415a1d7-e4c9-4b5b-9747-fdace448e6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1202737-77d4-41b5-8b56-714b6c95691b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bb79b2-67c0-4957-b551-4e339deed8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccf59cf-f17c-405f-acb7-0ef952793e88",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baeb478-e009-47b7-9a30-709221345167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81979ee1-82fe-4b89-a1fe-efd7b3cb0ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233185f5-e696-4eb0-a6bc-2ad166281de3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943e443d-bece-4b44-b7d8-ee31ddb5b993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206d1345-bc2a-4428-a9b8-1fd855ba9058",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68862160-ce10-43d6-af18-d3898791c083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01958048-fa4d-439d-b99f-de853c623cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edeafaf-fe92-4046-8c59-2d1d027b885e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29641ca8-b3dc-45f4-b252-c22dff36287f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4ff5a98-f19c-4ae9-bb70-73d8f1c141e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3e73870-b84d-48e5-a390-c0e0f4dbcfe2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ddb42cb-cd1f-4e55-b57d-775d13d39570",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae987ffe-0800-4a69-bcf4-5ae6aa62d2dd"
                    }
                  }
                ]
              },
              {
                "id": "193e8041-1559-4faf-a0a5-f4b80afddc6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "212ae760-de32-497f-8088-ed47822762af",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54ebc39-0ea7-4bae-9fda-4ffdf6c4f984",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "996bb976-ca56-4905-b0b8-bb80af9272f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9374e06-7c3b-4ac4-a2de-f4f39ff5a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d14e633e-457d-46a1-b9f2-6286993bb29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d835cfd4-b2bc-473e-aeda-2008ad4acc46",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd25e9-d1b8-4e83-8742-e00ef42e22a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b76b8d2-2747-48ab-bbb7-964015a4a69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ab84d7-1520-4f89-ab96-17b4f5081d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "408b5eee-f68e-4691-ac94-98a53302fde2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5f893ba-8c74-4f7b-a9a5-0e04ef2d7d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b994ffeb-a7fe-4491-9606-49053eb0ebba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce81b444-0725-4a5a-9c7e-802cdc4e8839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ffa07a9-8b52-4c0a-b719-d5e284022c04"
                    }
                  }
                ]
              },
              {
                "id": "8bb1f159-aa33-4de8-8e1a-cd3a54ac7260",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "095bdd45-b6a2-4995-b258-267caec8a320",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056b2e41-7ea7-478f-9b04-ff3cc367eec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "85eb5dbf-61b7-4eaa-8dab-cf3900164ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1275ebda-eb13-4e45-b4aa-96198d9ffd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ab7a1-bd62-438f-a1fb-fa8b4c513050"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5055e64-f357-43db-8ab1-2fff4bfacf2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6e649e1-75f5-457c-b060-64675b68ed6d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a875be-ae19-446e-843c-8dd02f84807a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76808c24-f7d1-4b0b-966f-4ea1f59f9122"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd187b2c-63b0-45c6-af6f-2103ac2bbce5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc17f5cc-40ed-4866-8554-171a96761634"
                    }
                  }
                ]
              },
              {
                "id": "69b53337-4caa-478a-887b-4d06cb776252",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43943dee-ea26-408a-a6c2-eff117558dd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c41be486-bdc1-445b-85bd-047c4580a1bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2497776a-5d98-4afc-8556-48c184dfd982",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f1fd5c9-f2dd-44ab-9c3f-0c82e5d2b969"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77b2b3ad-fa08-4b0c-87bb-21e55fa83bfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f4ea64b3-3d4b-4ee5-991a-ef1129319811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65c2e423-c6f6-40ae-b7f0-99c17b5de12f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2f62419-f7a8-4b2b-b0c9-8738d13eda90"
            }
          }
        ]
      },
      {
        "id": "0984e327-192e-4e7e-b5f6-a8e279ee3886",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5d07eea-57b4-48b3-9ef3-4433891c4614",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87c9f1e2-6f60-49eb-bd0b-fa633924b087",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e916ac4-c32d-4736-b649-1988443d2524",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad867b5-58df-46cd-9ba6-55f7c9691f6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "079232c1-1d4e-4438-a308-c2edf18efe58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad886f27-01be-474d-b95e-90f78da9630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "706c9b93-5bd4-437a-957b-753e18439710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be09cac-90f1-4ff6-bd77-c04923e287f3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0b7709-4577-4ac4-8ee6-2148f60c5e85",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf5be332-adb7-439f-ab6c-d4241ffebfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963d66c-b05f-464e-8a2e-4cb1c10e8421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d225869-3330-4506-97e8-d801e6eb0a63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1c337b6-0f04-46d1-b8bf-3956b9755a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3f1be9f-fb0e-4cfd-8c46-b4c4f3d0d0e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "933a6fa9-8576-451b-aa84-c2b40f22004f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1b10fa8-a747-4f34-bb6d-9d40fd034953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41f16cd6-c0b7-4a7b-8c1a-289301d81504",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "510beacc-7386-4d43-b124-fe175df74360"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b1b6201-e832-43e3-b3ab-886858b2ba27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76a8573a-c528-439c-a720-85872ba553d2"
            }
          }
        ]
      },
      {
        "id": "58acc991-3a96-475a-916f-396e1b468142",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5fd68ca5-b21d-4bb5-a9b5-fc114a109033",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc6ef28e-fc26-48ea-af57-b7afd2d0c3c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11066cf4-e1d4-45e8-931a-360b42b1433c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298748d3-1c98-4b77-a969-b8af5661ef48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd35df4c-cfee-4015-8916-62d1e0d1d9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fc6f6a-7c77-4d22-9a6c-f6311a20c8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2d126ba-70d5-42b6-8a9c-059961b86269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448af043-c22d-43b2-9897-0a5f90b3c59b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1c27b2-fa29-4342-ac0e-c1b48702bfda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1bd5b2-eb07-42f8-a0aa-6f5af3b6813e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6587a49b-8448-4bd4-b862-09bfcfc8f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bfcd07b-1612-4069-9201-6332751ece5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca51a2aa-b14e-4b66-a35f-069680b7d89e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f77c094-248a-4d7f-9460-3d52b1661ad7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56b8301e-65e3-4d19-8e99-052da4d1743e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca9a6a77-b201-4f67-a249-39521f75b761"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df5c3d57-4ad8-4e62-8a82-b4d4a83ae92c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eceb3c7f-8ef1-4e7c-8a50-4dfdb9bc03cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b29199-c225-4cb6-82c2-b5329c641d17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9010366-9cb9-4f61-b3b4-b32ea37795d2"
            }
          }
        ]
      },
      {
        "id": "8efe8bdd-37b7-4c29-bba7-e690399a1800",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "06c4b260-345d-4034-89d0-cd36a1b0da83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7435828d-45d1-43ad-b160-be203e2fcb6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c0fde95-a6c6-40fc-905b-feeccc1fb495",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a8855-0f0b-403e-a005-41ff88783bfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f3bfb1-d123-4540-a0da-40d71c034424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd9858-6fde-44be-a362-f0f3f98f8d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f5ba05e-4f28-48fe-8ff9-96134f97f142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de678bd-3f55-4adb-8022-57fc9d222bb3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0618c2d6-7446-43c0-bc5a-f1589e610019",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f32f03d-3995-45c7-a2bc-dc0e73026e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291b41d3-40ed-40b1-b513-1566f39ea15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52da7a72-ab8e-44dd-acc5-9ce03cf25b5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a760aa60-97f8-403a-9cba-1ada92d751ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a01dfddd-f8e6-442a-a165-128698b98c91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc57a93c-d48d-42e2-b32a-efa94b4b161b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7d2de72-41ce-4e5f-96ad-18ad32f85f13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6471b3bf-9609-4c54-8bf0-4765a7c698a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba10e2d0-3765-4a78-a241-da3d86aa92db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "892f375d-0255-4f4e-bb3e-79bcbf515e2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ffece4b-b0eb-4119-a79e-8aea560741ae"
            }
          }
        ]
      },
      {
        "id": "1ebf8e02-45b3-4e51-8715-54d6bee38a41",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74fd1256-7c6f-4241-999a-81b173a3b663",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e4994d5-2e8d-4bd3-acb9-64745f5df8eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8fb11a4-aec7-4bd0-a0ba-6f500d448613",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a9cb1d2-5c9b-48b1-8234-d30871d01805",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c093929e-a153-4127-b3a7-dc5a619d6ab9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 866.4846153846152,
      "responseMin": 7,
      "responseMax": 8137,
      "responseSd": 955.2938793466429,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685147950268,
      "completed": 1685148189585
    },
    "executions": [
      {
        "id": "68974c5e-4b83-43d9-999e-4f826a8cfe76",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2490344-9137-4e04-b8b0-71d2189b2021",
          "httpRequestId": "d753e5a0-af87-47f5-b0fb-e6ce6c13aee7"
        },
        "item": {
          "id": "68974c5e-4b83-43d9-999e-4f826a8cfe76",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "46c47185-1386-422a-ab4a-1844fec59693",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "84086ac1-545c-4f0e-b6c5-b19288c7e79c",
        "cursor": {
          "ref": "9bd8fb82-8075-4d70-88c3-7dea8a2c5ff2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e2353164-a67b-47c0-bd41-878d4f90bf6e"
        },
        "item": {
          "id": "84086ac1-545c-4f0e-b6c5-b19288c7e79c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b57ba3be-cfba-48da-92e6-c51254079461",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ec332c2b-ecc5-460b-8868-bcfd66fa0f3b",
        "cursor": {
          "ref": "34b06a06-1e6e-49b2-82ac-3e9d3c859ad4",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e05f78e0-d13a-41bf-a149-74d596d97239"
        },
        "item": {
          "id": "ec332c2b-ecc5-460b-8868-bcfd66fa0f3b",
          "name": "did_json"
        },
        "response": {
          "id": "19866cd0-3853-4328-8cdc-543bb4bcf8c3",
          "status": "OK",
          "code": 200,
          "responseTime": 1093,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f6b04-61aa-4ebc-b90a-1ece560f1344",
        "cursor": {
          "ref": "16ab1b6a-3073-44aa-8803-74201c84e9ca",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba6640bf-e708-4dbe-a53d-6a0c9a81e846"
        },
        "item": {
          "id": "439f6b04-61aa-4ebc-b90a-1ece560f1344",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7b46785-f05f-45c3-8202-a57b7a63c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f6b04-61aa-4ebc-b90a-1ece560f1344",
        "cursor": {
          "ref": "16ab1b6a-3073-44aa-8803-74201c84e9ca",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba6640bf-e708-4dbe-a53d-6a0c9a81e846"
        },
        "item": {
          "id": "439f6b04-61aa-4ebc-b90a-1ece560f1344",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7b46785-f05f-45c3-8202-a57b7a63c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddfd1bc-26d4-438b-85f3-94109236e94b",
        "cursor": {
          "ref": "c9709cd5-3412-41de-a134-4f09fb16f480",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ebb87b51-9114-4cbc-b883-d17d51e6a89a"
        },
        "item": {
          "id": "6ddfd1bc-26d4-438b-85f3-94109236e94b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6661af9f-4cd1-4d92-8072-4624d9f65126",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1066,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ae2df4-19af-4524-83f2-3a962e0ed35e",
        "cursor": {
          "ref": "79355c48-d431-4c53-825b-8b4d959e058b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "18abaabd-6b06-4571-9fb8-df3f521f1824"
        },
        "item": {
          "id": "60ae2df4-19af-4524-83f2-3a962e0ed35e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aa5792ac-7275-4eba-87e2-b5fc9f18ef87",
          "status": "Not Found",
          "code": 404,
          "responseTime": 848,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94047b58-6df4-4053-a150-d3ac4e560ba1",
        "cursor": {
          "ref": "8ec891fc-5f50-4be0-bb73-0b705ff11c2b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5110fd3f-e8a3-4849-bdbd-e9ef34cf4401"
        },
        "item": {
          "id": "94047b58-6df4-4053-a150-d3ac4e560ba1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9fab2552-4e4b-4b59-bf82-546c3a0dc470",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9298f2c4-bb8a-4b5f-970b-22363e6c3a5c",
        "cursor": {
          "ref": "97f94bb1-48c4-4763-a82b-4d36524ba452",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f0e4654-365d-4b71-a950-8b68fecb26cd"
        },
        "item": {
          "id": "9298f2c4-bb8a-4b5f-970b-22363e6c3a5c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "83cdd7eb-96ce-4d1a-b6d1-a05ce29bdf00",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9298f2c4-bb8a-4b5f-970b-22363e6c3a5c",
        "cursor": {
          "ref": "97f94bb1-48c4-4763-a82b-4d36524ba452",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f0e4654-365d-4b71-a950-8b68fecb26cd"
        },
        "item": {
          "id": "9298f2c4-bb8a-4b5f-970b-22363e6c3a5c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "83cdd7eb-96ce-4d1a-b6d1-a05ce29bdf00",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2ad83f-eba7-4f47-9ffd-493e11172522",
        "cursor": {
          "ref": "213f2af2-ca04-4c01-afc1-f1fa2411fd6e",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "240ccad8-4ff4-4990-90d9-27a9629f7b4e"
        },
        "item": {
          "id": "9d2ad83f-eba7-4f47-9ffd-493e11172522",
          "name": "identifiers"
        },
        "response": {
          "id": "f402468a-8e9d-4178-9ba1-8851e06fd090",
          "status": "OK",
          "code": 200,
          "responseTime": 1674,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c439d0c-50c1-41d9-a5ac-bfce750dccf7",
        "cursor": {
          "ref": "373ca3a7-9b5a-42b5-b3de-ea52f626c6d5",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eb79e2ce-da0e-4287-aad2-fbe64c20c9c4"
        },
        "item": {
          "id": "0c439d0c-50c1-41d9-a5ac-bfce750dccf7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "73776b6c-bab0-47ef-92e6-135a089316b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c439d0c-50c1-41d9-a5ac-bfce750dccf7",
        "cursor": {
          "ref": "373ca3a7-9b5a-42b5-b3de-ea52f626c6d5",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eb79e2ce-da0e-4287-aad2-fbe64c20c9c4"
        },
        "item": {
          "id": "0c439d0c-50c1-41d9-a5ac-bfce750dccf7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "73776b6c-bab0-47ef-92e6-135a089316b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68786799-85ac-4f53-8dc9-2949d38228e2",
        "cursor": {
          "ref": "93ae0f0c-10e8-42ff-9715-f68f9edcacad",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99b65543-7243-44e3-8c50-4f39776b72e5"
        },
        "item": {
          "id": "68786799-85ac-4f53-8dc9-2949d38228e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "939de5be-4099-4778-af36-dedc0194e02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf466368-1ade-4e9d-bcd2-1670564f8afd",
        "cursor": {
          "ref": "be137f14-7cf9-4e49-b720-dad9f242db20",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "211c8209-7aca-4a48-9315-fa919f5a0a4e"
        },
        "item": {
          "id": "cf466368-1ade-4e9d-bcd2-1670564f8afd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90588e9c-b1ee-4b5a-baaf-61f178848671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149a895-7fca-4fdf-aacd-967319b45056",
        "cursor": {
          "ref": "eefe04a2-1206-4871-a857-e885ddc76153",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef19ef29-596d-4268-a28b-326e27274750"
        },
        "item": {
          "id": "9149a895-7fca-4fdf-aacd-967319b45056",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "33753a30-cdf4-4061-b898-183291e1a7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f30cc4-cd58-4528-86f9-57e5c3e4ef36",
        "cursor": {
          "ref": "0ce644a3-7105-4680-90f9-6e84cfbee4c6",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d67bb7d-ee07-43ff-b00e-3690dd6a05dd"
        },
        "item": {
          "id": "89f30cc4-cd58-4528-86f9-57e5c3e4ef36",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ac5a298-939f-4443-b77e-f9cbb3dce219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153510e-6f93-4609-b77b-8add2bddfda4",
        "cursor": {
          "ref": "05aca6d4-0f59-4ba3-8433-b4d0f9db5cdd",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "78c471d5-c7a6-433b-8382-00191756469d"
        },
        "item": {
          "id": "e153510e-6f93-4609-b77b-8add2bddfda4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8333f9a1-87ae-4b1b-9a93-11a4b6a0f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d093515-4928-44c7-bf53-125db24dd989",
        "cursor": {
          "ref": "da310d62-0dbf-4d2b-8291-3dddfddedf97",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d655c622-d5ba-40f9-adfe-07e062469c4c"
        },
        "item": {
          "id": "2d093515-4928-44c7-bf53-125db24dd989",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75fc95e4-5bfb-47d8-bc51-1bf12b8afd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa570a19-6788-433d-8296-b9a4a7ac9c36",
        "cursor": {
          "ref": "0e59f4a3-c70a-43d3-a2e3-8c4ea788c326",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "29b463c4-a8ef-4683-9233-17dd7286fdd3"
        },
        "item": {
          "id": "fa570a19-6788-433d-8296-b9a4a7ac9c36",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7bcb88db-8219-41d7-8c5d-3d13a046b87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bfb757-9d0f-4f55-82cb-bf352d8a2b98",
        "cursor": {
          "ref": "29d511e8-c702-4365-bb63-2adbbdcd3e40",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73fde333-46f5-4124-a70b-42a0566c7533"
        },
        "item": {
          "id": "88bfb757-9d0f-4f55-82cb-bf352d8a2b98",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "59eeea3e-0ee6-41d5-8193-dccd120c305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a202ee1-bc66-49a8-8532-0dbf5c6b52a0",
        "cursor": {
          "ref": "18a198fb-56f7-4c5f-836f-eb647d0fe92b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7eeecb1-60ea-4715-a020-e8365827da0f"
        },
        "item": {
          "id": "7a202ee1-bc66-49a8-8532-0dbf5c6b52a0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1eb94544-458e-4d81-8baf-5e5520f4e321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43135731-4b54-49a7-8b9f-ff7c8fd2cb65",
        "cursor": {
          "ref": "5458edbb-98be-4eef-a111-69c80c6c365c",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "245c2932-a2cc-4e2d-bff7-cf5b67f7dd00"
        },
        "item": {
          "id": "43135731-4b54-49a7-8b9f-ff7c8fd2cb65",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "527390a1-b767-456a-9a76-1196dde8a17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1691d2-7081-430f-999e-05f57bc821f1",
        "cursor": {
          "ref": "a8b4fdfb-88d4-499c-b5b5-0094e17f1a73",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "45102f0e-529a-42af-b4e3-93305e18c899"
        },
        "item": {
          "id": "aa1691d2-7081-430f-999e-05f57bc821f1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "82b3b5c0-238c-4cc6-bdac-a91d69dc9b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea0ad94-b56f-4a5d-b1e4-b31318ee1171",
        "cursor": {
          "ref": "539a8b30-a794-472c-b00f-1769680b6b8d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9b5a5d8-708f-466d-911a-981957217363"
        },
        "item": {
          "id": "aea0ad94-b56f-4a5d-b1e4-b31318ee1171",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44b42af1-068b-457d-9da1-080ffcc08afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcabb54d-aaba-4bee-9e3d-3d99b661032a",
        "cursor": {
          "ref": "edb4b3fd-51f0-4ec2-a88f-1755aa93e413",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "912885d2-6cc9-4466-afe5-ff177d4ecde0"
        },
        "item": {
          "id": "fcabb54d-aaba-4bee-9e3d-3d99b661032a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdcc5baf-8204-4d04-96a2-3cec1942cc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad36fe6e-c615-4ee0-a00b-c6d38415f1da",
        "cursor": {
          "ref": "21835dd2-7c7a-4753-be97-09bf2d3e430b",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8ce3d76a-d19e-48cb-8f36-eeb91c697217"
        },
        "item": {
          "id": "ad36fe6e-c615-4ee0-a00b-c6d38415f1da",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ba9705e6-e551-4d4b-8ab4-7a68ea2cf737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d9b865-6f16-4ad9-8873-fa18bf13d6d6",
        "cursor": {
          "ref": "fa79161e-cd69-46cf-8271-2cdfe018311b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "03ee530a-7494-4b84-a4f7-4b08b6664c1a"
        },
        "item": {
          "id": "45d9b865-6f16-4ad9-8873-fa18bf13d6d6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e2dee242-9e1d-4cc8-b0f0-8102e6ec3b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e4792a-5121-4297-bdb1-c13fd1369138",
        "cursor": {
          "ref": "afb5fcff-d891-4e04-8e1d-766f3b3c5513",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7c019d06-11c0-43c8-9799-1ba918f84d52"
        },
        "item": {
          "id": "44e4792a-5121-4297-bdb1-c13fd1369138",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "da1d6c3b-3401-4516-8399-278556cfbc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba8e3e1-5237-45d1-9f5f-859ab295b8f1",
        "cursor": {
          "ref": "10619a2b-bd39-4809-81fa-18ba09082d63",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "56f9ae25-9c30-44dc-8471-90f8abd34c76"
        },
        "item": {
          "id": "cba8e3e1-5237-45d1-9f5f-859ab295b8f1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10884818-fa4e-417d-a913-ba5b21d00782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5149441c-c3a1-4049-b7ab-3ebe91603d41",
        "cursor": {
          "ref": "828d66cc-9f9a-4fe3-abe0-025b4d52a57a",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8f90fd0d-dbcd-4542-a6ec-934742c3b1ec"
        },
        "item": {
          "id": "5149441c-c3a1-4049-b7ab-3ebe91603d41",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0a1dbab7-001f-4443-bc56-73eef9c45e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd0cd0-23f0-40e0-b548-ae6f145499e4",
        "cursor": {
          "ref": "413c6072-9f48-43db-ac71-89bf535fb8bd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "731448f8-45af-40f5-81f3-c742790f69ed"
        },
        "item": {
          "id": "23bd0cd0-23f0-40e0-b548-ae6f145499e4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2eee7f18-954d-4139-bdc6-74106f2f7bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc255a9-9aa9-4b81-865f-456852897ede",
        "cursor": {
          "ref": "a7c96cf3-dc3a-4255-ac2d-5dbc72b25ebc",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5e1feb96-eb1e-4597-8b82-8162aabf0216"
        },
        "item": {
          "id": "4dc255a9-9aa9-4b81-865f-456852897ede",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04093c63-df69-4830-b6ea-ea43b2567d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2ccf7-aabf-4440-84b0-c571472a4239",
        "cursor": {
          "ref": "8f6c4b44-b860-4e4a-a7a2-52b234b57f63",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "017f911f-02a5-4ad0-8430-8b675a38d40a"
        },
        "item": {
          "id": "b6d2ccf7-aabf-4440-84b0-c571472a4239",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7ec2c74a-f5c4-495f-8ceb-a8083552d121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaeaebf-360d-4c04-acb2-aada86494a8e",
        "cursor": {
          "ref": "e0f68bda-d624-492a-829e-a02bec3c5348",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "88cecba5-028c-46d8-bfe5-de79cd9b892d"
        },
        "item": {
          "id": "ceaeaebf-360d-4c04-acb2-aada86494a8e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7761ca66-78d2-4a9e-8b79-3ddd65b43c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b7fd34-97d3-4391-92ad-a1c7ea55c972",
        "cursor": {
          "ref": "792f2141-33ee-4165-8f85-740f6bbb0637",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d68e57f3-39f9-42bc-a120-88abf4660f27"
        },
        "item": {
          "id": "97b7fd34-97d3-4391-92ad-a1c7ea55c972",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5a04335e-4750-4ac3-88cf-9db16a8f45e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7553ab8-359e-4fdf-832e-c8dac13d1702",
        "cursor": {
          "ref": "f4f18ca3-2d2e-44f7-b59e-8f7ae1e12c52",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d3a3f1cf-55f6-416d-ba50-20d9c5e406bb"
        },
        "item": {
          "id": "e7553ab8-359e-4fdf-832e-c8dac13d1702",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "949ffd0b-f4d7-4003-9e40-9bbb47259bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71a1f27-f759-4392-aad3-c1bb3678dc48",
        "cursor": {
          "ref": "a520b2fb-ab90-471c-9c14-98f9c46772de",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a868f7ab-a671-480f-86ba-801be3d5861e"
        },
        "item": {
          "id": "c71a1f27-f759-4392-aad3-c1bb3678dc48",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ba9f9bde-427e-4a85-8a40-9a7f587360be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c1e6e2-4f42-42c3-a249-bbf73f9139bc",
        "cursor": {
          "ref": "2aacaa4f-73a7-4b20-ac6d-a352a7328ed9",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67f2e98d-64fc-480d-9e6e-2d4da14ef59e"
        },
        "item": {
          "id": "c0c1e6e2-4f42-42c3-a249-bbf73f9139bc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e310615a-3d99-48fa-bd8f-0f6cb0512a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371c27e8-1d55-4820-ae5f-9ee37e393bdb",
        "cursor": {
          "ref": "86f61b8b-98e3-4302-b691-d1974cc7dcb3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3096b97-a321-4bf4-94a5-808e0c072b71"
        },
        "item": {
          "id": "371c27e8-1d55-4820-ae5f-9ee37e393bdb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "47765082-b762-44a4-a041-42528010b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1a837e-fe3a-47ef-84b5-c6b675421619",
        "cursor": {
          "ref": "efb3cac8-6484-4e1b-9f4f-0317d8541a60",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a54b658d-51bf-4145-bd80-8375fa7d9a76"
        },
        "item": {
          "id": "fe1a837e-fe3a-47ef-84b5-c6b675421619",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "30c171c1-768a-44f7-a839-b62ba4a2bbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e128a955-0557-4204-a290-1285287918a6",
        "cursor": {
          "ref": "0512f168-7fdc-453c-beab-684cb559ca50",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9e787b65-c200-4af8-8f6c-b05b71ae4c15"
        },
        "item": {
          "id": "e128a955-0557-4204-a290-1285287918a6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ec8b04c-aa14-4929-8873-fdc05e5783c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac134f-c132-4110-99d2-769384b05f9f",
        "cursor": {
          "ref": "a55211bf-8f12-4c91-8a05-2e0596459d2f",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "30f48620-5680-4ab5-ae50-1c3a632e1f9b"
        },
        "item": {
          "id": "b9ac134f-c132-4110-99d2-769384b05f9f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3395b6fa-a09b-4f79-81e7-90eb7c2bb976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea117e26-1f05-4e2f-ba93-f59759be21d8",
        "cursor": {
          "ref": "a4b79252-e7a8-4a4c-a392-48ad36c52886",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "28d9e4cb-8c94-41ec-a111-212b7e250b49"
        },
        "item": {
          "id": "ea117e26-1f05-4e2f-ba93-f59759be21d8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ec4f9b27-a013-49d9-b2a9-48972f0d3ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94bd6cf-26f9-4d89-a567-bb275afea5a6",
        "cursor": {
          "ref": "73303cc9-8823-487a-9391-e4088a63145a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "34295666-91d5-46e0-a1e4-105012eee383"
        },
        "item": {
          "id": "b94bd6cf-26f9-4d89-a567-bb275afea5a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "915c4add-4e8c-4a1f-ae44-294acd9862ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be280517-04e9-4556-b873-af44d1388578",
        "cursor": {
          "ref": "5e5071a1-bef3-4b2d-98d0-947fbb7c94ce",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38ffc885-e0cd-42b5-be73-e83a9af0c6ed"
        },
        "item": {
          "id": "be280517-04e9-4556-b873-af44d1388578",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "157a137b-0c5c-4c4a-af30-a200331263b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a098054-7474-412b-a649-e26b8ea10a8c",
        "cursor": {
          "ref": "4f86ecbd-c893-4d3d-85a2-347273f14eab",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7e42f80b-89c4-4b30-bacb-437c14d126b9"
        },
        "item": {
          "id": "5a098054-7474-412b-a649-e26b8ea10a8c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e0e988d1-d245-4996-b850-50c6d38b8a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd98c3-5e9b-4aa1-8a57-53fad5e96e0e",
        "cursor": {
          "ref": "efde7062-909a-414e-a089-f163903773c6",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5f1f9855-ab80-4eec-b80b-579d012884ca"
        },
        "item": {
          "id": "c6cd98c3-5e9b-4aa1-8a57-53fad5e96e0e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "68559926-ba47-492e-8a7f-263514dd9fd3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1006,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a64e52a-9f9d-4409-af30-0699b53321ce",
        "cursor": {
          "ref": "fcba2143-6d48-4dd0-8ce3-f81cd936ec88",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de30b2ec-1415-4255-823a-9d5e721d927d"
        },
        "item": {
          "id": "9a64e52a-9f9d-4409-af30-0699b53321ce",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "788c5d66-daf0-4702-a404-cd984294f21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44914bb7-79a3-491d-aeb2-280db638a4a5",
        "cursor": {
          "ref": "4ca48d10-2d0c-43a7-9f77-614b841591cf",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "15940c8c-2a30-472e-b2dc-81a25b2d7a93"
        },
        "item": {
          "id": "44914bb7-79a3-491d-aeb2-280db638a4a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "46ef0b8f-ff96-4e36-a3b3-78e3a633e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1529,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5ebb5f-0153-428b-a787-21a8878609dd",
        "cursor": {
          "ref": "9183f93e-a2a2-4ae4-9728-9000daad3109",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "467f2628-2d93-4195-b560-05ac1be8248d"
        },
        "item": {
          "id": "2d5ebb5f-0153-428b-a787-21a8878609dd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9de3785-f8d6-4246-92f3-02c9a172e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bb7deb-87e1-4ad5-8083-8f3856348c95",
        "cursor": {
          "ref": "d6c8f432-bd8f-48ad-ae65-8bde68ebae44",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "948a4c5f-a277-4d68-b5b4-29915b4c099d"
        },
        "item": {
          "id": "31bb7deb-87e1-4ad5-8083-8f3856348c95",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7cbc3db7-589f-4efa-b9d9-b06c183ed7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3873223a-c909-432b-a1a9-bcef246e3975",
        "cursor": {
          "ref": "42ecb904-7b2f-4feb-b0cb-0ad332c8fc4a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bdf48d61-3187-4a4e-a481-98e8504466ad"
        },
        "item": {
          "id": "3873223a-c909-432b-a1a9-bcef246e3975",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06f288f2-8740-49c6-9097-9cd73cf4cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d082c96d-bba0-4175-8d13-a0cffa9f4367",
        "cursor": {
          "ref": "e67fe344-984d-494d-bc0b-50c5c975ae40",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4b78813a-a6d5-4916-86e7-33dc162737b2"
        },
        "item": {
          "id": "d082c96d-bba0-4175-8d13-a0cffa9f4367",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7418d5c8-cbb5-44ab-a73e-e7db2b87ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d79a639-f72c-450f-bc55-5af861f350e0",
        "cursor": {
          "ref": "48ee0c7d-cf2c-4db4-9f0c-1dac17f20f8e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6bc33d7c-9321-489a-88d4-3d7e835211e4"
        },
        "item": {
          "id": "7d79a639-f72c-450f-bc55-5af861f350e0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b812831c-3517-47ba-92a4-4f22ef787991",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 997,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1bb915-a423-480a-9bb7-0dae82d6daf1",
        "cursor": {
          "ref": "06b76a53-0b88-4688-aaaa-6b8bbc1b6218",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "010f454a-051e-4e51-84bf-c5c6d01b789b"
        },
        "item": {
          "id": "4a1bb915-a423-480a-9bb7-0dae82d6daf1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c68bd0bf-3d7e-4070-a3ca-f103e402dcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825eb839-1af2-4d58-bdcb-d33f61499e9e",
        "cursor": {
          "ref": "d0d0fef3-eff9-46a6-978a-e99ca3f801a5",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "35b1fcd7-6436-4f95-81dc-557ee1bd743f"
        },
        "item": {
          "id": "825eb839-1af2-4d58-bdcb-d33f61499e9e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b872974f-b6f6-4575-a000-f2e2ab6007b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0ef76d-6cbc-454b-8697-024981aa2ff8",
        "cursor": {
          "ref": "46c03e27-865f-4e8d-9450-ef8cc0133c9f",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b2b4f800-df38-4e00-80d6-f29e2bad233a"
        },
        "item": {
          "id": "5c0ef76d-6cbc-454b-8697-024981aa2ff8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8aecbfeb-00c5-4f6d-aaf8-76898c55045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074de9d9-9d46-4bdd-840b-a648aea912e3",
        "cursor": {
          "ref": "733ec766-da65-4678-b86f-00e54cae65c4",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8d3f4b65-2f9b-4c88-8c0b-4cfeec0c0565"
        },
        "item": {
          "id": "074de9d9-9d46-4bdd-840b-a648aea912e3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2da6d175-da4a-45f6-8b03-e02606184bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ed4eb3-79f5-474c-9570-76c25ec7a685",
        "cursor": {
          "ref": "7be54724-e532-412c-ada2-8ce1fe8b2916",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5321fb03-a2ce-4e36-8eb1-9357ded452cd"
        },
        "item": {
          "id": "82ed4eb3-79f5-474c-9570-76c25ec7a685",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "131ebbb9-4823-4835-82b0-039b52420958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62cf614-2cca-4e1c-8edc-6db2f8aa66d4",
        "cursor": {
          "ref": "86aa36ee-ece6-476d-b149-9d33ab7a5766",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f8825030-7236-4a43-97e7-3c4ce38a9eec"
        },
        "item": {
          "id": "b62cf614-2cca-4e1c-8edc-6db2f8aa66d4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3600bb18-0270-43f0-8ed5-f1b141d1347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcde0d4-3658-419d-8d95-99fa003cce4e",
        "cursor": {
          "ref": "bf686fc3-8d7a-46b7-92ba-b0bc644b68eb",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "736446ee-368f-47f4-8bf8-47b15b66b7c9"
        },
        "item": {
          "id": "2fcde0d4-3658-419d-8d95-99fa003cce4e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7b9b2aa5-84fc-4b85-a300-a0c1e90d3543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4c547b-cf01-441d-9f09-528e36593c30",
        "cursor": {
          "ref": "1a8c27ac-3912-4969-b55c-aad2488d4083",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c4d46ff2-31f5-4c7f-8ee9-aa820ee732a7"
        },
        "item": {
          "id": "3f4c547b-cf01-441d-9f09-528e36593c30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "608bcc09-cbe7-4c90-954d-f9952b60b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4498b6-942f-4b68-ab60-7dd0579ec66e",
        "cursor": {
          "ref": "42c1d697-0826-45bc-9fce-d5b0d25619a8",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46642575-6ffd-4919-9688-6b4d7104c602"
        },
        "item": {
          "id": "9c4498b6-942f-4b68-ab60-7dd0579ec66e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a1a3131a-afcd-4ccf-9fdd-a3a3a18b29d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d359e8-335d-4ac9-9ae2-9d36033c1bbb",
        "cursor": {
          "ref": "4cd70c07-1c86-487f-9eb6-2f6a94eead2e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e7ed88cc-6626-4216-b9a5-e12cad022875"
        },
        "item": {
          "id": "26d359e8-335d-4ac9-9ae2-9d36033c1bbb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c89230a1-12d9-4441-9ca7-9b999943210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d063faa-8b43-41dc-99c7-a87834bce615",
        "cursor": {
          "ref": "f6744b2e-b253-4aba-b926-80f009d7153f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "02cfa9e8-3725-4274-a174-405e49c697f0"
        },
        "item": {
          "id": "9d063faa-8b43-41dc-99c7-a87834bce615",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "749b973a-b73a-483c-a93b-9aea86b3c36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7905bfe-17cc-4529-92f6-f132281a46f7",
        "cursor": {
          "ref": "78d11ccd-bb03-49ba-bcd1-1578d8ae0116",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c921e38-6f9e-4c35-95ac-1304f12532ee"
        },
        "item": {
          "id": "e7905bfe-17cc-4529-92f6-f132281a46f7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "022b0dae-7ef7-4a65-9bcc-6029d8a360fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab29dc0e-2586-46b1-9449-f60cb559ae18",
        "cursor": {
          "ref": "49f524b4-7933-49c6-a5dd-b1e34a8b1642",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d8979a0-fa87-4423-8ea3-22acc4439aee"
        },
        "item": {
          "id": "ab29dc0e-2586-46b1-9449-f60cb559ae18",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "241ddeec-e2cc-493c-93b1-b4b2a867d8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fffa27-30ff-48d7-aeea-ae890f93b63f",
        "cursor": {
          "ref": "d532c05e-c6c8-47b3-b660-63fba5a9714a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e2aa0445-e5e0-4f75-84c5-1aead1b6fbc8"
        },
        "item": {
          "id": "64fffa27-30ff-48d7-aeea-ae890f93b63f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94e0b3fe-a660-4ca9-a964-002965f81ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d3c2e7-ad99-47ec-bb34-37c52d3d6fa3",
        "cursor": {
          "ref": "fef5094d-c2b0-456b-8258-924ac9292803",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ec8e4a33-ee53-49e3-aa5d-8ca329c5e069"
        },
        "item": {
          "id": "e0d3c2e7-ad99-47ec-bb34-37c52d3d6fa3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2906acf6-9fd4-4098-97b4-2c55272e1898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ada0b0-6665-478b-8c2b-b7cde1d8be75",
        "cursor": {
          "ref": "c96f7d8a-5682-4696-9b77-ba6719a52a3f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c6bcb20-2244-4434-b8fc-5bb8ab8f16e9"
        },
        "item": {
          "id": "46ada0b0-6665-478b-8c2b-b7cde1d8be75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d642eb32-7269-4746-b227-299ce9683686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9f56db-f51c-4da5-84b1-81ad1dc31058",
        "cursor": {
          "ref": "ab230682-c45a-4693-a341-010dd66c4aab",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eaeda532-2879-4227-b1bb-fb61be573a7a"
        },
        "item": {
          "id": "dc9f56db-f51c-4da5-84b1-81ad1dc31058",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3fa1922e-0cfb-4431-bd6a-1803d57a39f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0bdc06-4e96-4025-a235-0e93ecb7cd92",
        "cursor": {
          "ref": "8f192a1a-84db-4ce5-9ab8-9b613ae0fc4c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "07e32474-4083-461d-9529-aa77d566175b"
        },
        "item": {
          "id": "4a0bdc06-4e96-4025-a235-0e93ecb7cd92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "951ce195-0a74-4293-b07a-209bb09fa74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d4ba0-6d8c-43ad-81c9-57020508e351",
        "cursor": {
          "ref": "a522b5b8-82b8-407a-86a0-d00791cbb556",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "454d657a-9aff-45d9-9d86-96be142206ef"
        },
        "item": {
          "id": "db0d4ba0-6d8c-43ad-81c9-57020508e351",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5aaa990-1ee8-408c-8380-ea8c5a979e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d49ebe-e79c-4cd8-b390-9f7a9bed7d0c",
        "cursor": {
          "ref": "e6e4b982-962d-43b4-a8c4-0471f5c06416",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c153b5a4-3d18-4ddf-955b-04e0a0ec97a4"
        },
        "item": {
          "id": "34d49ebe-e79c-4cd8-b390-9f7a9bed7d0c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b027f0d9-9e3c-4f90-8472-b2864a43803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64d4c82-092d-4698-bcb2-9333b1711a45",
        "cursor": {
          "ref": "19a4a13d-a5a1-4245-980a-32ebcfd38930",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13cd878b-6483-4d8f-9394-4b09bf7cfc83"
        },
        "item": {
          "id": "f64d4c82-092d-4698-bcb2-9333b1711a45",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8c52a2be-0587-4444-a41d-71b3f0684898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0635a3c-b588-4fdb-8d34-8dc3a66335b2",
        "cursor": {
          "ref": "de76feee-3c1f-4104-9f9d-3595ffe6b229",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b5f5b2f7-ce26-456e-b2ed-584daeb1e2dd"
        },
        "item": {
          "id": "a0635a3c-b588-4fdb-8d34-8dc3a66335b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "41217788-d199-479e-b917-b25387f29320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f811f4-0a9e-4a59-9942-85d37194d413",
        "cursor": {
          "ref": "021b4fd9-471d-4c3a-acf2-c25fa8b07daa",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e0a2a70-ae34-4c25-b04a-f5b5dc270e7b"
        },
        "item": {
          "id": "d9f811f4-0a9e-4a59-9942-85d37194d413",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "98a863d5-db91-4bd0-9560-e83e718a2193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d16696-1c68-4164-81eb-b4bc378798be",
        "cursor": {
          "ref": "53229adf-3c57-4000-9513-de38ffe9c50f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f2fa1895-da03-4fc8-8702-25bf26488b6c"
        },
        "item": {
          "id": "f2d16696-1c68-4164-81eb-b4bc378798be",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b3c40c6d-b4f1-4a85-9320-f9c724c56532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8935769-59e3-4a07-91aa-bb314c620e38",
        "cursor": {
          "ref": "c480a1be-eaf7-4ff6-852a-82376fb8cb79",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e78145d-aaa5-415f-aad0-536924f4d6a8"
        },
        "item": {
          "id": "c8935769-59e3-4a07-91aa-bb314c620e38",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "de96bd35-0a8e-4147-952b-8b89891d243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fbde70-18fe-47e3-8c76-f29f2c54838a",
        "cursor": {
          "ref": "7ee82984-044d-496d-8c29-e5041447b720",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "22213095-aad6-4633-ba34-eb8b32a11100"
        },
        "item": {
          "id": "f1fbde70-18fe-47e3-8c76-f29f2c54838a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1ca57fc2-7374-44c3-b879-ad8716d4ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478a0292-a1e3-4699-819c-d5f9706a87e5",
        "cursor": {
          "ref": "67f3f639-d7d9-42cc-ba45-6788aa108a55",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "accf1e42-01d2-444d-8244-376f2c23c26d"
        },
        "item": {
          "id": "478a0292-a1e3-4699-819c-d5f9706a87e5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5e6304f9-9632-40f2-9f0b-fa5b6329a2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701a19d-e5d2-4b61-83a4-8bac95f944a1",
        "cursor": {
          "ref": "d186904e-897b-4d24-8532-12a81dbdeabe",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "230e284d-688a-41a0-91bf-293d6ee78769"
        },
        "item": {
          "id": "a701a19d-e5d2-4b61-83a4-8bac95f944a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "075114da-b5a5-4171-b25d-f29934d02321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a15158-a877-4ad0-b5a6-ab78f190b1ab",
        "cursor": {
          "ref": "96913a6c-c926-4e93-ba16-fb1c930d88b7",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b839a58c-dc64-4d4f-885a-021a3a13c0bf"
        },
        "item": {
          "id": "41a15158-a877-4ad0-b5a6-ab78f190b1ab",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8c5aa48b-d172-4dfc-9057-64b39b6f8b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641487be-bca8-4bbc-b794-f4eb66034c37",
        "cursor": {
          "ref": "230bde4d-1d24-4e56-a569-ecd8ba09bbeb",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "60acc52c-56b1-472b-a200-dc9b0a7f21f4"
        },
        "item": {
          "id": "641487be-bca8-4bbc-b794-f4eb66034c37",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7cd7e507-244a-420a-a836-dc16b6dcec51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9bba09-6110-4bf6-a6de-db7d4a96b5a5",
        "cursor": {
          "ref": "3b172880-1d5a-44b8-9e91-72f3f57f2ef2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c697dd9c-e50b-4162-bc8c-fd636f483d73"
        },
        "item": {
          "id": "bb9bba09-6110-4bf6-a6de-db7d4a96b5a5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e0af14f2-1053-4ca6-b8c8-cf6de93b0f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb862b5-df1b-4b65-9b6f-eb26baa0814f",
        "cursor": {
          "ref": "e73675f5-b76a-4b28-8c25-a6a4f0b229c4",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2f23fe78-f754-4402-bc33-bdb91f924c33"
        },
        "item": {
          "id": "9bb862b5-df1b-4b65-9b6f-eb26baa0814f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5a11279-c549-4e0a-a7e0-943b81d65e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd1164a-de99-4d0a-9dcc-e297f17dfeab",
        "cursor": {
          "ref": "38c5a3c9-35f6-40da-9bcc-affa394b780a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ae259489-0ccb-4466-80e7-aa3e4975b57e"
        },
        "item": {
          "id": "2fd1164a-de99-4d0a-9dcc-e297f17dfeab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "83fff23a-7674-45aa-aec3-4f71ca135e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6578eba-091b-4771-8c6d-43d5266b33d6",
        "cursor": {
          "ref": "d3aaaaaa-ac9b-4e45-bd55-117da5b36257",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7dc90493-1a93-4edb-8587-e4628e5a3e8c"
        },
        "item": {
          "id": "a6578eba-091b-4771-8c6d-43d5266b33d6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "52314078-52ce-48e1-993c-b52ed8e99ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5a8161-ffac-4dab-b2c0-fb0a2d091f62",
        "cursor": {
          "ref": "8e13bae6-dabf-4fbd-9bbe-7e62e72aa31a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "526c8990-b32f-4e30-a005-fb6ba59e6de7"
        },
        "item": {
          "id": "cc5a8161-ffac-4dab-b2c0-fb0a2d091f62",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "958c96ca-e178-4cff-80e8-bd144bfa046a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc96fa0b-3580-4383-971c-9352182b3c25",
        "cursor": {
          "ref": "48b515f0-9976-4106-9d55-78cbfb1e8c38",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be11f35c-ce3a-4e6d-8032-6870eab35118"
        },
        "item": {
          "id": "cc96fa0b-3580-4383-971c-9352182b3c25",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ebc5d8a-3797-4996-807a-1cab623e79e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05baad53-68ef-4299-9199-ed7a672aaee3",
        "cursor": {
          "ref": "f83773f0-31f6-4e19-8f4c-d55af3d5ab55",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb235bb1-146e-4c07-8ebb-eba91c2e9278"
        },
        "item": {
          "id": "05baad53-68ef-4299-9199-ed7a672aaee3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dec26a31-735e-4e95-9a83-7ca650c5be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bcb777-f50d-42fe-9f97-5313edb27a19",
        "cursor": {
          "ref": "1e8bfea5-cad2-4f6a-ad53-8d7447f71195",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3b9dd22-6a96-4ff8-85a0-6a028714aeca"
        },
        "item": {
          "id": "c9bcb777-f50d-42fe-9f97-5313edb27a19",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "babf4187-e6c3-41f6-bd13-19d41478680f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a2938-12ed-4a82-9137-98025d745128",
        "cursor": {
          "ref": "77b1c183-451a-41bd-8d42-203f0956bfd8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1ebaa05f-33d6-494b-b74b-55610c2fa3cc"
        },
        "item": {
          "id": "a37a2938-12ed-4a82-9137-98025d745128",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58848e1b-88f3-419f-a94c-6278e7ea4ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f81da3d-7595-4f0e-9d27-280a0071527b",
        "cursor": {
          "ref": "f417499c-57d6-4619-90fc-144248ac7034",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b2145d62-e5d7-4eb0-bf2c-d121745f78af"
        },
        "item": {
          "id": "5f81da3d-7595-4f0e-9d27-280a0071527b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b6934679-0c58-4b33-819a-45cbaa4548a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a80afaf-7aac-4178-8151-ada97b1f685f",
        "cursor": {
          "ref": "bf403dc1-d3b5-4327-9675-11114a2eaaca",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f170a16-de16-46f1-89b2-4c1226a25af9"
        },
        "item": {
          "id": "7a80afaf-7aac-4178-8151-ada97b1f685f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9c2abacf-0840-4680-8d5f-684b24cc6829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413d15f4-bf5d-4dab-b2bc-07fad39ea966",
        "cursor": {
          "ref": "b5f12cfd-b6fe-4610-833f-80ce8ec17eeb",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0728cd6c-f12c-4bcf-9892-6a05c888eb38"
        },
        "item": {
          "id": "413d15f4-bf5d-4dab-b2bc-07fad39ea966",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "af501967-c646-4a04-90cb-12081e28bf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634512ee-d1a4-4cc6-9062-614d2f7930b4",
        "cursor": {
          "ref": "e457e0a2-e96c-4394-9ade-0fd16a3d4193",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "091f3c15-c2b5-418a-aafc-aad2da72952d"
        },
        "item": {
          "id": "634512ee-d1a4-4cc6-9062-614d2f7930b4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4e98a08d-ba4d-445e-85f0-e9a1050793f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7334f83-0124-43af-bc6c-2913e9d41f04",
        "cursor": {
          "ref": "dced1af2-fc0c-4d62-896e-11f8cc893697",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8c3e117b-75e8-4991-a115-4617e0ca5e2b"
        },
        "item": {
          "id": "d7334f83-0124-43af-bc6c-2913e9d41f04",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0fcc4245-f740-49d8-9f9c-3d5dee0bce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763c856a-1004-4174-a776-fd1c318180c2",
        "cursor": {
          "ref": "0f46b7bd-9fa2-4cb4-9e66-90867f587cb7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fb1768b3-f319-42c9-be0e-e146ebfe8509"
        },
        "item": {
          "id": "763c856a-1004-4174-a776-fd1c318180c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6a42e579-41e8-4b3b-b751-e5d13552a59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539e9b02-471e-48c3-b299-d0b0119ddfb4",
        "cursor": {
          "ref": "296eed7c-d8b4-4aac-993e-df13ba69d281",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "da2a8494-f0b2-4150-bb1e-e1e06c97fc91"
        },
        "item": {
          "id": "539e9b02-471e-48c3-b299-d0b0119ddfb4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2770dba8-7988-4818-adc2-21ab8b078d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441c5233-46b4-4951-98e6-a29e6bb97135",
        "cursor": {
          "ref": "f4c2c589-7c0a-46f0-b839-61605af897b8",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c8d3f3cd-fa0a-47e1-9cd8-f61bdd5bda82"
        },
        "item": {
          "id": "441c5233-46b4-4951-98e6-a29e6bb97135",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b1425834-21cf-42c5-857e-28618c2dc0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f9d4a2-b307-42a7-a183-263b722358f5",
        "cursor": {
          "ref": "5dad138a-11dd-41b0-bfdf-51969c3b439f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7f68ec26-3298-492d-b76e-16efc6e19ded"
        },
        "item": {
          "id": "44f9d4a2-b307-42a7-a183-263b722358f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "52f2e4a3-b145-43a4-a8e6-c06b42e0034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca12fbc-29a9-44c1-ac54-07fa97f8d2ea",
        "cursor": {
          "ref": "5cdf5c97-757f-4508-9449-d723c7e2419c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "833c8839-c1e0-4e90-92ae-d0f6e6c1495c"
        },
        "item": {
          "id": "dca12fbc-29a9-44c1-ac54-07fa97f8d2ea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d272fb2a-e570-438a-a6d7-59529437d801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e792c0-5a91-4804-a775-fcb13a89ecdc",
        "cursor": {
          "ref": "a993fd87-c6ab-4501-89ef-bd1e92bf5517",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a4724a1f-41fc-49b6-a837-55d536714672"
        },
        "item": {
          "id": "f2e792c0-5a91-4804-a775-fcb13a89ecdc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "11ce5c81-008d-4712-bc1a-3fa534803219",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde9c78-4f67-40d6-80d6-3a8fb6105180",
        "cursor": {
          "ref": "7332305d-e1ee-42c5-b70b-22aeab33285e",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "48712de2-bc4e-475f-93ef-f59ae745320e"
        },
        "item": {
          "id": "3dde9c78-4f67-40d6-80d6-3a8fb6105180",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d854bb77-8969-41ca-9c4a-8059cf7f1b0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 859,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a078bb3-4312-4897-8177-6b902287bd03",
        "cursor": {
          "ref": "0f161f41-6775-43bd-9280-a25049e00bec",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "88deb818-f77f-48d3-a574-c2a8d22cac14"
        },
        "item": {
          "id": "1a078bb3-4312-4897-8177-6b902287bd03",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5be22c42-93c1-435c-ad6b-d5a654d94301",
          "status": "Created",
          "code": 201,
          "responseTime": 7109,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c21214-af97-47f7-81b4-443316a65bc4",
        "cursor": {
          "ref": "37f5f042-aa4e-47df-a9e9-1c1fb45f0ed4",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "14ad3462-91dd-4068-a74a-ccdce3346187"
        },
        "item": {
          "id": "86c21214-af97-47f7-81b4-443316a65bc4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a61baf5-d77e-4e35-906b-02bf0554b78c",
          "status": "Created",
          "code": 201,
          "responseTime": 6496,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5324686f-8484-49d9-85cb-6367f937c188",
        "cursor": {
          "ref": "48824f90-0886-4b94-bf58-2035be26fc79",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "602c8c9d-d164-414f-8bc4-12bcc86ef553"
        },
        "item": {
          "id": "5324686f-8484-49d9-85cb-6367f937c188",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7dafe5bf-bc6f-4a4f-b5f8-c66f919c6a15",
          "status": "Created",
          "code": 201,
          "responseTime": 6131,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a024acbf-2d4c-47c6-8a0e-099d8a17de6c",
        "cursor": {
          "ref": "8ce4661a-9ead-40eb-9ff2-c5d2d2783e8f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aeb9169e-e902-4d4e-86c0-98eac9cf8d2a"
        },
        "item": {
          "id": "a024acbf-2d4c-47c6-8a0e-099d8a17de6c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b145fff-aa24-4bff-899e-0bd9dc10c0ba",
          "status": "Created",
          "code": 201,
          "responseTime": 6504,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb025318-7fd1-4d3f-bed7-fcc9c1ae983a",
        "cursor": {
          "ref": "74067c38-001b-4ac2-b190-a88f8fdd0302",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "77ff9262-cde7-4b0a-a076-79721e406cd4"
        },
        "item": {
          "id": "bb025318-7fd1-4d3f-bed7-fcc9c1ae983a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "563fb478-d5b2-47b0-9f4c-fe5df24c5a19",
          "status": "Created",
          "code": 201,
          "responseTime": 6954,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "15373189-60e0-4ade-8e07-aee73aa80407",
        "cursor": {
          "ref": "aafecd55-ecd8-43ed-b14e-9853ad80cac3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "569d4a52-c483-4949-8b4b-c931f5176b72"
        },
        "item": {
          "id": "15373189-60e0-4ade-8e07-aee73aa80407",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f77cb8d3-6715-4560-8825-edca44a00361",
          "status": "Created",
          "code": 201,
          "responseTime": 8137,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea215f5-b828-42be-86e7-b2d3358cf71f",
        "cursor": {
          "ref": "9c6b7ead-1330-4224-bc39-b1a561206093",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de6035be-9f63-4663-9876-a9c47e6ddbbf"
        },
        "item": {
          "id": "bea215f5-b828-42be-86e7-b2d3358cf71f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9092d9b-8d84-461e-a76a-d30c5b256197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea215f5-b828-42be-86e7-b2d3358cf71f",
        "cursor": {
          "ref": "9c6b7ead-1330-4224-bc39-b1a561206093",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de6035be-9f63-4663-9876-a9c47e6ddbbf"
        },
        "item": {
          "id": "bea215f5-b828-42be-86e7-b2d3358cf71f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9092d9b-8d84-461e-a76a-d30c5b256197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d877917-2422-4cf6-93c4-46026e1f08a8",
        "cursor": {
          "ref": "354647b3-b4e5-410e-8232-b16ee9b03374",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "36f674e3-fd36-4135-b222-9010b36dc0a7"
        },
        "item": {
          "id": "1d877917-2422-4cf6-93c4-46026e1f08a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e10aa139-26bc-4ecf-a908-306f5b26f4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6ea88f-26b1-40b2-8c13-31f9c2e3dfc5",
        "cursor": {
          "ref": "6f9ff855-544d-4443-b747-d21581f30d41",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a8f69681-0b79-43eb-85b8-f8dfc335cc22"
        },
        "item": {
          "id": "1d6ea88f-26b1-40b2-8c13-31f9c2e3dfc5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "77e158e7-f163-4c2b-ba0e-c223257b9666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e09f52-acb2-40b8-9d4c-560e59150be8",
        "cursor": {
          "ref": "0e28099e-3376-4b07-be4d-556711ce8664",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aad42a5e-d0a0-47c2-8507-fd4cca7f03d2"
        },
        "item": {
          "id": "79e09f52-acb2-40b8-9d4c-560e59150be8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "391a9a95-0acc-4ef4-9df9-953419090423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c3ec09-e9ec-4303-bb0d-4d4626805f88",
        "cursor": {
          "ref": "9e72a9c7-4146-45fe-b82a-5197c5b9d409",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0903563c-a3be-473a-b16b-7b46e33c34e3"
        },
        "item": {
          "id": "83c3ec09-e9ec-4303-bb0d-4d4626805f88",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03bc2e10-c529-4610-9960-b2a72c758290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036f71bf-176c-45f3-a5b0-7a0ac1f233ae",
        "cursor": {
          "ref": "ef445b39-fd28-4810-8a00-7dda2ea41294",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b98ae96-5546-4742-a366-ba3bb5ae1255"
        },
        "item": {
          "id": "036f71bf-176c-45f3-a5b0-7a0ac1f233ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "152cd57c-6ac3-4cde-b186-750425d9e4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986b169c-9398-45de-953d-b6a46c094ba1",
        "cursor": {
          "ref": "24e8c622-1d93-49a4-b906-d56dacbec813",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e9a70c95-32df-4320-aa56-6e8b36fed920"
        },
        "item": {
          "id": "986b169c-9398-45de-953d-b6a46c094ba1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "326021dc-7614-442d-8b21-4e53f24dbf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eded992-88ff-4760-89d4-25e9f25bbd93",
        "cursor": {
          "ref": "0229a9b9-0dc1-48a2-9ab6-47e70ab9441f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7c59d5a-777a-492f-8884-d53f47d3ce88"
        },
        "item": {
          "id": "5eded992-88ff-4760-89d4-25e9f25bbd93",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9927d670-ebb2-4ea6-ae6b-eab0bea5afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d59f5c8-9bf9-463a-af59-118edfdec309",
        "cursor": {
          "ref": "d9a5e2c0-55db-48df-b568-93c6a0b9e093",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e02d0052-53ef-44db-850d-467435f00fc7"
        },
        "item": {
          "id": "0d59f5c8-9bf9-463a-af59-118edfdec309",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "202c6aeb-cfc2-4cc2-8a89-2559ceadabc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e2393-9a7d-4147-a292-436b408ee76f",
        "cursor": {
          "ref": "292ce244-6256-41d8-98ca-1f6c4139596c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5c5fc9ef-8eb0-45f5-8bc9-ff8099036db0"
        },
        "item": {
          "id": "2d3e2393-9a7d-4147-a292-436b408ee76f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cab02c65-9536-4405-b90c-8f227e240cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6536ccf2-fcf3-4988-b959-6d47de4c78fa",
        "cursor": {
          "ref": "2cad50ae-bf11-4144-b409-fa56ad5c23a4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7b9a9995-ead5-413f-a4bb-cd8e05bb5d72"
        },
        "item": {
          "id": "6536ccf2-fcf3-4988-b959-6d47de4c78fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09fbe22e-5494-40b1-9dd7-18504721d8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5698f-b7e9-429e-a9a0-56eec851f9c8",
        "cursor": {
          "ref": "b4cdf8bc-d3ef-4656-b4d8-f995c5367641",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "053236c0-2233-4d6c-b53e-b09e6253ef6f"
        },
        "item": {
          "id": "0bc5698f-b7e9-429e-a9a0-56eec851f9c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5063063-e917-4c1b-ab64-92ac6ef154d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4026c357-0d79-441c-8fb4-41257ea76bfa",
        "cursor": {
          "ref": "ced5fa51-914c-4c90-ace2-bad55406d30e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3e1b6979-6e08-42d8-8bf4-e3dd1a9b26c5"
        },
        "item": {
          "id": "4026c357-0d79-441c-8fb4-41257ea76bfa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38dc41df-2776-4b95-a062-27698f950454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae4fd4-937e-4637-a67d-39d6eb0e8ea3",
        "cursor": {
          "ref": "225fee34-31ae-40ad-80cd-e23a4fbc7399",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "98baf1fb-3da8-4e5b-96fd-6db90e3b1217"
        },
        "item": {
          "id": "47ae4fd4-937e-4637-a67d-39d6eb0e8ea3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "79446e8a-8747-4336-be5a-cb154cfdf3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba315de0-48c3-440a-8b39-d780dd2fdb04",
        "cursor": {
          "ref": "c2449d9d-4df4-42cc-a266-49767f2c3bf2",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9981d262-b460-4425-a972-6143c64eab0c"
        },
        "item": {
          "id": "ba315de0-48c3-440a-8b39-d780dd2fdb04",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c6e721fd-909c-4102-9888-40badb063a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7573595c-0de9-4798-aa40-0806370a2ecf",
        "cursor": {
          "ref": "96da6312-d19d-4419-ae84-c4685484befd",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1c089c3a-ad2b-4fff-9d15-36c57f7346eb"
        },
        "item": {
          "id": "7573595c-0de9-4798-aa40-0806370a2ecf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76c97158-2518-40a1-a389-611984e44946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb392014-2c8c-4fc2-aed9-ea060ba21ffb",
        "cursor": {
          "ref": "2b911d83-da1e-462d-b011-d25091822f77",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8f616833-5f82-41c2-9e43-e2e54a9074e1"
        },
        "item": {
          "id": "cb392014-2c8c-4fc2-aed9-ea060ba21ffb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "48d7ba00-81bb-473f-93e9-b5db5295718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a211f-1994-4473-a00c-407c99139d1c",
        "cursor": {
          "ref": "db53d81a-fa20-4ff7-afbf-f41f07fe2542",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cf913d9c-eb3d-4741-9f34-ad7f00c46300"
        },
        "item": {
          "id": "384a211f-1994-4473-a00c-407c99139d1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ecfc94a-8ba1-4d9e-9d86-dac9bc9dfb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e2c275-e3cc-4342-85a0-c202a248f394",
        "cursor": {
          "ref": "50cafd46-a958-4e6d-a0f8-61c23fa0238f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aca2d64a-f3d2-4d37-a96f-9866d65e2cf4"
        },
        "item": {
          "id": "20e2c275-e3cc-4342-85a0-c202a248f394",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04be08a9-243a-414b-a05a-03e06ff1412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566c242c-ef80-4869-ab62-aa32d37ab3f3",
        "cursor": {
          "ref": "5ee271ef-23b0-4d93-a09c-708e15d8d462",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f6d3ec5e-09e0-4b68-9387-fdca43b8defe"
        },
        "item": {
          "id": "566c242c-ef80-4869-ab62-aa32d37ab3f3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5c21d56-cbff-469a-a2c3-85a0bb79446f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d669a8e-c1ba-45cc-89e6-2ecf85664c44",
        "cursor": {
          "ref": "bf8eb53e-ee82-4139-a57e-3e9bbdfe7022",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bd4c467a-f2fc-464b-bf2a-882ff689ad0d"
        },
        "item": {
          "id": "3d669a8e-c1ba-45cc-89e6-2ecf85664c44",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c181ccf1-4c08-4547-b294-462eaf262866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c78f67-e151-49bd-8797-17f24fc1cbd4",
        "cursor": {
          "ref": "0c2e4076-7ed5-4053-b63d-2a421f62a69a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8097edd1-9533-45c1-b942-853d778cab03"
        },
        "item": {
          "id": "49c78f67-e151-49bd-8797-17f24fc1cbd4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a34d0b3a-41a6-448b-bf51-c9b8a6ae14ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33607401-38a2-497e-adaf-81ed3f428b4e",
        "cursor": {
          "ref": "db6c8b9f-39c8-4689-9c1e-11e53ab20792",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e5177bf2-3d06-43f8-8865-9be6788d3647"
        },
        "item": {
          "id": "33607401-38a2-497e-adaf-81ed3f428b4e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "46abd914-58ea-40af-8164-24c2305e1a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c19cf3-0247-4cdc-b634-5b457c723800",
        "cursor": {
          "ref": "3b1ff0d2-cb56-439d-bbaa-d79c6f1b0592",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8c814ad9-73dc-4e1d-9182-91addc11e4a3"
        },
        "item": {
          "id": "d8c19cf3-0247-4cdc-b634-5b457c723800",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1af52946-f581-4983-9b3d-c2ad3a97d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de5a28-acc6-445f-b1fb-39c2fcacb029",
        "cursor": {
          "ref": "f1a13092-2c1b-4e71-b409-5ae3192644dc",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a066a0d-a1a2-4370-9ea9-1044ed7ad4f0"
        },
        "item": {
          "id": "94de5a28-acc6-445f-b1fb-39c2fcacb029",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4857f00c-a14d-4074-85a1-fad814a9eaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260d871f-f8ae-4bc6-a4f2-18f1843232df",
        "cursor": {
          "ref": "e0b3b015-e41e-4726-a4d7-e25729a06e43",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a1b0101a-d819-46e1-91d4-33c5dceb70d5"
        },
        "item": {
          "id": "260d871f-f8ae-4bc6-a4f2-18f1843232df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c6c34272-8def-407b-b9f7-fd2f1336435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b7a96-6ad7-41b3-8700-e5e774b45396",
        "cursor": {
          "ref": "b2fd8fb6-431b-4b96-bf1f-7f452421ada6",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b37f5d55-8903-4ceb-99c1-a4cfd2585a03"
        },
        "item": {
          "id": "791b7a96-6ad7-41b3-8700-e5e774b45396",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c120e485-f83b-4181-b0d0-b24dd8d0e031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b213ff0b-3eb0-419f-b226-98e86b8987d9",
        "cursor": {
          "ref": "098b0bb3-b655-4f2c-898a-a9d6456bc791",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb0b262e-90bc-4166-89b3-a851f12e06b5"
        },
        "item": {
          "id": "b213ff0b-3eb0-419f-b226-98e86b8987d9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e136f65-b0d9-4ab8-afb5-625a8dfa9047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fea614-8936-42be-a30c-04696b45e59d",
        "cursor": {
          "ref": "01e6135a-e3d2-4a10-a32c-58459d297041",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0a6e390-47e4-4798-b07b-6b94b16891cd"
        },
        "item": {
          "id": "c8fea614-8936-42be-a30c-04696b45e59d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83b96dc5-59ce-4476-a376-f19d256f638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8007bee-6470-488e-a3a9-004243f807e4",
        "cursor": {
          "ref": "995ef907-3025-491a-b0cf-609fc914b37b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6900bfc9-2077-415e-933d-f7507ccbbc5f"
        },
        "item": {
          "id": "c8007bee-6470-488e-a3a9-004243f807e4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e30753e-c50e-4f80-ad20-cbc4f5b413aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c50e3b-9c0d-4377-9477-7d8a1c5dccbc",
        "cursor": {
          "ref": "1e1f203d-eb24-491d-b3ff-2b4b29889ed8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "41ac3ff2-0054-44b8-bf83-aa84e707c58a"
        },
        "item": {
          "id": "15c50e3b-9c0d-4377-9477-7d8a1c5dccbc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "06a742a0-5649-44a9-a0e9-c0dbd9c9feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3254d788-ac3b-4774-ae81-b716cf783fb5",
        "cursor": {
          "ref": "77e38e88-c9c9-4d34-b89a-db08aa1af41d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "324baad4-1a16-40f8-8c82-a3856951cc0f"
        },
        "item": {
          "id": "3254d788-ac3b-4774-ae81-b716cf783fb5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ef1367d7-c3ed-48e7-98ea-14c301cce446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1041ed0-9edd-47f3-ab04-6a68363c7082",
        "cursor": {
          "ref": "23bb9173-1e83-4cd3-b5d3-09a0e5aea0f6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12aa8506-9028-49e5-a2d8-71df58540d18"
        },
        "item": {
          "id": "f1041ed0-9edd-47f3-ab04-6a68363c7082",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d593051e-cbdd-4bd2-9323-dcf1df5158b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bb7d4e-4927-4ffc-835f-ee76fa5ade92",
        "cursor": {
          "ref": "59340d53-b5f7-4e29-baaf-8f33347cc55a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "de9bae1b-2e65-4475-8f7a-ca111fc06171"
        },
        "item": {
          "id": "08bb7d4e-4927-4ffc-835f-ee76fa5ade92",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "30e206e1-9177-4b69-91e5-16f134dd6ac5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 831,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3237803e-7a81-4e47-bd84-f57cf58a01f4",
        "cursor": {
          "ref": "f59dddf0-a5f9-4f25-a0f9-d9d8979ae657",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "87f75a0a-e8f6-49cc-9129-c7cd4e7e94d7"
        },
        "item": {
          "id": "3237803e-7a81-4e47-bd84-f57cf58a01f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0ca8eee7-ddcc-46db-ba21-32eff4f43fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3237803e-7a81-4e47-bd84-f57cf58a01f4",
        "cursor": {
          "ref": "f59dddf0-a5f9-4f25-a0f9-d9d8979ae657",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "87f75a0a-e8f6-49cc-9129-c7cd4e7e94d7"
        },
        "item": {
          "id": "3237803e-7a81-4e47-bd84-f57cf58a01f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0ca8eee7-ddcc-46db-ba21-32eff4f43fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29af4c6-6dff-492d-9547-f3b67a856aee",
        "cursor": {
          "ref": "79679677-fe29-48dc-8bec-d6143cfc2a69",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a495d927-977e-4b05-add0-8de819d737a4"
        },
        "item": {
          "id": "e29af4c6-6dff-492d-9547-f3b67a856aee",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c154e7b7-431f-46e2-805b-b329aea3f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e0f12c-9800-4aab-bc54-6238d5557fc7",
        "cursor": {
          "ref": "1fcb5e5e-9313-4844-b9d9-75afee7819b5",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b8b91ca5-dae5-4172-b5d8-82fdaaeb5bc0"
        },
        "item": {
          "id": "36e0f12c-9800-4aab-bc54-6238d5557fc7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cf87b397-e90f-4c80-912c-ad256a8b03b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2005ed-3315-4d3c-8fdc-ab55f95a8f37",
        "cursor": {
          "ref": "69165d87-b8a9-4299-89f6-0d3e31ec50b1",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1ed53991-5f67-4526-bd92-3f77cc61e1f9"
        },
        "item": {
          "id": "ef2005ed-3315-4d3c-8fdc-ab55f95a8f37",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cfc12286-d7d0-44de-b2f7-881eb53f6f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccfc953-198a-49e4-8dad-faa8560847c1",
        "cursor": {
          "ref": "aab19e26-5303-45c9-8910-d1c855d08204",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6b252b64-88ee-49aa-9427-c3e8935ce528"
        },
        "item": {
          "id": "7ccfc953-198a-49e4-8dad-faa8560847c1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cd18b61e-9b43-4955-8bee-31e898a14bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c47f19-ec0b-4701-b62b-b445c562f035",
        "cursor": {
          "ref": "c74b8c4a-c9de-4615-a7f5-0449f336bdbd",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "447922fd-4dd5-4427-8a70-1afb713e0705"
        },
        "item": {
          "id": "d4c47f19-ec0b-4701-b62b-b445c562f035",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "062b590a-8ed7-4710-938c-192c4d3342e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26572e2a-edd6-4695-8976-fbae08d17532",
        "cursor": {
          "ref": "5e7036dc-36e5-4fc5-9c06-58a43362b731",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9abb1d47-2fd2-4096-b85f-28c9677bd81f"
        },
        "item": {
          "id": "26572e2a-edd6-4695-8976-fbae08d17532",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f9ea0d1f-e302-4c7a-b352-fe8858128c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63200c2-0059-4ea4-88e8-0770eff0f8b8",
        "cursor": {
          "ref": "728a2eae-8a89-4a34-87d1-d6bb5db56775",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "32647a61-8712-41e0-a99c-4a99098f9c07"
        },
        "item": {
          "id": "b63200c2-0059-4ea4-88e8-0770eff0f8b8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "91f3a7e1-e259-41bf-83c9-c2e6e9b61575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139a31e4-7f73-4a78-9065-0fdbd0e67384",
        "cursor": {
          "ref": "6bf7b4c4-565f-4f42-9fcc-a5864a023741",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f3f580d-1f72-4dc2-b2e2-76e1ab03ff65"
        },
        "item": {
          "id": "139a31e4-7f73-4a78-9065-0fdbd0e67384",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e3849030-b0db-4aa3-8662-1846d9da2b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1492740c-4e9b-4cb5-942e-0fe248111102",
        "cursor": {
          "ref": "43870b17-a65d-4930-b355-6db6d8ef5ab0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "810fbef4-a6ef-47b8-ad25-61417c06fbba"
        },
        "item": {
          "id": "1492740c-4e9b-4cb5-942e-0fe248111102",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8af397a4-26b6-44f5-bd6d-188579df25cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2819cfb9-8a8c-441d-b582-2708d517f26b",
        "cursor": {
          "ref": "59061340-14d9-45d2-a5d6-9a4917da24a5",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e7754e7f-573c-4b8c-ae76-b78a540ed75e"
        },
        "item": {
          "id": "2819cfb9-8a8c-441d-b582-2708d517f26b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c254ecc6-5a17-4627-9e91-a70da42043ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def98b3f-523e-4d1b-98eb-0edc5f6f941f",
        "cursor": {
          "ref": "bf0617dc-d397-45b2-9814-ef15475c6d36",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "57bd8a04-eb55-475a-9811-249c129fbed8"
        },
        "item": {
          "id": "def98b3f-523e-4d1b-98eb-0edc5f6f941f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d5861ee6-4cb8-471e-862c-58dc70024520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d65ea-73ee-48b7-91c8-d3cea6bad725",
        "cursor": {
          "ref": "92506014-52bf-4c2d-a300-9547faf7b161",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5f656d7c-f6ea-4680-840a-140f4a2e4ea5"
        },
        "item": {
          "id": "ae0d65ea-73ee-48b7-91c8-d3cea6bad725",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "df64b234-206a-470c-8e3a-6997a7dedf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2019b74-7a42-4456-b3e5-c758b8515d33",
        "cursor": {
          "ref": "1b7dd52e-c7cb-4310-925a-a468645f9e4a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4cce7fdb-b988-429e-a8ea-24003ffd1619"
        },
        "item": {
          "id": "b2019b74-7a42-4456-b3e5-c758b8515d33",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bd31f2fb-4427-4423-a572-b705c0abd4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdf188f-217a-4575-b660-4a3a2aa202a9",
        "cursor": {
          "ref": "54a5ed20-b09c-4967-b40c-261aa7643bb6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c9988d90-1b29-4678-a3bf-3091c7e17843"
        },
        "item": {
          "id": "5cdf188f-217a-4575-b660-4a3a2aa202a9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cbdd8807-d66b-41c0-90fd-1fb17166af42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0e7c98-eb31-4f5b-bed5-e7a2356049c2",
        "cursor": {
          "ref": "a8fd5df0-e23e-4b89-b228-43a0d669b92f",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "32c88a50-0d79-4bf0-ba6a-653afb5e68b0"
        },
        "item": {
          "id": "1d0e7c98-eb31-4f5b-bed5-e7a2356049c2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5052798a-b0d8-44c8-a100-0b83bb6c6a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80330445-d8c4-4702-80c8-01b849006f4a",
        "cursor": {
          "ref": "04d9e9a4-e6f8-4433-916e-664b0af38c61",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7d7d89e6-6ba0-47db-8431-53f80c50dbac"
        },
        "item": {
          "id": "80330445-d8c4-4702-80c8-01b849006f4a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d16ba13-b60b-4fb5-8ebe-329e25bb68b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c84b52-5c50-4588-81d8-55ac8ec1cb48",
        "cursor": {
          "ref": "cec5f19f-3f07-4281-ab23-c478cfe67059",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "53c18568-2c05-4b03-b8fe-815d958b82cc"
        },
        "item": {
          "id": "a6c84b52-5c50-4588-81d8-55ac8ec1cb48",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ede6c1f6-3cc6-4d3b-b8da-b09991b52f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e5f65d-abf0-4ebc-bba3-ceb79d39c617",
        "cursor": {
          "ref": "d34bd79d-1dd8-46df-b361-89540fa32dbd",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ecb768be-a7fa-41b4-9b69-ba8788a52c1f"
        },
        "item": {
          "id": "23e5f65d-abf0-4ebc-bba3-ceb79d39c617",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "90a3b570-2247-4caa-a0a8-4eb5f6868c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ff7e5-b49a-4b3c-bfbc-b3ddffa1a33f",
        "cursor": {
          "ref": "97ac68b6-c3e8-4296-956d-ec1ca261e2c2",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f76a45d4-21ef-465a-bb69-c4974ebbc1ee"
        },
        "item": {
          "id": "8c6ff7e5-b49a-4b3c-bfbc-b3ddffa1a33f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7d53020-abfe-4b4b-bd4f-5802e38a75f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26690eb3-7b07-424f-82d4-3267a5d7e4e0",
        "cursor": {
          "ref": "8760f0d6-bc59-4dc1-8061-26168a547f2a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d162db5b-f4f1-424b-ab85-1c6c5274b26e"
        },
        "item": {
          "id": "26690eb3-7b07-424f-82d4-3267a5d7e4e0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ef45e85d-ff81-4cf7-a7f8-2db45e73f84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6ecefb-2004-4a1c-9546-6ef5f6730fe2",
        "cursor": {
          "ref": "d84ae7b3-1b68-4c2a-b761-885eb543c258",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e20b36c4-4616-4fe6-b261-833409e38616"
        },
        "item": {
          "id": "5a6ecefb-2004-4a1c-9546-6ef5f6730fe2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "77751244-3080-4b0e-a2ee-83788e61c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e564299e-bc2f-41df-ba3b-c3e78c35850c",
        "cursor": {
          "ref": "a65cfffd-49e6-4f79-a893-4c112269f075",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d00d8dfd-b150-4e6b-96b1-16c92c8a8b7a"
        },
        "item": {
          "id": "e564299e-bc2f-41df-ba3b-c3e78c35850c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fe889ceb-e5a0-435a-a614-626445e177f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de7958e-3ea8-4d5d-ab1d-6011fc6965b8",
        "cursor": {
          "ref": "d4257670-47dd-4c80-a76c-343aeabb3cd4",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f91ec7bf-15d5-4fd4-bc34-01d1eecfdfa4"
        },
        "item": {
          "id": "2de7958e-3ea8-4d5d-ab1d-6011fc6965b8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4d8d7cd8-c89c-4270-920a-d8d27446a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa28eedb-5891-4ac5-bec9-532ad608e243",
        "cursor": {
          "ref": "3f998f23-141f-47d4-b3a2-d60cb25651ba",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f8183ebd-896b-4186-9eb7-8c980d90ac55"
        },
        "item": {
          "id": "fa28eedb-5891-4ac5-bec9-532ad608e243",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d6cfd9b-63b4-4d85-b77c-447c2f9deb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbb8867-e8d0-4992-b6e5-c67b1ccbb731",
        "cursor": {
          "ref": "b54e4edc-4773-46fc-9341-b3c13b01286e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3ab5dc8f-0f8b-44fb-95eb-ac152cfb71b4"
        },
        "item": {
          "id": "abbb8867-e8d0-4992-b6e5-c67b1ccbb731",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98839c48-3056-4319-a986-26fb90ac30c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f6e784-1517-43a3-b052-c0a18a6afe8f",
        "cursor": {
          "ref": "bf64c4b8-03f2-4005-8217-a4d0d8d1bf35",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9c6594a4-129d-4985-98c7-3055f124ad4f"
        },
        "item": {
          "id": "c9f6e784-1517-43a3-b052-c0a18a6afe8f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "852c7a2d-2e9b-4e22-bf1b-9f04f35f9d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ce78ad-9a19-44d1-85c4-cb28385313ce",
        "cursor": {
          "ref": "a3500dae-002e-47e0-98b2-2631ca57f7f4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b9140fab-04ce-4425-a155-f2b69e83b9dc"
        },
        "item": {
          "id": "40ce78ad-9a19-44d1-85c4-cb28385313ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "45e2e797-bc84-41d0-8276-0c0043295fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bfc86d-5fd9-4c3a-bbca-f372ecb6b0b4",
        "cursor": {
          "ref": "b3bc5d71-d05f-4e0c-92ee-abc2ce7d2556",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d3f68c90-2a09-464d-a5ad-0905e431fc9c"
        },
        "item": {
          "id": "47bfc86d-5fd9-4c3a-bbca-f372ecb6b0b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "657e2041-f787-450f-9c2e-e1349d2dbc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17f1e92-d340-4894-bdfc-f4c6cb95c08c",
        "cursor": {
          "ref": "557984e9-b744-4002-a3db-5aca21f03f02",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1fdd14d0-271b-4675-9ba3-e829d01073b3"
        },
        "item": {
          "id": "c17f1e92-d340-4894-bdfc-f4c6cb95c08c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e829161-c39e-43d4-9d84-b4ff67ed026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cbf25c-438e-4e6f-bda8-7e4ddda161f0",
        "cursor": {
          "ref": "a4ec4b5a-20d1-473a-b259-8fc8d4242cf9",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "42605b10-d32a-49c2-b121-df1bf2e122c8"
        },
        "item": {
          "id": "e6cbf25c-438e-4e6f-bda8-7e4ddda161f0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad66c1a6-7bd4-41c0-8aa7-9c8f780a1b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e7dbc8-7b0c-495a-b324-56478bc331a1",
        "cursor": {
          "ref": "30c8ff95-fbda-4eaf-ae99-881f6ece1ed9",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4ee7256a-2fd9-4e25-8970-fa27478dbe98"
        },
        "item": {
          "id": "e5e7dbc8-7b0c-495a-b324-56478bc331a1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4c4f7afa-2045-45bf-b864-2ed5907418d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb57bbd-38f0-43c0-9158-1d5a49e2ac75",
        "cursor": {
          "ref": "f2976e6c-912c-405f-abca-264c251550ae",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3089505c-ff6d-4be9-9922-db0660749b56"
        },
        "item": {
          "id": "5fb57bbd-38f0-43c0-9158-1d5a49e2ac75",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e05c804e-d541-4da5-8890-46b6cf3e50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e995698-b16b-460e-be33-98c0513e390f",
        "cursor": {
          "ref": "45705dea-15fb-4f96-9d68-455ca62859f4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "372cfcdf-5186-4d17-8888-b88985aafcd3"
        },
        "item": {
          "id": "4e995698-b16b-460e-be33-98c0513e390f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ef41463d-c3ef-42f1-a1de-8c1ebd394e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff4ffb0-00a1-48be-a20b-904685554757",
        "cursor": {
          "ref": "2019a245-d67d-4967-84df-80e3751f2d0e",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a3c89467-7ff2-406b-a0c3-30df14313333"
        },
        "item": {
          "id": "9ff4ffb0-00a1-48be-a20b-904685554757",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2977c88e-5719-4f51-bdba-9bf434ec2339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e07ead5-2d29-48b7-8d43-8c2720c4b1e2",
        "cursor": {
          "ref": "e5642db4-b2b9-466f-913f-6b3308c2078e",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "65141b91-2f07-443e-bd92-2154e6e9e778"
        },
        "item": {
          "id": "9e07ead5-2d29-48b7-8d43-8c2720c4b1e2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c06da103-ebf9-4fc9-9b08-d1b0460b9c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e07c65-9564-4054-a152-e2917a877995",
        "cursor": {
          "ref": "a7c0874a-d4e0-4eb9-bfed-51d5fc1865a4",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ed565b51-b3a5-4738-86fd-94c893785d8a"
        },
        "item": {
          "id": "07e07c65-9564-4054-a152-e2917a877995",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4a0410ea-994c-4fcd-80c1-fb6e7115d06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85309de0-bc6d-4b34-853e-f983155a32bf",
        "cursor": {
          "ref": "adb94cc1-786a-4055-bc2e-8d5b81c5d551",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "def450f9-8f00-4db8-aa69-9b0ba85775cd"
        },
        "item": {
          "id": "85309de0-bc6d-4b34-853e-f983155a32bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "205b965c-dd92-466a-ae22-ceae03fa77df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93273c2c-fe78-42b6-b6dc-8945b5202cae",
        "cursor": {
          "ref": "00ffdd0d-8434-46ae-82b4-a61960926a3e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1cea2368-b2c7-4e07-8466-1077fb58499d"
        },
        "item": {
          "id": "93273c2c-fe78-42b6-b6dc-8945b5202cae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a7a7171f-58a8-4f7d-96f7-c8bb5e9e6abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8465b730-baf1-43ec-9ddc-6ae76b429e74",
        "cursor": {
          "ref": "c0fb18ef-721f-47a9-bf2e-4f4f2ac510f5",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f56295fb-b5a9-499d-9b9c-24691171cbe2"
        },
        "item": {
          "id": "8465b730-baf1-43ec-9ddc-6ae76b429e74",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "923a2347-eb63-497f-a743-4ffcf3e8ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15b218c-1f8a-4140-b14e-bd09a7bdef67",
        "cursor": {
          "ref": "f2c3afd9-e69a-42f1-85e5-2f1dbcb9c20c",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "83839d29-16bf-4631-8658-f93917f9cb33"
        },
        "item": {
          "id": "e15b218c-1f8a-4140-b14e-bd09a7bdef67",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2199f400-0252-4bbb-b1f0-6f4eda699b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e28cf8-8f97-40dd-b1b8-f4d87df065e1",
        "cursor": {
          "ref": "ad58c3bf-b349-4eb7-a78c-d1a50c860db8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "df302abb-f40f-4bed-bd63-87a0d2568692"
        },
        "item": {
          "id": "72e28cf8-8f97-40dd-b1b8-f4d87df065e1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f038fb7-ef54-48ff-9469-fd120277f78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7db43e6-0a6c-4996-b8e2-d476cf9570a4",
        "cursor": {
          "ref": "bf5ce180-4c31-47ca-96a6-6fb5718edca5",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b5e3bdf7-c35d-4f93-a5b8-d8e73f5aee9b"
        },
        "item": {
          "id": "b7db43e6-0a6c-4996-b8e2-d476cf9570a4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "48735c61-f9e8-44f3-8bdc-81de21857812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2729f-153c-4f1a-8b87-01ddefee726c",
        "cursor": {
          "ref": "d6cfac19-b0a3-4e5d-b175-d1a0de89b8aa",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ca8c297-d636-4ca2-99bb-612656c5813f"
        },
        "item": {
          "id": "a2c2729f-153c-4f1a-8b87-01ddefee726c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2d32cd55-c47d-4fb2-8b3f-911a823e41b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdced621-44e8-40a9-9d26-1044e785dd83",
        "cursor": {
          "ref": "9951231a-cee6-4ae8-9c50-b4d2cc7562e8",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "24ec6159-0b0f-4dd9-b8e8-3bc6c8ea8d3f"
        },
        "item": {
          "id": "fdced621-44e8-40a9-9d26-1044e785dd83",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d444770f-dea1-4610-987f-f4bb61f6fe2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43d5834-8206-4db4-9dd2-df30c5485b14",
        "cursor": {
          "ref": "6cb21f58-222f-401e-82cf-a13077a2b18c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f33c504-107f-4187-9e99-5f365fd3f203"
        },
        "item": {
          "id": "d43d5834-8206-4db4-9dd2-df30c5485b14",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "59f9a73c-133f-41bd-9a0b-705673e5a7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9861d19-c968-4d1c-a86c-ec6fdf7b5d9f",
        "cursor": {
          "ref": "4c93660b-ae66-4615-a032-bd0fb2b136c3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "53cee847-f295-4346-ab28-6746d9ec7b83"
        },
        "item": {
          "id": "f9861d19-c968-4d1c-a86c-ec6fdf7b5d9f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c01087d0-8f7f-499a-b2ad-230acddc0c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b60af8-616d-4304-adb9-99e11d544d20",
        "cursor": {
          "ref": "87feebd2-f413-4a79-a978-8188eb63a4fc",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b8b36ad8-5913-4485-a6ae-97263054c729"
        },
        "item": {
          "id": "44b60af8-616d-4304-adb9-99e11d544d20",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d7fbeb9-fe25-429d-9817-64c71cf71fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c159dc-f9fb-4480-8615-fa39c2e15918",
        "cursor": {
          "ref": "06ffce3b-bc8f-4776-a734-8961c554efab",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d4f4d11e-4c97-41fb-9347-6cdf826fff96"
        },
        "item": {
          "id": "52c159dc-f9fb-4480-8615-fa39c2e15918",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1913b099-cade-4c53-b692-988e8bd8282b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547b140b-14b3-4afa-ab15-2f356e37781a",
        "cursor": {
          "ref": "91a4cf69-ec1c-4189-8de8-5c15550038e5",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb0a7b42-3676-47a3-81f7-98037bef5372"
        },
        "item": {
          "id": "547b140b-14b3-4afa-ab15-2f356e37781a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c56a5785-74b5-406e-8a44-76ff2a46f80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862d4514-33e7-4153-923e-06f9deeb2fbc",
        "cursor": {
          "ref": "c5f29a6f-d6cd-4768-a89f-1def4e7ed4df",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "48918826-73dc-4ea0-9e8a-fa3e4a403611"
        },
        "item": {
          "id": "862d4514-33e7-4153-923e-06f9deeb2fbc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5d9797ec-6bb5-4e01-9a85-4e2b25dfcef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1033e0-1a71-43eb-a411-0dec0bcb09ef",
        "cursor": {
          "ref": "2c6d1d74-3f39-4da0-a39d-212f5cb0e6d6",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "84625cb1-935e-4172-8da7-7fdd7acfbb00"
        },
        "item": {
          "id": "4d1033e0-1a71-43eb-a411-0dec0bcb09ef",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e9cb0bd-e5fd-4f6d-bd67-303dfa03988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c56546-4e5e-42af-a547-fd323ba2785c",
        "cursor": {
          "ref": "4387a915-e060-41f7-ae1d-ce668a55f9a0",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "73dcc8a6-a0c8-4961-9d03-50ad54f107a2"
        },
        "item": {
          "id": "24c56546-4e5e-42af-a547-fd323ba2785c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6dea4d54-8197-434b-936d-608c4cf53374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c83498-f31b-4052-a88b-90abdee7c836",
        "cursor": {
          "ref": "4dc4280c-a144-4ded-9ffd-46d9f85dc1f5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bb626a37-9d02-4fa4-ba9d-643f3f0e83f6"
        },
        "item": {
          "id": "63c83498-f31b-4052-a88b-90abdee7c836",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d4da1d96-30f1-43b6-ab70-eb3ffd697b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c601f1-460e-4ddc-85b2-8ab0ccd55583",
        "cursor": {
          "ref": "dd009229-6d5a-4a6e-b5a9-d82de5e2e9ec",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "224b28c1-b512-4d87-b15a-b9cedaa539e7"
        },
        "item": {
          "id": "c3c601f1-460e-4ddc-85b2-8ab0ccd55583",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0ca6ecb9-3cc4-4aab-ae31-9d36376013fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1195f-4727-4ccb-a06e-c41e4a5add20",
        "cursor": {
          "ref": "bce5c987-dfa4-4066-8f6a-37466cf1bb03",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d75bea98-aeab-401f-aafa-0c85ffa39663"
        },
        "item": {
          "id": "28d1195f-4727-4ccb-a06e-c41e4a5add20",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd5a9e05-4342-46b2-be62-dacd1d159e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c3eba-cbdf-48b0-8120-dd281ecf248a",
        "cursor": {
          "ref": "b3b823a8-e9c7-40d9-b400-2754c1444caa",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8cbe1602-e9d0-4579-84dd-1180e829e69a"
        },
        "item": {
          "id": "4e0c3eba-cbdf-48b0-8120-dd281ecf248a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0983cc48-aa32-4c87-b6ec-58eb42043185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fcf0ea-7307-47d4-afd5-9b1f44ebcf06",
        "cursor": {
          "ref": "a05034c5-204e-45c5-a838-9b9b348faf22",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "36caa77a-7e3e-45aa-bc8c-49f1c71c60d3"
        },
        "item": {
          "id": "a5fcf0ea-7307-47d4-afd5-9b1f44ebcf06",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c745788a-d8a9-489a-9133-9600ff621bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec95b275-880e-4762-b289-e4ab64e0084f",
        "cursor": {
          "ref": "6759ddae-46b1-4bf7-936e-defe28c0f57a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32fd2634-869b-4447-a60c-27759493c394"
        },
        "item": {
          "id": "ec95b275-880e-4762-b289-e4ab64e0084f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4dca5f90-b145-4aa1-bbe2-c537fac76464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defdc823-a317-4600-9a80-df505ea213ad",
        "cursor": {
          "ref": "7a0d12a4-3755-42c3-891b-e3cc8f17ea14",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7cb0545b-652f-4534-bae4-bf076b30067c"
        },
        "item": {
          "id": "defdc823-a317-4600-9a80-df505ea213ad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "de9533b9-0fc7-4e30-bb58-99ad4c99bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec13a3e-689e-42c0-a3aa-f8cf0e1024ed",
        "cursor": {
          "ref": "446b2c8b-cc61-4278-b192-efe3d3242127",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "174f71b1-3c29-481b-a64e-4de8f04a83bf"
        },
        "item": {
          "id": "8ec13a3e-689e-42c0-a3aa-f8cf0e1024ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0672c81e-4c83-4073-9974-ba83eb29c231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abc6df3-2132-4f90-9bd7-52147a847269",
        "cursor": {
          "ref": "1e19e007-24d2-4579-b860-3626cd5d8641",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0db3fe30-1337-4470-b79c-1e59c541d2e6"
        },
        "item": {
          "id": "1abc6df3-2132-4f90-9bd7-52147a847269",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a46ba2f-af1d-41b4-8b8f-3df9bd9063f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a3337-491e-4470-805d-dc2db16570a6",
        "cursor": {
          "ref": "cf8f6596-3541-4333-97a0-eff8635f7903",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "90135940-1adf-4c30-a29a-f0c31cd0898f"
        },
        "item": {
          "id": "7d7a3337-491e-4470-805d-dc2db16570a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6b83207e-7300-4f22-a724-25f47fe41e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20310fa4-7a27-449b-add7-5d4d135f0c65",
        "cursor": {
          "ref": "11cacd10-e09d-4035-a20f-42ddbd4cfcbb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "964aac4a-128d-46f7-b313-e37280a32f0d"
        },
        "item": {
          "id": "20310fa4-7a27-449b-add7-5d4d135f0c65",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b612586d-9d67-4e09-91d8-2db8c98dfe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d206d7-dd32-4776-881f-6321079af7ac",
        "cursor": {
          "ref": "8aaea6b7-07ad-43ff-9415-1b5a95eef371",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f256ba79-93ad-4f9f-8945-0e861f0b2875"
        },
        "item": {
          "id": "98d206d7-dd32-4776-881f-6321079af7ac",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89eae046-58ad-417a-a738-55f0edd1d6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b8efbd-e7b3-4b8f-97dd-107cff4055b5",
        "cursor": {
          "ref": "19694701-3f11-4d02-b38f-d3154a55266f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e53f8b9f-c9cc-47e1-9fa9-e908f5788e72"
        },
        "item": {
          "id": "89b8efbd-e7b3-4b8f-97dd-107cff4055b5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "df2cae45-ccc4-47eb-91d0-903754b1166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afebe62-fc23-409f-9fae-191d8a12f889",
        "cursor": {
          "ref": "9352c2cf-f647-4344-82dd-eec8094303ca",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f1c557b1-91b6-4f17-8341-b4143656d9fd"
        },
        "item": {
          "id": "6afebe62-fc23-409f-9fae-191d8a12f889",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3cd293bd-6461-4209-95c1-e36e3f650e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a08067-02ea-42a7-8462-71ba7d2fed97",
        "cursor": {
          "ref": "45b04d22-e019-48c2-92d9-d51c69c5fa7e",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "806ab6f5-34c3-4c98-a166-402ecd89a44a"
        },
        "item": {
          "id": "96a08067-02ea-42a7-8462-71ba7d2fed97",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "826fc4c9-46bf-40e8-80b3-79e682ac5553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe595d28-0f0e-49cc-90c0-a1c0b8849154",
        "cursor": {
          "ref": "1b47722c-7ba2-4f42-89f8-bd77f7db16f8",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4caf70d8-5e80-4c1e-afd9-fe2aa76d8446"
        },
        "item": {
          "id": "fe595d28-0f0e-49cc-90c0-a1c0b8849154",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "90400f70-0589-459f-9567-ebb1e98a3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cfa9cd-aa8d-4937-b992-4373096265bd",
        "cursor": {
          "ref": "1a176244-9f6a-4a22-9e87-0d4ff22716ce",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8a60a919-1b8a-4370-893d-7604c2983111"
        },
        "item": {
          "id": "e3cfa9cd-aa8d-4937-b992-4373096265bd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "07dae08d-c8dc-4166-a9ec-f2dfca6d990f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da5708b-9e53-45c6-a146-775841f23606",
        "cursor": {
          "ref": "ef869310-c60f-42fa-a627-5d2e157a6126",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "661d0a12-2e77-4c08-b8e4-5370fb4ce6b0"
        },
        "item": {
          "id": "7da5708b-9e53-45c6-a146-775841f23606",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aa5b41f3-e823-47c5-bf1c-27b1f743a9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661d388a-686b-4f0a-926d-a6c4e25ab6c5",
        "cursor": {
          "ref": "43767e87-b3c7-481e-97fe-06b6187fbec5",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cdd9c10-3c19-4f0c-b672-d9a81e62f181"
        },
        "item": {
          "id": "661d388a-686b-4f0a-926d-a6c4e25ab6c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8515f86b-06c4-44c3-81be-a33e4b0fb19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009fcb36-56b7-4418-b853-4518a5d4cdc5",
        "cursor": {
          "ref": "e158d430-4029-48f8-ba54-76d4b90e7158",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c872746-d976-4565-aee3-6a264a7480ae"
        },
        "item": {
          "id": "009fcb36-56b7-4418-b853-4518a5d4cdc5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21c39e00-dc24-4489-a75a-e0296d99129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa117fe7-af03-4bde-abe0-bef5cdb73192",
        "cursor": {
          "ref": "b38f3ca9-2c11-4b04-9f26-7b2e8d1fbb87",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a8c8b96a-6ca9-44b3-bdfb-6a3008fc108f"
        },
        "item": {
          "id": "fa117fe7-af03-4bde-abe0-bef5cdb73192",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f016eab2-ad0d-4c2d-91cd-aca37075c207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e404f3c3-905e-45b4-a5d3-64bdfb2e5ffc",
        "cursor": {
          "ref": "2564a566-62ce-4863-803f-57bb8b34f79a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aa9145a7-f15e-4816-a8f8-08c1d31f443a"
        },
        "item": {
          "id": "e404f3c3-905e-45b4-a5d3-64bdfb2e5ffc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9223cd21-a333-4351-9e05-1cee96b596ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa33ce9-dd54-4036-8842-7ca11b9127ec",
        "cursor": {
          "ref": "213d77f0-41c0-43d3-aceb-64087651b564",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f70754da-8852-46be-8905-0424e1e05282"
        },
        "item": {
          "id": "9fa33ce9-dd54-4036-8842-7ca11b9127ec",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc003e01-488c-43fd-b0d3-e90333109508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55dee97-83ac-4e87-852b-4e7f194d170a",
        "cursor": {
          "ref": "dc9d820b-6cda-40d3-ac4c-311fb905bdef",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d1814331-8ce0-443b-80ee-5ecc7beb699c"
        },
        "item": {
          "id": "f55dee97-83ac-4e87-852b-4e7f194d170a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7fe6d9e5-8947-4d63-af2b-a237d2eb6d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84016c6-64fa-44d1-8e64-55b39ed39e5e",
        "cursor": {
          "ref": "96cbd1ec-f742-4f09-b9e8-2c5e9ba7a7cc",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b76cf3ec-932f-41e3-ab1c-939931ff0abd"
        },
        "item": {
          "id": "e84016c6-64fa-44d1-8e64-55b39ed39e5e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "85e47601-56a3-4d46-a448-e2d20e117bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81907d02-bb85-4e35-a40b-8f18d87e64d3",
        "cursor": {
          "ref": "ba5c9152-5786-4ae8-a666-17555a891099",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "028fd0f3-a071-49cc-b335-44e893a5d58b"
        },
        "item": {
          "id": "81907d02-bb85-4e35-a40b-8f18d87e64d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6f79d05-611c-416a-8c41-b84fdfec0a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d96ca2b-efaf-4adf-ab12-07efe8e08384",
        "cursor": {
          "ref": "866f83dc-497f-4158-81b7-727b12120e09",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6ccf4133-8a25-4dae-bc12-ff5d88060eb1"
        },
        "item": {
          "id": "9d96ca2b-efaf-4adf-ab12-07efe8e08384",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4bd7af3-f2c2-4976-afc7-06e5da818088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36c3aab-c973-47b0-92c5-da7f140b7236",
        "cursor": {
          "ref": "184e24ed-a5b6-402e-a709-9bea13248e74",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eacbf41d-1bcf-473d-866b-770c7c45ea03"
        },
        "item": {
          "id": "d36c3aab-c973-47b0-92c5-da7f140b7236",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b5f95580-7715-4574-861c-71ca35ff9d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b08951-0e2f-49ae-af80-f9e2d4e20357",
        "cursor": {
          "ref": "1a6226d3-863e-47aa-bc5d-1ade5bfc57c9",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "506d7de2-1d80-4fed-993c-cb62fa35a9a7"
        },
        "item": {
          "id": "00b08951-0e2f-49ae-af80-f9e2d4e20357",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "11ecff87-774b-4ab0-9443-9cd02ad5716e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1cebdf-7644-4100-a257-b2dddda6a488",
        "cursor": {
          "ref": "462ae027-06ac-44a6-a371-04ec5d87da92",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd488bec-3f8d-48b7-8536-acc3749e9ecc"
        },
        "item": {
          "id": "bd1cebdf-7644-4100-a257-b2dddda6a488",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "baac5568-d61a-4b3d-b6e1-2f20ffe070d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243fd9f-880d-4c90-8f35-4d133e795901",
        "cursor": {
          "ref": "49e3f04f-9061-4f04-83b9-a9fb8f6d9185",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f497aa0b-4f12-420a-992a-4e596dac048e"
        },
        "item": {
          "id": "2243fd9f-880d-4c90-8f35-4d133e795901",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3860eba-69f9-45d0-a712-433d62d87f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2076178-2e87-48b1-8ffd-1c89c41639b6",
        "cursor": {
          "ref": "91e495c3-821b-4cca-adbf-509ba4462489",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d0847ccf-6eff-42d3-b9c0-52908dbaad15"
        },
        "item": {
          "id": "f2076178-2e87-48b1-8ffd-1c89c41639b6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c844faf9-534e-4397-a3bb-fa40cafdc6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266c7dce-7feb-4a3f-be9b-e954db05b7fc",
        "cursor": {
          "ref": "f4963c81-cd27-4fef-ab16-f9b09d8b2e28",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e039d2ba-7805-4964-acd6-95f5e2a5ad83"
        },
        "item": {
          "id": "266c7dce-7feb-4a3f-be9b-e954db05b7fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c3d575f-24bf-4c7f-a053-06d88f5be0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce766ba-da43-49be-89ec-02632b747b9e",
        "cursor": {
          "ref": "2374eb86-02f2-4162-9c3c-6af53c6fcb7d",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "54209e2a-81b8-464e-88ea-585e0c54fdbd"
        },
        "item": {
          "id": "6ce766ba-da43-49be-89ec-02632b747b9e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "daa839cd-bc57-4883-a0bd-f8eb63ba8008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf30222-545b-4a1e-8abc-4661045fdb53",
        "cursor": {
          "ref": "95ac76b5-ec94-4f16-80a0-c305b3f078bb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66448335-1528-4739-837d-905c84a61bed"
        },
        "item": {
          "id": "cbf30222-545b-4a1e-8abc-4661045fdb53",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00cb9ae3-729e-4e8d-ab32-cf38eca09393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd520d8-739f-429f-88c2-7eb0b632e7d8",
        "cursor": {
          "ref": "43591c20-163d-488d-9ec9-b1e264bdb563",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "791ee1e5-36c4-4fd3-82e0-3a5c06399445"
        },
        "item": {
          "id": "0bd520d8-739f-429f-88c2-7eb0b632e7d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "33f49561-bfda-43c4-a784-3d4a1a755c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85276cbc-6a4f-4cdc-b662-d7cac30e94df",
        "cursor": {
          "ref": "a2b99162-0eeb-41b2-abc6-301768b7f8e6",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1575d5d2-7f7d-452e-80fb-606c79fda30c"
        },
        "item": {
          "id": "85276cbc-6a4f-4cdc-b662-d7cac30e94df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5a5ca76-e782-4734-a17e-a07c98d017c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026e1d8-609d-43d6-a60a-863973cdd565",
        "cursor": {
          "ref": "b9cef945-3677-4337-9b49-8b93f82b1216",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cca81061-2d2b-4d9c-ba03-8bef42d6c487"
        },
        "item": {
          "id": "7026e1d8-609d-43d6-a60a-863973cdd565",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "22402533-7ab2-4f7e-8e5a-859331cb1fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e0c615-db48-42fe-8621-395f37e54434",
        "cursor": {
          "ref": "12284903-1d83-4ecd-89ae-123cfb824689",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6173ff48-cdf7-4ca0-81da-04df23a49e13"
        },
        "item": {
          "id": "c6e0c615-db48-42fe-8621-395f37e54434",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d2bf222a-48f6-4cc8-abf5-57651661527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed90295-fc52-4016-abee-f570a3604022",
        "cursor": {
          "ref": "991159d5-f809-42f7-8800-2e5c0ac18773",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "75a10c52-2475-46b5-b073-675133c08bb7"
        },
        "item": {
          "id": "0ed90295-fc52-4016-abee-f570a3604022",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "de04801e-816a-49d8-8694-f6950cb76498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9372e0b2-f0d3-43b7-87ec-4adfb96d0e01",
        "cursor": {
          "ref": "368c8b6f-3193-42b2-9d88-711844c93d1f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4d81aeb-8e15-45a3-9a91-aab4ef93c99a"
        },
        "item": {
          "id": "9372e0b2-f0d3-43b7-87ec-4adfb96d0e01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c22fcb29-39be-461c-96ba-5c25a8516d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a8591-34cb-493f-aa10-cbe4b034b6a8",
        "cursor": {
          "ref": "c3adbec5-dbf0-4949-97f6-7cb07a2ad7e2",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7bd8fdbc-5381-46b7-b7c6-fe99075e2e47"
        },
        "item": {
          "id": "d82a8591-34cb-493f-aa10-cbe4b034b6a8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56b60bbc-ed6c-4874-9196-5d556e96b91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccf59cf-f17c-405f-acb7-0ef952793e88",
        "cursor": {
          "ref": "70ea3dc0-e72e-4164-abb8-8da0412b253a",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d82251a3-16ac-4a75-b1fb-28f9ecdb22ac"
        },
        "item": {
          "id": "2ccf59cf-f17c-405f-acb7-0ef952793e88",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e18c2da0-2357-4fd4-aed9-faa04d121b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206d1345-bc2a-4428-a9b8-1fd855ba9058",
        "cursor": {
          "ref": "beb0b49e-95c9-4099-8ef8-be172ae26281",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ace45f2d-313a-4421-8c1e-71be361b71e8"
        },
        "item": {
          "id": "206d1345-bc2a-4428-a9b8-1fd855ba9058",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "36db79c6-353c-4e49-8768-a0162b243564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ae760-de32-497f-8088-ed47822762af",
        "cursor": {
          "ref": "56cc4d05-9752-4871-ba69-1ed3c0f5a872",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b230ccde-a5f2-4495-a03d-470ad3722023"
        },
        "item": {
          "id": "212ae760-de32-497f-8088-ed47822762af",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "47c0e46f-d4dc-4cfe-9604-1b945e207cc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d835cfd4-b2bc-473e-aeda-2008ad4acc46",
        "cursor": {
          "ref": "0cba5b4d-66c6-4924-b8bc-40d08e84923e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "540c07a2-c93a-4c5e-9ae9-6df7c6f803bf"
        },
        "item": {
          "id": "d835cfd4-b2bc-473e-aeda-2008ad4acc46",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ecc2596e-1dfe-4363-ab1b-adafba9cc1db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 605,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095bdd45-b6a2-4995-b258-267caec8a320",
        "cursor": {
          "ref": "7d776e45-e305-4842-93c0-0e6dd6dcb5aa",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8e1521b-8496-4add-b443-ce63c5c5a4b1"
        },
        "item": {
          "id": "095bdd45-b6a2-4995-b258-267caec8a320",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "db4b5632-faa3-45e0-9930-53f002186480",
          "status": "OK",
          "code": 200,
          "responseTime": 660,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e649e1-75f5-457c-b060-64675b68ed6d",
        "cursor": {
          "ref": "c6faede1-d62f-45ac-a6eb-92d0c59b0b3b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ca3243ab-041b-4586-82d2-894d0703418c"
        },
        "item": {
          "id": "c6e649e1-75f5-457c-b060-64675b68ed6d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c307284e-e223-41d0-9b6e-cd7e2b6a1c06",
          "status": "OK",
          "code": 200,
          "responseTime": 1822,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b53337-4caa-478a-887b-4d06cb776252",
        "cursor": {
          "ref": "05fc4858-078e-4c2f-8bf0-aded7b99a2a0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f158e563-f224-46dd-977d-bda9f6d66a2f"
        },
        "item": {
          "id": "69b53337-4caa-478a-887b-4d06cb776252",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a8b4e27-e7a0-4646-b888-b9fa92a139eb",
          "status": "OK",
          "code": 200,
          "responseTime": 1637,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e916ac4-c32d-4736-b649-1988443d2524",
        "cursor": {
          "ref": "99c2985c-e280-45a4-a8b2-e45dec0f6b71",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a8df22b-b64b-4541-bce2-0055c1cc3bac"
        },
        "item": {
          "id": "7e916ac4-c32d-4736-b649-1988443d2524",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5b97df1-6df3-4558-bdde-4ebbca7e75ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e916ac4-c32d-4736-b649-1988443d2524",
        "cursor": {
          "ref": "99c2985c-e280-45a4-a8b2-e45dec0f6b71",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a8df22b-b64b-4541-bce2-0055c1cc3bac"
        },
        "item": {
          "id": "7e916ac4-c32d-4736-b649-1988443d2524",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5b97df1-6df3-4558-bdde-4ebbca7e75ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e916ac4-c32d-4736-b649-1988443d2524",
        "cursor": {
          "ref": "99c2985c-e280-45a4-a8b2-e45dec0f6b71",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a8df22b-b64b-4541-bce2-0055c1cc3bac"
        },
        "item": {
          "id": "7e916ac4-c32d-4736-b649-1988443d2524",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5b97df1-6df3-4558-bdde-4ebbca7e75ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be09cac-90f1-4ff6-bd77-c04923e287f3",
        "cursor": {
          "ref": "9a3f34b8-931d-4b61-94c2-5ad96887c6f5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6695fe3b-ffc3-41e7-99a0-1cbe89b68ca0"
        },
        "item": {
          "id": "8be09cac-90f1-4ff6-bd77-c04923e287f3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ba80b1d8-8a43-4830-bf74-0b907ae9e79f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 625,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11066cf4-e1d4-45e8-931a-360b42b1433c",
        "cursor": {
          "ref": "f0965780-d8b3-4d0a-9d7e-2e789894552b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d2d13c4-f662-47c5-bfdf-4bae7d8eb822"
        },
        "item": {
          "id": "11066cf4-e1d4-45e8-931a-360b42b1433c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d46726f9-6ac8-4de1-91c2-49f359b57ff8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11066cf4-e1d4-45e8-931a-360b42b1433c",
        "cursor": {
          "ref": "f0965780-d8b3-4d0a-9d7e-2e789894552b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d2d13c4-f662-47c5-bfdf-4bae7d8eb822"
        },
        "item": {
          "id": "11066cf4-e1d4-45e8-931a-360b42b1433c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d46726f9-6ac8-4de1-91c2-49f359b57ff8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448af043-c22d-43b2-9897-0a5f90b3c59b",
        "cursor": {
          "ref": "c0d9bd9e-3ba6-4e74-bdf2-8591ba928475",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae33a5ff-da7b-4336-94dd-6a56253d6375"
        },
        "item": {
          "id": "448af043-c22d-43b2-9897-0a5f90b3c59b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7d83dcc9-fa83-43fd-b94c-ff4858a7c927",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 809,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0fde95-a6c6-40fc-905b-feeccc1fb495",
        "cursor": {
          "ref": "1945d1ab-6630-4e34-a836-8af307406fc2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "434d35c2-5e05-40f2-bcbf-e88ba4b0edb4"
        },
        "item": {
          "id": "6c0fde95-a6c6-40fc-905b-feeccc1fb495",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33e7a12e-7bcb-4a61-bd5c-1add7be8258a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0fde95-a6c6-40fc-905b-feeccc1fb495",
        "cursor": {
          "ref": "1945d1ab-6630-4e34-a836-8af307406fc2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "434d35c2-5e05-40f2-bcbf-e88ba4b0edb4"
        },
        "item": {
          "id": "6c0fde95-a6c6-40fc-905b-feeccc1fb495",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33e7a12e-7bcb-4a61-bd5c-1add7be8258a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de678bd-3f55-4adb-8022-57fc9d222bb3",
        "cursor": {
          "ref": "6c1886a8-98f7-436f-bc1f-6db86bd267c7",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cc06d6e3-11e4-42f3-b6c6-92e625c57ace"
        },
        "item": {
          "id": "2de678bd-3f55-4adb-8022-57fc9d222bb3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bc484bac-f51e-4873-adac-7e16b9ae3fc5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 860,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}