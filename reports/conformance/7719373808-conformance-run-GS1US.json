{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f0758da4-aafd-4c9c-99d1-26ce03ef71d8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d175c710-b679-4be9-b040-75e290f7c4e4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f348fea-feaf-4bc0-9d28-6f41e48d688c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1721a0e-52a7-4835-95b5-3aba216171c3"
                }
              }
            ]
          },
          {
            "id": "13ce1eea-7f5e-4de1-ab8e-82018ad824b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "600ee6b6-eeb5-4ed2-843a-4bb7a8912e75",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4f8174e7-5104-4feb-8924-3d82df6216e1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "088031ad-fbc3-4df5-8c82-10be39b9502e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "07188f00-4ca6-48df-b237-1ac575025fcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f4f2af0-5927-4a84-b60f-b25e5e9160b3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ddd058c-adf9-406a-ba5d-fcdeabbe0c57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67cc4dda-f600-492d-be68-fd8c045b1f74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5b68885-fee9-46c8-81c6-10b40a247d11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a9545c3-d6e3-48b3-959d-57c5d7ac9e8d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b4b780-ef7b-4da8-9f07-d8da64fb2725",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fda7f18-9751-43f4-8c37-94f6fdb2f95e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35389173-2098-4ee1-924a-4577dc7b37b8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3efcdf56-9bc9-4803-9c40-77ab155a52f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31a414b9-1780-4b5d-b614-bca5e7288707",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17b26cf9-8224-4a45-83be-e87355370aaf"
            }
          }
        ]
      },
      {
        "id": "b1d3e09c-90a3-43e2-b3e9-da661e8f9aff",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3a0d87fd-20f7-4add-aebf-dbee5ccdaaa8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db86657a-6023-4467-ba03-47ebf296c287",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81fe829b-e0e4-4f51-bd50-a32616731ad5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b2d5b-9172-4a96-8b98-0b6a5323a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffcfee9a-b473-49e1-9f86-67d17ac14251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c55fd-e6ee-4769-92db-34424474b76a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f3feb3-1376-4208-b549-883f03e36026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e99e35a6-94fb-43e8-af71-0a24623201d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6802ee83-0441-4583-bda4-a33688299539",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907eefc2-0ef0-4f5f-baf7-30dce1b267f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f08a8f74-def7-4df6-a67f-4d2ecfef0b83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed05cad8-2588-42af-b93d-74d78303038a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edfa83ca-f5e9-44af-a6d4-e5a9506584f1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6ad664-688e-4683-9a5b-ddcfcfe6b832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "559a5b79-fe1a-4dec-ae5d-19e0a37014d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32be98e2-7f68-48fa-b98d-998cd2fef537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3e4c5a-f37d-4af2-b9a8-f67e736ca16b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08cfaea2-54f6-4c8b-9b45-f50dc53cfd89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b30afbfa-db88-4f1e-bced-fecda8a67653",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daf3f150-25b7-4c7a-836a-d819a5c871dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fba794d1-cf7e-420a-a6c9-338d6ccc8627"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd8dba86-eba8-421b-9f1c-be427273f4ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "76aa2c8a-8a4a-4c2e-b997-127da1988c74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2cefe11-2f6b-49a7-9119-19caf8db8b02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eec31ce1-9be3-4193-8a14-a244fcce3fe9"
            }
          }
        ]
      },
      {
        "id": "0d80be4a-d48d-40bc-baf2-ed01fb7c6145",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "92756919-cf31-427b-9159-fc896f503c1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5f84738-67e6-460c-8aca-6f5abab5f767",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "75fdcb66-36c7-4249-839c-efb7791f5edd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34515682-f2a1-4ecb-b6ee-5651797e99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a40543-ce05-4d1d-b455-500d2d8a48d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1759745b-f044-43c9-a147-452484b44d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "045e1f31-4af7-46fd-b196-5b6410830814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caa84cd-6e0b-4856-ae1e-ae6c1afe85f4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1d54e-af93-4d81-a21e-cf3e92fac64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06efd312-3309-4e8d-8c49-4f82ff14e6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4697569b-f724-4316-9375-a526965b8cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c357716-7010-4935-a14b-2411bd955b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d650308-237a-40e6-912c-b18053f6d42c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e594dab-9353-497e-8105-f0463fbb5bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8bf690-f785-4c7c-933b-b83c5548cec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48e8fe7-1768-46f9-af62-f031da47a682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd7056e3-a227-40c0-80d3-2f1ee477aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3b9063-99f2-472d-b7b1-ceabc725ea1d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47296bb7-542e-4ffb-8c41-bb94ac4a9f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54eb3200-6a70-462d-b5b4-58fba4f7c27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf9616d-e2af-4281-b38f-a1edd4b945cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efaaa0df-0e74-4bcf-8963-d7205f9dcbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43004f8b-ddb4-436b-99a3-dd17b2dec57d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c16d946-1ea0-41d9-bd9a-69ff92fae0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a88a18-2086-43b9-96ba-c649ceda5493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b25fb7-28d0-478e-8880-d5930b218c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a7fb571-bfc4-46e3-a56d-99f2bd61f6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9183f833-6cbf-4121-9011-c62783e3c7f4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55e6d38-eff1-479a-8305-89dbb596fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a5eda7-bc8b-40e9-ac65-2dbe767032ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82942e78-bb80-45b5-a93b-6edee5434f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c61bc78e-e174-4714-8572-620bca609419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f02bef-1cc3-4244-be56-d203be35fa89",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b721017a-a674-43d0-907e-aee99ca01d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6ac9ce-f5d0-4263-81bb-a34895ce4dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cbf17a-dcb4-4e0a-a7b1-049d30bad0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ea99beb-a6fa-41d2-9a7a-7f041bc61c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053fc7cf-b426-49a6-8d65-c873a425a126",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9388d3-06f7-4c05-b8b2-279bb4043463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d863846d-4a96-4d5d-a499-136c9a7941de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b875e93-845b-442c-a24f-fe9d8f80305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1be5cafc-9f0f-4c48-b5b9-51efa01ff8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051f48c7-32f6-43ee-911b-f0feef7733ed",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1047276f-beb7-4294-980d-4bb859859ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55213b7-2f1d-483a-9398-96f6dbc19e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1848e0-2b5a-4c15-b15c-fef164c94658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b89321a3-a5a7-4fe6-aa15-5c36fb4667d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be86a5b5-518c-414a-b971-b4ad35adfef3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7947871-9bae-49a4-899b-1edf39d45492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a799612-4ca9-4d54-b829-a87e8c6e6b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b50f5-07cc-47f9-964e-26954f0fd955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcc81383-d0a6-497c-943e-746b37f9a068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c943d3-e2e0-4519-9969-b21bee21823e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c67955-d951-4424-be50-283c77fc7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb75f34-a736-4ec8-83be-a73121e8a948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90451920-9506-4739-8da9-d8920c779129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2204220-7630-4ac9-80d6-47a721449adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028ec3cc-3089-448e-a6b8-c2b5b743a638",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e954416-09d4-4e8d-ad32-c228c26fa772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4e4ef7-3d33-4174-878e-d6bea705cf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d66ef-3c7d-431b-af32-0848bd84b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82470b82-4d8d-4f6f-a8be-41667d41f314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c4d585-68a5-498b-b944-aba0e1f93a04",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e27e09e-c3fa-4fcf-950e-43944409a4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dac8da2-994f-4347-bf75-34f4f4ad39b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335c227d-dfba-4121-9e3e-263245828483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ebb5e4-e75a-4390-a75d-4ba7192f446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1411192-8f9b-482c-8374-1000d2199c74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c419b9e8-7734-46ff-a912-cc200bbd5fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4695fe06-82dd-4987-95fb-e5dc006f5da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b82d09-3264-4cbf-8e1a-50da978da0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef00205e-7742-433c-866f-cde05591e97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827d58ae-32cf-47e4-8a16-8dbbb98fa30a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a577e070-8ee3-4340-ba24-f413a86d57c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e329e2e-dbd6-4792-a2e3-2fc8152ee0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213e87b3-ac73-4a4d-be12-344599ec7055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9192c13d-cc8b-4f13-bd3c-f2656f39aafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c74827-69a9-47c7-bf7f-1083dcc7493e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2fae47-1f05-47ac-8d4a-8e2e717c444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbb9af7-ac6a-48a2-b44a-da6b5cdf9f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592d0038-1b2a-43ca-87d3-7db7ed41a683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6010c00d-569e-4910-8694-9f6d95625279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a73d751-e87f-40fb-a0ec-b97721e69d17",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b764f-f5a5-4709-acea-b58cd0bfc995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92821d43-230e-4b39-99a5-471800fb7044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393f395c-a75a-480b-9d3a-1e61bcf97600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebace811-19ee-4b22-ba3e-44f08b89cec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca7a7d-e4db-4105-bc7f-8e9fb52a0523",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f345d2-6b78-4b29-82c2-f3518aaa1aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65dae65-7d78-4dfa-ac18-3788f4411d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff7db3c-ad9c-4a94-84ea-7f3c86fce29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "272e5a3a-5c3e-4a66-8ef0-795ff179a0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489484a6-55a8-4067-8639-70fa094ecdae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e40928d-3f56-4a13-8294-f3f460aff40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07acf56-1f60-489a-9b20-779760ddb30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452d4d18-a1cc-4455-920b-421741779743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18805a63-e3f5-454a-85fe-b028d7d4eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b19b8-b918-41c1-95b3-714be3106a03",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d0d1ef-a451-45f2-bd78-4f42519b5c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec10f1f-48a4-41b7-9240-8c58c4479a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e475b79-393a-41fe-a0f3-259af8562749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be41819-ee0e-4bc4-ad6d-89d99832121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13c2c29-05e8-47e2-b352-9a1f2325d4cf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0678a2aa-6d55-462a-b971-23ee384a493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323e2524-6b21-44ee-b71f-f0577e6338bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2c7ff8-6380-403f-b7c0-84431b009765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b93930-f8d1-4537-a2ff-2c61ee7251ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacb8fee-71b7-400a-b1c6-c1e008383917",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f422249b-61ea-4a21-9cfa-ee6b7716be66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ac9783-bb55-4c64-94c5-bfba1047a536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e901fd21-0783-415f-b104-dde8700b5261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a796da1c-df35-4e35-92ae-ce23693abe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f4518-f29c-454c-9b99-b547107de262",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e7c727-91ed-4297-a725-2d3e587b4983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79895b70-c372-4d79-b46b-bd45e94eb7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc5226-34fb-4202-ad09-cfcf8c0f5a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "370f1ff4-ea4b-44ce-9ed0-0f23b8bc6faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50623d0-30f1-44e7-8e20-e0a813757aee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32510ac2-4e8c-4e49-8ed3-b3852dfccfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d9e780-ec43-4bd7-b525-57ad8d2ab996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eadfbf0-a902-46d9-a3f2-e60ffaf748a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15b59132-7998-4e76-9aab-4d1870e1ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c3c3f3-07b4-4cf0-aa1f-2b1ff70b7a60",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b86eb-c0f2-4d49-8830-12ca01b33075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944d8df7-e5fd-46a9-bcdf-99262cfc30a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8b6c51-ef9c-4835-95d4-84a919e33d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa0e752-ad7a-42c1-9ccb-2f35384ceb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0481e872-f291-4608-8830-b78d4a8e449f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6594594b-7029-4293-bafb-ffe0d9b16e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f63e75-58b8-416e-8068-21ec01774d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6531ea7-398a-4591-b488-ba6d7fdd8bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "543729a2-b68e-423b-a18e-30a76df1d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a6c615-b916-4e20-b67f-61889bbe94a7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5d12fb-1bf1-4796-af6b-fc7eb7b2fa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e475f6ea-62c3-4831-a68d-e57fa8736ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c31ded6-094b-4415-95fe-2f7d125bdf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "574bca39-1fd5-49dd-8cda-cb6b97574716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75152a33-1390-4d31-9edf-2f22008df51a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8451795-2f27-4fd2-9acd-f0919252730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80ce71b-cea2-4350-b766-193db1ad255d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8c9d39-9ad2-4084-8447-092cae785561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e99d4b-2873-4558-b62e-5192a304070d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ba71b6-0be3-432a-acb8-9ed90d8a0b25",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b289289-c0ce-46b4-a124-83eebb9b60ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa08d2f5-d864-4b42-bdb0-c1fa3e22d091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65382e5e-2d7b-4b2f-a2fa-2abecf453599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe55c83-f6c7-4f1f-aea9-4af9c6791984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a14e138-ffe5-49ca-aee1-848d7328686e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fab49a6-6c26-4e75-b50a-4dc922b3b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03424982-04e8-4b9b-b9f2-d0639da96fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8356da9-248b-4cc7-aed3-f794f51a5b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8e1430-fd3f-4e77-9c1c-83db9caa958c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377eeb48-2fcf-4d0d-8bfb-cbe9dc543783",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15549ed9-bbcd-4c62-b28f-f287302b3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61305233-8963-4dde-80cb-8881d40d2957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f96ec6-a6b4-40f4-80ef-324101626064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a824165e-70fb-46b8-adfa-78e16f9b21bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c6ee5-2a8c-4db8-bba5-31f2de9020e9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58762e7-fb7c-4290-9486-fdaf154780af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63bba3a-504a-42ee-b9dc-7571faf44c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19c25e6-ce8c-4316-9a95-b2df3e351dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3962f67b-dd7e-4cf6-8636-ebdb5450b898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997f31f2-24ba-4589-9576-df564c63ecbf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6eecc7-da41-45a4-9b10-79858fc31575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11c51f4-e27b-4fe8-912c-50fc7e1a20a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf065917-1696-479e-803b-dab9c8aaf9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "347db628-c92e-4899-9bf7-fd23870ca43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648f4a34-ce5f-41ca-bb22-3dcb39fc4983",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8a1612-ec9e-445c-8eb4-4f259a8cd800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35059453-87ab-45e8-8646-dba0900f51ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e4e18d-c51a-4799-b280-232f18890cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c77d20-5f5f-4a17-a67d-a93477d51f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a3d64-4e42-42c5-b822-a3e27467af9e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90262e6a-36de-4303-bb75-dc65052d22eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eec7fac-ab84-40f7-b32d-3ced2b41cc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4adea9-f9b8-41fb-888a-bd1c54bb960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6e252aea-2a37-4b36-9a88-bb9ceef30c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005124e3-a53a-429e-a439-16575c1a9e2f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950e7480-a063-4ef1-ac95-fc7813c0e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a398407b-523d-4be4-89a7-fd13c4bb82f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5060cb50-f6d9-4da0-940c-a75a2d345d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f912a243-0f8f-4865-a7ab-335db9dd1e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3fb0c-03d0-47a1-95c7-6b79564bd6d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c4eda0-d4c7-4c08-9af6-3726b72719e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1f9f5f-5c63-4663-be4d-73f026222cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2774a123-86cb-409a-bb02-02b5628ddfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9155377-b18e-49e2-8360-d3eac05528f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcdbfa3-4906-4b91-8622-bf728ebd7fb8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78e1808-3956-49ed-b9b2-a6c91e42f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdd9e35-3783-41ac-b5c1-e28ae4d20019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4664cdd-02d7-415e-9894-81fedc9e55cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12002e6f-a7ce-4031-ada3-47efb0b7fe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3159449e-d8bb-465d-a1f4-c57ca10d5a20",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fb9a83-e7f2-4ba9-97ca-b873e5f793c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d7f2e3-8085-4f54-b73d-c059f6ebc073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e63f0ec-f9b9-4974-b8d8-be97cdb9d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "676bd535-1ef8-4bd9-a8d6-9d0f8be2daea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a888e0-9879-453d-a333-7bd2597ea67d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37294dc4-88ec-4a8c-bb24-dec06e0305ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5cca16-d394-4813-9fbc-254074b111fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bca5d2-4b5e-485f-ad34-323c3f3027c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d283987-a43b-4f9b-b001-810ade8fd170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491b7c75-3bf3-4a45-b12a-9dc85ca0f28d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd062e5-729c-45a9-8fd3-62b8f37de2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887711d0-7fef-41f6-95d8-a125e1dab5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c430c4-4572-4289-a231-1aeeb4d446b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f66f7f0a-ff6a-496e-8034-9396dead7d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce916c69-f033-494e-908e-b6210e2ef696",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e6a31e-d5d6-42ef-aada-a3587c679872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7c0402-6d5e-4461-8e41-511ce9a1b27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b122ec60-f930-4196-bfad-d06602445629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "37b9f90e-adfb-4281-baa6-1da8639ec311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b886c2a8-ac95-465a-86cb-e707b81efe81",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811cf0a6-ac38-43f9-a996-3ccd5034ed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c037899-ef58-434b-87b8-3a54fc1b980e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efc685b-f385-4260-8cce-2408472ca4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf628226-8fc9-4012-923d-1a30bbe25ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7c3a5f-f81f-46a8-b59f-8d8a888dabc7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ec9c10-7abe-401d-93ea-c675895bb634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6645e22-7a7b-45f9-a7f7-f5034bbddf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a644733-23a0-4314-97ab-43ea99c37f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4618f7e6-3cd5-4328-a786-654cce7bf86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed4ea0-a614-4008-bef0-3b922c8a4bd9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc50d34-8ac0-4896-8a72-274a9f55589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94b0327-c1b1-435a-a4d1-f9ffe82005f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ab8eb-009c-48e8-90fb-7df8655245f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f517654-4486-4bf5-ae20-5a7d8be2a608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3937cdc8-9f7b-466f-8a1b-4ae7d8a6fbca",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78dd5a9-f7f9-4f65-ab0b-79b47165bf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c385e89-b518-47a8-ad47-3e4198bebb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a29b9-0579-4ebb-a6e0-dced1719b05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d405153e-5a98-476a-bdc8-58acf7555e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c3818e-c59c-46b5-9277-d1d4eb905dab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190fe5c6-bb41-411f-8b53-3f30af726121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf8cf3-05e8-4459-8f35-a5222a338387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eff7b4-d911-4de0-a488-cc03f71d2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fb6462-0df4-4c19-8f4e-3423a62d8b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a61f513-c8f6-468e-8631-2224af93b36b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d2de74-6910-4c38-bbd8-4b8a85b5eae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08baad9a-05ff-46d3-9a8c-94375a8d7d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c51ffd-dec5-4728-8904-6411c8a160ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25629ce5-7195-4afe-a462-2b6d01ae85af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5df2b5-dc97-4569-9cdc-6bf7db3dba22",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023bbd76-c625-45d5-b710-ae26075c9a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f13ee8d-e6bd-4969-8d83-cb5c2719f31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223cb487-6378-44cd-bdc4-ea96c209e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d79795-f948-499a-80eb-e1c2b120e489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b5cafd-f021-4fe3-9c07-81085f328a1d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c68c96-8af0-445c-bdf8-21e15c469439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b574d46b-2ee3-467b-89a3-93d8d1cf432d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c74190-3822-408c-8f5f-86cad68238f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00ae227a-39cf-4254-8f27-ffd7607f8102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b03ea-b928-46fa-8efc-cd89272f594c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d56c5e-3117-430a-ae28-ca934cfb1bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a76426-4e0d-46ae-bafa-2f48d7baaa71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6e38f-f569-4eff-8308-874b704318be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5966b293-794e-4fbb-bda8-5f8c0f40d976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3527a3-6b9c-4dc3-b35a-91f0c74ba18a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6e72d7-3cfc-4bb2-9c37-c2418904525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e833036-7c53-42f4-97d1-71fd999634a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2567116-8c9d-473c-acb4-0802fc181db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b39077-b719-4bd4-989a-67963ea7651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eac03db-ba78-4177-b90c-b0774efd4540",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdd90d6-7136-49ce-aaf9-c56ecfc089e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dd3ecd-65ce-4050-a46a-0c4837487e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27115ecf-7811-4f12-9c94-d7d88d64cba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86b1b02-c42f-4ce8-8a26-c87d22dee78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a4987c-a544-41fa-8e82-bbcdd3b857e1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d645ae-bab5-4563-9bb6-e2d2d819c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3326a0c-64dd-4612-a6de-6e227f10da1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79b10dc-f660-4cfd-bde0-228f1304ac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e741a7c-d55a-478d-ab0d-91ab1e5c5aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb5b13c-ac3a-4d6c-92a8-3711b112f679",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3983ff6-499a-444e-9914-a0bb2b21728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78196155-fafd-41dc-9b10-01ffeda70c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46062f5a-2f63-4438-b5c8-f55804b7bdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dce83ab-631a-4ff7-b1ee-d7e3f9afa42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f14409-f8cc-4e09-bad3-a9445206dee8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad84c690-b129-475c-93f2-d6acc4e432bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2cad5d-accf-489e-9623-4a134a654734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16766781-47bc-4d23-8533-541c7df5464c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfcc8f9-c2c7-4965-8efd-cf31518b68ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4de561-be21-40be-a747-e3b53d83ad46",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281a744f-bb4e-48c1-bab1-5f728246ada9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2d5df7-651b-4422-b2bd-7e50adad7eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3268f926-8729-44eb-b21b-aa58fbc7a0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc735ad8-5d52-4abb-8b3d-e31bf2c3b37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1d36c7-3b3f-43c2-9bb7-80484ec615b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b753c-6081-43ed-877f-cde60fd817e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd00a07-ce7e-4290-a2b8-28f3e54eb433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10051240-44e2-46e4-97f3-8de7c157b029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4866cf5-d6d1-449f-84ad-168edbf266d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a74f33-87e4-43e9-9f41-f5f344738e26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a118b2-ea74-491c-8d7b-15004803444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baac2d5-1803-406d-8db4-6074b21f7221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e4d78c-6ef1-44fb-b692-32f1970bfe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a6d891-394b-4454-9789-71965942f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44693d3c-399b-4391-8424-2183c93bc889",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195cb0d4-bc71-4666-aa4c-715c72038240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04533253-a40a-40cb-aec7-d3181baf5e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d094427-0679-4415-b72d-e2726bcb599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde5b7f4-c65d-4b09-abb0-f8c366872078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2550a5df-e24e-4ec6-b940-ee17b2f3ba36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e615ecb8-d36e-4283-b8e3-f3afdb408601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2594a234-8541-4a4f-a4bb-37916e4a0ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb611e5e-0a4b-4edd-81de-8fe97d2891a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "882e22aa-49fa-477d-a2c1-754b07f31e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664df2a6-6310-4f12-9af7-151da491360f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4693af-f008-49e7-8ed3-528194db869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75efb183-57a9-4010-9a7e-72b0135c8bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccb9171-d3aa-4d35-ae72-a41bc611a5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ac87fc-4145-47ed-87f6-3bae7796a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48375b2-9c2c-4dd6-9d65-7a73c91cea79",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efdb1eb-2d7c-4df9-8bdd-a05a6ca2fa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3668d058-f898-4994-92d0-b0893c3dda4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca952e1-a260-41d0-997d-098d2932042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "453bbcac-a1ee-4d87-b1d0-8181ba5b4c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfcad54-f693-4ee0-adbe-528f983e616a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1ad985-035c-49a8-b2c9-61bf234aeffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f6065-d9b6-41a1-a767-cf50c9a9ffc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50217f53-742b-44cb-9702-5b0fc37d6b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21571fe5-949f-4007-8caa-872618384dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45102ec4-489e-40cd-bfcc-5adbeed70ec0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ee2953-7996-431c-8973-425fa129c18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f0e7a1-9ac0-4ffb-ba52-51059dd496ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616bf64a-9c19-4c6b-9dc7-93f61b7a571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "786c7132-ca63-4d9c-8b69-be8d055f61c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7281f60-8f78-4d45-9d95-343a2a3c2afd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f759c80e-d4cb-42bd-a9d4-328ed41e2e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7200f30f-2f54-489d-9a9f-b8882d142e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3195ed8-1514-475a-b3d9-9f62304d4a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec4025e-9da0-4434-9363-4c4e856af8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fec741c-026c-4481-88aa-597064dc54db",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dbf55a-1441-44eb-827c-c43556971b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70601e4-e0ef-455a-8068-ec1ea1d9811a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384e061b-500b-49fc-93ad-76d429564383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c6aabf-ff77-40a8-8bdc-671f0a221a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053e368-aa64-42c6-932f-e16b6282dc8e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876bf2de-67c5-4315-bafe-5af220efcafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9186f6c-2dfd-4c8b-969d-28df13428738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b721c18-0d6a-4f92-b7bd-ca657b43236d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "526953d8-2bef-428d-a840-36dc79dd8d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c0a5c9-f2ec-4f8a-9352-313f71428571",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e76a8-3a7f-400a-a47b-fa548feb6873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c69136a-78d3-4bc5-81b0-6074cd5cf4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d038a88-52d1-461f-bf8c-68a9091b6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb9c06-5fd1-40b7-a3f8-d79f082093c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc33b84-80b4-4074-8d9c-da0cb558e3a6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd039c32-803e-495b-9af2-e9618f8daf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b04a08-df8d-4394-9cd3-cdffa948ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e56bb8-7432-407d-bae5-67dde55f3973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3be1fa-a3d9-4830-bbc4-bfd7a94e47ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80f19fd-3cd3-4666-ae16-72f5a1d657ef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c97ca2-94fa-471a-a32d-e95fe867cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e847d3-36f7-4511-970d-902f791f9cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbe681f-96b8-41ac-a0a6-d8611def0de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf632d2d-ae45-49a9-ba12-e9cfbd20e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32520f8-2721-4a05-bf2b-b3394d0fa766",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3213ef0-1259-4da0-b340-3af6566fb495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32389273-7a54-4a1b-bcef-20a7934c2ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80892a5-3629-413a-853c-ee164201be07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9e96f1-7eb5-4835-bb97-f9d58f9cc2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640d344-1f67-4432-8f72-e687a975b97b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6505e153-88a6-4785-900f-84c9a1dac1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ad49f7-6206-45f7-8b71-0f6326dd6aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71639e81-b187-4c04-92e2-7edee70773f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08736497-aee5-466c-a722-b09c8bca9a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609a8099-9f53-42bc-9624-b811966ac3e4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2da961f-3ffe-42b5-bfc1-52435fa000d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c90a9e-4539-4daf-b2dc-ad4a38b08aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4684d2cc-51fa-4a33-890a-16d07231ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83bc8b1a-997a-4c60-a26f-f4003234c754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39d5dd2-9833-42c6-bd5c-c8db61d53c3d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b48b0c-94fb-4ca7-a270-d199111e3ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eaaf97-5bdb-4b70-a43b-607e04ab9286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b39e054-10b4-4548-a255-2a749f81a3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd60f535-07a4-4fe9-9e94-4602841cf813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35981b2f-4515-4234-bd62-f96c1f3aa89b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d39e32f-a63e-46aa-8bbd-097f000f19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfc1ce6-fe29-4f8a-a599-0dee99e12100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bec577-b683-4e1a-a665-89f2f36d3b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2a209e-8223-459b-9260-91e6fb7bd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e477ef7-d580-403e-8a1d-7431fbcd2fad",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0761c4-f3ad-4c18-9283-3f5e4aa92130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4d452f-677d-4543-b4a0-677f8d154c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19da9391-b25d-4654-bdf8-126de6c366c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9365dc-0143-40da-8f32-5440208c4e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f227ce2-7c25-4a47-8bcb-f14aba9c5e2f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6972ebf-acbd-4b8e-bb46-de77db4ae629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eea2b8-63c2-4282-b4ac-9f7e527b67ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac544e7-5907-4f33-ba2f-3a3373c491bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "826fdc1f-8ecc-43d6-9c58-e0161a5d4621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7493f859-1d1c-47c5-ab86-e8a9ec43ca28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f1429b-e5e8-450b-bafd-8d7437bf26e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d7a36e-8db7-4754-a61c-cbde924bee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76a9f6c-0207-4f0a-8e53-1c9113ad0bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a092e1-1959-4c39-b017-47ce55a4c0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb60739-df1d-4ed3-ae4d-b218c3c110ab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d5a559-6173-49aa-8260-4afec5b157e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d715fb0-a501-4b12-9f61-ea8604ee6e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5165f2f-f945-4ae1-bcdc-39f10305c160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffc0e50-2b43-40f1-8555-651f15d6ab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d8c6ad-a708-44c3-b13c-d41dce45e04f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5775c6e4-2acb-426e-a1fd-6cad787460b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8740f2-acb9-4b18-b68e-a8e67b72fb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a040c3a5-98dd-4a13-b2de-6e1764e63e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f20e17-bb70-4e38-8eb2-88ba6234c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f18719c-f9f4-4d51-ae96-7d151e77ca74",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe5b69e-b273-4a77-8f75-91dd891b3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dffd588-8179-464c-95a7-abb60b6b4f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5147f4b9-a1dc-4b99-9051-23397f06ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10cde52e-3cb3-4b6d-b01d-2b1ea554a747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aa846f-0bff-4627-b22a-e55c05d4e320",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9b8b82-0306-4965-87fc-521b9eef93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23ddda6-927a-46e7-b9b5-9d6d73ed9cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bea7430-fc77-4dff-a114-6cbf344ce20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "049eeadb-87dd-4e18-81fa-fe7ad7be7feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f95904-a3d3-4b4f-9e69-47d62cd576bd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78121711-9ae7-4f49-8f6f-9305712c92dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a474c5-7bad-470e-b0e8-b42127f38d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647d1fe0-6d0c-49ad-be03-fb45b8edae72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77119f7-75b6-4e53-bfcf-d6f5386b8efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02483abf-158f-49ae-bf79-762d3e5e5765",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56c0180-44d3-4d88-9a79-5320a3c0afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27b8a33-48c5-43f8-a47e-30ce17742afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af7c6af-44b5-41cd-8d2a-fd8f27088573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3fa4f3-aee5-4791-871e-87b84b203c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3edb2f-6492-4703-a279-e7648fad8e9b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec1ec00-e68a-43d5-bcbd-eaf8bfb257cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b40c32-97cd-495c-958d-9c35a3fd5f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee240367-11b4-4ff9-a896-78c113f93c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac45b545-5563-438f-824f-e79e57317d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda27856-283b-458b-8a6b-57a98d528bc5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d47cce-6bf7-47c0-9186-ed06a326a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c88e72e-607e-4925-8a24-f9f6028aad49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb366dc7-e2ec-4aff-8ec8-889e1c2142cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d4acfb-67d0-457f-a8ec-60fb7be3479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d320fb58-db35-47e8-8fbd-94ada562c06f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed822118-bad7-4bb7-b9ca-b387425be0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fc52ca-c337-4453-af7e-da70ab6839e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3143e282-b184-4585-8f82-e19a43de2df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01418e77-9fd7-4341-8a7f-7f2b49aa4d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06789e01-3421-4f82-8efe-1c8a53a0ec9a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ef24d1-19d3-4f71-9641-c8b8196dd298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92821ef-0080-4494-8423-11a166143df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c196f1-838a-4542-b4ab-e55d7e3c1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d13c3d-00da-4004-99fb-574df079d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db89492-94e6-4777-99bf-9fcf012bf0df",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9fe84d-acb7-4f18-910d-f1ce91365058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8845db-6df8-4a5f-917f-4ebed39e9491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9202cad8-f862-468d-a16f-fcc961aee79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffa510c-1708-4a1a-be34-b7b558f69a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0107ce-00b1-4ad9-ac5c-e7e1f2899a77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ba4ecc-0222-44b8-b4fc-6ec0ba0447e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c127c121-5d64-4770-8223-0bf110bfe391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da968481-1aa0-4e98-aa2e-e431690c2b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d4a3e5-3ec3-441a-af48-067059e533eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48a9377-c7b9-4da4-ad43-b316aa52a647",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3c6604-168c-4ecf-97bf-fc0f32ae857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8ab898ae-a12b-4222-b949-2ebc153e256e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc3174-fc5d-4a4d-ae61-9a40c45c64e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94ee0889-7fc7-4a23-92eb-fece4f9fc5b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0cdf26ea-28ec-4f56-8643-bc16dde08081",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b73c98c2-c447-4714-b382-64d870495ae4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6834d777-14e2-4b24-9894-9494f78c2260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ed4c66-5e3d-4b93-9858-29f8b53f2519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0736d9ce-11e2-4941-9e5e-e14251d9bbe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb62e8e9-0701-41c3-957f-6ddf15446185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b624940b-c13d-4356-b117-0740c45cd3b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d27064-125f-40ce-b9e2-10083b89d2e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "234b759b-0916-4d93-8313-ed3dab41a862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b5de0ee-63ef-4f6e-a921-8b91ebcbfe99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bccde288-c66c-4b51-9f5c-f0768b22d531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13dadb94-1e0e-46d5-9d0e-722a83c81b3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "922b99a7-3925-4c18-9276-81a9a099ad88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ce330da-64dd-4ee6-91ba-88c9979af9dd"
                }
              }
            ]
          },
          {
            "id": "a9cfbc02-232d-44d6-9ec9-2c6776db0808",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69d21d8c-74a7-4daa-99aa-ff24aec1dcbc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dd3b4179-6e45-4bc9-ab1a-33c55bdd605f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafb73b7-b827-4539-8aa8-cc9830781dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b0406fb-842d-415c-9475-28391fae5aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a569ebf-2c8e-422c-9db0-f546dd27e196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670c6d37-9046-4dfc-9410-41d77484b4b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "677af984-f542-4ddd-9298-b4d480362b23",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee768f0-73c6-4cf0-94d0-f1785fa14d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f38b5b5-885c-4878-b8e8-c75e2a5ec803"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "229f658c-654c-407c-8fd7-8cc2afab6e45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63b3c580-be96-4988-9b2b-8a80607cf96d"
                    }
                  }
                ]
              },
              {
                "id": "36bc8297-6260-4d0e-a63d-f3e6ad23e38b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae8009e-3313-493e-b3a3-f917c9b9be92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ebfd0aa-5a99-4257-aca1-bd8f10859cf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94212bfa-f84a-4d3f-abe0-f6e0c5fede10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46ee5339-eb83-4214-aeb4-84f30e20827c"
                    }
                  }
                ]
              },
              {
                "id": "799e7c57-4e77-4c43-bcc7-621ac10f1c0a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a37fec5-6f04-4049-a321-5091765a7f87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "548c7142-9494-440c-b75f-c0b4438c323f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "befdad09-a7d1-4371-a789-17a14213c495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a57b4176-03d8-4d5d-b96b-13c2a3ae258c"
                    }
                  }
                ]
              },
              {
                "id": "7587cf50-969d-4ef2-8e92-6225d8cf788f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f40dbce2-8d57-40da-acc6-378bf35bcca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ef2e74e-9dc0-4f25-95af-1b8f5730ac08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64684c0e-587d-42c7-870f-318f57a276e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f8e994f-32ce-4931-a043-0f48596c960f"
                    }
                  }
                ]
              },
              {
                "id": "a86c6c44-37a3-4b82-b2b3-f2cce757cc70",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6a7aa7-8fae-41a5-87c1-befe3dff96c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b2074a1-451d-4dc2-b3c7-981cbcdcb943"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ede7af4-67dd-488a-9b39-3595ba2206ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9213aa39-c398-492b-8573-f4d3626de89a"
                    }
                  }
                ]
              },
              {
                "id": "71738bcd-4677-4587-9460-1fe513b8fed1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af29288d-e0a1-4725-b21c-4424ab30c2f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab1594e4-249f-407f-bdf7-9d60cb97e045"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a37b57d-61ef-4348-9302-c4fd8c983ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "947cac39-7c57-44fd-ad9e-4b057dcb2757"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35a518c3-6f28-4bdb-90bd-f14224cfef0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49360789-0c42-45a5-9f13-e31c9d2ca4f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0fb7a65-6103-4ea6-8098-5cb3e6e12698",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6494db71-ede7-4fc8-b2c1-94af01b6f3fd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "451060fd-55e0-42ce-9fe0-4e7b0169352f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "36682e74-7486-4187-afa7-8766487133bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b6870d0-f0f7-41e9-886a-22f2bde3808f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38fe8662-b4fd-4f05-8f79-2476c7a91f49"
            }
          }
        ]
      },
      {
        "id": "d224a8da-9db6-44f7-b4e1-52dfcbc5c8e8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f2770c3a-796f-4ae9-8825-a1a79b31e4d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dec28b2-2c44-48fd-b80f-af1a7e0cc748",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "980a1da4-5a8a-4d44-b26c-fba2c807b588",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4c6e57-8cab-4592-9e2d-105e904c6eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b238b10d-d1b5-4d82-abf2-5deb8ae238c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0286fec3-f82c-4f8e-8a6b-97a0b9a8351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78d70c1-ced1-483a-9c9a-c95241a3d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7e9354-c379-4c70-9adc-a1a3552780d2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef583a90-3586-4874-b4a2-2a07a7db7ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fe127e-c5e5-4fcb-a760-4198df0d7bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e1655-f6ca-4147-9743-be876afe3325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9b0ca7-79aa-4670-8ecb-1fbd6909c381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5a89b6-e547-46b9-82b0-6216ebb71bba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de263d5c-09f1-4ced-90a6-af5adea5650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6358d22-9e6a-4da3-846c-d04c43462fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6819d11-22c2-4b48-84e2-4099d987b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1072e06e-d846-491a-84ac-e830a633d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55506fa-8f33-4f82-a23f-006a38c6e627",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b00d4-fc7a-462f-b2b5-e0c2b3b27ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24be8fb-42a9-4ce8-8a44-dad64dc24911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2549ad-b16e-4a4c-b2bb-3bca36bfb048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13353077-4006-4927-8783-1bf048160237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100e242b-a883-41e1-ab9e-ce1e64764e9a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2a4f9a-f6de-4bf3-b729-5fbeec60bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ad4340-8a60-46a3-925c-8da7f7f97c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3799e45-2c46-4aa1-aa54-0f50f34729a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7787223-7184-446b-8696-863f14d04dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c96974f-b225-42fe-adaa-e4f212bdd7c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829cfd2-cd53-4d8e-847d-393dba8807a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca182176-4388-4510-a297-330f4d876c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd92ece-0156-43d7-9449-2f25c4781ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0407c06c-bebc-4021-a7a4-efed63113cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70476d05-04fc-4319-b092-9812d265a37f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385ffce7-b93a-4b0e-9962-916650c41837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7428af-8b39-40d4-8b22-039151e5f23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c29ca7-0229-4edc-a7b1-37638b8b73db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb708bfa-2f31-4144-9ea7-f4c2d7212f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3d18c4-8a02-4444-be27-ffd857925644",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc7a3e5-f91c-46ea-b508-536592d28a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee53a998-7c5c-4924-a5f5-33b61ec8dd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77f9eb6-1a20-4208-a167-aa3eee69a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d323bfe-a13c-4165-a0ec-9fa8b8874b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391dcd31-75f5-42ef-97f6-e0ad29426599",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48b995a-8300-411d-b491-1955780173a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a3be05-088b-4a31-a7a3-47f17da5920c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445ffc87-2245-49ed-878e-e496947aecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b35434-9da8-4e42-959c-031d0594bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec994ecb-2b68-4f44-92b5-a46ee2c18938",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd25805-df18-4c64-8500-4f81ef1ed0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22054254-b3f5-4979-8386-bfbf28747149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cf26fc-84cb-4003-a4a0-8c45e438cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d9eb6d-6179-4827-9617-33d2e819f0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225e78f4-9bde-4ff6-922b-39d6a1c2c3ca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645d8a5a-ac96-4a3a-94b4-96706e7f42fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f58fac-405e-4263-8f57-0dd8a516c08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def9a6e9-2a8a-42b5-9fe8-55d4796059c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b812d29-edcb-48dc-baf6-5b099d2e3695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3592d2d-ffe6-45f3-95af-dc35b7bb2e4b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deef62e-19d3-4fd0-b475-e88727d128ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7a9333-e722-43d3-9025-e92704e994c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1e0215-5e50-4977-b25c-b124d7cdc2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01871ec6-70a5-4e37-ba63-289b1b86a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab18e98-7893-46f9-876b-303e3146a403",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b410b-3c16-46a5-8b0c-06de012bd76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fdd91a-57c2-41cf-99b0-e95f6ec666cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2e42b3-3be2-468a-ad8d-3c42b8c56fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40587e65-219c-492e-8ca1-fd65a9d8ce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220bdab3-5aa6-4f94-8e40-ef7fc3eed58a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bc87eb-c48d-4333-ba8a-450424707157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8d838c-69c3-4eb1-8502-111d7d42737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935525e9-3518-4c07-baeb-1ee038bfe6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea5a2e2-a916-4121-8052-bfe4751a24b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53935c1-d43c-4dda-94f9-9bd9e548e45e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ef212-fc25-4ae5-b952-eedea043e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b076fc23-7c78-45fd-8166-fb64dc0294b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c129b2b8-d016-451c-a65f-82818963e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d75aaf-cf4a-4be0-9d7b-87a7e28f7b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bf68de-cfbc-4ed6-965f-ceed7e7774fd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6f39df-9b4b-40e8-847a-717b4deed223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498a5512-b6a6-4aeb-9df6-4718b4721f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac49f851-f719-4eb6-b644-00fa07005491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f5f6c7-bea1-4848-8faa-e967003d58e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2852eec1-a28b-4634-b0a4-d749e74ae852",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415e18a8-9cff-4af2-94ef-d0b59c36e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05e2b43-8343-4e73-8cad-a8256b9187f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c70527-6bad-4124-9b3c-777e06a70262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28527664-76a5-45e4-a64c-a4c9764648b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d366ba8-fd64-442d-954a-5b15e4139f12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e2ea5-b881-4840-b093-3ccdf6423d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255811f1-c03b-4847-8ae0-6b1a7a5f0723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aa2e69-96b4-452e-b431-7ac9da724e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a8c6a7-e10e-48d5-a710-d7f1350d43c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f2ce15-ac99-433b-87c2-9d4dc1429fa2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9d227b-7537-467c-85a4-d3d7772ad206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ca0fb7-3bd5-4a0e-831c-aac4cac34071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4305f7e-65c1-4fea-88c7-6396b9e060d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f33929-a81f-44c2-9c38-8a0c3c9507ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8f2517-408b-45ed-9ffc-d527b2232e48",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90740b67-bea5-40e1-b612-048e5ffc2ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108ab3a4-2cf3-43a5-8c5a-d3d1f3e0c0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea783fa-2090-4cc8-967f-f91a167b5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83cc7048-008f-4212-bf66-459cc594b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e5005-18c2-4594-acd8-56b5a5fc29bc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33336278-bb93-4453-abe5-0520d6fcbd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc12391d-a3da-4bb2-848b-3d5683f66b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e008dbd-7636-4d90-b674-fabcc6e83615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8551a3d6-5172-4b0a-bc17-d988d43336bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5266dd74-226a-4827-bf47-5103ed7fdf97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a342cf1b-281b-4192-840b-0a4936d95f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0b51c1-894a-4fa6-ac64-d5e79afdec56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d01f841-10d9-43a1-99eb-a9ecafd09c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9216669-d566-44e3-96b2-6dad57ffbf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4749499-eda3-4de9-80c6-f9b367e03ac1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8267b76e-4c9e-49db-ac09-a575b7fe4038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a795c11-811c-49bc-9093-78a73529c009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c7ad7-0838-4fca-953f-1235907a0289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea536c8-c3f3-4cdb-94d7-c8f77c5bda64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c3b226-8694-4ac1-9a3f-843a7983ea1a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f17fd-eedf-488c-85f9-6a0a09fb080d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5dc660-7469-4dac-90fa-0cc87237c84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f8f45-99f1-443b-b2d4-7a214ea2f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5b1bbb-a2b0-4ce7-be86-880b431eda87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a161a826-f5f8-4e3b-aad1-3ae48cb930a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b786dafa-3687-44e7-a9ed-75a2b2d11b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2249a60-9f42-4eea-9928-e64a97ab8386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9b3e16-c4d6-4558-a7ab-bb6e555a5d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb80975f-b47c-4373-a186-570bcc6e842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d311433-0d80-4313-b1c9-a184354d4995",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb079d-625e-4fb8-962c-539760e5e588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153b8e37-e1f1-4fcc-81fe-a1298b026020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae613f32-74f3-4b27-9a34-596e4cfb2fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60751105-7d64-4b83-991d-292c67ec168c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d146ef38-ecbe-4da4-90e5-a99f5a7ef9ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb27483d-cc67-4c70-914f-a2d4f514fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413b68e8-5ee5-4df0-94aa-5ab00c73b333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6bf554-191f-457f-91db-eae59adf6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ec69ce-fa7c-431b-a737-9776ec36829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbbafe1-7a23-45a8-9016-4d71870c2ae9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaee2e7-dc43-4507-96b2-4bdb3f916208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2164e8e9-8f7b-4596-aeba-3d741e462f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a773aa-21dd-4ec1-a763-402e4c57694b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "321b7229-9733-49ca-a18a-fcbf5d302d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db670ed0-c2b4-4d1b-9585-8253398a69ff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa280049-f04d-4188-9962-93db8d32d7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85737b3a-c410-4a54-9495-941cef465e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1d43e3-4026-464b-82d9-e252887441ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8205d0-b65e-4ebc-8801-c5db63da20d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da35d26a-ceab-4ada-9079-ef8486363038",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64562146-c078-4aaf-bf38-6bc86983146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49694a3-8221-40e3-ba27-f0b954e72b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60facd4e-02cf-46bc-9ef5-45068603c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d79b59-e27e-4704-a939-12762ef6f199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a9ca4-6330-4962-baf2-59d3f20fb177",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611479ae-3a86-469d-b6ba-aabce35a8c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4d92a3-29e8-4aab-810e-bd38fd691c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a97884-2ff4-4d2a-9bdb-8b9622a5d22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3518c1a7-c982-478f-acb8-5d8dd4470b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0094ba50-4d7c-4c9f-afda-dee3b670e0dd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b430e312-174f-4734-9b41-aea8ddb9e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61aeae3-a096-4d2e-8f03-8b89a404245b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08996fca-a107-4a04-be5e-3f5126434973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d6be67-be72-4c5a-9378-da630b947d03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bc081e4-372c-4b0c-b529-f91afb75e229",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcf2ab31-65ec-4723-8b4b-fbb1667d16b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf36025-dfdf-41ca-bb9c-003a5cf51d65",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a55a11-5cac-46f4-8242-f6be15b32c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f6b86a-0921-42ef-9401-51fda571e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a43720-aafc-4b78-94ce-e40993a15d44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53324ed0-73d8-4d18-8f7e-86dbea2686dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e771c49-4531-4d06-9f7d-95bf85cc1230"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eb3983f-b83f-4037-ac38-2120f7d22cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa1eeaac-fd34-44d5-b455-e7558d094a2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29dfbe77-bced-4b80-a7ba-8a67eb928a11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b621bee5-d1fd-41ee-8e22-6c342d699a29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2afc5306-3795-40da-9b1e-df3be1305192",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5591b7e5-ce86-4b34-ae3a-8e5f868ec122"
            }
          }
        ]
      },
      {
        "id": "0b633aa2-eb12-4eae-934f-7cd0958afc84",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7a02b9fc-ffd3-45ff-8f62-855681a00458",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0d1c0a5-f3d1-4742-8fab-eeea2309c9d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95f2f9e4-b95c-4d26-bbd8-c4e8841a96dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cbb364-83bd-4b2f-9ee8-df16a4e7b98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abee48f5-e663-4c47-b301-02cb69e547f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044749a0-6f16-48c0-8fc2-39f04e38c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac31341a-c4cd-4233-84e4-094b52beaa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54a3fab-ad45-46b4-8324-0ca82416c8d3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1649dfcf-b857-4740-b718-8f6958a62a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ca5d63-6c89-4a21-8fcf-7574c70de1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce383435-495a-4f55-84bb-926b354f551f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c601a51-22b1-4f3a-8a42-bb9e9480e729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc156b-339c-426a-9859-d613d625c0dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13bed13-034a-46ec-afdc-cda56abceccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4406ab-cf9b-4907-9702-972203ee30a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85e91b-0e12-4d4f-a504-91a1a93ed350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40ea440-288e-4767-9b84-ec09a10ea8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af9c56c-6e92-4ce0-b675-9deff5fd076d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c4a708-e5cd-459a-a91a-ceb5e0d942e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbf214c-e680-4487-8069-d582cd001170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feccef69-b58c-4b4a-b530-957a882fc5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "069e10a6-42ff-4c85-8290-4b8e108de9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a869c768-8fcd-4887-a865-321f5cb2b96c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560318b4-49cd-4e3b-ab91-16e8cbfc4570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c602b643-79de-49b0-a8d0-5b578f81807a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3036a7f1-ad0f-4268-8294-4b59f7035712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5efe5575-0bec-4223-9f73-edfe12990385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5032d622-0553-493a-8651-a2c3ce541dcb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c9772a-d952-409c-a18a-bf8ec4ab3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cd80de-074f-4f7b-bb2c-4d8c6f42c1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f740845-25e5-4a31-ae09-703b79cb33a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41ce49e-d54f-4676-be79-fca820765bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c5adc-b593-4bec-a7df-6a38369b50d6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab35e8b1-eb6b-46d1-9adf-6de7ec4bd709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa82aee-1d14-4187-bd92-79fe02957d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15380222-1b97-4573-a03b-81c31f0cffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5a2aee-994c-4d54-be8e-0ecb7a6c8100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acb191e-0c8d-4a14-87d9-453185397adf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2f61e7-3bd6-4a4c-ab6f-11a47ed91d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612529e2-c28b-4d75-94f5-8d653dafb136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35efbaac-7e95-468b-8a00-a0822cce077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3493af2-0719-4efd-bfa2-ddf5dfb605d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005d8a3d-2e40-403d-b2a0-e783efbee9bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a83ad49-aabd-4b4a-9bc2-1b33269113b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df4eec4-474f-4152-968b-b39e6e3bfd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84389ddb-8bc7-426f-bb63-6283de9ed979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb7ef35-45e9-431b-b75c-8dce96360219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db53bd6f-69fc-402d-867b-5cd38c518ea4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9fc3c-143d-4b4f-b3b8-c6ab5cf98bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd5eab6-8ff1-4245-9395-c1cc142d7a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb8c4d3-f171-48f9-8e58-9eb5ecea6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d35ee92-2e9b-42b0-840e-80fe0ebc778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8223cb0c-46a9-41cb-b7b8-e8f636ae56eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133cbef9-efdd-4d00-b911-99df0f858ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586bb855-9190-4375-b7b4-7f9cabbe7110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15556b7-7e1b-4c1c-a62c-efd76300d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0c3fe2-cafc-4d15-8dd2-d8e0976a9595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa2bcbd-5dfe-4521-a9b2-4cc2eba4ad39",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70624f-3cc3-47a5-b6c2-dea7325042b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223a8e28-533f-40f5-aa57-04f64cbb8b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0b6fd5-ce91-4faf-a8e5-1eb61584346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b072b87-0141-41f4-9209-f786415d5d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359a526-7ab2-446f-905a-23dd07fe0836",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61142205-3d43-4a83-8738-af19b084198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d1f414-d0e4-4980-994c-5e7f8b138207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3e3058-38ea-4702-b611-d7f53400823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bacb7e-8bd6-43bd-b99a-a19575db4ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79846fef-dd3f-4807-b4fd-f14d8189c099",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cfec99-62c4-45a6-a4d2-4b4a9d3c1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87278a39-ec4e-46ca-a040-4c8cb6dd887d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78e99c-ec9f-4bb7-9d89-ac8634b52c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "254a31ae-84b4-4031-9f59-ad703d4957ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f7fc14-d694-4a66-afab-7830ab79813e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ce984d-2eb6-4792-aef9-ca3fffadf984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097a4686-c929-414f-8073-d5d643174b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c46436-2014-4dd6-ab02-1802561e8c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "291ffc66-9709-4015-957c-6b59a6d91cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31915ed1-f9fa-489a-83f9-3d7c0da030cc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199025da-9153-42ee-890d-1867aa92d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39da8502-57b8-4b9a-9d60-f6e475d32acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8266481a-00a0-4778-9930-c1806089c3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f8dce1-bed7-41f4-9b76-37063997bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6da8d-8023-49f6-bc8c-32a5ba35afdc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda92bd-9720-4997-97b0-49c93959cc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619aaae4-e089-4ee0-9826-d8ef4f8d24da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8264a5c9-592a-4e33-a1bd-7e6a9a896b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfbf05d-aa12-4a3e-980e-f0ca7e517a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c393f4-121f-4c6a-8f56-75f391238018",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57f5a5-023d-4e79-893d-b68809ea7632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c905367-659e-4caa-a83c-e52e1a6ffe41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ff1fc7-1f6f-421b-b7ea-5d2cc9f2e7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ca2bf9-4f17-4798-ae42-bb7a4e35adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622dd37c-0370-4104-8978-82073b1437d7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c7e54-4114-4adf-a43e-6f655a720687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163d91ad-c1a2-4236-881d-317b99d64bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ab55f1-2dff-476d-a046-26401bc82aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3ca1ab-72a0-4a01-888b-8fbf46aba35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66dab98-4ad4-4bb0-956a-591a07752e4e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e652cc8e-ff96-4074-80d8-9cc72f5a96fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e4a3ed-35c0-4e90-a014-a0bbc68e9520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601db1bf-d8df-4092-abe0-e870847d2223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c771f5-cd85-43a6-aeb9-34159e9a5a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d262fca-40d2-484a-b3c1-a03d7e180023",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dad7ddd-518a-4474-8b0b-ff478d93b98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21594840-1c81-45a0-8fbc-9ae3d59bfb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3b512e-de30-4ebe-89ac-1972dbac06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f62680-8007-4092-bcd4-47ad2bd023ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f401ecc7-a295-448c-84ac-023c0c581a8a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c0705f-54f0-4c8a-bf94-0d43090efb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae6a47d-d3ae-4ae8-918e-783900a7b7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb600498-f6d4-41ec-b0b4-bfda9e1897e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811dc99c-84f8-4033-a5c5-eda694ed9ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e9c4c2-c5f7-4ee0-8ff9-45bcd573010c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc5d9bf-fa70-45ea-b9fc-a6dfc3503ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48d0052-eb5b-48c2-849e-c5cca62806c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1436e627-a815-4891-be6f-3bf33827ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3074dd-874a-4332-bc4e-fa0e63ed1c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa32f1f6-d35e-41de-afd6-7b32d0a106c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768f7bd-e1a8-40db-a515-45316dcf68b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548e9f8f-7c48-4b3c-90b6-76969b20d9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58d3402-9a39-4513-92bd-907bbfcc412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432dc3f5-b33d-42ac-ae25-1d10266dca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8752a32-d5a1-4f14-a80d-1ab17d75ec2c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156ff92c-acaf-4f67-8c0a-ee4be253b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf13270-b15d-4e6d-865a-136641a21257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61103e8b-dc40-47b2-b00a-bee355add1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f51c48a-5781-456b-8a1e-a99e9dd145c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc3ff7-1871-4695-9bd9-df63a7a6e7c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d836a09-392e-4d1a-bf28-64a0eb8c4673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112319eb-87b7-4f28-a375-e70d6975607f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c711a93-0822-4f5f-bd57-f14793a1ec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb73f1b9-88d5-4053-beb3-e56f6038b5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ffce9f-71fe-4a9d-9809-57ec829871a7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf5ce4-7652-412b-8b2b-127f2f9dd848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874fe2f4-4f6a-4eab-a38c-6b39822b0e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e3a67-0129-4e6c-836c-8d792bef2312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849f87ed-fe0c-42c9-9fd6-495f7726b266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc063cfd-849b-4013-986c-103f7eda3426",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5932d-6a40-472c-866d-e9945ff03d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f53676c-1f1a-479a-9d8e-98efcc48b1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be97942-de95-4ab3-9127-3d50c256cf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49e7bad-f86a-4fe9-a810-6e76d2677092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f253efd0-6c96-4ead-bc0b-f592238f77b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572fbe3f-0aad-4a6e-b402-b5048f62547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c09ccb-1b1e-4a86-8e5f-8bd095f696a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f9cba-ba97-4638-9759-566a7833d6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b89c891-fa66-4a08-b923-11f6c670dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7da44d-0f25-4bbd-ad06-d2308cf83681",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4eaec-a5f2-4a83-bf8f-86606215f262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9b09d3-ddde-404e-808d-9d2d96069f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfb10f5-95ce-48f5-91b8-bb70b7500bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f12d5e5-8bf5-4bd2-83b1-5a01387fca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a47fe7-e643-47ed-b245-2d44e4245f6a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2288de6e-9200-4efa-af07-aa07ab5ae312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43f648c-9949-437f-8c3e-a650b36fb1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc04f75-3d79-464b-b402-0fc0f8c7a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ec5141-88b2-496a-a8db-7cfefb36b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fdbcc2-cbca-4702-8490-50e9b9932d57",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e897f-9679-434c-8291-8876ce5f8f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad956434-9f13-4c8c-ae32-c36c83460793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8579852e-e2e8-4145-b40a-e2c236a3568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f1fe7c-0f97-4bdf-a37d-562cfc1eafab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894d3790-1c33-4167-b48f-8a49bc250e0f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801ebfdf-fc9d-4b14-a924-2722a50c5a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b0cf7f-95a4-4008-8425-ef10e28dc67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f1f544-5d24-4345-9cc3-fe1c0ae257b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e3e404-85aa-452b-9c33-216ddd333904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b37e0-43bd-487d-8b1c-5e9e27205ac9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6d959c-7b91-4dba-9842-060b61dc79f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ff6cc5-8f83-4b09-8362-b451510bb944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3fd160-1a30-4053-b97e-55e10db448ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a32552-a5ae-4335-81c0-a3002ad64f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc400ab-7760-45ee-8f65-f20a089189e9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f11f06-14cb-4dae-b24a-8d87cea15828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192697a4-9dbd-4946-a704-09c0778f25c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c34b32e-2230-426d-85ee-31e9af1e167a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df363de1-dafe-4da3-acac-de8a15a791b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323f198d-14ef-4d15-9a35-e1f49be8c713",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ada5bc-8bf7-4adf-87f6-4bdb490fabdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac13358c-e293-462f-af4f-b23ed75a9174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e3dc1-70b2-4b53-a3ed-baeeb22de7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c97c83-93d9-492a-b9f6-ebb087c5202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3a34bd-b88e-4561-907d-87962541bcba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f82fc4-2603-435b-9dfa-8854d5013e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e832d9-dce0-4c93-87cd-64a75a0cf70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d45a5f-f514-4bfc-8e2a-6e663a84ab5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a2e105-0a98-4538-b7cc-f297c3c484be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79e6b7c5-bcd2-4dfa-811d-ee065afd0004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7041a315-2dbf-4ba1-a4ff-480eccbb9f8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5c1cef-5975-48de-b2a2-a5916e2ca1db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "28466f98-2d56-46e9-a278-664856e25cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2567532e-51cc-40de-a0f7-b512feed719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca547b8-5920-4f57-a430-4c4b89756db7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71c4d353-c963-44d2-b72a-d3b8501267e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9467148e-5884-437c-9496-f707cddc5cd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c33d57-f7fa-4f46-b08c-a67c31ff742e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ac6306-2f79-4ffa-b96d-5f1ce6f5ee80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26a63774-5f67-4c31-a8e9-158cd1b01662",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e73b7b43-b4c1-426e-94b5-841c33d878a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0366edc-3992-412d-a751-0b6b55eab7ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac0b7c26-a48f-4645-91d6-bfb634d44e09"
            }
          }
        ]
      },
      {
        "id": "22f6e50e-625a-4071-8056-59d14cd62cf0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "00e6c50a-bb94-44af-bd41-68f9a4e3a223",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7a21f11-8b37-4be1-ba5a-e3a55a1bf2dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "888cffde-533d-49cb-b48a-b65fda06728f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6ab919-a64b-4849-8f75-76aa661e5b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305f8561-bad8-44a1-bbc3-5a667833984f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b5615a-9c7c-4ba8-ad3b-41cc27a21fa4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfed052-2d5f-4766-b5af-eea89f7d9ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f16c516-4dfd-461a-b349-8bae1f859f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc68a3d-8c03-4a4d-a76a-75aa0f2081ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb13553e-edfb-41d0-8708-093d20ebd656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c38517a-cc38-40b4-bee2-c8d8c3d25778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962355c-d4a9-4035-8faa-61c2abd09cfb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23305356-e7c5-4bba-b67a-30e6ba82eb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45088fc0-cf49-4a77-aa21-11133422160e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc0ea53-5e03-4274-a494-d21e90e6b11f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7c43b-8e9f-4819-84a0-dd0ac4c17772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d277495-a796-436a-b8d6-77aa5f5118f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5babb6-3403-48e7-ad23-ae67b1e82212",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21c5424-f8d7-41ae-9997-e13078806dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc348751-f422-4b8d-889f-e6d64cbd0f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f14ade-3faa-417e-aef9-ea086d22f7ba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5e06d3-4052-4de3-b9cc-8ff58e3e24dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45c3e49-572a-48c8-b185-3169d592c5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161cce78-f369-478b-bb9f-5d3ed1c5f6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4996ff-3e3a-4c0e-b3b1-52c67a169887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa375a6-896e-4b6a-8ff5-cbb84ab87cf7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce97973-b192-4397-8826-44d44f1b36b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6329a7f6-6f81-43c4-9cc5-45edab8725e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb500c2-8a2a-4228-90e7-9658f56379b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65681270-13ef-4160-a2f2-32ed826c2e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84214254-5ce6-43d1-afcb-d3068fbfcddc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc13982e-f995-4a09-a306-70bf7215ad43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ebdbcc-72aa-4739-b996-23c349f58cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b6af22-1391-49b1-8387-06ace705dd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5562b7af-c533-4777-9cdf-77ed160b5fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4e1445-eefe-4223-bf2e-6253ee0c3ca6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c595a681-7d3e-477b-8c6d-c34f3ab26cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29bb72f-b8b2-4f22-9fc0-093d80bae8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a8b36e-0262-4f49-bf9a-6187d6ac5602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903f960c-07c5-477f-9fbf-4dbb7da5fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bf0b41-2011-4bb8-b1b6-31b52cbee7d6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a9cbd6-ac3d-4647-8a88-531ccec87166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a001887c-761b-4668-a341-06c10b683b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c63c4fe-e056-4dda-bb7c-3575d0326505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0ccca7-1289-43f2-b1e2-88610be63c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8fd994-f67b-41e0-a0bb-41d1d0a8f967",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2442014d-2ab2-4ff6-a1f2-019174ef3278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5365f7bf-bfcd-40c5-b61e-3a4394b01617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d7ae15-9bcd-4f3f-ae19-426adf041dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0614eb18-bb09-47bd-b34d-d89751120a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e6252-6f17-4bf9-b6c5-b411eea6bf9b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbb7da-0023-4841-aa47-71679e59930d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033b16ea-5043-4fb8-9ebe-ef53eadc1589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ef047-b7eb-4ab3-b545-dbb71ad41628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2049c1-e671-4932-a3dd-96d65a56aa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b900fb6a-0ef6-4e11-b329-102b60dbe98b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcdbf33-3050-48c8-9d95-88ca5f69ab12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68068c99-ba59-450a-9398-8b1f3cadced1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb345b-297b-499a-8f1d-1ef386c93a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccdb806-755e-4517-bb80-ad6011ec3b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c98aba9-1a5c-4897-b507-f08ae52e8d1f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f604d8b6-4d6c-4296-a99c-2bb607d1c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2066b37b-0028-41ab-bbf4-2bb90b85926e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc847aab-d6b2-4d32-9ba6-34efe11f6636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26e1ba6-b6de-4dd0-8498-a1b351763510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de6ea4-ed17-4ddb-82c5-6cbe5fb31cd0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dba4204-7a8a-452e-89b6-dbbec8fc5cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb136da-8ae8-4c02-b6d4-989dc7515349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ac1208-1eb4-47b3-a889-7b951e363ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd0e1cd-d5ed-4dd3-b464-9c086a1ff643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2c0630-b4f8-4dc7-9301-bd4ef79fea62",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd56e5b-88c1-4b2f-a02b-238dccfff9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd406b3-ad7a-4e37-8255-0dfdcc1fc682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90aa12b-e05b-4f2a-8d98-11fea0914ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b195955a-77b9-48c5-8af1-88a9f98e38d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354c84f-bbe2-4022-8cbc-690bafa41450",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec65eb8c-c2fc-4e07-abe7-fad443514438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105d2362-e7fa-4d6f-b392-f06b84314a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b30a3-7002-420f-bd55-ca033bacbb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af9346b-86e2-4dd5-970c-85b0cd80440c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d20f0ab-1dbc-41f1-b51b-214a1318c778",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d960cdb3-a6a4-4eda-8986-7ac77e071bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3c4069-b636-4f43-bf21-f3b1d6d812fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802dccea-facb-4927-ba0d-8db0a04801c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fca2fc2-8c49-4dd5-9d62-ee989dc7de0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4afd55f-58b6-41ac-b3ea-cb1c778afdd7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e600dd81-e51f-43cd-a49a-30ad8afa9460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d638da15-d449-4efe-8962-243ba327bbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e999a7b-ebbf-4aca-910a-f7f20964377a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5916507d-5c3b-4b77-a351-984714139f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c95a3a-1f28-4a7a-81ed-ab064af5e25e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9678722-b2f6-4c12-9753-0889336087c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2e89e2-e661-4937-9222-b4e2fbaba7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2448695a-f901-40f2-925c-e476c7866fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4275564c-a07e-4df3-b354-8cb4ce551a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a11cc9-0be9-4f41-85d8-7509c2569d47",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd53c3-0e1f-401c-8443-6e81e371da44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8c2372-8e07-4bf8-9a0c-41d41437f3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25051161-d735-48ce-9f29-c39d2c152b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32439d58-b66c-4684-9ea7-f01965bc55da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c65f984-f760-4b9a-9270-de1de3f18a5b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c118cc20-9725-4d9f-bb66-eefcd27f721c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8b3c04-1ace-4029-9cff-fe5615ec5f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd97ca9a-245e-4d5f-926f-967f43274dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceb4f0a-4322-46b0-9747-4602f81f85c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d6697d-eb86-4516-8e41-845f9ffead8c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f9a2d-0570-46f6-832b-ee7bd47b9f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bdc8b7-a375-4385-b9b6-fb150911fa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc77ec4-7c5c-4825-a568-90b77cb47b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372bab2d-3c99-43d5-9c42-5a7d8808aab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf5b318-7e1e-4ebb-bc4a-1ef0f6ae400a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d59f0-f468-443b-9b6d-d4948152525e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3981ab62-d3e5-4d50-9d65-725c5ba8821c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a120c30-417b-4b3d-a8b1-8f5582ac0f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9841d974-017b-489e-a5c8-7b8e68788077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7244cc86-44b6-467a-8dc2-69ba3c28096a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f48dc4-1d06-4205-b8c6-7a2b58fb07cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95115641-4dfe-4099-a97c-312b9e2ff3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8672ce1-3adf-4d16-aab9-4c1d87f3df79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4ec6de-68c7-41dd-a270-2d365d60bf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c32a6-edf2-470d-81ac-abf28fb68ed8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59585a04-dfc2-4fea-9bc1-20a32dbec172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce49c753-9e45-4bab-801d-7cdde1636df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa231d26-0cf3-4a10-af5e-71c060d767a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f637f344-a715-4b4b-98d4-27cb5a7a2abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5e0ed4-6a55-4702-b6c3-02a719e2e804",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7288d56-96b0-4aed-9948-0931b266af23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ff546a-a5fa-40e1-a700-91a2fbb77387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd0339d-8ff0-4387-bc4d-8198b890a412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468140b3-e1fd-4c63-8521-d3db08ef8057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9459a96a-f303-4ca9-86f3-e5fc51107c53",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e61399-ecef-4873-b996-a79b2e0ec1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12858a4-7151-4bcd-837e-38032714d617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9796bca-d165-4ecf-8a77-c778204b49fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619f3f9b-f353-44ac-ae26-b9494e10a57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841586c8-0c14-4648-9d83-00a84b423b90",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d8614a-f5ef-4735-a1bc-365a36e0bae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11133042-2d2b-40fc-817c-98b7413e6278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9ae046-a12e-41fc-8b99-8e57c39a0d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797e7916-3fa1-4478-85bd-f581cc0a5633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016cef0c-822f-4701-b825-2390e4ff3d4d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f6453-b729-451d-9d30-f4e87276d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632bdcdb-c540-49a0-a01e-5184bd0958f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcced509-bc98-4c1c-8fa0-a64a57d729ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f28040-577f-415b-b2d1-e6952e00086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba2acc0-86ed-47de-bfcd-d41cc221f6ce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d088334-4878-4a3b-a78c-a78259531e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7e1534-d667-4488-b13d-58dfd9d873b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16e02e8-b070-482d-a7ef-06f1294149a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f0e861-1a0a-4d14-aa7b-eb22cb618d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db40b301-e9b0-41fd-9a5e-e957d7cb9e7f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a779af-f3be-46ab-b962-3e4e04a69832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53118e91-c1e3-434b-91a7-6fc2306dd874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d97df2d-9407-4429-9d42-18ebd7e45549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97696595-2744-4d07-93fa-ebeaa5dce8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef8d391-6091-4330-b214-49ee2ba0b67c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54593e4e-7307-41d8-96a9-bea58f7299f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191c61ec-a1b6-42ce-963e-0846b729ca68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5674c9-5393-41d9-a6e9-c27bf046e7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc96bdd6-8f3a-44d0-8fdd-02c51eeb5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215ca817-1205-43a9-9752-a86dce4d5984",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167f468e-a7fc-46a5-bc7c-2e7876a3b575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fefd43-39fc-4c0e-a702-288ea635813b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b48aa2-0723-4adc-aea1-c3217b6f9e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c01bbaa-f04c-42f9-8c4d-23207b480ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60cac5c-8d83-4c8a-9780-6f088f961682",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae1777-89d8-4d3e-b96a-5ee366bad08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3392ee3-d791-48d6-8cd8-292ce8ec0f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e90bff-9540-463c-ae50-98d6b7f80292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2cf0af-53ab-44f0-ab91-0d6f389fd2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e356f848-b043-4ab4-ab46-097607659f3c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da26723-c324-460d-9428-c6cf1dfd8ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81b8b15-7655-4052-94b7-ff2b79d385d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51953c1-9fb3-47d2-904a-821b7c8e34eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbe89c8-6ccf-4c29-968d-bdf244fc747f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3c2924-e9b3-44ef-8282-f65a34a3cc42",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6481f-dba6-426f-b0a0-2607a99bd30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fe8a67-eec9-4cd7-830a-7d44a78a1bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f288ae-036a-463e-a3fc-50c8e7f95b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f064b9-7d78-45d1-b037-a59ad60f117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcd0616-0c41-44a9-aa93-5ded9563f852",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fb4c11-7491-4a47-8610-558927ee0c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35bf842-4430-428f-a637-03124f7ce42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82680f2-44dc-4209-bae3-9f00f86deda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0bb5b5-08c7-4850-8131-f41b017fe1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1e6559-3a84-4f1e-8fd4-4d73340c7e1e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680b1eb0-433c-463f-840f-049d3970e777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b33eb9-a469-4b1c-914f-b34034a72ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bbf05c-7a24-4ac8-a388-7b92c4f1fec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "face319f-6b47-4a16-ab8c-9dabb45c9d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61d7dbd-4d1d-4fcc-965f-af2d7fa09869",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca98ec77-d187-4ac8-b503-ff018ef7ea33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9aef78-cd40-4b09-b24c-bc020dd4627e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f800cb9-2bee-47b8-ab78-20a366ca7ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d78a2-68a0-4a4e-b3f5-964c568aa500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ac3b45-0679-4274-9d9f-29274bc0e7d0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb894ecb-c53a-40c1-a00a-0f69e4ccf6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705d6ca5-310e-4a49-91a9-7d8577458d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63f649f-4b5c-4aee-999a-ebf37136be10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d36a13-a05c-471d-adf3-c8e036fad2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d534fd92-a9d5-425d-a436-0e5484e6c83d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426c62ef-374d-43d1-9374-c0ebc14b4e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac0accc-a12c-471a-8adf-34742b049568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e4b465-af03-4863-a6bf-1037cb9b1f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c7521a-781c-4bf3-9a75-57a8322416fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb5ce48-fb1a-4949-b1b6-744878a457f9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d621bf8-2e75-49bb-b4f2-35e17d74f0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833fe76-f738-4494-b73c-629506d5cc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fddea1-53ae-44f3-a789-fa0b2a0c9c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b997dd-9ef7-4e39-be8e-5349e5c3d73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a91a4a-97f2-4a28-9057-b65dc08ec793",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceda80dd-f5e6-429f-b371-eae8904fe536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad64268-02e9-45de-9778-afa8174e6009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8ede47-418f-4327-81ee-6e187d4ca27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f711d1-a2dc-4cc4-b4ae-f2865dd1b549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9904a976-c9dc-4aae-8870-155a1ab9afda",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99117654-4461-4466-b4ce-727b2b5226b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b72f373-9d3e-4859-93f4-a96c7f6c7229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015104db-c284-4695-97cf-fcb78205b12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5538d163-9237-4160-9c53-6edf3f398df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7987103-6fdf-491f-9502-da5c4df9bd71",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc66f21e-3b7c-4d5e-b92e-f3a76b711148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74816017-b04c-46b8-b0e4-c05012e437bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3ff6a3-7ad8-4e3f-8331-52cc9d8feeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce719678-b89f-431c-87f1-72063f97661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489842a9-fba5-49e1-97e2-2a832a90488c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd28bf7-09b5-4906-a4ad-8854b23b7e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10f7615-85a1-4064-bc08-f6daed7fcf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0025738-2d57-4ffc-9b62-1abf42df5e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b3d78-14ac-4f4c-a9ac-5895b20c59a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e8b04-1de7-4251-b472-74495cfdbe32",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ff8ab1-e03e-42c0-a77a-82a33232a3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b72465-093c-4409-be8b-d3e4f63ef6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d1bef4-ca2d-4f21-88a0-900f31096871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c93f04d-09dd-469f-b9ea-28a08a15f627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c98f7dc-e9c2-4c61-9b2f-169b290a23bf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf9a3b5-8535-4976-a457-9c10edce82ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a026d259-f8bd-4068-96c8-00dbbcd77aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01144011-b89d-4172-8806-34b8eaa7f77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c420ba72-f3dc-4a20-87f2-e2967898a5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e57b7-cc79-444f-91e3-7a27f0aa1c25",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6ec4ee-8e31-4a85-9547-023a62834364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcf5256-00cd-40b5-9160-8f3fca135406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf4f84-3ba2-4428-8f9f-6ac72869617c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687b10be-1083-467a-b2dd-dd974ca265db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b79941-d2c7-40d6-9b60-8ac92aadbc28",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fa4d27-be3d-4a76-97a2-821a21f6f926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe00364-661f-4f92-9196-a8625eceabe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831dba4-e7d0-48f9-8447-c8f3df7d1442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f04e6c-f664-4e60-bc7a-d15c750c81d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd0b04c-0e2d-4486-aea5-257b11158afc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02162bca-c556-4fc9-af26-560ef9accd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94828c10-87f9-411e-b864-ca84ad18ddde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f7d0e9-dbeb-4b34-ba78-5782ee5a1841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ad51d8-2d5a-45de-8265-6fd8b7b0556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890a65b6-b277-4331-8262-3095ab023286",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc42f95e-7345-480e-b129-2afeeb0af88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29d9ff0-6921-4653-96ba-416e37ef167c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b07a197-b8ad-4a4f-b22e-d18135ed8fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3ca57f-1e39-4e6a-9496-be04ddf4c3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743c93fb-a627-4e80-bf7c-8054ad580895",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ac434c-2845-4578-9317-fa4d6cf05ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1ee8c2-3437-4c48-890f-fc997ad432e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb505db-fcfb-4024-964b-842e7a30dcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2936f3e5-0e61-420e-8dbe-27d7b31afbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3b4e11-3fba-4411-9e33-048fae3bd2d1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e9d9a9-323d-4728-bac1-bf60afe4c212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53e3096-5f95-464a-890b-4fb440c98e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa6d2e5-a634-4223-a66b-03ad0ce5ca1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72eef5e-3fb2-443a-8373-ac48daaac2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d3454-d077-49d2-b07d-7567c2be7633",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd43120-fb0c-4a80-923e-71dd771d6ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800daf19-8941-46b7-8af6-8354999355d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3994c56e-4507-4430-98a2-bfa397c1b518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b29fe61-1d5a-46a8-8f73-5ab2e6be1c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd212085-7407-48d4-9225-b141c8dfd7dc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbd058c-61eb-439e-8767-096a3428dc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c76e0d-117b-428f-aa10-5d2e2e54a403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5976194a-d3f6-4e3f-a30c-31b6f93792a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a35e5d9-509e-4890-9685-40782f8b59e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319374ab-e39f-4b30-aa81-4618c9245ff4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285cab2e-498c-4594-a743-fc5cf9705718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b39d0c5-b45a-4b9a-99f0-dfd89b1ed8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffe787f-d39e-4f8e-a8a4-f12d4ff5a17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf1ef10-ab08-4b13-b97c-19bec05db6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee263964-0e7a-4508-83f1-a34b3150129a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7309fb52-d11b-4162-b93c-2865afaa2442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fd7e2d-9682-443e-bacf-1787245def73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e2a2a6-b1cf-48ef-a3f3-95de11be418c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac88544-82d3-4b7d-b874-208804f3d842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd36e3c-361e-4e79-b1e1-3a48c5cf00e7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5d64cd-a74d-4e35-b256-6d980721f439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9eaf00-761c-4e88-a40e-58e8e237f7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72327236-05a8-41ee-84ca-99ccf21926f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64c416a-533a-48fc-946d-a8ff8e09d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ab7bc-bd80-48ea-a8f8-be88cb3de2df",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ae862-0091-4bd2-8de0-353470783a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677ff022-8765-44c1-91ca-4f6ccb19b964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd51759-ec8d-44de-9c23-ccc508ec5168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863c0e5c-a4b2-411b-8923-d9639c89e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4a03c5-b289-449e-8b1b-98622f4e80fb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0625666a-95ae-4b5c-b1d3-9e191762ba67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de39c1e-7ec2-4340-8218-69f67d6170af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003894e0-7862-4d94-93fa-8ca6af5c5d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d443ff-89e9-4bff-a862-dd6aa6e58b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d31032-8db7-470b-8cf7-3a4e8d5bb706",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0debf33-cc65-4616-9dd3-653fdbe74fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4290968-0b8b-45c8-8ba2-f7ba08272f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3657fa3-d613-4a48-bc04-4a7f4d72945a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbd7d8f-78b4-4ffe-8842-4f5988eecfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b0c95-c704-4b0b-a2e8-79f1be355f1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e2aaf-0d68-4b9d-b5fb-e2918943113e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a65fd6-2227-4968-978f-3577c0b73ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec6cde-86f6-493c-8b2c-b376f5020b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1930dbff-2cce-4621-9c3f-c32447f4a817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7351fe-3685-4911-a7f9-0a2083eb0124",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5288d469-d086-4763-8763-bc0d6bfbe598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "300632b3-1227-4818-906c-8e61eafcfa5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77322755-15cf-4bf7-a87d-8b475dbbfcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce8ba42-aaa8-4ee2-a4cd-d35b9d0cbc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33b3943-63d0-4c6e-8dd1-1335ce95951b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320fd510-fd7d-4230-b407-d9761c39bb84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ab7c3f-965e-4877-abb3-490d0b20d8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a6e83f-f9fc-4496-8ee0-a7d1d68e2837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7641e2f9-7c5a-47d0-902f-91961a5de04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7986bd2-c413-4b14-8ccd-ae15cc01a08c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba07433e-39fa-40b7-b2ca-48c38e7a4572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f624702-7f97-4084-a8f6-ca69ffeccabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d24010-1c91-4578-b360-8bf641d03d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893ea3cc-fa70-49c9-988a-284d0fd09eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd27aa0c-9def-4094-a303-95b91cd698c0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b1aaa4-42f7-4343-9cce-cf0e3d5e3197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ac92c7-9efe-422b-82bf-a8ad403f6d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253b6f0-49ab-43c3-aa03-df5a9da2b584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a734b131-1f37-497e-8967-e56b9989b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c006448-d847-4c81-891b-8bb351fa9044",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3387c95c-8f31-4d5c-b70c-a1dd43cfc1e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd6c302a-e033-444b-aa61-5f1cceadbfd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fca008b-4087-433a-a14d-2139e76627f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f852ec25-12ad-4f76-8654-9bd593f3c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43a82e4-086b-463e-a09e-169606c322ad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b60c720-f614-4be9-8f2a-fcd5dd948d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a8e933-dd54-4612-9785-e272cfae2a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f99005-aa26-4428-aaca-7e2638c1df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b750bb-aa98-476f-997c-6c4d5b6fc312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40a4fd0-50da-446e-afb5-285787aaec79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e102df7-5d3a-45b1-b88a-c65124c04f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241fe426-39ab-4ef8-a72b-5dc6490ea6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5e65d6-5bb7-4d28-8b1a-5510eca7f728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36116dc1-4f78-433f-943d-36bf83c6bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1635347e-f0c8-4835-8063-91c427072bca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a4c64-01d4-4246-b9cd-371e13b44d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1c353c-6929-467a-b891-0d84a333dd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4484122-7301-4c40-95f9-23c449e3db04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e42ef3-4942-4fb6-957f-f4cd1f950254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f843f96e-8809-4673-9fd7-057a5a9026f3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429653b-025d-4a4a-86a4-36784a3a8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f84384-eed0-46fa-8a56-e6a88842bb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5900f66-234a-4588-863a-c2f4ef8765e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba626df-9869-4580-abd5-d269792d3b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c15d635-ab95-4707-b338-b2d55edd4855",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bea7b7-bbca-4db6-a2fb-e3d38f85316b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aede636a-5139-4154-ab57-8f7115fd725e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec61d04d-edc6-49c4-858c-b1026765f18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aefd1a1-0d02-4628-80e8-b873eb1f32cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0188706-252a-4df5-869c-5339dfac9b81",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9da42fe-1d71-4170-9b34-2d0354ec0300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2100c321-9edf-4146-82f2-af50d0bdeadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346bf497-4fa6-447f-a9b4-e70673144c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32a15b4-6f47-4554-9be7-87d9f0ba1f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f698a-474e-480b-b9f8-bf260edc5dbb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7c46d8-30d7-490f-859b-adb0a3ce3bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1ecf34-0e07-4eaa-9621-02a2d85ee8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d250979d-7654-4898-802d-e59971b846ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330f5f6a-ff02-4539-b91d-72b9eda177fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e2aa3e-ca02-425d-abd9-1ea01992b7e8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac0e9d9-ea49-473e-b615-03b25c3b545e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f59516-775e-4c8d-b461-a2cb97916ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4886b997-90ea-4248-bdb5-425ca6ef2a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a588e7-d798-4e00-880a-c06737297b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05465bd2-6923-4737-a92c-7ade1047341f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75111df-664e-4670-b10e-482daa29b61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783051f9-b31d-4cc7-a54c-1237eabd3bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c563619e-3080-49df-a15b-eb595d06770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d5368b-825f-44f3-9f89-2b23ea849651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a93a9c-27c1-4e11-99f3-7225d8cec008",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745831dc-c510-4f87-a986-a2e179e28f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013f9cd4-acea-4923-b7a9-b7100c5ecc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b56034-882e-41af-aacd-767a38ceb102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb18e08-eda5-44b3-9b06-98e573d3aec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d805f5-d26d-47a0-9a9b-6cc20d47c222",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7238ad-ca40-4bdd-bc33-c9126d51b3bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e53fdd-cc16-4b07-878a-3316746e1454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa93d177-3d01-4159-92e2-7d9cdd9886a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b120b8-30d8-46db-8204-b326f57b189a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0989425d-cf48-4992-af10-d903a4c67b64",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c98b45b-07df-473c-b1b3-2ee694e92487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe8d2e0-d9a3-4a61-9cc7-ebdba9ca421a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed088d19-dbf1-4b80-9ebe-9ce0a77d1597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ede8ec8-afe3-4234-bf07-047feb4d50f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fc315c-f0b6-42d0-9818-6dd7639c094c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11193f0-0ae1-4faa-8084-938c2d017809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b712b14-90ef-4621-a030-96d7198be032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7ac6c5-8307-4e2f-bd7e-206db4d89e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a987dab-32a4-41c5-b1e5-5da5c6b2fb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e10b88e-83c2-4de9-af78-3b91022d3d50",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024b79c1-1942-4b22-bdf4-56b3370cf71f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb42098-c7b5-4c55-ba99-4bfa9166a168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beaf1d4-7248-4b31-a82d-6e3ddc5ff8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6800bc-ef5e-4a7e-88c4-a14f5bbbf122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0c33ed-da90-4285-8d9c-b6520d43f183",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec2ed1e-ee30-4d33-aa5a-8c1fb497aa7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cccfaf-faab-42be-bb17-6e0778378c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03daa70e-cbe2-44ee-a55e-07667f396ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff437af-1f87-4db6-b4d0-db63506cd10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a5225-d09c-40ce-8118-b801cd2d4320",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918c7390-fc0b-4f4a-bfb6-277c6040a924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14ed0ea-6c1d-4cb5-ab0b-45b28b55e381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92c79a9-2188-45b8-bd47-d3853cb4f457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2799962f-98fb-48fa-9dae-caa7614faae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24caf1cd-a802-46be-82e4-16bae53a89b7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8525287c-1c44-4c19-b351-bb5549fe217b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9582ba0-8285-4ba2-bed7-afefb8c1280f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae74de61-a898-4b97-becb-4d18b66ec1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c663e290-4160-4158-a3d8-db5dde282b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e53298a-ca89-4032-988a-f74300ce195a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6a69d9-8f73-49f6-877b-75debc04b40c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e399b1b4-008e-4c03-ac19-2d5914e537a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7327f3ff-dc33-405e-aedb-d4086f89c054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58599993-2714-4493-945d-4c801fdcdbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b02b0b5-3ed0-4b78-bfc7-02fecea0be24",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6382321d-dc8e-40eb-99f4-c3464245b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7f4036-d91b-4846-9307-81e0e8d8ad49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a4492a-fcbe-4609-abef-0c6c1d63ee86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1e96de-008c-48a6-807b-42ea80d0ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa293df-a13b-4d0c-a6c8-042b7ce4e52e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f5e657-c10b-4d09-a0b7-db1ce30bae77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a96f80-71d0-4f17-832b-4cb49e06539f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a39163-711d-4831-b308-776ab7f80872",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f509cf-0973-42ed-8100-1ebe44569926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa551c71-0c6f-4afb-aa44-d8c6e5481f6e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0ce105-bf76-42ae-b12c-b3ee9c21c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0d6204-322b-47b0-871c-02026655ec90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5495892f-62ae-4523-bf23-1114af322253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035f926a-ae66-4b01-b5e1-3dbb180d1745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f4fd4f-cfc1-47c3-b6ff-6cb72107b9cf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c3b8a6-4767-443a-8d4a-e1aeaa5635a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec70b4cd-1d8c-4dff-a455-7078f9152dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fe91b6-a84d-4607-b892-3e9d10319314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73079ace-4616-4e56-a448-5b30a7fd91f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53365d7-36c1-49fd-a081-3953d9c35d65",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50d8007-8311-47d1-90c7-0b16ffead977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5550ec13-541f-40bd-a2d8-0a492b292789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c4e8d4-00ea-4838-ad6e-9d6ca8c20066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559763eb-b633-4e6a-b722-469d37d834c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a187d821-ec29-4853-9469-005ad6f8f6da",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3508aa3-e888-474a-9f2b-c0a208a98dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b293c75f-4fca-4113-8140-f31091821ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d7c873-562c-4f24-a5fe-206bd2ffa8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695aabe3-34b0-416f-adcc-09c7ccc4708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76baceed-e3a4-42c8-83ed-3028cd86325a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895cfd2c-621d-43a6-bb98-80422b850147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d78e3af-9833-4843-8395-0f2d65c00eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331af3d3-db7a-4115-a759-044f85c7fcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5a5720-4f04-4d92-99c4-8d7c4d8942a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905054fa-eae5-47b1-bd41-9a8110ebf355",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed1677d-6ac8-4b69-a47e-aad9f7719492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5132e844-8439-4116-b5b6-a2e42fe00bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa9e41a-f890-469b-80f1-3d126ad05c01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3747dd70-7609-4519-8b20-d334b0e873e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828ecbc-ea45-4aac-b233-e7847e07836e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ff87ed-e2da-4370-9fa0-600d45fda74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7ceb03-4386-432b-81d7-2e9e300aa8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e69a52-a8b9-4253-8f4e-fb0e092a3df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f15e30-a264-49c9-8b90-b140aa45cc37"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f1b028b-6f16-4fca-9928-0a85e54a3ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d384b1d4-ceb5-42a9-8a85-c40ee3df5079"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dbf01d3-93f4-4b29-b311-e2928bb588b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1df3fb7d-e1fb-4962-b43a-e2843ea16c58"
                    }
                  }
                ]
              },
              {
                "id": "5b049b0e-b805-4e33-b539-27e14bab15dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "441fb6f5-120d-439c-b1f4-b8ca466757e8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a82c0e-fa94-4d7f-9cd4-1e97cb2d7039",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d2c1f870-0428-4aba-8e9b-25f3329c2f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d71e52-a296-4dd3-9335-801e01ddc6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ac0b924-c17e-4fd9-b272-50ad1b4e8395"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9eaadbf-8930-4c65-9c0d-c33ab0c861d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de875559-6ccf-42ea-add0-0a036f65010b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e480341-5165-40be-b3a5-df2b88e34212",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c81b67-d50f-40f4-ae9e-6422e4d42058"
                    }
                  }
                ]
              },
              {
                "id": "b33ed67d-5531-42c8-b81c-9b8a07132aee",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b8e83662-e3ed-474d-a34d-39b18f74f060",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0d5c77-6dff-49a6-8817-d9bb4c84b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "55101463-7f81-46cb-8194-d514f2d4e47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc63410c-0e13-4c13-b26a-91cfaac132ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2082f4ea-96d0-4f6d-bc3e-bdcbd70d2750"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae1176a8-a772-46a2-80f7-1511d5184708",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac223387-03c5-4a52-b8d9-1d99e52421dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe2b43c6-e55c-4e61-bf02-1dba64ef9399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32be1923-d0ac-4ebb-ad5a-acb0cf3cb020"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38b4eda5-697f-4550-9ddb-2e8686326a32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f488ac07-3620-4a32-bacf-971b9784ce17"
                    }
                  }
                ]
              },
              {
                "id": "887df2ed-db0b-42e4-86e9-7ea4b5b0e568",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f2110c-61b5-49d2-bb78-840ac8d9f9b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea19a066-9d4a-4a4f-b74f-a3219a21e6c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a0743a4-2ad0-454e-af34-b993383050a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c99fa2-fe12-40a9-b5b8-29b62dfa0193"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a81c0347-a09b-462d-8dab-29b5ed144474",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9669a5ca-1666-4cc0-980f-542a1d059f0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbb7f0f4-6b73-4eb1-a12f-7344a0c3d468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbdbcf02-9170-4f7a-a0dc-d16074b83595"
            }
          }
        ]
      },
      {
        "id": "3eea8cf9-fb34-4376-8e7a-347b2866ea75",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7da66adb-726a-4fc2-b5af-091437a39794",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51ae330a-fe44-470d-bc57-9af77b1b1043",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a040a1d-8041-4d87-b18a-ca51d054b739",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef78ecc5-1c8d-4ee1-8ed0-23f9cd7efd37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "da076c3d-3677-4c08-b3c1-83688c44d5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b372a-ba8f-42e2-a663-8c8181124ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d343a9-892a-4bad-a2c9-06853574b560"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df6006f6-1ccd-472a-aa08-4015b884283b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8e5965c-cb4a-4a2a-986d-77c431c5182b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0c08761-d6e6-4b25-ac88-73f4bc6184a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "040d83e5-1f77-4ac0-9dbf-efe4a138c6f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9f6d591-388a-4a63-babf-88590b9d4c0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a2cac48-4f42-44a0-8232-5eddcb43eae4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbb8db8e-b892-484c-b5f5-e80c09523cba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a3dc075-347f-4f16-875d-5df716a720be"
            }
          }
        ]
      },
      {
        "id": "dc3b1c79-a6af-4042-b6e3-5cac850b3f02",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "675479f1-9c14-4aca-a072-35284b991049",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fdfbf87-1bae-4233-87a5-b7221cb8b362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02e6041e-9e76-434c-942b-d6709f8a9f45",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496fb1e4-cdd0-42b9-8902-c79df46f11ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85918704-b842-40af-9839-e6f33fcb9da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b495a9-242f-4684-8b70-e331ebbcb177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "193b4868-211a-4228-80b4-de62e386d27a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "826296ec-f7dd-419e-99fe-213f7904e0bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb95b1bf-f8da-4ff5-9871-90905e23ead1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c2bc751-fdd6-49e2-afc5-f5a7125c76b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd9e8e25-7e74-40a4-8ab4-2800ac17fe99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51416a78-7b8e-4ff7-9dc7-6c1406a41602",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd2d0dce-b298-4cf7-8cd1-5fa5df121f26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74520ee2-5686-4a36-b7bb-cf32a96b921c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e4ec1d2-5f20-45ae-9002-0f33c1b99731"
            }
          }
        ]
      },
      {
        "id": "7ac1282e-ed91-4f4e-b51d-eb22a2248417",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "656e426a-5438-449c-bada-adc42065f746",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df03c799-b1aa-4565-a473-aae1cc2f56be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14ee16d1-1802-4ca6-92d8-9755a160fe51",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c62f6-f182-404b-936a-18ac514d9e3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "873c383a-df81-493e-8b7e-c554934db968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee85e59-b843-4dfa-a36f-8044cae95431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e24872-e5ed-4ada-9e78-9381f1f1cfd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb3573e7-9352-4434-82ac-618f7fc12f1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6351097-42da-472c-b341-b7ee904971a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "705b608b-a6d5-4394-98fd-45144909500e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54dd793d-7000-4175-bc7a-ba590a6370d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "271523fd-953d-4488-8edb-f9356986d521",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5013c51a-f201-42f7-aed1-407afa374952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a229c5c0-685f-42f4-b8a8-30714634fe88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a04ddfd-8f77-42eb-b12c-5d6953ab0039"
            }
          }
        ]
      },
      {
        "id": "5e358dd4-bb34-420e-8301-4a1278853fb6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3823f2b0-018f-44c1-ac90-6efd12a0a023",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15b32fd4-65d7-499c-9411-2a4c833d7c6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e7d6ae08-3476-46c4-8ae8-dc693fbdc60e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5ee0b05-7fb1-4a40-b61b-3be4651d6b0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50dce34e-a120-4383-b38a-02ec686657ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.4070175438596,
      "responseMin": 7,
      "responseMax": 8194,
      "responseSd": 621.315623907977,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706661262831,
      "completed": 1706661308824
    },
    "executions": [
      {
        "id": "d175c710-b679-4be9-b040-75e290f7c4e4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0fbe836b-cef0-47ed-ab0c-0479f3768b05",
          "httpRequestId": "84908be1-1cff-45e2-9a17-2dfe5215d325"
        },
        "item": {
          "id": "d175c710-b679-4be9-b040-75e290f7c4e4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "821f33f8-0538-4310-b970-034823843509",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "13ce1eea-7f5e-4de1-ab8e-82018ad824b3",
        "cursor": {
          "ref": "b10c4c1e-4b39-4052-b3b5-65e78a9587c5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3018242b-185a-4665-85e8-59295be44137"
        },
        "item": {
          "id": "13ce1eea-7f5e-4de1-ab8e-82018ad824b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "92c72c6e-b67f-4a0d-9a39-6d260cd2210c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6f4f2af0-5927-4a84-b60f-b25e5e9160b3",
        "cursor": {
          "ref": "4e1d90f3-0741-4aaa-b9e2-ae0db28810ba",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "11c2f738-0b63-4e55-8fb1-6feeff000458"
        },
        "item": {
          "id": "6f4f2af0-5927-4a84-b60f-b25e5e9160b3",
          "name": "did_json"
        },
        "response": {
          "id": "a50e7222-5697-4f92-8a94-58ace9d2e623",
          "status": "OK",
          "code": 200,
          "responseTime": 457,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fe829b-e0e4-4f51-bd50-a32616731ad5",
        "cursor": {
          "ref": "f91089d3-e7a3-4bb7-8eec-b2f7de08630a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0fccfc8c-1543-4c63-807d-bfcdd62c1b1f"
        },
        "item": {
          "id": "81fe829b-e0e4-4f51-bd50-a32616731ad5",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d74e19f-6e2b-43d7-9055-dd5cb85b5f02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1373,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fe829b-e0e4-4f51-bd50-a32616731ad5",
        "cursor": {
          "ref": "f91089d3-e7a3-4bb7-8eec-b2f7de08630a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0fccfc8c-1543-4c63-807d-bfcdd62c1b1f"
        },
        "item": {
          "id": "81fe829b-e0e4-4f51-bd50-a32616731ad5",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d74e19f-6e2b-43d7-9055-dd5cb85b5f02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1373,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c55fd-e6ee-4769-92db-34424474b76a",
        "cursor": {
          "ref": "52311b4f-6e19-4e3d-aaa6-2534dbc1c6aa",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "443ea56f-b7be-4850-8fd2-d5beb576dff0"
        },
        "item": {
          "id": "949c55fd-e6ee-4769-92db-34424474b76a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ab25c143-9f4b-4c27-afa9-bb5a87586023",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6802ee83-0441-4583-bda4-a33688299539",
        "cursor": {
          "ref": "363f7272-8bc4-430d-8f67-60a86c224b1d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "da4d6293-e5bb-4c6d-a660-dba6341f6711"
        },
        "item": {
          "id": "6802ee83-0441-4583-bda4-a33688299539",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b00c8686-3ad1-4685-b4cb-ca00598d8c05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa83ca-f5e9-44af-a6d4-e5a9506584f1",
        "cursor": {
          "ref": "138fb21f-2f42-452c-a100-22a64e6bac1e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f049c2ea-e47d-44f7-a178-a40c608288da"
        },
        "item": {
          "id": "edfa83ca-f5e9-44af-a6d4-e5a9506584f1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cbed22b-76a2-4c12-9947-8b39dabe85b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30afbfa-db88-4f1e-bced-fecda8a67653",
        "cursor": {
          "ref": "6698739a-75e2-4ec1-8d64-b97dad6aee88",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4b0123e-63ad-4a58-998b-b05b09e13b3c"
        },
        "item": {
          "id": "b30afbfa-db88-4f1e-bced-fecda8a67653",
          "name": "identifiers"
        },
        "response": {
          "id": "49c14b87-c830-4764-b1db-022247d82673",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fdcb66-36c7-4249-839c-efb7791f5edd",
        "cursor": {
          "ref": "5b93096b-e35a-4900-8dc7-39e43bb81334",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e56368a3-c38c-4c10-adcb-3c079adcf6ef"
        },
        "item": {
          "id": "75fdcb66-36c7-4249-839c-efb7791f5edd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "736a303f-fa8e-4819-8148-2a103c560a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caa84cd-6e0b-4856-ae1e-ae6c1afe85f4",
        "cursor": {
          "ref": "af6ab999-8c30-4561-8301-a4ba1644fe49",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ccaca662-7d74-43b8-80d2-9fa2d1d0b081"
        },
        "item": {
          "id": "1caa84cd-6e0b-4856-ae1e-ae6c1afe85f4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2ab18f0-1911-4fc2-af8c-810986557b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d650308-237a-40e6-912c-b18053f6d42c",
        "cursor": {
          "ref": "c0e24d36-2506-4db2-8057-5e84795ce6d8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5e491f7d-ca2a-466f-b55c-1cd54567a690"
        },
        "item": {
          "id": "9d650308-237a-40e6-912c-b18053f6d42c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c1e9e515-1083-4cd6-8aab-1626d754d5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3b9063-99f2-472d-b7b1-ceabc725ea1d",
        "cursor": {
          "ref": "ca589702-5bbe-404f-a594-1f5c531486f4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "132ad722-f584-4637-93a3-9d4df79b5ed8"
        },
        "item": {
          "id": "0b3b9063-99f2-472d-b7b1-ceabc725ea1d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "99637351-9cf8-47ae-8c0d-ed1efcaedc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43004f8b-ddb4-436b-99a3-dd17b2dec57d",
        "cursor": {
          "ref": "59de9076-966a-41bb-bf94-03d39c2acb83",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "18477bd2-36fb-4a55-978e-9b8382430bd4"
        },
        "item": {
          "id": "43004f8b-ddb4-436b-99a3-dd17b2dec57d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9cd9f63c-e781-4f0d-a151-0e29f09712ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9183f833-6cbf-4121-9011-c62783e3c7f4",
        "cursor": {
          "ref": "eaee4053-b556-419a-b5a7-82827b440bcc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "22da4f89-0364-448a-a978-f23ca235e64b"
        },
        "item": {
          "id": "9183f833-6cbf-4121-9011-c62783e3c7f4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e6e6c022-400f-4f5e-9a44-d206e780570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f02bef-1cc3-4244-be56-d203be35fa89",
        "cursor": {
          "ref": "3d4f7b1c-93c5-4d1f-983b-3ba3ee1818a4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "76ada22a-7f0c-4a47-8581-e22da7c31cd0"
        },
        "item": {
          "id": "c7f02bef-1cc3-4244-be56-d203be35fa89",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "39f23b41-f69f-46c4-a729-32dbc5b2b322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053fc7cf-b426-49a6-8d65-c873a425a126",
        "cursor": {
          "ref": "34479e1a-afe6-4c65-a5eb-a5a18bdd1b25",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "514f2bf6-cd6e-402b-9aff-126061256e24"
        },
        "item": {
          "id": "053fc7cf-b426-49a6-8d65-c873a425a126",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "747605a0-9b28-4d74-af4c-5c6a5b40610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051f48c7-32f6-43ee-911b-f0feef7733ed",
        "cursor": {
          "ref": "7b3697a7-501b-40cd-b207-53621f9976c5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc3d70c8-52f5-4a82-be47-5fb2d841a86a"
        },
        "item": {
          "id": "051f48c7-32f6-43ee-911b-f0feef7733ed",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "38882856-554c-4400-89a5-16f357802a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be86a5b5-518c-414a-b971-b4ad35adfef3",
        "cursor": {
          "ref": "ebc01e64-c133-4a7c-9d92-697ec0cfdf83",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b5ab3ec-502f-4b72-94f4-4c91da634f77"
        },
        "item": {
          "id": "be86a5b5-518c-414a-b971-b4ad35adfef3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5c66c35f-b60a-4e00-8316-5ef79035c98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c943d3-e2e0-4519-9969-b21bee21823e",
        "cursor": {
          "ref": "42d2c381-2b57-4d67-8c18-42dd5f0ca93f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4466e566-7d8d-4cd5-944b-21d65aed714b"
        },
        "item": {
          "id": "b0c943d3-e2e0-4519-9969-b21bee21823e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "05bb55da-a1c1-4044-97c7-da9dd0b2e865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028ec3cc-3089-448e-a6b8-c2b5b743a638",
        "cursor": {
          "ref": "c3b7ad22-0760-4478-89d5-3f8804842420",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b1192409-4742-4f87-b28d-86d72309de58"
        },
        "item": {
          "id": "028ec3cc-3089-448e-a6b8-c2b5b743a638",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2abea842-6b64-4aec-9558-af46d664a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c4d585-68a5-498b-b944-aba0e1f93a04",
        "cursor": {
          "ref": "45624671-0b2c-41d1-80dd-3d75f80bd8ff",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "74b5f041-469f-4dd7-bbab-f35820fdc658"
        },
        "item": {
          "id": "a3c4d585-68a5-498b-b944-aba0e1f93a04",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9e45aff5-6ac2-4659-84dc-d6c851989178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1411192-8f9b-482c-8374-1000d2199c74",
        "cursor": {
          "ref": "07084d99-003b-453a-a7ac-d6151fa65d26",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d28ad3ff-1d0f-4787-aaa2-25ef699e5cda"
        },
        "item": {
          "id": "a1411192-8f9b-482c-8374-1000d2199c74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b446cd71-1a97-4549-b1e9-c4a5620e6a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827d58ae-32cf-47e4-8a16-8dbbb98fa30a",
        "cursor": {
          "ref": "07da40a1-0f8a-41fa-b76a-ed4efb933c72",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e8612aef-4081-4de9-9927-175e052df15f"
        },
        "item": {
          "id": "827d58ae-32cf-47e4-8a16-8dbbb98fa30a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "63008616-18c0-4732-b536-04f63d0c029d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c74827-69a9-47c7-bf7f-1083dcc7493e",
        "cursor": {
          "ref": "d2938801-df92-4b66-957f-5deeca12bdfc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "408d148f-0150-4747-a26f-f37a5725aa1f"
        },
        "item": {
          "id": "20c74827-69a9-47c7-bf7f-1083dcc7493e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "886573d5-b1c5-4632-9542-75b9353ed414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a73d751-e87f-40fb-a0ec-b97721e69d17",
        "cursor": {
          "ref": "3c409f5e-9b3c-4aee-a006-511b5db84b34",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2fefabee-d82e-41fb-ade1-0e41b7e2be93"
        },
        "item": {
          "id": "4a73d751-e87f-40fb-a0ec-b97721e69d17",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "75a70617-0eaf-4581-8f54-a2147483d7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca7a7d-e4db-4105-bc7f-8e9fb52a0523",
        "cursor": {
          "ref": "a99b54c6-745f-4ea5-b03c-ebce877d4396",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e239fdbb-ad24-40ad-b063-8cc119c63675"
        },
        "item": {
          "id": "faca7a7d-e4db-4105-bc7f-8e9fb52a0523",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "65eb3414-b0dd-4ce7-97cf-68d128c8aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489484a6-55a8-4067-8639-70fa094ecdae",
        "cursor": {
          "ref": "61e7abd6-bb7a-46ff-9533-62e6c20bbc67",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "17f8e907-b36f-47dd-b5d6-38b58a13a30e"
        },
        "item": {
          "id": "489484a6-55a8-4067-8639-70fa094ecdae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2f0a0dcc-a88b-43d5-9902-592943a69492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b19b8-b918-41c1-95b3-714be3106a03",
        "cursor": {
          "ref": "0455c195-2b06-495e-b245-0cb4820f6ec4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2aee74c0-3e9e-4cab-8181-9273f2fa7ba7"
        },
        "item": {
          "id": "ad2b19b8-b918-41c1-95b3-714be3106a03",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1d70f51f-c3d9-459e-886e-f4e8425ac72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13c2c29-05e8-47e2-b352-9a1f2325d4cf",
        "cursor": {
          "ref": "42c93090-4009-4bde-8073-96060509a7bc",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae518633-283e-4e04-9421-46bc58ceb9cf"
        },
        "item": {
          "id": "c13c2c29-05e8-47e2-b352-9a1f2325d4cf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f2bbfc1-daae-423b-8e4e-2a1ea15123dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacb8fee-71b7-400a-b1c6-c1e008383917",
        "cursor": {
          "ref": "6aa44ec8-71d1-43ec-9ba5-6dd54b6c7cc5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ea5b9b6c-61ee-4c7a-8ada-7691194d9943"
        },
        "item": {
          "id": "aacb8fee-71b7-400a-b1c6-c1e008383917",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "516137da-af92-48a9-a8de-13b1986eecf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f4518-f29c-454c-9b99-b547107de262",
        "cursor": {
          "ref": "05a1e0bd-16f4-49f8-9953-a131db6c5ace",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f435c417-197c-4021-828b-303a8da1ce8c"
        },
        "item": {
          "id": "803f4518-f29c-454c-9b99-b547107de262",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9ef2607c-c98b-4e55-a8fd-a9370f1674f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50623d0-30f1-44e7-8e20-e0a813757aee",
        "cursor": {
          "ref": "6e5ef141-e6b6-45d3-a77e-9bb6bffd368e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "90884b41-58ad-499d-a7af-d260dee8023c"
        },
        "item": {
          "id": "b50623d0-30f1-44e7-8e20-e0a813757aee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "592ca39d-23e8-46cb-b6d7-59b9b1dcc2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c3c3f3-07b4-4cf0-aa1f-2b1ff70b7a60",
        "cursor": {
          "ref": "47bd92d2-8214-48ba-8d9f-a7948f948baa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "668abb0e-e3f7-42d5-b5cc-47dba29bacc6"
        },
        "item": {
          "id": "a3c3c3f3-07b4-4cf0-aa1f-2b1ff70b7a60",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9168d0b4-3c64-4da6-8f34-14ecac1a567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0481e872-f291-4608-8830-b78d4a8e449f",
        "cursor": {
          "ref": "dbb86b2a-e597-4b88-a5f8-c876f07bb0c0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee223962-1cc4-4f1f-a301-24bdfb69f996"
        },
        "item": {
          "id": "0481e872-f291-4608-8830-b78d4a8e449f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "abcf2a72-c9f3-4f7d-9730-5e97958973e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a6c615-b916-4e20-b67f-61889bbe94a7",
        "cursor": {
          "ref": "911f900d-0a99-4e6b-9927-60c0a9053fa2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e3fed935-1fa9-4625-a858-8696b56fcb88"
        },
        "item": {
          "id": "f9a6c615-b916-4e20-b67f-61889bbe94a7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3877d858-7619-404c-8dee-f8be2224f71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75152a33-1390-4d31-9edf-2f22008df51a",
        "cursor": {
          "ref": "7a785071-e917-4404-af86-11de28744c64",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5d3bcaec-1495-4d5e-8bd0-d3d62bda5037"
        },
        "item": {
          "id": "75152a33-1390-4d31-9edf-2f22008df51a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "163989d6-f22a-4220-a3a8-778ab0bff9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba71b6-0be3-432a-acb8-9ed90d8a0b25",
        "cursor": {
          "ref": "c7d5f1c8-3b5d-4f7b-b9ac-8a6d0ce18aa1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9744a402-fba0-4157-92c2-67ae32cd2c43"
        },
        "item": {
          "id": "d4ba71b6-0be3-432a-acb8-9ed90d8a0b25",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3bafc501-0b78-4be5-90e2-381420d94a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a14e138-ffe5-49ca-aee1-848d7328686e",
        "cursor": {
          "ref": "de5f2f6f-6b6c-45f2-9412-184adc361b4b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "680790ea-f94a-45e2-acd2-edea187cb88d"
        },
        "item": {
          "id": "8a14e138-ffe5-49ca-aee1-848d7328686e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "549680f9-0d05-4cb5-ae69-07a257a65387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377eeb48-2fcf-4d0d-8bfb-cbe9dc543783",
        "cursor": {
          "ref": "225a7344-ac9d-460b-b172-61333504af45",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b5b17b0e-81d7-4915-8fed-435e53777184"
        },
        "item": {
          "id": "377eeb48-2fcf-4d0d-8bfb-cbe9dc543783",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d19fb7bd-57d8-4e83-bf6d-c81c45a06758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c6ee5-2a8c-4db8-bba5-31f2de9020e9",
        "cursor": {
          "ref": "9476d5a3-9e3d-40dc-a663-57752dd5c832",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e14bf9bd-cbee-4728-b898-aecc39e9041e"
        },
        "item": {
          "id": "b66c6ee5-2a8c-4db8-bba5-31f2de9020e9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f45d48e-c4ae-4c9b-b8d9-df366c15fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997f31f2-24ba-4589-9576-df564c63ecbf",
        "cursor": {
          "ref": "43462b25-ae56-44bb-8f13-b9774a313d88",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "df2fa58b-2254-4cab-98da-12eae6604c43"
        },
        "item": {
          "id": "997f31f2-24ba-4589-9576-df564c63ecbf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "808538b8-afb1-4b18-b7dd-c4f43b32c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648f4a34-ce5f-41ca-bb22-3dcb39fc4983",
        "cursor": {
          "ref": "12209eba-0e78-498c-9969-294a4a0f91c3",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4e6d0872-2213-4926-a02b-f8e7a9f05d15"
        },
        "item": {
          "id": "648f4a34-ce5f-41ca-bb22-3dcb39fc4983",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eca48417-7748-44be-8588-84b5a8e1c929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a3d64-4e42-42c5-b822-a3e27467af9e",
        "cursor": {
          "ref": "d1d5e7af-2f55-48b3-aa48-9e01ce5a0813",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3f02bdf0-6464-4146-a6c2-d594d907d0f0"
        },
        "item": {
          "id": "802a3d64-4e42-42c5-b822-a3e27467af9e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3cb4d519-47f7-4035-8933-f870f5333b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005124e3-a53a-429e-a439-16575c1a9e2f",
        "cursor": {
          "ref": "58e81a73-e593-4f51-8013-acd3dc8d5026",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6eeba68-7921-4cc6-a0cb-6ac4b9af4153"
        },
        "item": {
          "id": "005124e3-a53a-429e-a439-16575c1a9e2f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8047c871-b317-4623-a355-3622efaa2e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3fb0c-03d0-47a1-95c7-6b79564bd6d4",
        "cursor": {
          "ref": "511a05eb-9cdc-436b-9e40-9ec81ea5ca8e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "96f52b94-69b5-4d92-ac63-be0088437229"
        },
        "item": {
          "id": "3ab3fb0c-03d0-47a1-95c7-6b79564bd6d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5baa915d-1f8c-4249-8f57-d61c3bf8129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcdbfa3-4906-4b91-8622-bf728ebd7fb8",
        "cursor": {
          "ref": "3105015d-dc29-4626-aa87-efca608a5859",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5535f784-0aa2-405d-9f36-f4344bdcdc78"
        },
        "item": {
          "id": "dfcdbfa3-4906-4b91-8622-bf728ebd7fb8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "28903570-4762-474b-ba16-de98d223c50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3159449e-d8bb-465d-a1f4-c57ca10d5a20",
        "cursor": {
          "ref": "f2d58724-3f1c-4a71-8417-0876e9145670",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f0d6dac3-b578-469a-a975-318dc0a1ee3d"
        },
        "item": {
          "id": "3159449e-d8bb-465d-a1f4-c57ca10d5a20",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "969b87aa-773d-4322-be8d-9801c9f467e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a888e0-9879-453d-a333-7bd2597ea67d",
        "cursor": {
          "ref": "a47e293a-3069-44bd-bda7-38acb7718756",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed94f182-abd2-4904-865f-b1e1071d0a05"
        },
        "item": {
          "id": "61a888e0-9879-453d-a333-7bd2597ea67d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8839cdb8-0730-479f-ad98-22eef7eb0729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491b7c75-3bf3-4a45-b12a-9dc85ca0f28d",
        "cursor": {
          "ref": "b3f2c45e-7ce8-4421-985a-066a9f086384",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "44a45444-e725-4822-b802-52a8ca510c0c"
        },
        "item": {
          "id": "491b7c75-3bf3-4a45-b12a-9dc85ca0f28d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aacea3c8-d7b1-409e-a52d-9c55b2281c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce916c69-f033-494e-908e-b6210e2ef696",
        "cursor": {
          "ref": "8d07f3e2-7bd3-4ed2-a673-54a86cd73cf9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f5148f1e-5afe-4e0f-bdf5-d8364191b317"
        },
        "item": {
          "id": "ce916c69-f033-494e-908e-b6210e2ef696",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4f3ffb6c-7051-4b86-8713-21a1344d98a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b886c2a8-ac95-465a-86cb-e707b81efe81",
        "cursor": {
          "ref": "c0a9c282-9a90-4684-97c7-dad8d21029a7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "37a57e33-ef19-4926-8c3e-c10bb50ceeb8"
        },
        "item": {
          "id": "b886c2a8-ac95-465a-86cb-e707b81efe81",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9674221c-8d30-4743-b91b-0ad70ff3aa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7c3a5f-f81f-46a8-b59f-8d8a888dabc7",
        "cursor": {
          "ref": "d0caa5fd-5cbd-47dd-a46a-2f813b15f344",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6aed67b4-5ade-4285-8908-a426c837d0a6"
        },
        "item": {
          "id": "ab7c3a5f-f81f-46a8-b59f-8d8a888dabc7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2352c392-3a27-40c6-8267-38a3ce155059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed4ea0-a614-4008-bef0-3b922c8a4bd9",
        "cursor": {
          "ref": "34dc53d5-180a-47ed-bd94-b6e971a7a4c4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "609feca3-28e0-4c77-89f1-e3be0918a986"
        },
        "item": {
          "id": "12ed4ea0-a614-4008-bef0-3b922c8a4bd9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "11f5818c-a0b7-4dd4-9ddb-406f4ef672a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3937cdc8-9f7b-466f-8a1b-4ae7d8a6fbca",
        "cursor": {
          "ref": "6229052f-7c9c-4401-aa92-abdbf10182ab",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "91584183-6ec1-4d81-97a3-6aadf25bfbc8"
        },
        "item": {
          "id": "3937cdc8-9f7b-466f-8a1b-4ae7d8a6fbca",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "517fab3e-bf1a-4ff2-99d7-a6d11c5b2aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c3818e-c59c-46b5-9277-d1d4eb905dab",
        "cursor": {
          "ref": "d2fbe4ca-88fd-4b5e-8966-00d26505700d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4874c6e5-ca7a-4fcb-84f3-314e20630cea"
        },
        "item": {
          "id": "87c3818e-c59c-46b5-9277-d1d4eb905dab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3416e09d-ba74-4383-ba28-228bdbeabe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a61f513-c8f6-468e-8631-2224af93b36b",
        "cursor": {
          "ref": "a5be0a34-a5bf-48af-99f1-4ad17ef8bc42",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "05313251-c060-4121-b29c-77bf4619c777"
        },
        "item": {
          "id": "0a61f513-c8f6-468e-8631-2224af93b36b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "04187d99-326f-492d-bb94-6908bd2d42db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5df2b5-dc97-4569-9cdc-6bf7db3dba22",
        "cursor": {
          "ref": "f0c651a4-2910-45a3-8d3a-3d1438ab1025",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "acbcf62c-f0f3-42f5-a419-e4cc645cf401"
        },
        "item": {
          "id": "8a5df2b5-dc97-4569-9cdc-6bf7db3dba22",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7bca4f67-d87b-4c5e-940d-cb1645b325a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b5cafd-f021-4fe3-9c07-81085f328a1d",
        "cursor": {
          "ref": "6797fcc3-8c50-4112-8923-1fbcc5241752",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c7d259a4-d7ba-45ab-a2e3-bc412f9e4d53"
        },
        "item": {
          "id": "b5b5cafd-f021-4fe3-9c07-81085f328a1d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c03a79c-20e9-4465-8923-d7aab132188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b03ea-b928-46fa-8efc-cd89272f594c",
        "cursor": {
          "ref": "daf0bd3e-4f88-4f0e-aa48-74b9cabfca10",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e521f445-a313-495f-aae9-9bcc1ae013d5"
        },
        "item": {
          "id": "4e1b03ea-b928-46fa-8efc-cd89272f594c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "879837f8-2c86-4283-9f97-141575a81c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3527a3-6b9c-4dc3-b35a-91f0c74ba18a",
        "cursor": {
          "ref": "df20157b-2f26-41c5-9234-c4a63af1a560",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a24b7e2b-9cac-4db3-ad1d-988c0b27990b"
        },
        "item": {
          "id": "9d3527a3-6b9c-4dc3-b35a-91f0c74ba18a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f9a4c45-6be5-4b62-9ffa-5c6298c40783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eac03db-ba78-4177-b90c-b0774efd4540",
        "cursor": {
          "ref": "d9bff54e-dca3-476d-8a75-3b74fd62a62c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5edb795c-8bcf-498c-b85d-275f44492d27"
        },
        "item": {
          "id": "1eac03db-ba78-4177-b90c-b0774efd4540",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ef679a02-5533-4910-996e-738fcbe64193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a4987c-a544-41fa-8e82-bbcdd3b857e1",
        "cursor": {
          "ref": "c1aef3d4-67c5-4dcb-9796-fad80c4dac13",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0bb4fb74-cb1e-4ab4-a1d1-9468014484fe"
        },
        "item": {
          "id": "56a4987c-a544-41fa-8e82-bbcdd3b857e1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e85342f2-4a7d-4522-8c7a-59a11df8578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb5b13c-ac3a-4d6c-92a8-3711b112f679",
        "cursor": {
          "ref": "f5c2892c-5d6a-4709-b31f-66e5b3818d2d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15cde49f-8811-4e48-954d-424448075a32"
        },
        "item": {
          "id": "5cb5b13c-ac3a-4d6c-92a8-3711b112f679",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "50ea2493-8e2a-40c2-a90c-6bace852e231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f14409-f8cc-4e09-bad3-a9445206dee8",
        "cursor": {
          "ref": "6fcca6a6-761a-4b25-a923-501d177a0c50",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed7a78a0-5c77-4f53-a53a-2482535a5fdd"
        },
        "item": {
          "id": "a9f14409-f8cc-4e09-bad3-a9445206dee8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7c0e684e-99f1-4756-8d52-e4d7e701e0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4de561-be21-40be-a747-e3b53d83ad46",
        "cursor": {
          "ref": "745602cf-9335-426a-8b31-573ceba7f3da",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6d59ebda-6fb5-4a98-9492-d479019c19e1"
        },
        "item": {
          "id": "ca4de561-be21-40be-a747-e3b53d83ad46",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "17b8b810-bc5a-49c9-a5ab-57986f730c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1d36c7-3b3f-43c2-9bb7-80484ec615b2",
        "cursor": {
          "ref": "0ad0a123-e427-4f5f-9bb0-2a37c093ebf9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9ab09a06-21e4-4844-9e04-f8b8303ca70d"
        },
        "item": {
          "id": "eb1d36c7-3b3f-43c2-9bb7-80484ec615b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b508f5ee-731b-4d88-a30e-1359e27381d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a74f33-87e4-43e9-9f41-f5f344738e26",
        "cursor": {
          "ref": "4cc3a5f8-7d17-4d59-84de-9b932df9e313",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "af9115af-2b79-4641-8ea6-c369b89ecc02"
        },
        "item": {
          "id": "28a74f33-87e4-43e9-9f41-f5f344738e26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f6276011-848d-43d9-aaec-21f3be050bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44693d3c-399b-4391-8424-2183c93bc889",
        "cursor": {
          "ref": "0485dc6b-fdd9-434a-aa9b-3c5bff250177",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7d12d62b-5842-45c6-a45d-330036778e7f"
        },
        "item": {
          "id": "44693d3c-399b-4391-8424-2183c93bc889",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "40620a95-cbe4-4e1e-bb73-08b5f0e93305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2550a5df-e24e-4ec6-b940-ee17b2f3ba36",
        "cursor": {
          "ref": "61abb28e-2bbf-4387-88c0-cff1667e51af",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "836289bf-dee3-439a-b8c5-254cc44fcf84"
        },
        "item": {
          "id": "2550a5df-e24e-4ec6-b940-ee17b2f3ba36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e004d56d-fd19-4e77-a51e-ae52d7405abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664df2a6-6310-4f12-9af7-151da491360f",
        "cursor": {
          "ref": "811603d0-a770-4d5f-8996-50c24868c0e2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "931caec2-695d-454e-baa4-905ca443606b"
        },
        "item": {
          "id": "664df2a6-6310-4f12-9af7-151da491360f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "58a86ed3-c62b-4957-8b6c-cd5b7aa817f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48375b2-9c2c-4dd6-9d65-7a73c91cea79",
        "cursor": {
          "ref": "a2ecde61-22b2-4e6f-987e-f3a255e8d6ec",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "18689c9a-79b7-462d-9fa7-75fc70ab3366"
        },
        "item": {
          "id": "e48375b2-9c2c-4dd6-9d65-7a73c91cea79",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "11af3a11-2558-43ef-b8d5-09c9c7b1131a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfcad54-f693-4ee0-adbe-528f983e616a",
        "cursor": {
          "ref": "e692372e-2283-41ed-a05c-519c5ae55847",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2ec38ea6-395e-4041-a974-40df46852385"
        },
        "item": {
          "id": "6dfcad54-f693-4ee0-adbe-528f983e616a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "624cf3b5-e556-41bd-816f-80f17bec4829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45102ec4-489e-40cd-bfcc-5adbeed70ec0",
        "cursor": {
          "ref": "b3ac1d2d-338e-4eef-bb26-b652dbce9059",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "57766222-bab0-4b4f-a8cf-07827fd63262"
        },
        "item": {
          "id": "45102ec4-489e-40cd-bfcc-5adbeed70ec0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f39ba412-7172-4fa0-9046-0fb282d59604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7281f60-8f78-4d45-9d95-343a2a3c2afd",
        "cursor": {
          "ref": "d5cd0a4d-c701-4b78-97df-a796f8cd1329",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c63aea7d-9373-43c3-bad7-44a4d812b83e"
        },
        "item": {
          "id": "e7281f60-8f78-4d45-9d95-343a2a3c2afd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d4d0fbf-9b95-4221-8f85-82a8bfe3877b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fec741c-026c-4481-88aa-597064dc54db",
        "cursor": {
          "ref": "d6bb6d87-4130-408f-8c69-18ddcc7d29a4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1fa71d51-69fb-4713-9c23-dfc5430edf81"
        },
        "item": {
          "id": "0fec741c-026c-4481-88aa-597064dc54db",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a96f420a-ba05-46e5-90f2-d363db9c67e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053e368-aa64-42c6-932f-e16b6282dc8e",
        "cursor": {
          "ref": "318c5905-3802-43e7-97ac-8d9f6eaba5c8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6791b874-0fbe-4be9-a377-b385710bb88c"
        },
        "item": {
          "id": "8053e368-aa64-42c6-932f-e16b6282dc8e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "693531d9-e316-4bb0-ab23-0a5ba5b9f3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c0a5c9-f2ec-4f8a-9352-313f71428571",
        "cursor": {
          "ref": "8f59e90a-5872-4612-9e65-da09d3753a35",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cb88553f-1682-4159-8682-7a464e2ea2f8"
        },
        "item": {
          "id": "00c0a5c9-f2ec-4f8a-9352-313f71428571",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb284e73-f9a6-407e-baca-c7415b1d3533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc33b84-80b4-4074-8d9c-da0cb558e3a6",
        "cursor": {
          "ref": "52c82462-9cfe-485d-856c-8a8786727c56",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea83ad6a-9c52-4533-a3de-51e9f24d787f"
        },
        "item": {
          "id": "edc33b84-80b4-4074-8d9c-da0cb558e3a6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3e2a351d-d6f8-4f0a-81af-a3c06f970086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80f19fd-3cd3-4666-ae16-72f5a1d657ef",
        "cursor": {
          "ref": "0806cbde-9cb3-4b50-8c3e-d50a71090c45",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8a555868-fc8c-4f9d-885b-52e2a2c8ea1b"
        },
        "item": {
          "id": "b80f19fd-3cd3-4666-ae16-72f5a1d657ef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "12f6bc9a-fe58-47dc-948b-ebb249e12166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32520f8-2721-4a05-bf2b-b3394d0fa766",
        "cursor": {
          "ref": "196e9ac8-08d4-44ea-8486-08ca32e628d1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83e2d863-c61f-42db-ab0c-b691fe99a588"
        },
        "item": {
          "id": "e32520f8-2721-4a05-bf2b-b3394d0fa766",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "856775aa-a267-454b-9b4f-733f08329e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640d344-1f67-4432-8f72-e687a975b97b",
        "cursor": {
          "ref": "b99ba857-8bc5-4afe-aa14-b11d9daabfc0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "625953de-1215-431c-abca-88ed8728b34b"
        },
        "item": {
          "id": "b640d344-1f67-4432-8f72-e687a975b97b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d1deadde-8d7e-496c-b556-fe375381935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609a8099-9f53-42bc-9624-b811966ac3e4",
        "cursor": {
          "ref": "bf998ebe-c6b4-4f42-9771-308ca3f2be0d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "33dcafef-cf4e-4e82-bbae-836fdbeea928"
        },
        "item": {
          "id": "609a8099-9f53-42bc-9624-b811966ac3e4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43e77c11-12cc-4662-aed5-8883d693afd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d5dd2-9833-42c6-bd5c-c8db61d53c3d",
        "cursor": {
          "ref": "6000e4b0-fb45-4b34-9d76-6b0081f099cd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "28aceab1-520e-4f3a-b285-2a61b60c5aba"
        },
        "item": {
          "id": "d39d5dd2-9833-42c6-bd5c-c8db61d53c3d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad70b0cf-f2e3-4a68-96ef-155c31ba808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35981b2f-4515-4234-bd62-f96c1f3aa89b",
        "cursor": {
          "ref": "2ea40149-5713-4399-af47-1c039b23d5cc",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "92894c4a-83a1-4cd1-9ac8-8a93b13955df"
        },
        "item": {
          "id": "35981b2f-4515-4234-bd62-f96c1f3aa89b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ee369106-f253-4153-8b9e-2e4ceee73d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e477ef7-d580-403e-8a1d-7431fbcd2fad",
        "cursor": {
          "ref": "ee25b7c2-df3d-4d62-9a93-0de24ad37f78",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ace3ece8-9cdf-4937-bfa7-798ad50559fd"
        },
        "item": {
          "id": "8e477ef7-d580-403e-8a1d-7431fbcd2fad",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f0d1f46e-189a-47c3-8236-0e613494c1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f227ce2-7c25-4a47-8bcb-f14aba9c5e2f",
        "cursor": {
          "ref": "0561ca40-f5f5-4243-932e-c3385eebb744",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "034b05bb-a9c7-4118-a4ef-fbb1ab32c7c4"
        },
        "item": {
          "id": "0f227ce2-7c25-4a47-8bcb-f14aba9c5e2f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5077f872-38fd-4816-b64b-d37e8bd57360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7493f859-1d1c-47c5-ab86-e8a9ec43ca28",
        "cursor": {
          "ref": "bb1d6051-3e74-469b-88cc-860d33fef0c7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "745e82de-21cd-45ff-bc21-4ba3206646a9"
        },
        "item": {
          "id": "7493f859-1d1c-47c5-ab86-e8a9ec43ca28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8a84df1-cf17-4c68-977f-3212bd3bb76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb60739-df1d-4ed3-ae4d-b218c3c110ab",
        "cursor": {
          "ref": "00eddad2-2cec-4f3c-800f-9983f3aba124",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3aebeb48-f88f-47da-b838-5750f47bf061"
        },
        "item": {
          "id": "6bb60739-df1d-4ed3-ae4d-b218c3c110ab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0bc03080-5e44-48c9-8761-ee4815304b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d8c6ad-a708-44c3-b13c-d41dce45e04f",
        "cursor": {
          "ref": "45c8cfc8-19ec-4d90-8cac-a5244e259c3b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba3c8274-be74-461e-aae9-fd93c7f32aa1"
        },
        "item": {
          "id": "d0d8c6ad-a708-44c3-b13c-d41dce45e04f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fe4753b5-95aa-40f6-a737-8a5fa45065b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f18719c-f9f4-4d51-ae96-7d151e77ca74",
        "cursor": {
          "ref": "71e755e7-98c6-4477-8260-609c3eafaaea",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "65a16e56-edcd-4fad-9f7c-6effe3ab1adc"
        },
        "item": {
          "id": "0f18719c-f9f4-4d51-ae96-7d151e77ca74",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "892d97af-5fa8-4c1a-a73c-be8421d0a3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aa846f-0bff-4627-b22a-e55c05d4e320",
        "cursor": {
          "ref": "1d7dbf6c-eb69-4c6f-9ef5-977ac332a280",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d205116-2bda-4425-bd3b-760a0387a5e4"
        },
        "item": {
          "id": "f4aa846f-0bff-4627-b22a-e55c05d4e320",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e0d9a3fa-f893-4b17-ad95-e35d673ebd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f95904-a3d3-4b4f-9e69-47d62cd576bd",
        "cursor": {
          "ref": "3fb72420-cdef-4119-a60c-b408c30818f4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "95edf408-1a72-460a-8e37-95a10cc0ec09"
        },
        "item": {
          "id": "79f95904-a3d3-4b4f-9e69-47d62cd576bd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1e22564d-3537-4ecb-9bae-0a971709b39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02483abf-158f-49ae-bf79-762d3e5e5765",
        "cursor": {
          "ref": "38281d2b-8d38-4dab-8fb6-daaaf6736f20",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5f8b5733-ba0d-4cc8-bf0b-9c94cb76fe85"
        },
        "item": {
          "id": "02483abf-158f-49ae-bf79-762d3e5e5765",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "024fe363-83a5-49f4-933b-4d681c7cdfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3edb2f-6492-4703-a279-e7648fad8e9b",
        "cursor": {
          "ref": "4b5919b0-c66e-48c7-8188-5a1ea629a6e6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "15d5428e-23d4-4d92-b092-de7d4238b10f"
        },
        "item": {
          "id": "1b3edb2f-6492-4703-a279-e7648fad8e9b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b70a468d-c3f0-44d6-8b27-bfc7082961c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda27856-283b-458b-8a6b-57a98d528bc5",
        "cursor": {
          "ref": "029bad4c-ffe8-4155-9775-7ce9cba32d80",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e94f2746-9762-43c7-a802-6917a90c4a22"
        },
        "item": {
          "id": "fda27856-283b-458b-8a6b-57a98d528bc5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3d700087-3813-4e0d-af5e-c7f26342279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d320fb58-db35-47e8-8fbd-94ada562c06f",
        "cursor": {
          "ref": "49277da4-bc7b-422c-b0c1-49477a4a12fa",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "368d09f1-3a7a-4f00-bd95-78c937f52371"
        },
        "item": {
          "id": "d320fb58-db35-47e8-8fbd-94ada562c06f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8369d928-39d4-4653-bc7f-de940e92431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06789e01-3421-4f82-8efe-1c8a53a0ec9a",
        "cursor": {
          "ref": "ba252356-4879-4e16-b3ae-279de73d641a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c42f2a74-5bc8-40fc-acf5-8a996bc9846f"
        },
        "item": {
          "id": "06789e01-3421-4f82-8efe-1c8a53a0ec9a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a2ca40a-5874-4cc1-83ca-a0adb1efce9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db89492-94e6-4777-99bf-9fcf012bf0df",
        "cursor": {
          "ref": "173accbd-4c73-4469-9c30-d3683a6bc623",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c3b2252-bb2a-4b0b-b489-2d0f4d08e435"
        },
        "item": {
          "id": "7db89492-94e6-4777-99bf-9fcf012bf0df",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "04e34882-00b8-4f3e-8fff-8b0adc3ff00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0107ce-00b1-4ad9-ac5c-e7e1f2899a77",
        "cursor": {
          "ref": "ff6265f7-31e1-4cca-9b60-9453a0ec0aac",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bb56403f-6f96-46d9-a16c-81c9232ec83b"
        },
        "item": {
          "id": "db0107ce-00b1-4ad9-ac5c-e7e1f2899a77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c925209f-91ab-4efe-a006-843f2ac4bd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48a9377-c7b9-4da4-ad43-b316aa52a647",
        "cursor": {
          "ref": "9648fe28-ced2-43f0-8e5b-6785f72b526f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "89b9caf3-877d-4897-8653-3d33600465b7"
        },
        "item": {
          "id": "a48a9377-c7b9-4da4-ad43-b316aa52a647",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8b12c3de-600b-45c4-ac76-73fd9e361dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c98c2-c447-4714-b382-64d870495ae4",
        "cursor": {
          "ref": "dc5ee801-1426-4ee2-b09c-74e5a2c6ef94",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "16df72af-0cb2-4d57-a73b-58a25c3dca27"
        },
        "item": {
          "id": "b73c98c2-c447-4714-b382-64d870495ae4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d424120f-4ace-4d4d-9273-f9f0d0b3551b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3b4179-6e45-4bc9-ab1a-33c55bdd605f",
        "cursor": {
          "ref": "2ae5bf67-642d-48af-b270-65768eaefea5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3e4c0ea0-1e29-4708-a88f-169c5ad0fe34"
        },
        "item": {
          "id": "dd3b4179-6e45-4bc9-ab1a-33c55bdd605f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "40a5f8cf-c30f-4899-bcae-13e92cfec810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "677af984-f542-4ddd-9298-b4d480362b23",
        "cursor": {
          "ref": "e6a1ebfd-f2c3-4678-b5a1-d7739ffd7733",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e7909307-d4ec-49dd-a136-a98b80373ee2"
        },
        "item": {
          "id": "677af984-f542-4ddd-9298-b4d480362b23",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6eb07553-37b7-4fdb-af8d-e7b26ba99cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "36bc8297-6260-4d0e-a63d-f3e6ad23e38b",
        "cursor": {
          "ref": "32a87a5b-805d-45b5-ae10-83b15287f8b2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "189b3a13-2094-4671-a90b-7ffcbd2c25fa"
        },
        "item": {
          "id": "36bc8297-6260-4d0e-a63d-f3e6ad23e38b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "47b0e5ba-0946-409f-8625-d2f00f8ea69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "799e7c57-4e77-4c43-bcc7-621ac10f1c0a",
        "cursor": {
          "ref": "a36ad841-ef40-41fe-8818-bfa771e35079",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b9b313b6-b357-4473-a230-7772d2c12b42"
        },
        "item": {
          "id": "799e7c57-4e77-4c43-bcc7-621ac10f1c0a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1979c66-2e96-412b-8b17-82326227ca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7587cf50-969d-4ef2-8e92-6225d8cf788f",
        "cursor": {
          "ref": "e9256fbc-c8a5-4b86-bf9c-e31972d6d4da",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d3d6eb25-042c-4478-b07e-662c4654e7b7"
        },
        "item": {
          "id": "7587cf50-969d-4ef2-8e92-6225d8cf788f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ef6fd6d5-98ed-4542-8f5d-315ddb7d9dd3",
          "status": "Created",
          "code": 201,
          "responseTime": 8194,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86c6c44-37a3-4b82-b2b3-f2cce757cc70",
        "cursor": {
          "ref": "a35150fd-71e3-4dd3-9a71-485d780dce0e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8bd993d0-cfde-42a6-b5c3-bef3bd6b62d1"
        },
        "item": {
          "id": "a86c6c44-37a3-4b82-b2b3-f2cce757cc70",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd6d60de-c429-4c2f-a354-a517a7a2ab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "71738bcd-4677-4587-9460-1fe513b8fed1",
        "cursor": {
          "ref": "10fb3431-0931-49a9-b5da-aa2ee389ca36",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cab09455-5d46-4d5c-931d-55ad9a6e75d6"
        },
        "item": {
          "id": "71738bcd-4677-4587-9460-1fe513b8fed1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0405933e-5191-4484-9cc2-12de565ecb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "980a1da4-5a8a-4d44-b26c-fba2c807b588",
        "cursor": {
          "ref": "983ed938-2dfb-48bd-8ac0-be7f193609f6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2081e545-2495-4346-8272-69c89033ed5c"
        },
        "item": {
          "id": "980a1da4-5a8a-4d44-b26c-fba2c807b588",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ad3f4792-5cce-4c59-ac71-9c8c9682dc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7e9354-c379-4c70-9adc-a1a3552780d2",
        "cursor": {
          "ref": "7caf061b-e011-4843-90f1-24a663346b7d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a54f933e-ba99-4f8d-8b31-7d45040f024e"
        },
        "item": {
          "id": "ed7e9354-c379-4c70-9adc-a1a3552780d2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fd87651-1529-40c1-9b79-dc41183c6558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5a89b6-e547-46b9-82b0-6216ebb71bba",
        "cursor": {
          "ref": "f9a8ce9a-dfc2-4b4f-a7be-248d7b38f269",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0d661801-25e1-48a5-aeef-202eacb9b72e"
        },
        "item": {
          "id": "0b5a89b6-e547-46b9-82b0-6216ebb71bba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c05bcdb3-359d-4da9-9860-a5ef50ec4b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55506fa-8f33-4f82-a23f-006a38c6e627",
        "cursor": {
          "ref": "cb2f5159-575c-40c7-a648-9f217f556010",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fd552e72-ec9e-487b-884c-ecd3ac7227ed"
        },
        "item": {
          "id": "f55506fa-8f33-4f82-a23f-006a38c6e627",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "411cdcf7-318d-4dbc-9a7b-fce2c4743bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100e242b-a883-41e1-ab9e-ce1e64764e9a",
        "cursor": {
          "ref": "55f34b39-f15e-4ec9-8e48-f63035bdfe1f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "925ac982-7880-4dec-85f3-ccf18045d9be"
        },
        "item": {
          "id": "100e242b-a883-41e1-ab9e-ce1e64764e9a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e495a5e-3fb1-4dca-8c81-1956d3bb0d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c96974f-b225-42fe-adaa-e4f212bdd7c1",
        "cursor": {
          "ref": "1eca34e3-0b96-4c22-b866-de6caf46cacb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "915b6041-8b1d-4a77-bdc8-6cdf7a937927"
        },
        "item": {
          "id": "2c96974f-b225-42fe-adaa-e4f212bdd7c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88cf0824-c53e-47d8-a1e7-37ed7fa55e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70476d05-04fc-4319-b092-9812d265a37f",
        "cursor": {
          "ref": "21994f9e-430c-43de-8a06-e9f6fcdc19ff",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f452b9ff-85d2-4994-bfaf-f2ae95937aaf"
        },
        "item": {
          "id": "70476d05-04fc-4319-b092-9812d265a37f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d4af4662-ad76-4578-b07b-206531390f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3d18c4-8a02-4444-be27-ffd857925644",
        "cursor": {
          "ref": "7eb1216b-222b-41f1-b25d-8760692c354d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1f03fbd2-4143-4416-b1de-c7b6bac60039"
        },
        "item": {
          "id": "9e3d18c4-8a02-4444-be27-ffd857925644",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4335fab6-c9f2-4dd8-a3ef-944def5b2071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391dcd31-75f5-42ef-97f6-e0ad29426599",
        "cursor": {
          "ref": "a44bf162-c93b-4ea2-85b0-e56ed248b650",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1e34cf2b-51f5-4064-bb42-36f2f00c9393"
        },
        "item": {
          "id": "391dcd31-75f5-42ef-97f6-e0ad29426599",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72401a57-430f-4603-8301-0dd749bbc874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec994ecb-2b68-4f44-92b5-a46ee2c18938",
        "cursor": {
          "ref": "e32f8d73-b5cd-4928-9caf-e747b03e7799",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "02c604c6-7717-4e4e-a30c-86b59ee9a02d"
        },
        "item": {
          "id": "ec994ecb-2b68-4f44-92b5-a46ee2c18938",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "523da659-07b6-4aaf-a3d6-77dc51cffec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225e78f4-9bde-4ff6-922b-39d6a1c2c3ca",
        "cursor": {
          "ref": "a1078314-cdbf-4fd6-bfd8-e4e858bc1b4e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "216aae7b-02f2-43b0-a467-591c632815aa"
        },
        "item": {
          "id": "225e78f4-9bde-4ff6-922b-39d6a1c2c3ca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "99f3b926-97c1-4edc-9ad9-6d759a1f7385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3592d2d-ffe6-45f3-95af-dc35b7bb2e4b",
        "cursor": {
          "ref": "55322a46-c9da-4a79-a309-bf193777d161",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "42bd1eba-a7ab-4b14-ac51-213ad9a344b2"
        },
        "item": {
          "id": "e3592d2d-ffe6-45f3-95af-dc35b7bb2e4b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "78072cd4-d5dd-45fe-b94b-01f344661a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab18e98-7893-46f9-876b-303e3146a403",
        "cursor": {
          "ref": "7818f4b8-1d5a-44d5-aa1b-04b78a47f1f9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7cd34553-0411-4ae1-a6ae-55d1502554b4"
        },
        "item": {
          "id": "1ab18e98-7893-46f9-876b-303e3146a403",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb4da992-c1e7-4f27-b591-a10b02125bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220bdab3-5aa6-4f94-8e40-ef7fc3eed58a",
        "cursor": {
          "ref": "dd34fa53-c80c-4ae8-b074-a2e55217ecab",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea9d8d2a-9de3-4e39-8ef9-3cacc845c361"
        },
        "item": {
          "id": "220bdab3-5aa6-4f94-8e40-ef7fc3eed58a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e3099f1d-b77f-4996-bbf0-8eabf34390ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53935c1-d43c-4dda-94f9-9bd9e548e45e",
        "cursor": {
          "ref": "62d682ad-a6f6-4782-9afa-10a2dc03085b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "30c9d7bb-2935-4528-a6b6-af9b1db6c9a5"
        },
        "item": {
          "id": "c53935c1-d43c-4dda-94f9-9bd9e548e45e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7de363be-316c-484d-b99a-1a621fc2bbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bf68de-cfbc-4ed6-965f-ceed7e7774fd",
        "cursor": {
          "ref": "f33ce87b-6b81-4f74-bfd1-b46910b30510",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "07093273-995d-4eb2-9d36-7b9c16600de6"
        },
        "item": {
          "id": "69bf68de-cfbc-4ed6-965f-ceed7e7774fd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "963be00a-4dc6-4570-b35d-35825f441018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2852eec1-a28b-4634-b0a4-d749e74ae852",
        "cursor": {
          "ref": "43d8f460-298b-4a7a-a7f9-52c64c383f9c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3f82963a-1f71-48ee-9f1c-32db27fc07e3"
        },
        "item": {
          "id": "2852eec1-a28b-4634-b0a4-d749e74ae852",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "192ac8c8-fda4-4db2-a139-4e70a4b70b10",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2d366ba8-fd64-442d-954a-5b15e4139f12",
        "cursor": {
          "ref": "3d1e2bd8-7501-4a93-b320-d3d79d2ebd4d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea24a863-f424-4dd5-b0d1-f51e84618ce2"
        },
        "item": {
          "id": "2d366ba8-fd64-442d-954a-5b15e4139f12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b7ce2da0-5ed0-430d-9990-cc4b0b887532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f2ce15-ac99-433b-87c2-9d4dc1429fa2",
        "cursor": {
          "ref": "447ac570-9ae3-4b19-a3a6-674fbc3f30b7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a556acb-04a0-40a6-84bf-a24ea274240c"
        },
        "item": {
          "id": "b4f2ce15-ac99-433b-87c2-9d4dc1429fa2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "046368b9-51ee-4451-9dcf-eeac003bcc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8f2517-408b-45ed-9ffc-d527b2232e48",
        "cursor": {
          "ref": "094ffd25-5437-4c7e-97cf-6729f27cd33a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "28affa28-e2c4-41ac-a3e8-a86137db8e0d"
        },
        "item": {
          "id": "6a8f2517-408b-45ed-9ffc-d527b2232e48",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "df41a164-8bff-40c5-84d9-fc519f653d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e5005-18c2-4594-acd8-56b5a5fc29bc",
        "cursor": {
          "ref": "ca3ccdd3-902a-400b-a6d5-298326132e58",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "82093092-a7e0-488f-ac5f-d4c060765f09"
        },
        "item": {
          "id": "d32e5005-18c2-4594-acd8-56b5a5fc29bc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "35b08b84-a62b-4641-8764-6b8c623f7356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5266dd74-226a-4827-bf47-5103ed7fdf97",
        "cursor": {
          "ref": "d4348638-a0bd-484f-a9f5-9db27672be44",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "46c95cb0-0149-4803-b7ae-aa1dde3a2ccc"
        },
        "item": {
          "id": "5266dd74-226a-4827-bf47-5103ed7fdf97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2cafaf4f-dd01-4193-ae60-fd96b15f14d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4749499-eda3-4de9-80c6-f9b367e03ac1",
        "cursor": {
          "ref": "2e90b877-99ed-4153-8f98-319c74c79f0a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c1948f45-9a9c-4ed5-9a90-c90726181dec"
        },
        "item": {
          "id": "c4749499-eda3-4de9-80c6-f9b367e03ac1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a202d49-0f41-45e1-b861-d594384ce118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c3b226-8694-4ac1-9a3f-843a7983ea1a",
        "cursor": {
          "ref": "f7d2b6d8-5443-4f85-8a00-381cdce1375a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "164ff779-311c-4941-81c7-2f6e25e94edd"
        },
        "item": {
          "id": "67c3b226-8694-4ac1-9a3f-843a7983ea1a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "866da49f-d344-41ba-b958-992c3d7c1fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a161a826-f5f8-4e3b-aad1-3ae48cb930a2",
        "cursor": {
          "ref": "9e9f2048-0471-42da-9a1a-c8fd3dda6a41",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "84000c60-898f-41be-a2a4-6372f716db32"
        },
        "item": {
          "id": "a161a826-f5f8-4e3b-aad1-3ae48cb930a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e26fc6ee-8b30-4e18-a8f2-6ba3d079fb7e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0d311433-0d80-4313-b1c9-a184354d4995",
        "cursor": {
          "ref": "02dbd050-b51f-4fa0-b8c4-504688fc92bd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c7282e8b-bc9e-4598-b28d-3cebd0ba8fdd"
        },
        "item": {
          "id": "0d311433-0d80-4313-b1c9-a184354d4995",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f8473805-2380-4346-bb08-da5ba527111a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d146ef38-ecbe-4da4-90e5-a99f5a7ef9ea",
        "cursor": {
          "ref": "2e40f1fd-bcb1-4c65-bb2f-e8a99fe8ce23",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "57d5cc94-ce85-4597-8b4d-0199ba18beaf"
        },
        "item": {
          "id": "d146ef38-ecbe-4da4-90e5-a99f5a7ef9ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a57cd65-da57-43d8-8d8b-c828a9ebaf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbbafe1-7a23-45a8-9016-4d71870c2ae9",
        "cursor": {
          "ref": "38d87dce-508e-46f8-86e1-187163c463aa",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "97d22a66-54d9-4729-ab95-8d7a0389b817"
        },
        "item": {
          "id": "dbbbafe1-7a23-45a8-9016-4d71870c2ae9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4bc74d64-6b64-4efb-a310-ee597cee8abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db670ed0-c2b4-4d1b-9585-8253398a69ff",
        "cursor": {
          "ref": "3946584f-e93d-401e-bcf7-3951065058ae",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3d736e8b-baf9-4b58-91ac-d4d9ea70a0ba"
        },
        "item": {
          "id": "db670ed0-c2b4-4d1b-9585-8253398a69ff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efc56266-e2a9-4474-975a-a9f10725cb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da35d26a-ceab-4ada-9079-ef8486363038",
        "cursor": {
          "ref": "e59a0eb4-5be3-4c43-91f9-4d88b3212606",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "437c7369-7ed7-4b7c-9061-d492a3a3862a"
        },
        "item": {
          "id": "da35d26a-ceab-4ada-9079-ef8486363038",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0931ad00-e1c5-44ae-9631-5d16dc93147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a9ca4-6330-4962-baf2-59d3f20fb177",
        "cursor": {
          "ref": "c64ef1b8-fde6-4e1b-a22c-0dd8053d0e63",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "db231e37-2f9b-4720-8e73-9de557be8b69"
        },
        "item": {
          "id": "4a7a9ca4-6330-4962-baf2-59d3f20fb177",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ddb430e-529a-4f67-91c5-43483bcacc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0094ba50-4d7c-4c9f-afda-dee3b670e0dd",
        "cursor": {
          "ref": "1dbaae00-35e4-4340-856a-7de40edb0e95",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "98b9a2fb-6972-46bd-8388-3360c2f60756"
        },
        "item": {
          "id": "0094ba50-4d7c-4c9f-afda-dee3b670e0dd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "51cb2239-be4d-4c14-9d98-d4026ea1e272",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 169,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "fcf2ab31-65ec-4723-8b4b-fbb1667d16b1",
        "cursor": {
          "ref": "910d4453-63da-4df3-bbaf-ff184ae7291a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b6b99f97-83b0-4d8b-990f-f37d5e5ca5a2"
        },
        "item": {
          "id": "fcf2ab31-65ec-4723-8b4b-fbb1667d16b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b4806da-9e46-4356-a529-b575d2112d74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f2f9e4-b95c-4d26-bbd8-c4e8841a96dd",
        "cursor": {
          "ref": "400ce486-bd42-4e19-8b75-2e3a077a50c2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fce3e111-219b-48d1-af16-7f2ee94c615b"
        },
        "item": {
          "id": "95f2f9e4-b95c-4d26-bbd8-c4e8841a96dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "33499743-fc4c-49d0-991a-d0edfa9be6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54a3fab-ad45-46b4-8324-0ca82416c8d3",
        "cursor": {
          "ref": "4224d54f-85a3-43e2-a3f6-892749e1c0f4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3540f4cd-777a-465c-93eb-a51789d1d226"
        },
        "item": {
          "id": "c54a3fab-ad45-46b4-8324-0ca82416c8d3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a992c65a-ca6f-44c1-b6ea-a8bb9eaf95e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc156b-339c-426a-9859-d613d625c0dd",
        "cursor": {
          "ref": "690bfb21-9fb1-4cec-888d-1f70e982d0c3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d3fd736f-8e6e-450e-af0e-6eb75ee87cba"
        },
        "item": {
          "id": "19dc156b-339c-426a-9859-d613d625c0dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e43065b4-70b9-4347-85e9-aae3914d332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af9c56c-6e92-4ce0-b675-9deff5fd076d",
        "cursor": {
          "ref": "e0a5705a-42a3-4287-a1e4-45d3b294f10a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a707d8a9-81ba-43f7-96f0-64cc8c48cc55"
        },
        "item": {
          "id": "5af9c56c-6e92-4ce0-b675-9deff5fd076d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "327a0bf9-28e4-48ff-a77c-cbfc6ffab3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a869c768-8fcd-4887-a865-321f5cb2b96c",
        "cursor": {
          "ref": "9c0e4bb3-78e9-4a80-b7ec-4da1353d7a72",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4cf6d111-b65a-4f5b-8e6a-5ab70d6c4a7f"
        },
        "item": {
          "id": "a869c768-8fcd-4887-a865-321f5cb2b96c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f0a7090-77b1-4125-b4dc-10101977dd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5032d622-0553-493a-8651-a2c3ce541dcb",
        "cursor": {
          "ref": "2797e1da-6d1d-4847-9b7b-b8b1f18633a3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "34b810f2-4f53-4fa8-a9bb-2243efb83620"
        },
        "item": {
          "id": "5032d622-0553-493a-8651-a2c3ce541dcb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e062a84-1b51-48ef-9c2a-aebec653cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c5adc-b593-4bec-a7df-6a38369b50d6",
        "cursor": {
          "ref": "c932f561-b10e-4e26-ac26-f15649a68c0a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9432f5fc-eab3-4d88-9d70-5965a7942972"
        },
        "item": {
          "id": "363c5adc-b593-4bec-a7df-6a38369b50d6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "585fd21f-eb87-4391-8cce-8a7bebaa53f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb191e-0c8d-4a14-87d9-453185397adf",
        "cursor": {
          "ref": "117d65b5-f873-4a8b-9550-efd04ad9e59f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dffddc95-a259-4a23-8739-4d7bc92078ad"
        },
        "item": {
          "id": "7acb191e-0c8d-4a14-87d9-453185397adf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "367ed073-c1ae-40f8-8425-ad2b478322cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005d8a3d-2e40-403d-b2a0-e783efbee9bc",
        "cursor": {
          "ref": "b33ffc9e-af39-4a35-af1e-ef126e6fa59a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1dc6d117-36c8-4039-8578-b140e734a039"
        },
        "item": {
          "id": "005d8a3d-2e40-403d-b2a0-e783efbee9bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71a12ae7-73f1-4ffa-ac9e-51284794bf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db53bd6f-69fc-402d-867b-5cd38c518ea4",
        "cursor": {
          "ref": "07908c71-b8d4-4e34-a313-e49d3b6a8f98",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9bf499ae-ca10-4036-9ac3-ccfdc309d46a"
        },
        "item": {
          "id": "db53bd6f-69fc-402d-867b-5cd38c518ea4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0dc5e988-11ac-4e70-9f85-0e220aac9cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8223cb0c-46a9-41cb-b7b8-e8f636ae56eb",
        "cursor": {
          "ref": "59264dad-511a-48bd-b5b8-e6701cc3565e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f01c23c-741f-4004-832d-09f8444b677a"
        },
        "item": {
          "id": "8223cb0c-46a9-41cb-b7b8-e8f636ae56eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ea495af9-2a90-4f20-8758-dcff83d2d9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa2bcbd-5dfe-4521-a9b2-4cc2eba4ad39",
        "cursor": {
          "ref": "69483725-0b0e-46dd-a0cc-9a79241dfe73",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "299ef49e-d081-4020-8882-d45931e51280"
        },
        "item": {
          "id": "ffa2bcbd-5dfe-4521-a9b2-4cc2eba4ad39",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31c4835a-8386-4a52-b6c6-4361b3f00361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359a526-7ab2-446f-905a-23dd07fe0836",
        "cursor": {
          "ref": "4202bb97-9ac7-491f-b702-18dea0a4b259",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c4d5cfcc-e717-4e75-b83f-de44afaba901"
        },
        "item": {
          "id": "b359a526-7ab2-446f-905a-23dd07fe0836",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ec99082-beb5-4508-a7d7-48fbfb8281bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79846fef-dd3f-4807-b4fd-f14d8189c099",
        "cursor": {
          "ref": "8f92540d-d504-4727-b28f-c5968a5ed847",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5134bdf-d315-44a4-b2d4-2ee75a20651b"
        },
        "item": {
          "id": "79846fef-dd3f-4807-b4fd-f14d8189c099",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "538f4ff0-d257-488e-a4d4-5ba106206ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f7fc14-d694-4a66-afab-7830ab79813e",
        "cursor": {
          "ref": "c885d8a8-c929-48b0-9e8c-e92921b1d1ff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "08c83c1a-3152-441f-aaee-80c76dc24aa1"
        },
        "item": {
          "id": "79f7fc14-d694-4a66-afab-7830ab79813e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1cca9649-9002-4323-ab96-e3da341874e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31915ed1-f9fa-489a-83f9-3d7c0da030cc",
        "cursor": {
          "ref": "42a14a77-6b25-444c-b2dd-535311843c38",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "678571b0-69f6-4fc2-8c76-495831439183"
        },
        "item": {
          "id": "31915ed1-f9fa-489a-83f9-3d7c0da030cc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb3f8720-5dd9-4113-8406-138161509c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6da8d-8023-49f6-bc8c-32a5ba35afdc",
        "cursor": {
          "ref": "b96be155-6403-45d3-b6d8-0e92288258b7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "216a20bb-1e88-4360-93f3-503089436d53"
        },
        "item": {
          "id": "bfc6da8d-8023-49f6-bc8c-32a5ba35afdc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e5904c4-ba67-4719-9117-b6666422c079",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "73c393f4-121f-4c6a-8f56-75f391238018",
        "cursor": {
          "ref": "38eb94ea-42a6-481d-9069-d9950a804b28",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e1d7131-ebd7-4edb-8996-9dca155ae355"
        },
        "item": {
          "id": "73c393f4-121f-4c6a-8f56-75f391238018",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8be9baf5-4aac-484e-839d-722d61347985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622dd37c-0370-4104-8978-82073b1437d7",
        "cursor": {
          "ref": "b99e3fe1-0c68-4e9e-ae8e-87b518bef655",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c37c7d2-1635-42ac-9e89-42acbe061e6b"
        },
        "item": {
          "id": "622dd37c-0370-4104-8978-82073b1437d7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3478cda7-564b-4b33-95e1-a93228695ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66dab98-4ad4-4bb0-956a-591a07752e4e",
        "cursor": {
          "ref": "0a9daf8f-e804-4e96-9f9b-428b724a5c25",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "349f1707-281d-44d4-987e-d95840e5a512"
        },
        "item": {
          "id": "d66dab98-4ad4-4bb0-956a-591a07752e4e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b609744-1ca0-4c3d-9b54-987de8126246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d262fca-40d2-484a-b3c1-a03d7e180023",
        "cursor": {
          "ref": "f04c2841-1adb-458f-8637-150c549bb82f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eff04cad-6212-498b-b339-fb6fd66974f2"
        },
        "item": {
          "id": "8d262fca-40d2-484a-b3c1-a03d7e180023",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a47c0722-ed8b-47c3-8782-0f417be32078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401ecc7-a295-448c-84ac-023c0c581a8a",
        "cursor": {
          "ref": "33cbdf2c-b370-411d-b6ff-e567ab3c5c40",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4a93baf0-3a99-4fe4-b3e2-658b08e21eeb"
        },
        "item": {
          "id": "f401ecc7-a295-448c-84ac-023c0c581a8a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "24fc0ca9-e53a-44fe-bf3c-884dff845b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e9c4c2-c5f7-4ee0-8ff9-45bcd573010c",
        "cursor": {
          "ref": "779bf883-e20e-424d-9eb0-02fc3a05a024",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58263ca3-f3ad-4e29-9ee2-3bf01a60d163"
        },
        "item": {
          "id": "47e9c4c2-c5f7-4ee0-8ff9-45bcd573010c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "393f0f39-5917-47ba-b273-3d67aeffd031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa32f1f6-d35e-41de-afd6-7b32d0a106c0",
        "cursor": {
          "ref": "c510182d-d19f-44ce-8fd7-4cdca6777a76",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e10d3ffa-5360-49e2-b61f-8c9f21eef4fa"
        },
        "item": {
          "id": "aa32f1f6-d35e-41de-afd6-7b32d0a106c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4364cb34-d6b3-4124-8561-caf02e31b3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8752a32-d5a1-4f14-a80d-1ab17d75ec2c",
        "cursor": {
          "ref": "11b92457-5261-4c04-81c8-d7a2759f0baa",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "959a5448-deee-4485-9868-77e8961852f1"
        },
        "item": {
          "id": "b8752a32-d5a1-4f14-a80d-1ab17d75ec2c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "614973a3-cf6f-473f-a3d6-ed2efdb53256",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "79dc3ff7-1871-4695-9bd9-df63a7a6e7c6",
        "cursor": {
          "ref": "9f5ab59c-c213-47be-a2df-cfc97bb577c1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a2d0be80-9571-4104-86f3-fe6f026fb1d0"
        },
        "item": {
          "id": "79dc3ff7-1871-4695-9bd9-df63a7a6e7c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ac88490-13d2-4008-a021-7e74cabb1b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ffce9f-71fe-4a9d-9809-57ec829871a7",
        "cursor": {
          "ref": "7609c63f-57c5-4a34-91c3-535f617185ad",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2ce16baf-451d-4fae-a76a-e747f770958f"
        },
        "item": {
          "id": "a1ffce9f-71fe-4a9d-9809-57ec829871a7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f65a4bf7-e478-4341-a4b4-9b53d35f48c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc063cfd-849b-4013-986c-103f7eda3426",
        "cursor": {
          "ref": "928741aa-1f74-4ce9-9a1b-e537d32c64c3",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "125922e5-5d33-497e-b4f1-865e25e0d26a"
        },
        "item": {
          "id": "dc063cfd-849b-4013-986c-103f7eda3426",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1ba11d9b-0df5-4df5-b423-d7bb36c12f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f253efd0-6c96-4ead-bc0b-f592238f77b0",
        "cursor": {
          "ref": "8acc8194-3b5d-4469-8447-68b4a4ce25a1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3598053a-2379-4604-ad3f-e6b9f602f71b"
        },
        "item": {
          "id": "f253efd0-6c96-4ead-bc0b-f592238f77b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a4b8d37-4918-465b-901a-7f46c82ec475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7da44d-0f25-4bbd-ad06-d2308cf83681",
        "cursor": {
          "ref": "f2bee651-864a-42c0-8945-399d8e8b937d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eb54007c-f3c6-4b11-a6a0-2b2c92f00b7d"
        },
        "item": {
          "id": "9a7da44d-0f25-4bbd-ad06-d2308cf83681",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c098dbd5-b786-4044-a62f-93e0f77fadb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a47fe7-e643-47ed-b245-2d44e4245f6a",
        "cursor": {
          "ref": "ae17220a-0de2-417e-9f35-763edff99c57",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a6b29dcc-6233-4e0c-b259-7b253f1f8e60"
        },
        "item": {
          "id": "84a47fe7-e643-47ed-b245-2d44e4245f6a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "df52e7c6-36f4-442d-9b96-962e5148640b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fdbcc2-cbca-4702-8490-50e9b9932d57",
        "cursor": {
          "ref": "08f0788e-8e4a-45e8-9aaf-e0d2c994a0b0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27ad5f45-a749-483e-a469-37fac36261e4"
        },
        "item": {
          "id": "c8fdbcc2-cbca-4702-8490-50e9b9932d57",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "38c00e72-4e4c-4428-9985-12847ef4c468",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "894d3790-1c33-4167-b48f-8a49bc250e0f",
        "cursor": {
          "ref": "9d04ab1f-eb0d-4d50-a7f2-eef3a5c9e39b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c7c7fba8-6c37-4e2f-927a-80c1dfaacd4f"
        },
        "item": {
          "id": "894d3790-1c33-4167-b48f-8a49bc250e0f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f0c0132d-cc8f-43f1-b248-fd69f550dceb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "e10b37e0-43bd-487d-8b1c-5e9e27205ac9",
        "cursor": {
          "ref": "7ff2bfce-f6dd-4975-b952-2325f750b25c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "db12e5fc-566c-4a7a-9d4b-b044fe9b853a"
        },
        "item": {
          "id": "e10b37e0-43bd-487d-8b1c-5e9e27205ac9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5fae3f27-bb44-4170-8f19-9bc02b303e5b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "6bc400ab-7760-45ee-8f65-f20a089189e9",
        "cursor": {
          "ref": "8c8df1be-32d3-43e0-a210-786b1c4cc031",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "df482930-0fd1-466a-8891-8df45033db4d"
        },
        "item": {
          "id": "6bc400ab-7760-45ee-8f65-f20a089189e9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2c4c5c53-95fa-4306-bf31-b8b1466653c6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "323f198d-14ef-4d15-9a35-e1f49be8c713",
        "cursor": {
          "ref": "dc6aa20c-4f6e-4c31-95f5-7e3fa97169f8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "638588b4-abdd-4322-b83f-bcffc300e307"
        },
        "item": {
          "id": "323f198d-14ef-4d15-9a35-e1f49be8c713",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7249cfe3-3fd9-4f78-a8b2-5cb5f7707584",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "dc3a34bd-b88e-4561-907d-87962541bcba",
        "cursor": {
          "ref": "c8c4c01f-3500-4e22-8d13-5a2bc440a52a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f8f405c8-910d-4480-a317-ee24f7566fca"
        },
        "item": {
          "id": "dc3a34bd-b88e-4561-907d-87962541bcba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f6e2a375-89da-46d2-ae42-790681bdba20",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "7041a315-2dbf-4ba1-a4ff-480eccbb9f8c",
        "cursor": {
          "ref": "ce06f602-49b5-467a-be55-a491c1629f27",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bdeb9cff-25e0-4b76-8f6f-7a6a3f8e1146"
        },
        "item": {
          "id": "7041a315-2dbf-4ba1-a4ff-480eccbb9f8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0091770a-f956-4071-a313-3885e28f3e0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888cffde-533d-49cb-b48a-b65fda06728f",
        "cursor": {
          "ref": "aaaebe8a-ad5f-485b-a083-6f0904401afb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "956a446f-3ec4-4f8a-bb6b-32dff1def612"
        },
        "item": {
          "id": "888cffde-533d-49cb-b48a-b65fda06728f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eaeb1000-1cff-42a7-8f01-eda8d01d7b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b5615a-9c7c-4ba8-ad3b-41cc27a21fa4",
        "cursor": {
          "ref": "b2067542-07d1-45ac-ab88-8265f6e5515a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f2d915e-159a-4347-b7b6-5f083abc41dd"
        },
        "item": {
          "id": "10b5615a-9c7c-4ba8-ad3b-41cc27a21fa4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8929ace3-e394-4857-9140-018098fa2b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc68a3d-8c03-4a4d-a76a-75aa0f2081ce",
        "cursor": {
          "ref": "1ebb1d3f-2268-474f-8faf-cd51f986d653",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "27ee7c75-fa5a-493d-a52c-5db9cf16352d"
        },
        "item": {
          "id": "9cc68a3d-8c03-4a4d-a76a-75aa0f2081ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da50ed0c-b05c-4d72-9167-775367b0ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962355c-d4a9-4035-8faa-61c2abd09cfb",
        "cursor": {
          "ref": "70e2c899-75dd-4390-a60c-047db91a5680",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bc4d49b9-fb6b-41f0-877b-e7981690e523"
        },
        "item": {
          "id": "2962355c-d4a9-4035-8faa-61c2abd09cfb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a3fe0c6d-95d5-471c-9070-40d60a4d0eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc0ea53-5e03-4274-a494-d21e90e6b11f",
        "cursor": {
          "ref": "55f1bb81-7c45-4fee-b09f-360ec6fd2b2b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "433d8b86-b967-4449-8365-067c5eaa3d3e"
        },
        "item": {
          "id": "bdc0ea53-5e03-4274-a494-d21e90e6b11f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "40d13918-0653-4984-a512-64dfc89c29d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5babb6-3403-48e7-ad23-ae67b1e82212",
        "cursor": {
          "ref": "25c778c1-0995-4d4b-b821-788358fd7c15",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5a57d73e-7a78-4392-8c30-54c39f717394"
        },
        "item": {
          "id": "4b5babb6-3403-48e7-ad23-ae67b1e82212",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0a368e56-026e-405b-bf9e-61dae7d26385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f14ade-3faa-417e-aef9-ea086d22f7ba",
        "cursor": {
          "ref": "a3a42f05-c7bb-4cea-99af-9c74640083ee",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cdc4ed55-a809-4b04-8ae6-bf1b83bef97a"
        },
        "item": {
          "id": "11f14ade-3faa-417e-aef9-ea086d22f7ba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "edfba9f5-23c2-4aae-8c99-2471854d484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa375a6-896e-4b6a-8ff5-cbb84ab87cf7",
        "cursor": {
          "ref": "163cc0fa-e91a-4e7e-8394-b3e3a2eb71dd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df76f4f2-7020-4b86-a744-514ef0c4ba61"
        },
        "item": {
          "id": "7aa375a6-896e-4b6a-8ff5-cbb84ab87cf7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24619194-d73a-4306-8d61-991178ed22ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84214254-5ce6-43d1-afcb-d3068fbfcddc",
        "cursor": {
          "ref": "6758e928-c6dd-438f-a178-78e0e6894dff",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "29d23eaf-4e4a-40b4-9222-67d1fd9e4b77"
        },
        "item": {
          "id": "84214254-5ce6-43d1-afcb-d3068fbfcddc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a9c8ebc8-0fab-4bd6-bc9a-41bc17a73406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4e1445-eefe-4223-bf2e-6253ee0c3ca6",
        "cursor": {
          "ref": "347df51a-bbe0-4078-9e77-d1ccc23166c2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "76fcb2bc-f860-4d93-b876-d61185bca9e1"
        },
        "item": {
          "id": "8a4e1445-eefe-4223-bf2e-6253ee0c3ca6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1c9f7fa-1332-4235-b170-5aafb1afb9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bf0b41-2011-4bb8-b1b6-31b52cbee7d6",
        "cursor": {
          "ref": "9ef61d9c-f8fc-4e53-958c-345cd3fb4c5c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a5707db3-6486-4c3a-bdf0-274dabd4a42b"
        },
        "item": {
          "id": "93bf0b41-2011-4bb8-b1b6-31b52cbee7d6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8cbad8ef-acfb-4450-80f2-05cd0bdb1c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8fd994-f67b-41e0-a0bb-41d1d0a8f967",
        "cursor": {
          "ref": "ffc6253f-9b11-464e-8551-f4566d3137d8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6fb995d9-ce25-423f-8bd6-9416fb40eb3d"
        },
        "item": {
          "id": "3d8fd994-f67b-41e0-a0bb-41d1d0a8f967",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ebd70819-0b5c-423e-bfea-bbbc3eba9568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e6252-6f17-4bf9-b6c5-b411eea6bf9b",
        "cursor": {
          "ref": "dfcc997d-c0c5-4123-9217-0bd59e956b55",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d8e3bcd8-30e5-4bb3-9717-b2eee6b43768"
        },
        "item": {
          "id": "219e6252-6f17-4bf9-b6c5-b411eea6bf9b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "666ff407-a050-40e8-b4a4-2c0784aad731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900fb6a-0ef6-4e11-b329-102b60dbe98b",
        "cursor": {
          "ref": "0d6bd723-f4d6-456c-9833-5e0e84f72741",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "40ae4707-d38a-4861-8907-83818fbe3675"
        },
        "item": {
          "id": "b900fb6a-0ef6-4e11-b329-102b60dbe98b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0b6ae915-9fb1-41e6-9291-2cda2d404709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c98aba9-1a5c-4897-b507-f08ae52e8d1f",
        "cursor": {
          "ref": "8cad2bdb-50fa-4eab-9085-c27df0142d04",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "24a0d42a-4c06-4bb8-84fc-16fabdf6af3b"
        },
        "item": {
          "id": "0c98aba9-1a5c-4897-b507-f08ae52e8d1f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5aa91dfc-dda1-4710-9729-8fe91a89b830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de6ea4-ed17-4ddb-82c5-6cbe5fb31cd0",
        "cursor": {
          "ref": "8a8f725f-1d1e-44e1-87b1-913b6e0fae77",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "24e93b5d-77fd-41d0-878a-4e98797264c5"
        },
        "item": {
          "id": "15de6ea4-ed17-4ddb-82c5-6cbe5fb31cd0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eafd64ae-d227-4fa7-8010-3a5e1b2816a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2c0630-b4f8-4dc7-9301-bd4ef79fea62",
        "cursor": {
          "ref": "0f920a3d-2286-43c3-9e51-e884e459977d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8a33a059-0015-4328-b68a-5cbfe40d28e2"
        },
        "item": {
          "id": "4c2c0630-b4f8-4dc7-9301-bd4ef79fea62",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "afce3349-d8de-40aa-9d86-b0061390c275",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5354c84f-bbe2-4022-8cbc-690bafa41450",
        "cursor": {
          "ref": "80f61761-bc19-4e5c-abe5-c776cc025d89",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "52c8cebc-8eab-4446-a1c3-a09746f6f45f"
        },
        "item": {
          "id": "5354c84f-bbe2-4022-8cbc-690bafa41450",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d504ee11-4729-4638-93fc-1f42a227e4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d20f0ab-1dbc-41f1-b51b-214a1318c778",
        "cursor": {
          "ref": "ec4a342b-66f0-43ef-85d6-a41544d05370",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c5ca3a9-4fad-495e-b627-c5fe54b351ab"
        },
        "item": {
          "id": "1d20f0ab-1dbc-41f1-b51b-214a1318c778",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3b17a87d-4c3c-400e-af1d-e0335415c9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4afd55f-58b6-41ac-b3ea-cb1c778afdd7",
        "cursor": {
          "ref": "dcba0b7c-e30d-466b-8bea-38ff84e9a942",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d4712f38-7397-430b-9261-ab9c68a6d751"
        },
        "item": {
          "id": "c4afd55f-58b6-41ac-b3ea-cb1c778afdd7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9304d7e-c954-4bcb-931e-92f53d81e3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c95a3a-1f28-4a7a-81ed-ab064af5e25e",
        "cursor": {
          "ref": "0842c845-49cf-42eb-adc8-6a585c5bb3c7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5fb3c09d-71ae-4db1-a576-c80d609cf364"
        },
        "item": {
          "id": "d8c95a3a-1f28-4a7a-81ed-ab064af5e25e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb93b07f-d564-49c7-bb2b-7c0339edfe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a11cc9-0be9-4f41-85d8-7509c2569d47",
        "cursor": {
          "ref": "a69da137-0f80-4b6f-ab17-b6b82f01c3f1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c6c1f54-4700-4118-813d-58efe09fc3e7"
        },
        "item": {
          "id": "f6a11cc9-0be9-4f41-85d8-7509c2569d47",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eadf09de-57db-45a2-9adb-747a8b894a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c65f984-f760-4b9a-9270-de1de3f18a5b",
        "cursor": {
          "ref": "6bc8f43d-eaf8-49cb-a5e9-89520478761c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dee58259-2b27-4702-807a-39ae88cc005d"
        },
        "item": {
          "id": "3c65f984-f760-4b9a-9270-de1de3f18a5b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f39b50ad-f1d0-4594-8c97-303357e0a606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d6697d-eb86-4516-8e41-845f9ffead8c",
        "cursor": {
          "ref": "c5ccb622-300b-46b7-a6a2-28f54f6427ab",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cb11feb3-2737-46ad-badc-0d387ebff4e9"
        },
        "item": {
          "id": "61d6697d-eb86-4516-8e41-845f9ffead8c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ccdaf849-76c6-465f-bdcb-17c4445e3cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf5b318-7e1e-4ebb-bc4a-1ef0f6ae400a",
        "cursor": {
          "ref": "7a29bc9a-96c6-4a0f-a77d-974371412d59",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9edcb708-52c6-45f2-93f3-47dd22131774"
        },
        "item": {
          "id": "abf5b318-7e1e-4ebb-bc4a-1ef0f6ae400a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2a86d915-cb0a-4816-9a42-d71ccae8aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7244cc86-44b6-467a-8dc2-69ba3c28096a",
        "cursor": {
          "ref": "b209b370-7106-4006-8992-c203cc0f5ccc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "537c3954-1f82-4279-986a-83eb31bc51c8"
        },
        "item": {
          "id": "7244cc86-44b6-467a-8dc2-69ba3c28096a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a64bfea-7154-40e2-a382-320d7eaf1968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c32a6-edf2-470d-81ac-abf28fb68ed8",
        "cursor": {
          "ref": "3475ed11-33d7-4e1c-bb97-a956bc1e0354",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f48febc6-d31a-4484-8e9c-9a9e09b1bea1"
        },
        "item": {
          "id": "122c32a6-edf2-470d-81ac-abf28fb68ed8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf8811cf-7096-4a4e-9fe4-6adcd75f545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5e0ed4-6a55-4702-b6c3-02a719e2e804",
        "cursor": {
          "ref": "7862cd19-fdb3-4b6c-b2f0-b576ffe7fb3a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f49e62e-ee86-4f24-b91c-b22de90518ba"
        },
        "item": {
          "id": "aa5e0ed4-6a55-4702-b6c3-02a719e2e804",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ebbb87a6-f5a1-4dc3-b40f-619344b2eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9459a96a-f303-4ca9-86f3-e5fc51107c53",
        "cursor": {
          "ref": "98dc8d03-206d-4ea4-9b07-ee141d826280",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "21add77d-2f8b-4488-8cc2-10d3af7c4101"
        },
        "item": {
          "id": "9459a96a-f303-4ca9-86f3-e5fc51107c53",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea312188-895a-4552-b6fb-ed242999cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841586c8-0c14-4648-9d83-00a84b423b90",
        "cursor": {
          "ref": "08135b6b-6329-4613-924b-2646d1151f4d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2feb6782-4870-4962-9ce7-f58b9df78dae"
        },
        "item": {
          "id": "841586c8-0c14-4648-9d83-00a84b423b90",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "051f4f5e-b9db-4083-b9d2-986e472476da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016cef0c-822f-4701-b825-2390e4ff3d4d",
        "cursor": {
          "ref": "7c32d5b8-1258-4fc1-b558-329d4177f8d2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6476fc9e-64ac-4a17-a0c7-67b9e9eac059"
        },
        "item": {
          "id": "016cef0c-822f-4701-b825-2390e4ff3d4d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a537b6a8-3773-4470-ac71-1cec7491c2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba2acc0-86ed-47de-bfcd-d41cc221f6ce",
        "cursor": {
          "ref": "18fb176c-a5df-408e-948d-b36a2f939e2d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "24fc8e1d-4dd3-43fb-89d1-25aa87aba50a"
        },
        "item": {
          "id": "2ba2acc0-86ed-47de-bfcd-d41cc221f6ce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d78ab473-554a-439e-8cd8-857a3d833083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db40b301-e9b0-41fd-9a5e-e957d7cb9e7f",
        "cursor": {
          "ref": "1ace88dc-dbf7-44a4-9ee2-28d2319eb399",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eaaeafc6-2a59-4045-8571-a98421bf514e"
        },
        "item": {
          "id": "db40b301-e9b0-41fd-9a5e-e957d7cb9e7f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ee7d5fc9-142a-4455-ab88-8c682f89ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef8d391-6091-4330-b214-49ee2ba0b67c",
        "cursor": {
          "ref": "b7c7eb2e-12d1-45cd-9bc6-170a1e9b9aca",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ab5c9a4f-f59e-4d61-af09-c78262259eb6"
        },
        "item": {
          "id": "1ef8d391-6091-4330-b214-49ee2ba0b67c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c9252c1-5fdb-498c-972d-418574ea0365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215ca817-1205-43a9-9752-a86dce4d5984",
        "cursor": {
          "ref": "5a60e5a3-7293-4df7-a585-6d66c627d2af",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3379dd7c-0ebb-48c2-9b3d-5deca6bff1ec"
        },
        "item": {
          "id": "215ca817-1205-43a9-9752-a86dce4d5984",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f976af33-f297-4945-93c4-933bc2e5506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60cac5c-8d83-4c8a-9780-6f088f961682",
        "cursor": {
          "ref": "8a20c194-fe25-40d7-a781-4e5dc8e1fd13",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "61c71586-1e70-40b0-b3f6-ec176793d4a3"
        },
        "item": {
          "id": "d60cac5c-8d83-4c8a-9780-6f088f961682",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "756afdda-d48d-486a-9748-f4b98e452cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e356f848-b043-4ab4-ab46-097607659f3c",
        "cursor": {
          "ref": "10a82ef9-8eae-4c13-ae85-545fede30cfb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bff11edb-4bd4-427a-a836-c704a99af47f"
        },
        "item": {
          "id": "e356f848-b043-4ab4-ab46-097607659f3c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4fa93738-5164-42fe-a797-1f1351167d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3c2924-e9b3-44ef-8282-f65a34a3cc42",
        "cursor": {
          "ref": "5da5c414-bcab-44b3-9683-4d0958f339cc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fdcedc53-dc0f-461e-8ade-162e96d44fcb"
        },
        "item": {
          "id": "7a3c2924-e9b3-44ef-8282-f65a34a3cc42",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ac03d697-7e23-47d1-9e18-6cafcb1ec4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcd0616-0c41-44a9-aa93-5ded9563f852",
        "cursor": {
          "ref": "664b55eb-2c7b-4bff-bf24-1525ee1ae6d5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9bbb3d4e-b5ad-4221-9bbc-ce987ef8ef35"
        },
        "item": {
          "id": "dfcd0616-0c41-44a9-aa93-5ded9563f852",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8288b136-673e-4701-ae3a-de4d3416aef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1e6559-3a84-4f1e-8fd4-4d73340c7e1e",
        "cursor": {
          "ref": "c5773319-6e92-4b4a-a1d4-95c3483f5b76",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "81cc5637-46d3-4ca9-b81a-241e57a5c4c7"
        },
        "item": {
          "id": "ae1e6559-3a84-4f1e-8fd4-4d73340c7e1e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a78fd0d8-a501-4a80-836c-cbcfe2ab6899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61d7dbd-4d1d-4fcc-965f-af2d7fa09869",
        "cursor": {
          "ref": "6f29be6a-87e9-4a55-ba98-5abf3380f3de",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "34891070-1cca-4e91-aec1-7ec93d457381"
        },
        "item": {
          "id": "b61d7dbd-4d1d-4fcc-965f-af2d7fa09869",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3cfc3a21-baf6-4adf-a6da-b947bf54e37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ac3b45-0679-4274-9d9f-29274bc0e7d0",
        "cursor": {
          "ref": "235737aa-64e7-4ef8-822f-a27081be4f4c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "99f7d6e6-a7da-4aaa-b742-3a608b5660fa"
        },
        "item": {
          "id": "44ac3b45-0679-4274-9d9f-29274bc0e7d0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "46a10098-2955-4675-bf8d-ef0fe76cd8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d534fd92-a9d5-425d-a436-0e5484e6c83d",
        "cursor": {
          "ref": "5ad44f78-22fc-4a4e-91c1-500bc28f43ca",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "30e05d5b-ed3a-43b8-b2cb-da8791acfc0d"
        },
        "item": {
          "id": "d534fd92-a9d5-425d-a436-0e5484e6c83d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f8bfd74-e741-4ebf-bef2-7a28f17c3081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb5ce48-fb1a-4949-b1b6-744878a457f9",
        "cursor": {
          "ref": "65df1ad5-e5ec-45f5-a96e-12598c3deda9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08d4c991-3305-4ab6-b13e-5e0b0ee4c0d8"
        },
        "item": {
          "id": "7fb5ce48-fb1a-4949-b1b6-744878a457f9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6c675a83-a149-48c8-8351-44762a833277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a91a4a-97f2-4a28-9057-b65dc08ec793",
        "cursor": {
          "ref": "d52b3978-d81b-461b-a2c4-9f9e5718fea5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "749cac27-5407-4343-b189-f96df8354e13"
        },
        "item": {
          "id": "d1a91a4a-97f2-4a28-9057-b65dc08ec793",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3cac4ef1-79ff-4e36-b199-5d3f9787e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9904a976-c9dc-4aae-8870-155a1ab9afda",
        "cursor": {
          "ref": "b50472e1-f4fa-4b41-87b9-fb3a66cafb32",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3790642c-20c4-43c7-adad-0a030d00e40a"
        },
        "item": {
          "id": "9904a976-c9dc-4aae-8870-155a1ab9afda",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "29df363e-324b-4e47-a3e7-8c7bfe693098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7987103-6fdf-491f-9502-da5c4df9bd71",
        "cursor": {
          "ref": "dc2fbf36-5441-49a0-9cbb-40ca550921a7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3aede371-2107-4514-8673-d5be0f940258"
        },
        "item": {
          "id": "e7987103-6fdf-491f-9502-da5c4df9bd71",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "50e482ff-43ed-455a-a36e-6b073ea5ca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489842a9-fba5-49e1-97e2-2a832a90488c",
        "cursor": {
          "ref": "322a647f-bde6-424c-b775-4f978497c017",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fae87480-2d45-4aae-bb36-2ba0d42da029"
        },
        "item": {
          "id": "489842a9-fba5-49e1-97e2-2a832a90488c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b05b8645-1238-47ae-a7b5-95e727b175a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e8b04-1de7-4251-b472-74495cfdbe32",
        "cursor": {
          "ref": "45041969-bbf5-461a-8725-b2ba5db922ff",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c36641f2-37f4-42d3-b136-9bf8ef7ac9be"
        },
        "item": {
          "id": "af9e8b04-1de7-4251-b472-74495cfdbe32",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e5306636-e559-4332-8951-0b21dfbadc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c98f7dc-e9c2-4c61-9b2f-169b290a23bf",
        "cursor": {
          "ref": "7c388a58-fa83-4f12-ac57-611d634439cd",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "360d153f-be68-4a91-90f9-8905c85232b6"
        },
        "item": {
          "id": "2c98f7dc-e9c2-4c61-9b2f-169b290a23bf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0e44a629-00cb-4411-bc04-1c6406db1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e57b7-cc79-444f-91e3-7a27f0aa1c25",
        "cursor": {
          "ref": "50197c3e-c011-4cbf-85e6-b5906c037c91",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "82760f65-9bae-4d47-8745-318ea366e028"
        },
        "item": {
          "id": "9c7e57b7-cc79-444f-91e3-7a27f0aa1c25",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b936cb5f-b789-4d54-a523-ca83c8d43530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b79941-d2c7-40d6-9b60-8ac92aadbc28",
        "cursor": {
          "ref": "c6bb7b33-3227-4343-b8f1-f895c961b98f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e048a783-c2be-4b78-bd08-02924706d204"
        },
        "item": {
          "id": "a7b79941-d2c7-40d6-9b60-8ac92aadbc28",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d50c1408-0f07-40bd-a0fb-3b62ce863873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd0b04c-0e2d-4486-aea5-257b11158afc",
        "cursor": {
          "ref": "62c7e6a0-caa2-47dd-b5bf-ca7fc5976b1e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "812c3d33-1ece-4474-8aea-54a2711a7140"
        },
        "item": {
          "id": "5fd0b04c-0e2d-4486-aea5-257b11158afc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7fa0d9e7-ef5e-45b1-ab52-8f5fac3d7fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a65b6-b277-4331-8262-3095ab023286",
        "cursor": {
          "ref": "4524a6aa-37e1-4267-9394-745cc3db665d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "477c66f6-baab-407d-90d5-952a36e9a8bd"
        },
        "item": {
          "id": "890a65b6-b277-4331-8262-3095ab023286",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6822e18-c951-4417-af05-ffd34771e2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743c93fb-a627-4e80-bf7c-8054ad580895",
        "cursor": {
          "ref": "9cb09101-4093-472f-888b-b5de5995343a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1f830d6e-cd2f-4e86-a96c-ed3cdc685557"
        },
        "item": {
          "id": "743c93fb-a627-4e80-bf7c-8054ad580895",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee585a39-12ce-4f7c-b682-0c26a44f3925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3b4e11-3fba-4411-9e33-048fae3bd2d1",
        "cursor": {
          "ref": "4f88f745-54cb-41c8-ae98-b70899dee5df",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4214e872-db16-487a-ae72-58bf83b2d0f6"
        },
        "item": {
          "id": "3a3b4e11-3fba-4411-9e33-048fae3bd2d1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ae7bb86e-80df-4475-9440-647a75bc6c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82d3454-d077-49d2-b07d-7567c2be7633",
        "cursor": {
          "ref": "4844c1d8-31be-4105-9fbc-6cfa26a2ad0f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "62b2f115-6636-4b6e-ad34-ce62c4dfefba"
        },
        "item": {
          "id": "e82d3454-d077-49d2-b07d-7567c2be7633",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5ed6c765-a383-4163-9bf5-2893647fd981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd212085-7407-48d4-9225-b141c8dfd7dc",
        "cursor": {
          "ref": "5ecd4315-0da3-4d39-834e-242cc0c967c6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "18049e51-ddfb-4f7a-b5b8-66bc6a7db991"
        },
        "item": {
          "id": "bd212085-7407-48d4-9225-b141c8dfd7dc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb18b59d-0c49-404b-8314-0652bfae0b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319374ab-e39f-4b30-aa81-4618c9245ff4",
        "cursor": {
          "ref": "a3709ec9-5dbd-4225-bea9-ab760b9add2d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "00120f8e-37eb-419e-8bb6-661b9b9f078a"
        },
        "item": {
          "id": "319374ab-e39f-4b30-aa81-4618c9245ff4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b216be8-3b9b-4311-a68f-2c7df51afa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee263964-0e7a-4508-83f1-a34b3150129a",
        "cursor": {
          "ref": "5ddc2e1e-bc0a-482c-adf3-f98077bb7c82",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aaefc9cc-c416-4673-b834-cc4133704975"
        },
        "item": {
          "id": "ee263964-0e7a-4508-83f1-a34b3150129a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7f7ac957-a254-490c-84ac-35dfac818c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd36e3c-361e-4e79-b1e1-3a48c5cf00e7",
        "cursor": {
          "ref": "8b153734-f63d-468e-8fe1-08936432edc2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c71c3e1a-05ac-450a-94ad-8fc3e7f1819b"
        },
        "item": {
          "id": "8dd36e3c-361e-4e79-b1e1-3a48c5cf00e7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f3790628-c5ae-47cc-a9c4-b7acc0e17ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ab7bc-bd80-48ea-a8f8-be88cb3de2df",
        "cursor": {
          "ref": "c933dc21-efe6-444a-bccd-3eddc6e8fd48",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c6d87216-2239-48ab-b6f6-12953ef48099"
        },
        "item": {
          "id": "365ab7bc-bd80-48ea-a8f8-be88cb3de2df",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2f359c6b-3139-4a5c-a288-1ab03f24e69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4a03c5-b289-449e-8b1b-98622f4e80fb",
        "cursor": {
          "ref": "8feee4d9-c60b-4662-a739-23ba4c292796",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "771d4def-cf9b-4d8c-b53a-f1c9e51260bc"
        },
        "item": {
          "id": "7a4a03c5-b289-449e-8b1b-98622f4e80fb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31c8e2de-4195-4012-ae05-c73559e35402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d31032-8db7-470b-8cf7-3a4e8d5bb706",
        "cursor": {
          "ref": "464a4784-573a-4732-b96b-121a3066e361",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "54e3c210-2e2f-428d-aad9-2b672ff01d00"
        },
        "item": {
          "id": "38d31032-8db7-470b-8cf7-3a4e8d5bb706",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28d17f8d-5833-4b78-8e9e-a00a41d20604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b0c95-c704-4b0b-a2e8-79f1be355f1f",
        "cursor": {
          "ref": "b79f1a26-9890-4580-b1a4-1986056ca9ed",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fc89d807-03c9-4dde-bd67-ae7ad3031c06"
        },
        "item": {
          "id": "438b0c95-c704-4b0b-a2e8-79f1be355f1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eee7fd67-5eda-45d3-8b65-a0d0ccf094b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7351fe-3685-4911-a7f9-0a2083eb0124",
        "cursor": {
          "ref": "af082bb2-c723-4fe5-ac13-539d95bc205d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "16db3172-3b4d-4f93-8b5d-d916762308e4"
        },
        "item": {
          "id": "1c7351fe-3685-4911-a7f9-0a2083eb0124",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dfd125f5-6ffb-4880-aa13-646ec7dfab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33b3943-63d0-4c6e-8dd1-1335ce95951b",
        "cursor": {
          "ref": "5e72e418-1616-41ac-a154-706801aef8ff",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d5250cd0-7a3e-418e-a149-79eaeb6f96f0"
        },
        "item": {
          "id": "b33b3943-63d0-4c6e-8dd1-1335ce95951b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "49548c28-1388-44e6-8791-453852d4f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7986bd2-c413-4b14-8ccd-ae15cc01a08c",
        "cursor": {
          "ref": "df0add2b-8796-492c-a798-cebe4e8e7868",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "faaf1b18-f9f3-48d3-b58a-6c86162c2568"
        },
        "item": {
          "id": "f7986bd2-c413-4b14-8ccd-ae15cc01a08c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc1b09d6-fff0-44c3-97ae-410e669fe324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd27aa0c-9def-4094-a303-95b91cd698c0",
        "cursor": {
          "ref": "65509ab9-c296-4cfa-8494-6e64b8c482ff",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b5c84e81-1457-4781-848c-a08e07bd4dbb"
        },
        "item": {
          "id": "fd27aa0c-9def-4094-a303-95b91cd698c0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c2b00be-839e-47e8-9d6f-460909086090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c006448-d847-4c81-891b-8bb351fa9044",
        "cursor": {
          "ref": "40b2a721-cb6f-4fd1-a18a-cc269d713dec",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "10b83dc2-237e-429e-b3e9-0c7917d1a984"
        },
        "item": {
          "id": "4c006448-d847-4c81-891b-8bb351fa9044",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4451b211-be1c-447a-8b26-f32898294793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43a82e4-086b-463e-a09e-169606c322ad",
        "cursor": {
          "ref": "5775a858-1d63-4456-a3eb-70f2f0c54635",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3232a69c-de85-44d9-8953-bba023a23539"
        },
        "item": {
          "id": "a43a82e4-086b-463e-a09e-169606c322ad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "63718d8d-f311-48f7-8a9a-79c12fc4dad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40a4fd0-50da-446e-afb5-285787aaec79",
        "cursor": {
          "ref": "b97dbd04-4e71-49f8-879f-049df65e204b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1156ef0b-e65e-4aee-aceb-7780d81ade46"
        },
        "item": {
          "id": "e40a4fd0-50da-446e-afb5-285787aaec79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a464e23e-d819-4b55-9693-1b8acec54548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1635347e-f0c8-4835-8063-91c427072bca",
        "cursor": {
          "ref": "d4e4f2d5-4110-4054-b0c1-501e53c1a0a0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a8beb0cf-f64d-42b0-a707-06785fc028bf"
        },
        "item": {
          "id": "1635347e-f0c8-4835-8063-91c427072bca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "45c3e01a-4d80-4c93-952b-3933caa73b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f843f96e-8809-4673-9fd7-057a5a9026f3",
        "cursor": {
          "ref": "68b38a6e-6415-45ca-828c-a49ce3ba27b5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2f17e18b-95bc-4b09-aea6-dfdcae6cfd9f"
        },
        "item": {
          "id": "f843f96e-8809-4673-9fd7-057a5a9026f3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4b91e4f7-885b-462d-8e56-4cd6c7c4d3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c15d635-ab95-4707-b338-b2d55edd4855",
        "cursor": {
          "ref": "0b366eb2-bd90-47ab-bb37-f98da741b96f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7addc435-3ddb-4d9e-84da-d678cf76eff6"
        },
        "item": {
          "id": "6c15d635-ab95-4707-b338-b2d55edd4855",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "610e1f2f-8b7b-4eea-b1f0-c4d666552111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0188706-252a-4df5-869c-5339dfac9b81",
        "cursor": {
          "ref": "33c2aed9-a8d7-4178-b6d5-0d7d4c1bd8e1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d29929e1-526f-4280-a93d-ed338fd98aad"
        },
        "item": {
          "id": "d0188706-252a-4df5-869c-5339dfac9b81",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc5a2e4d-3249-49dc-8316-63d9d5b0bb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f698a-474e-480b-b9f8-bf260edc5dbb",
        "cursor": {
          "ref": "9cec4e01-0dfc-47a5-83b8-9d19ff5a772b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d897a108-2c5a-483f-9dd8-c14a3624458d"
        },
        "item": {
          "id": "d31f698a-474e-480b-b9f8-bf260edc5dbb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "16bf6365-7dd2-49e5-8062-9a3c6a36654c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e2aa3e-ca02-425d-abd9-1ea01992b7e8",
        "cursor": {
          "ref": "9655d733-3cde-4fd9-a2c6-fef964780126",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "00447e1c-46c8-4e37-aa1c-f061d3832213"
        },
        "item": {
          "id": "21e2aa3e-ca02-425d-abd9-1ea01992b7e8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "016fea0b-1efc-47e8-9778-85b75c0dfd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05465bd2-6923-4737-a92c-7ade1047341f",
        "cursor": {
          "ref": "407222df-9467-4701-b6a3-416f4a04cbae",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c3298d06-2674-459a-b83a-e1aa99967a83"
        },
        "item": {
          "id": "05465bd2-6923-4737-a92c-7ade1047341f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bb8d0a60-0ae8-40e3-aba7-0250bcb23f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a93a9c-27c1-4e11-99f3-7225d8cec008",
        "cursor": {
          "ref": "a1f59d15-452c-49b5-8776-5aea4879f8e7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "567cd0c2-8204-460b-b588-7fe64527bd79"
        },
        "item": {
          "id": "17a93a9c-27c1-4e11-99f3-7225d8cec008",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f94e4382-97d3-4d3c-b368-f6d794a97c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d805f5-d26d-47a0-9a9b-6cc20d47c222",
        "cursor": {
          "ref": "737d489b-ce8b-47b2-b017-1b5d2509e670",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "07b018b6-c290-4174-9401-a555a8ab7b96"
        },
        "item": {
          "id": "40d805f5-d26d-47a0-9a9b-6cc20d47c222",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2a3d922c-47e9-4817-a537-1fa520f6fd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0989425d-cf48-4992-af10-d903a4c67b64",
        "cursor": {
          "ref": "0f841626-0f41-4947-968f-0c816c8cf056",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46539495-1f63-44fc-bccc-4e0c9056ba6d"
        },
        "item": {
          "id": "0989425d-cf48-4992-af10-d903a4c67b64",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fab24ec5-8b18-4c53-be78-98d01f08794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fc315c-f0b6-42d0-9818-6dd7639c094c",
        "cursor": {
          "ref": "9d17d1e1-a8c8-4aab-93a6-011350ad35cc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5bdb0c93-b399-43ae-b0f3-57cc41311447"
        },
        "item": {
          "id": "84fc315c-f0b6-42d0-9818-6dd7639c094c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "65a2d711-253b-4604-aee4-9724a20779cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e10b88e-83c2-4de9-af78-3b91022d3d50",
        "cursor": {
          "ref": "a5c25994-312c-4695-93dd-7b98625899dc",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "94e32ce5-f95c-415d-beff-689e61d98343"
        },
        "item": {
          "id": "3e10b88e-83c2-4de9-af78-3b91022d3d50",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fc008be5-84ed-46e7-a080-217099b57c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0c33ed-da90-4285-8d9c-b6520d43f183",
        "cursor": {
          "ref": "31975830-e7f5-423f-99b9-0fbbb71fb29c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4dfda42c-d045-494f-b6dc-de835df8c8c9"
        },
        "item": {
          "id": "de0c33ed-da90-4285-8d9c-b6520d43f183",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "71e2b06b-1849-4d9b-889c-9a27e5b43b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a5225-d09c-40ce-8118-b801cd2d4320",
        "cursor": {
          "ref": "f342926a-e604-464d-bd8b-859197f874dd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "35838517-c551-4240-a14a-57a65d90b5f9"
        },
        "item": {
          "id": "973a5225-d09c-40ce-8118-b801cd2d4320",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d018db26-b801-462e-80da-88662fdc5398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24caf1cd-a802-46be-82e4-16bae53a89b7",
        "cursor": {
          "ref": "f5447057-61e5-4c64-b1da-30ce4e9de1bd",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2049823e-f56a-4675-9cdb-bcf98cb4bed6"
        },
        "item": {
          "id": "24caf1cd-a802-46be-82e4-16bae53a89b7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4ab31ded-fa46-4ec6-aad7-dc4e8cd2446c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e53298a-ca89-4032-988a-f74300ce195a",
        "cursor": {
          "ref": "09a7d922-7311-4af9-a7ab-0cfac4978f4e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4d383fa6-cbbd-44ff-9da5-d029a862f0c2"
        },
        "item": {
          "id": "2e53298a-ca89-4032-988a-f74300ce195a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8bc1761f-cead-4f26-a5df-913c8f8f98bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b02b0b5-3ed0-4b78-bfc7-02fecea0be24",
        "cursor": {
          "ref": "fe30d90c-4a48-48af-bf05-34f88c9cc251",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6fdaef4a-eaa2-483c-86f4-75098662bc7e"
        },
        "item": {
          "id": "3b02b0b5-3ed0-4b78-bfc7-02fecea0be24",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a65ca5a4-c214-4b6e-9efb-ebb2fe6ea11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa293df-a13b-4d0c-a6c8-042b7ce4e52e",
        "cursor": {
          "ref": "e8f52c49-b4c1-4836-88db-b2293a4cefc0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "38ef4ce2-f02f-4ff5-9961-d63d60110572"
        },
        "item": {
          "id": "6fa293df-a13b-4d0c-a6c8-042b7ce4e52e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4c57894d-e8ea-41d9-8f78-7238dbe4c4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa551c71-0c6f-4afb-aa44-d8c6e5481f6e",
        "cursor": {
          "ref": "72dbfd2b-c3d0-4422-84f2-c21ddd9de443",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3cddbba9-1dff-48c6-bd0f-afa996eaf968"
        },
        "item": {
          "id": "aa551c71-0c6f-4afb-aa44-d8c6e5481f6e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2541f9f7-983e-45ad-aebd-897fbe883bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f4fd4f-cfc1-47c3-b6ff-6cb72107b9cf",
        "cursor": {
          "ref": "73a1aa38-0978-4c85-a9ac-a1e542622655",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8cde085d-1ce5-4391-a9ca-a69f21b376ac"
        },
        "item": {
          "id": "b6f4fd4f-cfc1-47c3-b6ff-6cb72107b9cf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ffdb08d7-f0d9-4c97-b04f-ab27ddddd795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53365d7-36c1-49fd-a081-3953d9c35d65",
        "cursor": {
          "ref": "3d745f96-f341-4b16-b801-5bed09393921",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "43d96cc5-3167-4701-a81c-5410a0a7737d"
        },
        "item": {
          "id": "e53365d7-36c1-49fd-a081-3953d9c35d65",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "91099b2a-65b7-42d8-a22c-d78d33afd790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a187d821-ec29-4853-9469-005ad6f8f6da",
        "cursor": {
          "ref": "95d3ed5d-0990-4d00-a046-bb21574947ce",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0e4e43e8-8743-4612-8bcb-eb128e6969a2"
        },
        "item": {
          "id": "a187d821-ec29-4853-9469-005ad6f8f6da",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "74dd9491-def6-4482-b234-bcd1baf82999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76baceed-e3a4-42c8-83ed-3028cd86325a",
        "cursor": {
          "ref": "1894497f-c905-49c8-bf3e-eca71fd602f2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3b9af5b1-c266-453d-a17d-9685e5ca76e0"
        },
        "item": {
          "id": "76baceed-e3a4-42c8-83ed-3028cd86325a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c8a8b997-20c8-44f5-a7a3-a196575f9310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905054fa-eae5-47b1-bd41-9a8110ebf355",
        "cursor": {
          "ref": "5483a822-ce78-46b2-8e80-bd0a3e009d2a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b902f5e-be20-449d-8ef0-12f64b80b364"
        },
        "item": {
          "id": "905054fa-eae5-47b1-bd41-9a8110ebf355",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "329b7915-8b8a-43aa-a7fa-d3d5d98165ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828ecbc-ea45-4aac-b233-e7847e07836e",
        "cursor": {
          "ref": "a89784b5-033d-482c-b911-7a4ba4ab5748",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "05dfbe2b-6fc3-4bda-8393-9d5acef1b065"
        },
        "item": {
          "id": "e828ecbc-ea45-4aac-b233-e7847e07836e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f1b55886-90e5-435a-9f37-09d883875b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441fb6f5-120d-439c-b1f4-b8ca466757e8",
        "cursor": {
          "ref": "35d6af1b-a6c9-45d2-977f-978a9e4c5047",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "17e8beff-7049-4efc-ab28-ac28214360fc"
        },
        "item": {
          "id": "441fb6f5-120d-439c-b1f4-b8ca466757e8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3d9ac070-8cdc-481c-b075-b88b01316bb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e83662-e3ed-474d-a34d-39b18f74f060",
        "cursor": {
          "ref": "d339784b-69b0-4a12-8ab5-778a99cf361c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "66a393b1-095a-4cff-a1d6-a401656b3fff"
        },
        "item": {
          "id": "b8e83662-e3ed-474d-a34d-39b18f74f060",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1c5f0ea-abdf-41bd-a717-4465700c2b92",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac223387-03c5-4a52-b8d9-1d99e52421dc",
        "cursor": {
          "ref": "bc6b2286-3a66-4764-ad9b-6f559e645951",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "395451e1-1b15-4f79-b364-a5e01287866c"
        },
        "item": {
          "id": "ac223387-03c5-4a52-b8d9-1d99e52421dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "439b290c-362e-4403-9e0d-25f69753ea9e",
          "status": "OK",
          "code": 200,
          "responseTime": 3874,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "887df2ed-db0b-42e4-86e9-7ea4b5b0e568",
        "cursor": {
          "ref": "9517b172-28f4-4d50-8b93-046accd3b620",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9dee40c9-50cf-4a9a-9b2a-81610836db9a"
        },
        "item": {
          "id": "887df2ed-db0b-42e4-86e9-7ea4b5b0e568",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9d827596-bb0b-4df9-8057-b002572f411c",
          "status": "OK",
          "code": 200,
          "responseTime": 3394,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a040a1d-8041-4d87-b18a-ca51d054b739",
        "cursor": {
          "ref": "3845685c-ccfb-440c-a2c0-9fc60c4a024b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "84666d20-6e2e-4cf2-aa8f-9d0dd03b6404"
        },
        "item": {
          "id": "4a040a1d-8041-4d87-b18a-ca51d054b739",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "671e3919-8eaa-4f51-9c62-4a5cc1c1eb6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a040a1d-8041-4d87-b18a-ca51d054b739",
        "cursor": {
          "ref": "3845685c-ccfb-440c-a2c0-9fc60c4a024b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "84666d20-6e2e-4cf2-aa8f-9d0dd03b6404"
        },
        "item": {
          "id": "4a040a1d-8041-4d87-b18a-ca51d054b739",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "671e3919-8eaa-4f51-9c62-4a5cc1c1eb6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e6041e-9e76-434c-942b-d6709f8a9f45",
        "cursor": {
          "ref": "13c50dbd-851e-4ae1-8df1-8cc4b49e8059",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c39dd45b-d99b-47d3-bcf2-617a05cd219c"
        },
        "item": {
          "id": "02e6041e-9e76-434c-942b-d6709f8a9f45",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f82fc1cd-f4a7-490f-b6da-2ea74e0d5488",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee16d1-1802-4ca6-92d8-9755a160fe51",
        "cursor": {
          "ref": "8d684ad2-fa7f-4ed1-90af-827bcccdabee",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8ef60d63-617e-4c14-98f9-f87feae29348"
        },
        "item": {
          "id": "14ee16d1-1802-4ca6-92d8-9755a160fe51",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "53272583-be7d-42a2-97ec-4d7fc5b000ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}