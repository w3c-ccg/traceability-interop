{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7d990dc0-72df-474e-884b-eae968dfc925",
        "name": "Clear Cache",
        "item": [
          {
            "id": "94a9bf7f-9ffd-4572-963f-329bf3580c23",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bef7cf8-6540-41b6-8546-f0dcc4f15630",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "277d06cb-5273-4650-b3b7-b56786d942a3"
                }
              }
            ]
          },
          {
            "id": "aec3c4fd-a9cd-4c5b-a25d-3116db435bf3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "744d91fa-d06f-4441-b49a-8308985d98b4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84b194c0-7b6e-4be6-b009-c74676cca200"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "75589d64-04a9-4025-8905-d2d2f4928a3b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "19dd10c5-2043-42fb-86ac-0314792c3498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3f92f59-4856-4f05-adba-8440d36515cb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8348ab01-eaa7-44f5-9401-209521043759",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03cc253e-d9d5-4489-a753-e7bc8bb772df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65a6ad4c-34ce-4faa-9d29-ebd60795945c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6894118d-103a-4e31-872a-70ae2fa95328"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "949a16ac-b64f-40a6-9123-68933ccc4de1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e200f23-d3da-4d53-81c2-aad752a330e5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98654cfe-7396-4675-9f50-f1419f1a9f25",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0a811d77-2b65-4490-9e92-8fa446fe0bcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f649978-5a1e-4560-8acf-597a46043192",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a76fbd7-ef8b-47ce-a55b-53d5ac712e1d"
            }
          }
        ]
      },
      {
        "id": "91843e5d-8c4d-4ddd-a937-5477560f5fab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "afb294b8-3188-4c8f-ad5c-f13fa4ad871b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab228093-dc7f-4e98-a711-f0a07224f7c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c534e7c1-8068-48af-baef-f0b54f2cffa0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210f173-1ef0-4732-8fc9-f1db09347a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caa3f09d-c609-4878-86d2-761a1d14f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e704aa02-bc03-424b-807c-9ece5e4d9998",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f3c101-4793-4401-9d33-2c0f299da531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7291f9aa-20d9-4244-8683-ba4d92e29b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4061a48f-6d9b-42ac-9e47-994ab104ea8c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f6b27e-17f7-4563-a4b0-975f11c8136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b77a21b-0c96-4a6c-a625-7559ccb0790e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "577afb35-4383-49c9-a81f-6bdab2183cc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a74c22cd-509c-40d9-a019-a475fa48f5fe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e8607-e104-40e3-9cea-5a1ff813e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84c9dafb-3cc5-491a-812f-826645518d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aff536-4940-49a0-a71e-71c046239e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8dc18-7c0c-4e3c-90f5-be9da29f6d46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1b1f7f7-f406-4caf-b1d9-fc6a279af475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "087cc283-032e-4873-858b-7e4a4844b4dd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "449595ee-6e54-4809-b2f7-0a9b3469473f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9f02bf3-0e06-4509-afe6-1c24acba57a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd7f8a2-2df3-4c7e-832b-1aa6aa3c68e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2160744f-2bce-422f-9f0c-15a300e86e10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2875857c-7cad-43f1-86bc-2cea47f4505a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c1e2665-b93f-434a-84ab-bac96e58d9ed"
            }
          }
        ]
      },
      {
        "id": "2f755d2f-974a-46a0-b45c-a62db87b008e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ee7d16d0-4045-4b12-ae35-93dc3626d91a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d917c9d-0f9c-42f8-baf0-a4048b107f3e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8999f605-aa60-4b91-91b1-77c7521be1f8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a569f5-6733-4596-bd4a-ef93327ed13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d76552-c3a2-4cc4-8084-c22309729bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577a48bd-3304-4355-9981-d0c9fe47337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "665a779c-e1e0-4884-a47b-1e88443a2f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a278712-9225-4282-8886-6db8b8733972",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9092a8-c85a-45c4-9bb2-a9aea7f8d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3384ec-3ad3-474f-bdd6-20f43e8c2784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cffbd4e-e8fc-4f4d-85c4-a7acce71ec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27df7239-6a7c-479a-88ce-0962d67efb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c0aec-de1f-48e0-b3b8-5d6bf6a97860",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79861fd9-52bd-4fe8-8242-ceda09b0089f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2da2d2a-62a1-41e9-aa04-223a256ec755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6994df-54ee-495a-97a8-bd9ef7e4aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0e0b539-230b-431b-b761-8394cd40d1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1312f775-6ddc-4aa6-abbd-cb4eefae944c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458e3132-8c72-4e9f-aada-5ffefe904a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491bfe6d-e243-4d22-b5f5-f04ad74b720f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7edacb-e1c8-4a8f-a85d-0de3e8003d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ebf9053-9977-4c0e-8542-e7e6774ad244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc2b9c5-25cd-4daa-b5eb-60d0b9ac6228",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a52e38-98ee-4270-8f48-207fde9a4b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55300f2-a2a7-412c-9a79-45ff85241a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d63cee-70f9-49c7-8a12-26b2d800f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b228a7d7-fa48-4021-9aba-06ec63e82abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3a266-74f9-4bb3-87a3-9684c837fcdf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9be507-fa3f-458e-baf9-3d61188ac778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a72ca3-87cb-4a8a-b179-d32c509086dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760c8157-b44e-4afe-a845-aead456fbe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b34111-fba3-4eef-b46a-3285a50a8ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c66966e-d4a6-463d-bb89-71bcea16b46e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89213354-55de-4b8c-9246-d13cdb88f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727ba0d7-6eab-4731-befd-2a88636cb872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52ab0a7-49d5-412c-b765-e6bb966019b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470764c3-fde2-4247-adef-bf9454b24523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206afda-0f04-4609-b5f8-ca4d37bcafc1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb0fa20-e1bb-4de6-bbf0-91a28c5d329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece0afac-9a5a-44b1-95f7-92c500a6d4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6171b1d8-5a76-4098-981c-b1a82adb1ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faac4a57-ce7e-45c6-ab41-bd8e1f9b002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ba6075-5456-48ad-a9a4-6b96f8efc75a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2486cef0-228d-4192-b92a-68946922c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f354be54-8f91-4005-81eb-c70c56c81207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c652d27-57a6-4e34-b03a-ae93b5925ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eba029b-c1e4-4fdf-94af-78ee7f8acbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666cf542-9d30-4edb-b0dd-ccf222d0de0d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb8e5ae-6eb5-4f3f-aba5-6259146201cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63254e4d-4b61-4b50-aad8-d64a4410c5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276514c5-7dbf-4ee7-9524-a3894c33ea93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c3232ca-944e-40ed-a232-92a315304b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3665d786-7e41-4e32-9851-c674735e4b1b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c39f4c-7f0a-4854-be36-1873be84fef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7270a75-666d-4579-8aab-fbd759689646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364e73ad-d675-4be1-a06c-d611da230de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb03b88-920e-405b-acf9-9b803bd6e918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa7712a-fcdf-4ecf-b1e8-4d3b0e00f7a1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2491bf84-4227-4650-b3cf-46e58aaa5821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2fa0b8-e264-4cd6-b629-8394b63ddd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562ccf1a-bebd-4a47-b6ab-ecf9bbca8f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb2c3e28-3dea-4ebd-894f-75e86cf65243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a84176-89f8-4967-9081-1bceaed158ff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886ac0a-3263-4380-90cb-b5ac76bbf794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35694597-88f8-4620-8183-e5c196781fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716ff7df-c92a-4520-a47d-a89c146f5d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69316602-4361-4b12-8c90-04e2e42de246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aff569b-e474-4409-8b54-958172e7ff6b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33d9ca7-c2db-4926-a14d-5bf48760151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95354e75-576a-4fc8-a8f5-313e67610a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238bd13d-df2e-411c-a977-b0a7ca417461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4852b147-21c9-401d-8d04-b75a1943646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9b5ed5-e4b4-4a81-9435-0da0bd71cdd7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd03959-110b-44f5-bfa4-f6688d289eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf0c2cf-07c0-4a46-9ff9-470a0d4835d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cbfc43-aba4-4a39-b116-ea0375cf9d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37a8bbe0-5002-4ca2-bf04-d4c1e9b2e8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf66d71-06c8-47fd-9a8f-73f66ba6cb56",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560d34b6-2c59-45e5-9b55-618cc6bfd3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b479240-9330-41a4-8d8c-833ddfc9042e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b3ea4-08d5-456a-86f8-0c13192ee990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe54f6a0-5885-4406-93cd-e151f84a5b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d30cc-c198-4927-ba81-9f7fc976030f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dc7c72-13ce-4f7e-8873-e3c42c7fd95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae100b0-b428-4515-92aa-c2050108b618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ee561-c829-4646-adc8-6c6004fb1c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0543b69e-4c28-489c-96f7-7a5aa90f5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38168df7-9b67-4f48-a332-a336da8732dd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3ddc4c-97bc-4a91-b696-d409161ef786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18803299-6b26-40ee-9e38-70d7bbbe9dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b397d41a-905e-4787-bff7-9db18c57481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b766c2b7-7805-4d2c-a73e-8cb412cf0cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e6d7d7-ae16-487f-9f44-6d8425b395e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7388a6-8474-4d0f-aa11-de289071fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7859f6-2268-4fc6-9b30-95d9ef378655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d098411-2f0f-45a2-ba27-f0427b0976c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3c6f48-293b-4b43-85f7-6076edff126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a396ec-2a9a-4464-b63f-80361d2c9897",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc295e8-b8f7-4942-befb-0bdd025f3017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243b39c9-fe29-4c35-af34-50ed97cb3276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f951fe7-28ce-4b08-a278-5e8d23a9ab1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e8fbe4-e6c2-4928-a984-0ed22e305a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361fc70-f4f3-4208-9e7b-cddc27fe3602",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47df0423-2d42-4001-be94-53aa901b85f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9f4950-04e1-47bc-83e6-ba7faad323d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da87f06b-529d-4766-ad47-60efd0b73b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4d98a4-1865-4dcc-9405-2568f764873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a30b93-7eea-476c-9de1-869d6ae2f618",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207b4af2-053c-493a-9cf6-4ac2ebd5a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763eeb14-fbfb-4b56-a109-00529b8999a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b67167-2811-4648-94b6-39586898d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df4a42e-a7d2-4585-9d65-14d0241ebe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41dcb8a-0bd5-48e3-9f2b-7331066df810",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05013eb0-cbc1-44ab-88d7-edfa672ba0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7b2308-514e-4ec3-95ca-5141f2644f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b7ffbb-b532-46c9-95bd-42bdf1a2fdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6441198a-27cb-4168-b64e-f5281f3bf421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7379741-bfdd-4c53-8ca0-27f8114781dc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f6c1d-c0bc-492a-b8df-d0f982f11ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0ce5cf-b9c9-4447-a333-04ba4733bbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba0eb71-9ede-4a7f-9c8f-2277981fe493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "912a0e11-128b-4921-b707-f79d5b59500a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e4c291-826b-431f-92be-cf0ca3cc88a8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e856d1-122e-448d-ae8b-39130a1ff99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5456ce81-a347-47c2-9284-e0c972da52b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af2553e-0dc3-44d1-ad52-84368f71603d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70773e5c-282c-419b-bd20-81072b81669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fb01c2-e845-421b-81f0-6a425c9f1ac0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70eebc6-2ebc-4859-bc6b-e96061ce1536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54c23d2-ef6a-4cad-bc55-b277244a9396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c769db9-dcff-44eb-88f8-400d4f0eb222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9bde5a-b5b3-4165-bcc1-2100e674e5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b863931-4b24-4beb-89d0-2c79a571f875",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f5882-c457-485d-9ef1-7ea370fd82e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6a049c-18fc-490c-8f07-a15df105341d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280c64dd-d3e6-48e2-a6d9-099eabd2198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b031cf1a-55af-4fdf-aa7c-908cd85290b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bda09af-efb0-44b8-862e-6616e805e32b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce44288-68c7-4b0d-8921-0f8dabc85f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14700184-b5f3-4648-b4fb-2ccc5ce9913b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e546cd7-dd21-4e4d-94a0-1642e64925c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a36bdf-3282-4a39-a520-65de523ed841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90fad1e-2521-40fd-b493-0bb5b2c901f8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861bc42d-c0a0-4e59-900c-aaf0d92c9b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a1f940-eafa-407f-9ba2-413da228ea8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f228ed-52ad-4bf1-8dfc-cc35ed0c2599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eda6cff-f469-421c-8946-2cddb5fd04fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b586a-47e5-48f3-915b-0ca2189e81d1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0687031e-4192-4c54-a479-afbe9c41e368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f528644d-fc98-4ea4-93aa-78074d593347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffce093-2701-4398-be94-06ab320a8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e8ff18-174c-40a2-9d3e-aadf7647e5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80960c9-8a56-4386-9ef0-943bf4069f42",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42b3b1f-3cf8-4fbb-a7c8-372e62186f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e99d5f-0151-434a-9f12-4514c3e49d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe4dc5-e3ec-4299-b245-746f71d56f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee38ee83-a53a-42b4-b308-be291b7c70f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49dbc8c-77f5-4cb4-934a-488fbd751d52",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c47797-01b4-4fca-a79c-d1e905e4e01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a423c1f0-35b0-4484-8162-8c3fa1b9bcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96d5250-5ebf-47c1-af1f-fb49285c3df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aafee86c-6c89-44db-b485-9566cae4d33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532be862-30a0-4214-8c73-4470d579f314",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c7404-2f38-4781-a206-8d548ae3075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4583686-9919-4793-a3e2-4a87e5d475c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6748094c-b34e-4c9a-9d5f-16a82373d7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4e8f30-8ee4-440e-99cf-c7d54611d265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb33516-0319-4916-8283-151e2d41a2e0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b6557-703f-48b4-857a-ef69552c7e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae68a8d7-b47d-4373-947a-6058cd475315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52baa615-46f9-4503-9281-a9d9137e76df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b247d36f-1f2a-4b67-9d30-033f628631f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb434dc-8434-4b2c-9971-94d122a132c5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635e690-039c-42b4-809d-a20494e906c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547e05d2-37d9-48cc-a4ce-552f929b5f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cf55e5-0dbb-4a8b-959a-6aacfd024734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6a1aa7-9a4b-4c7c-b46e-a2911afaac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da7e022-ef2f-417f-8904-36c824fe20bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adb00ae-6b34-4bdd-b74a-f4cd49262c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e495d64a-d48f-42ca-a556-57674164df52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac95bc-9615-44bf-9015-f8e6ebe04fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52f72e7d-6bc7-430f-9d7e-4800bf5bdb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf392d9-2504-4ef9-a637-7b52c31bd6de",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb42f7f-8d56-4de4-9101-6f21bba73ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54b6e02-0ff1-4c2f-a3fe-ee0bf01b5895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da4755-cfef-4abf-a7c6-3df5be494f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3055d76f-30df-435e-bc9c-d704e2188fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ef76e-16d7-447d-a325-495adb5ac259",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4915cba0-19c8-46ee-b7de-a2581b9fce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe5c4b7-7b89-4502-8904-a5b104f142fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad74db15-7b0b-43f1-bc7d-bb4e60beaca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31dec922-a3ef-4793-a22d-ccda3f7be215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1780882d-95a1-4639-a4ab-c480c570ca03",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341444b3-655b-457d-a122-ffda862474a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98908530-88d6-4af3-aed9-4d9707cacb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c7256-9793-4cd5-8cdd-8527a609d5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fec6023-0c65-41a0-a804-351e183ec29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c360169-8ec4-433a-b8e7-44d1671c765c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b4c057-ad0f-4f31-98a9-b90821104f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b015dbb-5d7f-4312-99af-ad3201c7c07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961692dc-16e6-4882-a31d-56e2b0dd0299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20dc871-efe9-4dad-b673-ebcc9e2fc4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57a2225-c214-4350-b2a7-ed66f81af04f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d396e7-d6fc-455e-8784-3c403023bfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ae741d-c199-4a6a-99fd-51ae502c8969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f0a4fb-2112-49f2-a0c2-48163970ea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff93429-482f-496c-9234-3c48a1f0badb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b63760-0447-424e-b364-a3ee1a958656",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece8080-32a6-4742-be76-5a2cc28e50e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4b1ce9-d5e9-48f8-a859-668def958157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbb50cd-31cd-43ab-b334-ace07d262b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0d9a93-a983-4df2-bda8-758d9b38e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b0d70-b298-440c-9d3f-aa173bfaeab3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac1d32-4298-4f2d-9f84-8a90b7cc7332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefc16be-930f-4ae5-be55-dd1a50881549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa942119-49d8-4cad-bc91-0a2eb0ea7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b4a90c-6dc4-45d9-9c3a-9ea1c247f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae6eed-f5a4-4eb6-8e52-8c978cfc57fd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7816fe-ffc2-4357-920e-16314c034d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ea7d8d-e4b8-459d-b274-b8ca0a3897ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a87d8d0-a381-41d5-92ac-64ced87a5676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e59edf-bb00-4dec-bdcb-460fafb8fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2addf0f9-2a12-4f8c-8c15-89554a342913",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94afa608-ae5d-42c9-90be-cd37154398d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078cf910-5f72-4c04-92e1-cd3ae414d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77830ddd-2457-4d87-8008-32ea666fc4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95633172-be4f-411f-89c2-9a6aa08f01c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de638dd-bd8c-4917-bb92-f02497f7f311",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b43f3b-7b0a-4d4e-b4e5-cf46c879c084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cde417-ed8a-4a83-b29f-bbac9cc92c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf3a7c2-1dec-497a-90f2-24cbf5d56151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "714c16ef-73ef-43d3-9f1f-2176b69b7b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87854c1b-cbe0-4f24-abc6-af0997de3aaf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec4f4d-b126-4e0b-ac31-6b093b455dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098da203-42e3-47f6-a88a-750d34308ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d296aa93-4435-45bc-a7e3-c703d496c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ae193d-471e-40ca-a6d9-b26d7ce3fbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae9d057-5e57-4fa4-99b9-8b16e6394948",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628f98cc-b61c-4813-bc10-b37bb8be5d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4167ece-0826-4cc1-9636-b453fe9360bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9432cf97-6efe-4abe-9d10-1a0df45bf349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5532db4d-601a-4f1f-93d2-6412d64d8b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b0fac7-377c-4c4c-97bf-31df15931b7e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46efdfca-3832-40ed-9f07-1f43c8d27c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a914ad1-7502-4994-9bdc-0e22ac58d80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58a08c6-7ec1-4fcd-94bb-d84516c16755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b9857a-9432-48bc-97f0-8582ddbca570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7e217d-e64c-471d-9b6f-fec1a1304ff5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc0e02-e2f8-4a31-bf81-46421aec914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de30f4f5-1525-4245-ab45-56e4e1926325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcbb8f1-cf0b-4982-aa3c-f092acd1a096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b31d7bc-7cd8-49a6-8faa-3f14d5a651fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296dd54c-99fa-4b01-a7f7-86e8b7c96523",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2fafcb-2cd7-4a62-8317-c279326371cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b14059-9fdc-48c0-bead-9460ad4c2e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1223b47e-32a0-48e3-b404-fd9567af7f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5eefbc-c48c-40da-b7be-793977b020b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dcd4ba-413c-440a-a9cf-cbaa77d89ed4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6fd3f9-40a3-4cd6-9be2-306e04a8fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2edf29-7fd0-4799-8b33-d01cd2c3b054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bac6495-69fe-4335-9e51-a04a92332e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b600d4d-e102-420b-b1f8-830d2caab4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c93892-a00f-4d78-a85c-bd9bc3ebc3f1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016662fa-f90a-45a0-a5ea-2e0599afef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0b456a-e396-4445-87ac-09e3974af36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52173716-3189-4e5a-b522-b3f788fb8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2279459-4051-48b8-9b50-a4f18b19dd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60fa277-3e01-422e-b7ec-8298394e6bb5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b024742-1750-4d1e-b81c-8fbdec66e609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47082000-ac51-4b57-96e7-26b7fe1cc141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b277092f-1118-4025-b09c-74ebcdd05bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32bdedf4-0f40-4e29-8bc5-010f17e9a61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f87bb19-0ffa-4ddd-bc00-30187bea4331",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609946e3-b4c7-4833-a4a9-f7eeca4d0219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfbd85c-58fc-4dbc-9783-9d0ce861a495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882496c-0fab-47b5-9987-ae8f8957c17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cdd8b1-c3c0-4cfd-b9a6-135c37cff79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2b16a-9d3e-4582-83ee-0ed8d828c56f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d02af53-4800-4a9e-ae59-24c1e744d388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c8bbd7-9ceb-4752-aa5d-769bdb944f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f8af3-3e2b-4c3f-84f1-1ee9312180dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "623d893c-328d-4969-b1a5-bb7c7b1b0d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d220935-2fd4-4d6c-b772-907805c5d1a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c00926e-872a-4b66-8703-c67ac130f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dba67f-c1ff-4cae-bd25-ff9293e1c25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb3371e-dbf7-4dc0-8f2e-f56dfe9869d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5df088-b02a-42b1-bb76-8009c3e2c601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d4055-e959-41c7-82a6-1cd6fa2aae09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424b715-2224-46f3-b847-edd852732d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311cc07f-eead-4fc3-8df3-f2b3994c18e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848a2fca-c838-4bdc-8cf8-b05877a72704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57bd052a-934f-4f36-a136-890f47e07300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02deb9-191c-479c-87d9-98ec6a6e629e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d69f867-37b2-4e5c-9901-36e13a36411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dcae4a-55f8-4498-8f79-0287fadb110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cde9405-bbe3-4880-a8a4-e1aa6d121ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78088b7b-d8e9-40ad-9b09-cd35c257fdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7a975c-dd2d-4583-88ef-cad48f4bb0e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d08a07-cbca-4847-a1eb-65671faf0cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714c99f7-3593-415e-8f3a-b391c7d4a4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6f1411-94a6-4fe6-8a13-24d8c762f425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3bf7c3-9116-4eb4-a259-34429c10d361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719dae8f-cde5-4b37-b409-d88983412e0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea751f-ff50-4fd3-abc5-a7fb6b60a373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6d8727-bfd4-4c23-916e-2a39889ab770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb66936-435b-48cf-9755-fb9efc042a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "434a5e8c-eb42-40df-b530-45bbc9554a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3cd03c-118a-499d-9b87-fa7d0c4bc4a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e923be-640a-4005-9456-133e5788de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86666bbb-90ee-49e9-a6a7-efe55fcd6b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba0b684-bd36-4eb8-a920-4bef0a194372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef47a30-1e59-4911-af3e-7dacc8d0125a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01f5ac3-50bb-4c62-ad45-cc4e607d0a0b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d6740-a894-4a8e-889a-e0236d450150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17ef5dc-4e9e-4c45-85fc-a181fc28b6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fd51e6-887f-4fb6-8fc7-197b292598d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba9aa1a-6a41-4261-b6a2-bafe533d99bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e6dc87-44c4-4b60-b688-53af07332cac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd5f01-3919-4aa6-82ec-c94c9e209be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c75826-a4b7-4ecd-a0d2-44022c1772fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff64c03a-7b1b-403f-94bc-735bb021d5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e5222e-8a17-483e-9e32-c184b803b48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7191c6c-d165-403f-90b9-b08ce1c963b8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab77dd81-9571-4af1-a415-cd5e5fa2ce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd20f7ef-79bf-47fb-bde3-b909af70804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d199b5-e39e-4632-98ed-b880ae1c8e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5fcfc3-c711-4ca8-948a-90b490379aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8996a081-0250-4a22-b2fb-e4eeb046b389",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0874de23-a326-4646-8305-8c6e6fc0ce22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a70263f-3514-4568-b09c-52536ece3027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d38aabe-47ce-48a5-b66a-458976fb3897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f12c52-6178-436e-af05-c86a887663b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd297ce-7458-428e-96e6-b306518e1e15",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803eebdf-e386-4769-882f-a6b58c9579dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d1bf49-9c0c-413f-8fab-f772cd556198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d419f75-1658-46a5-aca4-16980603427b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57e5e45a-3f89-4bf3-83d9-9f4b434de825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20563168-8222-4d2c-8b81-7b1bb1376828",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e3a112-f484-4404-bd88-9766a83521c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949f1461-a987-4110-9dbe-bb1ef6b6552e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da9e2cd-c0de-4515-a17d-01e76676533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "236be866-fbe5-469c-838b-264d36478129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aab833a-e8d4-402d-a2d9-7aa2aee35805",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9de188-25cf-451d-8fb0-e11cbc4da2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec94774-af9e-42f0-9d53-e0c6424c502d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7065c1-54f6-4afc-8435-eaac2ebe7df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c39a95e-f4b4-49ba-9a1f-72b7a87f2bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541081d0-73cd-4f31-8428-9ad463db0d19",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980de421-0fad-4056-9ca4-5eb1ab10f7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77eb921-0617-49b9-8834-940531d25ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79136a07-c99c-42a3-a131-308f766c214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eca98a5-1cbd-43e6-8f81-12cc82fde35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d55e0f0-4bcc-47d7-89f6-943dba50cb3b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad91810-d52c-4097-8de3-886b6c4e24cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f74f8b-6785-43cb-8a76-589bf07dead9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6166a5b8-6e98-4311-a51c-222bd7299a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "316efe82-3e9a-4faf-82fc-1627211d10dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e010aa78-2304-4dbc-ad97-254c07a84459",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df5d015-5938-4f00-9293-3a9bb461a006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9d0996-4ad2-4530-8fb2-fbc3808ab91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4586276d-3761-4240-b3a5-f49dd6e6479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a692409-7468-4ade-8645-9edc0bd35bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197975b2-47f8-45cb-8c17-8cb45b30e74b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b904c-dae6-4c19-aee3-a13b97092861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f0cce2-b254-48eb-8cf6-b192ea206d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62699d91-2ff7-437f-a00e-ee081264c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "855d7624-81d5-4b55-925d-5b143337db96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b216c0cd-afa8-4399-afa3-50bc0a1eeb1e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e16c7-ddad-4859-bcd7-f6378d832297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e2d773-8adf-4632-b28e-705c152cc7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27a52b0-f098-4a03-82db-671b211c88e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e173b409-2f47-46a6-b3de-e20c542521c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff90b7d6-ae45-4eb2-bcfc-96a62da5ccbe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7bc9f-e769-4117-ba8e-75b78eb348b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe3d98e-f7dc-40a3-a755-2ea1bde010fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4582ba-9ba8-4745-ab31-1710a6b9ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af627788-77d3-4a5f-a775-fe6ada2dd238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed05b050-0b16-46f2-a0cc-79d4644027e3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dbecf4-5c78-42e9-b0fd-8cfb7c7742e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e3cad5-c7ce-49af-94ae-ec155ca92c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb794f05-a211-4ee9-8a6f-2fecfe0611cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c27779-5abe-459e-9599-f4f404a6dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2461cd-3516-464e-8c29-916aa9f0ce72",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b489ed56-5d23-4c69-bc74-36a483efeee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc84d6e0-5460-4225-823a-390414972eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7c2838-5584-4e23-95fd-4f4e986c2b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a723c56-3fea-4fc9-8ce6-ec2d9ee41acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21706fe-87cf-4f79-9715-e1824ec86c1a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e6fcfd-6549-4b2c-bc63-811cf1026f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e17b5b-8db1-46bb-8365-4565c0ee14e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aed058e-18ca-487b-8afa-6c45f1abdc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f6a647-63dc-498e-8352-d89ae175c0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27d288d-0759-455e-b71e-e1fea86edb2f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6b0a2a-0730-4a5b-a78a-34380fa16519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63de541-13fd-4b2d-97cf-39678285878a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e87057-a6e6-4f5d-a337-f2b06b0a110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bb19f0-3bfd-493d-83be-ece7fa8c3821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d4d8b7-5e9e-4258-990a-b58a1f3f68a9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0615ee75-63d2-4e94-a043-68bc4d310845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4dc431-9e50-4c1e-9bdb-fdf19820f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb58b208-8ce0-4101-9c1c-ce3e90169950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b56c12a-bb43-41ad-8d72-b4cfc01197cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab21fc3a-d050-4430-b720-cb3b8abdf886",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c140eb-b6c6-4c7f-baca-cd28623f8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4499caa-5424-4de3-a847-e6b989c80f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5091cf64-3e29-485a-8f68-04ffc7ada4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cbd331-e42a-41f8-9875-ca79d5ddb8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf4f8b4-cab9-4ea4-bb0d-b37cd16d8765",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d298d1ac-b417-404f-b090-cb5d604cc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b643410-377c-466d-b9de-458c1c5f6f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8352855e-bca5-49d6-a11f-185a9d5fd0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5742655-ff76-46fe-afd9-bd8f5ca09401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aa9d6e-ae43-482d-b13a-47ea7aaba8d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c088d494-e9d8-496f-8942-1c56788a1ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444f3cbd-9004-4d69-a3dd-22eee9694079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd7a0d4-b4bc-4807-8674-59622fd49781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a63f93c-5910-41fa-b294-2f8e85ac3cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d62bb7-9a9e-4491-998d-89fc7abbc5ae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dc1e38-7954-472e-bce0-1a5c60334b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2db6fe-430e-4972-a443-3a84ae27c272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271994c-f566-4984-abfa-be0eef6315f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84246dcf-2dfb-4634-9519-b88223330b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cde6e9-5c9f-4120-af06-2d0b2b11c988",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f4f84-4da5-476b-8add-22c57e6c92d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e330e8d6-120c-4008-876a-6bf9c53f945b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e44f4d-fc93-4711-874a-50106619e38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8406d44f-03a0-4fd9-bd49-a7b7f5896627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c1a60-0b8b-4b37-b3b1-e48637a43bf6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c47d3d-ff6e-4a6d-a949-842a3c4f78d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ac3a0b-91f4-4ecd-a8d1-15f57af0f952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853c65ac-8673-40e6-93eb-ba7c6195a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5193021f-1c81-402a-a31b-ebcdf81d52cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb721751-55ef-4e79-9767-cf64f63ab95b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e09b43-159f-4058-95dd-3a6c9dabc265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdae51d2-dcb8-42bf-a7dc-032f093c9331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3498934c-d5b2-4810-9e71-0e8c2a10a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23a9e37-63a8-4eb8-a55b-9da18809da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03774abd-b129-4853-ba3d-734d6b8b88ad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca3354e-7328-45a8-9d73-418e13298acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f690377-e771-42e7-8654-30b10d611048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d8c4d-e30b-4ac4-9216-2a4d57841e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7aedae-c5fd-4272-b415-902b9f2e4785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d22d3f9-e5f7-4b2f-9cc2-a2abe7bc1704",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298d76ff-eab8-447b-9427-04994fce9a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51114fbe-8b97-4550-86f2-3d70f84e4767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b52b5e-2b93-4adf-b19c-b931134430d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a72161c-7f02-4eb0-a187-342ac02742cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca68f62-f7f6-4a75-a66e-93aa97aec168",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b977a00c-dcd3-4b77-a59f-69001bd0c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964cd97d-09e1-44e9-8eaf-7222910ccb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a541aca-3b70-4054-b476-98d21b0c43b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e492996-6fba-40f1-9267-cd5b33cfc619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76b06dc-5b98-463a-92d0-fde4858134d1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3fdc83-4dcc-4c1a-9f1d-af937e34a460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66598683-312c-4824-8683-f62d649a7fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c4fab5-87e6-4af0-9cbf-26d46df00e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e84e29c-8580-4bae-aea8-e65424d630e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2ca9bc-0d1d-4a8b-a4db-22a5d1686601",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e96a3d-0a7f-4647-9f5e-34bc89557458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae7dd029-8723-4f2e-8196-15751587928c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867d17bc-1582-4fcb-b1fb-85bf23820c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba796a3-a0b4-467d-96e1-be90dec7a408"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6967405-56c8-4c68-ace0-e65e5df0a886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dc8cf09-3f9c-4fd9-91f0-50fcf3af3fc6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1023b005-235a-4d9d-8aa0-468d2066dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d2fcdf9-b650-42b0-b349-37dac948b368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ffd7db-c509-4306-bf32-582f674a2755",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d053264-4435-436f-9a26-546d37dc3706"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab9c0291-56a9-4b51-99ea-40072fdd4925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d98a705c-7907-4cd5-bab8-274267b6111c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bfb5a29-46f3-4c6f-b960-04781923dfa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8dc7118-7b93-4ba0-862a-64522ffa16d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95a62bcd-0c22-4f37-a31f-72e6cc689af0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f0b9169-5911-4c21-af28-e3144e0ef7da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b7b1bc9-ceaa-4a55-af64-d01d6730ed5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d073a93-62fb-4bb4-9dbb-d0b5a53bc022"
                }
              }
            ]
          },
          {
            "id": "2b581eb2-49ee-44a1-98b1-3e07db4ba76b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c1a46096-a8a7-4b4c-874b-46290554f38e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "13fb9d38-10d7-422b-9da3-c518a67f9145",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516d70c4-0faa-4ebb-8e0e-95aca18efbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b00a065-0ab4-4fe1-8365-c12cbe3949b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be86661-e82f-4267-aa3d-8dec7d7447d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83ad3cc-e44d-4098-a519-a71488f1022e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fdb8a04-b147-4c57-a2ee-bad54bc9c5da",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8738bb40-cc70-4fd3-9061-616e09930bcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d61563ab-acac-49d1-9b4a-2f5ff41a815b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "413132e4-b241-4363-91c9-f23a62248bc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dc1ef41-f1ff-4856-bf71-b7f8c8c2de31"
                    }
                  }
                ]
              },
              {
                "id": "9785b34e-7c4f-44fb-8c63-731e11c48a8b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "335ba833-baef-4d05-ad64-a26361793094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ac2805c-151c-409b-ad07-1fd533b184fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19676713-d55b-427b-b5ba-8a12e5f4e5b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4fcfa59-4a24-4cad-9d1d-e3f1c31768ee"
                    }
                  }
                ]
              },
              {
                "id": "0f9f1b6c-1e71-4bb3-af76-84746e225fed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d50a356a-b527-4029-a202-285f422f3cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cd3eae1-fbb9-4166-93a0-faa4b77d1200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c82b6609-f8bf-42a3-a6fa-ec736bc14319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3904701-788f-4157-9313-629511c0a328"
                    }
                  }
                ]
              },
              {
                "id": "ab49af62-5a68-49ff-a3f6-bda87b40029f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9a7294-7c5f-4f30-b569-3ff28978c94f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae56c6bf-2b3b-4620-a69f-3059ee919bab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b999ca9e-8967-4a9b-8e5f-cff071b7d877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "841a2f31-daf8-4768-be2d-5c7933001926"
                    }
                  }
                ]
              },
              {
                "id": "415fa559-7f42-409b-adeb-3175c3668b90",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fcc42bf-2c68-4803-9350-20b33cf48af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53153104-bf3a-4aae-8039-26b9d6fde2f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7417ead-5d8b-4c04-a353-cfcd2be0bb0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee7b2530-ddb8-489d-96cf-8967b5251480"
                    }
                  }
                ]
              },
              {
                "id": "0669101f-9797-487b-bab6-514e6468e219",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6532e0e3-fa2f-4d69-9ca0-d89c6f7c0ad7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "909f7cf1-403e-4cb3-b293-58856ec8e850"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ef32c98-dd82-43ca-af55-092bba06761b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eebcb866-7786-4be8-88a2-24175f7a8de7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8fc076fd-f94c-4169-bad9-a02cf749c22e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9215a4e7-69eb-4048-bd5b-7b26d2bc4056"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3517d94-137d-4393-97ac-d2e52384e85b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1d31f74-96b4-4ec8-88f2-fe6cfbfe4f81"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62a3c04c-50ac-4a4b-874e-55656e59fdb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c7e6f85-2abe-4cbe-86a0-1704793856ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb803595-0d02-4568-80f8-add9b82928f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8517cc7f-6816-420c-9640-6de7f0731c29"
            }
          }
        ]
      },
      {
        "id": "1cce2f4a-01a9-48c3-8058-481394b24d06",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "582fe72a-3cae-4647-a57c-6bdc5a1b1fb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b1af2ad-9925-4b6b-a8d2-091112324dfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ce0c96d-42c4-4772-a9fd-a0697b6f6b9b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72088584-4b95-4dfb-8dad-0f4762b9bfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10034770-2ed7-43bb-8dcd-4d43ae57cf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1546dbde-e90c-47ec-9ecd-ed76acbca555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb006f4-b22e-446a-88db-188225878900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c95e33-2c28-4ba6-b48e-1e0921eb4464",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15779b-33e0-40ec-ab31-c5570add6c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb2604a-b27e-4ca3-bb10-06f15c060530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f86dee-6ee3-43e4-9720-0364ca90278d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44bdb7d-4417-4ff7-ab84-590bda789931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a2509-d38d-4da4-b689-ede29dc460b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a90af8-1d6b-4d1d-9600-5714796e47ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46682a02-07a3-4b70-a4ce-3498a6a62d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9261883c-9d59-4e4d-a8c9-da7cb3729b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1e2abf-c251-4d0a-90f5-e15458bc0166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40886bce-598a-44ed-8e71-086849586ff2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a72cfd-06f6-48ea-bc01-21ee9ba1c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9dce30-5a0a-498d-94c9-33e142f05cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042c7c7-6665-4f9d-8b05-582d24b58f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d567e394-6482-468d-bfc1-99681c53a525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6b67db-a26b-403b-a67b-5f2acb9f5a4f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732ee0c0-c9cc-4a39-81d7-20742904d563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd0f157-67cf-4e20-b6d9-3f6f2afed3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d637ac2f-e872-4d2a-a869-74fed7dd68ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa803c50-0fab-421a-a1d8-177b6b7fae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4b304-cec8-467b-9bbb-ea6aa36df3d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb8a952-dad2-4825-b68c-c51a5c5deef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840e8986-6234-4f44-b0ae-0676e17bb0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94169a49-6f99-48ca-91b8-87b457108ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50e0ecc9-b326-4319-b90a-b2f6eb2be1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3dcd9b-3ccd-4aae-a097-450aec3f4ca4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2016fa70-30b6-445b-98ec-b506d912b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ac7d3c-50e2-42fa-907c-00b583a7e6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727ee3c7-5e9c-4adf-9e14-d58bdf26cf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de65309a-e914-4f48-a5de-0b3c339bfd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9212da8-c476-4e98-b902-68ff9892ebfc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5a0917-fc80-45c6-a180-e740d6b8dbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2801685-b77c-40d3-9dc5-9895b1b8573d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf33769-8e49-4473-92e9-8422bbf2c615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e81b34-f377-4b6e-92c9-ff1631b003aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62ee1e-9d98-4d17-bd5a-fc2b35369707",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae2b997-ba9e-422e-bf06-c49bfb290b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cd09d3-ca26-41fb-ba0c-f228be69ec7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b3aaf4-140d-463c-9d14-3d565bee0036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b488dea3-ad42-4c4f-9e5c-2fb23051af07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f02f64b-64f2-4a02-afed-c59c0056e625",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59a3295-b7ba-4503-b2a2-28b31fbb359e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7914d69b-78f6-475d-b8ef-7c1859df5036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf3025-18ab-447c-95dd-1d659f0affc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee3f286-3346-4f32-98ce-9a8b15af6c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9659b1-3087-45dc-8dc0-8509efab344f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3942dce7-afc3-42bd-baaa-9cd96d19f025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705f2469-1953-4174-8ad1-ae292d35905c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70a2580-df72-4200-83ea-5fcf4cd50028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d0e362-819b-48c3-89c2-eef0f46566ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a774058-c1b9-4594-a7fd-fe2f2408c16f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966e0384-d0c1-4dfa-b945-9b6f34a81733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d192e94-281a-45f6-9cb8-5e8ce9e21da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47472864-cfac-4e53-b449-e9ed4e26abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c79c6a04-baa3-4496-9d6f-d7d51399a82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a5ddb-d437-45e3-a29f-6a6c80fe6dca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f93190-2624-4a9e-98e7-4fbcab358c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bc3525-61dd-4b56-9d17-d3ecdf558f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf68ec1-dbeb-4d52-ad2e-86055ceabca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1bdcbb-d178-4259-b41e-401a0f221f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48dd7f-cae8-4962-ae39-426af6d7b230",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e085543-1c93-4ef5-a033-95f76c0c2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46305a68-49e4-4575-b44a-dd2ad0d521ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73f2e1-151e-42c9-b096-249308974810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e120c7f1-d574-47c9-bb8b-44f4a1171594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31790565-d644-405e-a458-c3813334ee12",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e5e17b-a60f-437f-a32f-9d22220d7e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1208bc13-d32f-4b0b-807a-e272ac7c8c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cb3bbb-bdd8-4278-937e-3f32f7016eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb47dec6-3fb3-4b23-9715-21b9ed247093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa46bc-ac46-46f3-b835-06d75f768372",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac02c1c8-2e77-4cba-b810-80cd5ab37e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d4062a-12a1-45a9-aacc-e77dc91215a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0ce1e-95da-4037-8dc0-e21216416c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa740a1-6ac2-4409-bef4-65a2376a0321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebcc77d-f253-4dc6-a2d7-fc8b8e7edcb1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ac098a-827c-4b56-b999-8771f9dcc9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d7d79d-9032-4fc4-9886-2fb28943fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a16c50-e86a-4079-962b-e6c3658d3eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64ee001-d8a9-4084-89fd-7e10cc146254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a81f7d1-a8ac-43a3-aeaf-2ad2bbe31f26",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01acaaa1-05b8-4a38-a09b-43f975f0ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87988e4-425e-441f-8c18-a32044039682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89e219d-cb92-44ac-8cd8-185c77d013a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "558893d3-3c13-4024-b8cc-87e8479d0086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c0d681-b388-4338-990e-91495e9ddbc6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad24bac-88cf-403f-95d8-a8e2400adf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8af2c48-407e-471f-827d-351e2d8e5218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5423d3f4-83c7-4ba9-9ce3-b06232d8230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134e9365-924d-476f-ad7f-afc89233ee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a38a7-72f5-4b2f-b4b1-d32498f5e3d8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc57980-b555-4043-8390-b9ca808157d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d9cb6a-b0f0-4eab-a48d-3e104a7b9546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746624d6-99f8-4b29-a496-a9447619acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5dd382-ff16-4cbb-8a78-51168ebfda12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb9714f-c0ed-482c-8513-245573eba143",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ca2f41-f56b-42b4-bc22-abac964407bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff1e0ef-7926-4b8d-bc13-8b399fadef09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e8c55-1b97-4661-9ff7-6eaca8acfe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb7062c-7935-47b3-93f4-774775e70b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa09422-29b1-4fe0-90c8-e92157f7f711",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d053fb-6956-4794-9034-adaffe93b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44077018-f13b-4610-8ce1-588410a98986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f7d46-8c4c-48a4-9d4e-70b8fd3254eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d93334b1-db42-46ae-a570-10c6f53855b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0934040e-af74-4c38-a7f7-c24040443900",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d934d4e0-b0d1-490a-b728-11556b3ed81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db9eb70-3b32-4f8e-9d9d-1694c02fb1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d563160-35b9-4338-bae5-529010da421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "197c4670-0c46-4c66-b8e4-79b8c53854dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4221b42a-fb5d-4d18-a9bc-a7edfd36f83a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca17184-c21f-4955-b96e-170d0ed86ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cb00f2-f4c5-4abf-8aac-ba7627a27127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98bd200-a2ed-4ea3-85d4-b03c9681d392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8468fdd1-eafd-4fb4-8c02-019a6f4d9a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e206b3-fe70-483b-8251-c47d55664137",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7203c90-ec43-4e49-b036-a90cf06c65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97abec1c-33b0-4ec7-b573-fd22992fbf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c68961a-725a-48e6-96f2-e4eb630b853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e411830-5e6d-4401-b846-6b1a75e0c751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236802b8-c3b1-4383-b195-9449b45dc798",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa1ac7f-ec37-4cbf-b097-f80fa701d956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1037ae5-1aa8-4d04-83bd-7ccb458ec6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e248598-c310-4b54-abf5-5e457132bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8909b1-ea5b-453f-ab61-e8185ac0d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2383bf9-af3e-47ea-a4b6-89a0f4f8fd66",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ffa55b-c56f-41e7-ba3a-4de5bba9d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f7fc1d-f21f-4f97-ac0f-787c1f7597a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439cdab4-129e-4321-8b55-c4f45f3dc9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8d4a69-6b88-4c4d-a86c-8e10ecc7057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db08751f-15b5-4dab-9178-a53cd0cae1eb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5c7e67-d6a4-4b8e-a354-fb5c99031ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74504290-5dd7-4a10-a0f7-074ee32742ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04207f0f-df88-49c2-9938-11e3958b54a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f61542-354b-4309-bc54-e4aab91dee41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce4675f-162e-4115-a856-dce13d3e7571",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56929ce8-d8cc-40ef-a622-717db4e5e56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1df264d-00a7-47f7-a604-82be8db1ea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a74dd7-b070-4fbb-9be3-a411194d8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a389c8-c5bd-4bb7-8694-90f49b58e57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c9cedc-7854-45a8-bb31-c1b1f4fb55f7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a67f829-f3f8-412d-88a6-3ec575385484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6205d6d0-6aef-40e1-a9c4-223d109ea212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009ec90-563b-4b98-88d2-8a1a9764e2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2583dc-f7ef-45e0-9d95-5cbc99c6fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c528415a-3478-41b0-8c6a-5d52276eaeb2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5d7739-b5a8-4daf-8f21-9ae28663def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc3c075-2bce-436a-bc6c-4199da6cf92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2655ea34-fa18-48af-93ca-efabc045503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e57d31-40a0-4c3d-8543-c12b5bc483c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3f8f35-2274-4560-adba-0c33e8b05e27",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981e6714-d24f-453f-9c19-26784c5169cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233112ca-4355-4efd-968e-c7b8cfbd537a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88795269-11dd-42b2-bb16-a039845b2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc8d9b4-58bd-43c0-b202-cbf5b0e177f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6099cc35-4adf-414a-b58d-9d5661ed3deb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93392df8-1232-4e97-b7df-2bd316854287",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994e5491-c0a4-4aba-9b40-5b7eddac7c21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1034ff31-48fc-4646-a9f5-104e54103cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711244a3-d8fe-497e-849c-b66ffe7e081b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28111397-999c-4caa-8197-8595cfca8533"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b72600e-7fc4-47db-ba18-f8f7d95de6b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "336d5c53-c168-4853-974c-a5e077bfb5c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c6dcfc1-c7f6-470f-a6ee-838354eec54f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ce3dd5e-d7f4-4ff4-94b3-5f8002124451"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4edc8a9-4b31-4d80-b5b0-31c5de41bb83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57582926-4c3a-427d-ad86-84227866f79a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47197ceb-c792-4e71-a211-c19a27fab12b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9046c845-4da6-4849-97af-172b8ee59248"
            }
          }
        ]
      },
      {
        "id": "a50e7a1d-cbe8-4ada-9f92-f4e04bc8c267",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9a4516e5-58b0-4cb4-8f2e-fbeb0ea67980",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec815d2e-59ee-4c13-b6ae-85d55c30320c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "907ba9d2-5879-463a-a25a-59f2417500b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d2ca2e-02d7-4610-9026-9ea26509f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57af53d7-e8b0-490f-958c-ceb9b3d4ba66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f613d3f7-efc8-4d57-9b10-64d43c70ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c79affd-351b-4051-b745-f4dd408f1ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3145dd91-5587-4ec1-98f2-cc4acaeca851",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c88964-af0e-4501-b89e-cf538bfe7c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5156245-91c6-4078-97f6-05ef3bf7df50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610232df-b845-4a25-bcb4-45b2370f6c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c18420a-1bcb-4440-860f-99f14b47e9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1cbb49-1eb2-4a42-8a61-ed9a47f4ae58",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff5ed5d-7085-4955-a683-9a6c78bba23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6968f2b9-e1c4-4a83-bb8c-52c38eaa8f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ec8969-3d3c-4aa3-97b6-4845ec5d92f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d553a1f-0ea6-41a6-a087-78ce5b9871a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ac3b4a-7f2e-482d-93de-9b31f5df2a92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b09ec3-dd43-42eb-bdaa-e351096983e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e70b66-589f-4629-a84c-707e63d6b502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c5ab7-aaca-46e7-9ec8-7f6446f3e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3157c44-b2b4-42e2-b65b-5619e60b2ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac43cced-0d1e-4d6e-8815-59270e405353",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c144e9fe-47dd-43cf-9b1c-54393aa43c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f75581-6f34-4c77-82e3-bc72a676d4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f18c5d4-8ce3-41fb-a7f3-332c94395653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e287759d-a5cc-44ad-a49a-a2a7eaabb10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b952d4e-4cc3-4db0-bf8e-6d11dd61c824",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b30e29-725f-476f-bfe0-bc8e53db7a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c46c42-4f1c-4832-8c32-15a428794116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0d6959-376f-4f2b-a68e-2d14db64dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c39d608e-3d8c-4dd4-aa1e-c75ff6b53778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313d7303-df44-4284-bd4e-a83d61b45fa8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b943b60-c8ff-4df2-af86-aa6a4d0bfd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a55537-b1c5-48c9-8f26-ed8728b78d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a65fae1-1b03-45a9-bf75-419d41c0ee59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fbd8e2-e0b8-458c-a6e3-efa543473a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ebd05f-3f9f-40f2-ac1b-326e7df96b54",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad2ec98-8fde-440c-8a36-7219204b8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635e271a-f7b3-4876-8939-9eebe9fd5f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4dcd39-2375-4bfe-a895-38a34d1618a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3237e62-f977-47ab-a98b-ebc2ce59276f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11df79b-abdb-489c-961d-611bba6efcfe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de09d34-4a67-4eaf-9b8b-8dfeef9bb213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a816c32c-3230-4762-a5be-ee9c1fd9bce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c27855-a049-4902-9b16-cfa21d5227c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e8448f-5d47-4620-9421-354b100925a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53405597-392c-46e1-993c-eef9170dda00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4589ceff-52e7-418f-b404-520910151e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8395b63-da16-4bcf-a279-3bbb442fa152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7c0600-ffcc-4e61-a6d1-a838e424dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48de9139-e647-44f0-ae69-c41d415653e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d006e10e-c15e-4b03-8adb-2211b3f3045c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1909fc-6699-4a5a-a7b6-fc2388b04746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f25d979-6890-4336-bb5f-feb46ec9ff73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2079fa30-0be9-4547-98e4-aff0e7143239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a9562ac5-1652-43ca-bf7f-34f67d631687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4bce66-99c8-4646-a186-a39e2a6e565f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85208fb3-8680-4827-b0f8-590b61d5c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4033ace5-33b3-4086-b86d-e26f649d11ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521b9ad3-bcda-4622-91a8-c0deac0d3b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "224dc4ee-9578-4889-b733-b417fcde960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0dfc4c-aad8-4c32-811c-8b5248e5870c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0cb8c-12e8-4a36-bbd7-2ead00ea5f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48574ddc-2958-4bb4-9ca2-fc4aff3337f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249209fd-daec-427d-9d62-1c15538e0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af461773-deb4-4b3f-b795-ec4053f4300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8040e71e-eda2-4a35-bd4f-794d68c4e0eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7c3bbc-17b7-413a-9bbe-d144d99a2b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3355eb7-f6df-4982-9fc3-87381481ee3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b274509-d3ca-4fd7-9a03-9a51a8ccf985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b96ebdf-a732-434e-bd21-bcdeb0f2cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d0af71-bde1-4ef1-aa92-d27747993884",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf3cba7-b7ae-4cd7-9416-1215d310a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9fbe4c-0536-4f7e-bc01-7dab0420e966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918ccc7b-4fa9-4cd9-9913-b1c9d7032e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cb79d5-adac-425a-b6b8-fda023beb796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd6ec50-47d6-425b-930d-a15ea2319bf1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651af18-59e6-41e6-a8c5-d731d8d8495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a9cdc5-5328-48b2-ac61-003c71849f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d389927-85f8-45f4-9b19-dc57353b1f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fff1780-1684-41ef-9d00-a013be18ee29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89bbb48-41a1-4c16-9383-7e7b7be3ccf2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e652d-8792-4088-b6c0-422928b4ca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9133920-80cc-4a8d-b24c-487717ca5af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea01f055-9b41-4daa-8403-99c0cc943830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7427ab0d-6ed7-4559-9ee9-3e947bd08d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c874dadc-46aa-429c-a0ea-c22b50f77531",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b959319-b261-460a-ba10-52b40fe202be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a90bc0c-80e8-443d-b7ad-1dd293374a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c11c08-52bf-4ce2-8124-823d83b6f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "502be15d-b2c0-4c49-89ab-063b5900be7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65564487-08e2-479d-b97e-0a36c6dd2c99",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5cdeb2-57dc-4496-98ff-5b6217519233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00ee0a1-027c-4c33-a8ad-64defd5702f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c9ae62-049d-4acf-b8ee-56e7602d2179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "463b4b6e-450e-49ca-bb30-153af51d1da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d620cd0c-71b3-4de9-8951-873edeaed0e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f70c9d-b489-43e8-ae6e-54f2893c1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9aac8b-2dd1-4d09-9ce8-708c9c388b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24a39ac-5d73-4331-9976-bd21871c9c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5a0399-f87b-489a-afa4-95a4d6268d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8819a3d0-1d76-42bc-b67e-8e7ddfb475ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1823a5ae-49ee-445f-b614-123c345e8dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e574333-44d2-4835-9dd7-5f86951035fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ce523c-64a9-4d74-8a40-22281fcec43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653e83ae-899c-47fa-8745-ab5aa04da9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b544d74-4f37-4e8e-b114-db35183a0243",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d815a92c-241c-45eb-b47a-130d10bd1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5083777e-c3dd-43e5-98cd-ed1b4f801efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611fd0a8-09d8-4a34-961d-00fd8b7612a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2313e8-38b4-4beb-91e0-955f3e41eb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64597826-244d-4a11-870e-6e2ce1143d60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd97768-7cdc-454e-85ef-791864bf971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd23e5fb-849e-4b8f-a6f1-a1ae0aef1036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1801715f-d559-4da0-af13-859f2ab1fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5885fec4-dec6-496e-80f4-2c8a9f8e55ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024ef482-aa10-4574-ac8b-a4cfd3bd5f4d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8601c44-cd33-4ac2-bbeb-ab0543890ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c17fbf9-9be3-42cd-b67f-b90a031512c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ef7527-f3dd-4b13-b5fc-8a9ea9f00700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a55c1248-f02d-4965-915b-35d74fb99954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9db76f2-61e4-4530-864e-ea2ce74d422d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bbeeba-45be-4437-85bd-91d8fa48b46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6324fb-5547-47c1-9d28-2bf9f2cfb1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d2ea6b-5c9c-4f9a-8f97-ba7ea5afb772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa4a869-d078-4a49-9c1c-0b43bc17ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3419d7a0-ae41-4236-b779-562f4df6b49c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f08806-777c-46f4-af24-ddb9048f197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23be490-8da6-4ff4-8b79-81ea3b969ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad1098-0540-4aa3-9d27-bb7fe914b20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a3aaea-3c7a-4aac-9576-e8910b63d77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3213f51-5b77-45f7-a580-02c5d7d50503",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f42d08-1cff-48cd-b041-4b64a4472270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e197d54-08d8-4358-b59d-6ac87c765863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4421611d-4e09-4f59-80bb-0155461a4881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4a0e52-38dc-48b2-9cba-181baa160f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec102d79-db1e-495b-ac42-e94c10f10a59",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e7a87d-1d62-4916-9028-3e2f9cc06872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e075a6ce-462e-45eb-92d1-864f265a5dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ba312f-2b7e-4308-8091-a4ec1a91a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ac5602-8368-430a-bada-073fb522f525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24150619-5ccd-4a78-9e88-f2ed4c609abb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8e6b00-7510-4fc5-bbd1-6126fa6e9162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d061cae8-4662-4f91-af45-fdc5a0ac17ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d08d5e8-19b8-4a5d-92ef-fb9ceb6a5efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24712c1-2d23-46da-aab4-cbe446111206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3864e91-1856-4166-aaaa-31be6f668375",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03530741-f268-4196-9676-dfd1c6bfa1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508f7694-0b2e-4324-8745-b57935ab7a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2756d17e-c424-4d7c-83f5-3cceb4329527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d9450c-cb53-424f-80e8-141f9a147b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4a0915-edda-4feb-a83e-486296a54661",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a48e88-7857-4696-9e96-b61949430ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3992ce0c-a4b2-4a2d-b585-632848e2f17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b805452-cc09-4e25-8711-c61a4d4e2477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc58d71b-ab6c-4f0c-bd44-10853ae81e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af11ac4d-08e2-4efe-8c23-b9b1d7bf73a3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509d90ca-9640-4af2-9442-c46a0fe602e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5035b5c8-7826-4c03-8b40-ad908c4e565c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0576dfe-e36d-4113-bf2b-5e182ebc93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b5a03b-416f-40c4-9399-ee5bc947cf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8400b826-57c2-4979-b9cb-402a5a5266e8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df7e0f-acfd-4e7e-a0ce-9e40085a4338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6915473-6e31-4083-ac21-860c4749254a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e0954-5ab1-4378-99bf-f20959176acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1895ba5c-82d6-4cb9-a79e-caf9b0a667f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab6291b-f28e-4f59-9f65-6d826fa93238",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2daccbe-a5fb-497c-8b2a-a2f175e07b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2ca9b4-95ce-4087-ade0-c3a181059978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50ea82-f957-497c-8d2d-afc16019d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f872979-ae81-4ae9-9848-067a0d890a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5238d4-3bbe-4a4c-85d9-46c1a9bf056e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231aa81b-8042-4475-b286-181ac7a9e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b1835-599e-49bc-9d80-498224ffe3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b75f3e7-f5b6-4519-ada7-a96cff6df767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "098e5be7-e1a0-4063-8241-12f66f6a4c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1f8052-4e73-4fd6-91c9-3eb4cbde25b7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475ca8ef-f7c1-47b3-8892-ee1f093161fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676e08d9-1043-4356-81e4-ab46b9382097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035dde1a-abc3-47ff-8df1-d06bf015f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a51f7a3-eea4-42d7-97d7-539bfeebdfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac9be58-378a-4f8d-a04b-aaeff2f873ed",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c720422f-d4b0-4eb0-8bbb-8272c2fd1ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1ab37b-fa56-410c-90c6-d1aeeb9c618c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee41aece-226f-4345-b958-bb45d9470d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c739ca79-0f36-4f84-ae9c-2a9e3a596712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1313af3-96e0-49e7-9169-10850500fee2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "873ae38e-5e6f-44ad-b2a6-912558440a56",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8517217-e813-4ce1-9337-1656a286d6f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df85688f-297c-44f5-9ad4-33d09782ad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3abab1-66a1-4ea4-87f9-1ab2b89b6b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4702735f-cdd1-4033-921c-84a0f364eb63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56703220-3520-4480-97fd-08fa46cfca79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a88e498c-6b80-472b-91f1-3f5d9e51f5e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d84327-df69-4839-a05f-7512363bd7c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e655d58-02c6-4e43-b0ef-cce1367198ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "092d56d9-9bc4-45f7-b91c-2eb16cdd25d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9eb148e8-ff42-46c4-aab4-0c7a4f407438"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ada31e1-a620-49bd-b04a-0eb1f0df90e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac30ca45-4702-4919-9a10-60f9fda90916"
            }
          }
        ]
      },
      {
        "id": "a6cf6f57-b32d-45ce-aab6-e893815a5259",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a65a2d9-d15a-4892-947a-cd4453179370",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31425276-3b65-4b19-95e7-481741d93d12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5fca451-c1e0-4b1a-a5a6-039f155c4f8d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434cb0a6-6b26-4454-a625-7c6736ee66ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353d094c-2dbf-4d21-b393-63f41a6b6a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d634e09-e340-4a68-bc19-4f1cb961cc28",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546f4e97-2a0f-431e-a0c5-cefdf4b4a56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3c1aa4-4be9-4e25-9bfc-7fa3b2df358d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6694797-d27b-4cff-b89c-a9536e0fbd44",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a193b-3620-4691-b5c1-5209f92bcf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7f3ca3-5adb-4548-a35c-4324871d08d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bd63e3-1d90-4efe-abbc-4fe18ccbeb31",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d15af-f65f-4748-833c-3f2ecb3ef397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6648cea3-5e31-4a90-adc2-c708388e57b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb0a9d2-42e3-4cf1-af40-96143360ff88",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628f2da8-60a0-4b98-820c-cf3fc0680666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f2ca25-687e-40fd-aa3c-8b9445a257f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47025b0f-f748-463a-81df-96c3e7b56f05",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3194ec0-f0df-423f-868a-e416a35c8d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68f3df3-863a-4440-9652-111bcb80d54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be908fbf-9eb9-4f67-ae29-6b1b9f0586c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74ded39-fcf0-4049-bc53-75068cdcbff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ad59a3-0060-4a34-8577-b683c7344f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c74a32a-3956-4e91-ba37-2939aa6fe135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1024be3d-c726-48d7-9c82-f2d1df6434b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927fdbb0-9fa5-4188-ac3f-7fb434c37c8b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8ebed6-197b-425c-b4d9-8a0d892cbd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2379566a-47db-439b-bb74-a89429e11834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f4b8c1-11b6-40e5-976f-fc2086dffd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733f4b4e-04b0-4cda-b76e-99bc1920c4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952b4770-7408-47c2-8864-87304dd46f9d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd942d2-4fe9-48eb-98df-82234162f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6a594b-5a2a-4325-a02c-405897d7c457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c1ad4-c381-4121-9387-64048fa650bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0a3ae0-a6dc-40e7-876b-a9c4a13de261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e9fb37-f954-43ea-a7d9-74bb0822077f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800ea3d4-622c-4e8a-ae2c-bfc297870f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d810c61-1b92-428f-8d14-5a9e1f89d345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3abebb-80d4-444c-b000-93e7b4e2ed7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f9bb22-1500-4cff-a73a-e0fcd506beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ca897b-1adc-4e0f-9c6a-eda8abef3c70",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280047db-2d6a-4f86-9d09-1fc25c88c11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c12f3e-3965-433a-8262-c499b0b25fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df74d9-41d3-4813-a5b0-9339c06adfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bd46f3-2143-4a6e-9c90-15f767ceb48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37a9074-2bb1-4dae-9026-d70eb5864382",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f108e1e5-a534-4443-ba59-5c0f79476a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaf60ed-5a33-4fef-a9c7-efc2affad29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94fa95c-e095-4194-8932-17bc7f295afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710c758a-191f-449f-8ee0-8ddc276627a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5951e900-772d-40ff-b0e0-88c5871b4434",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d54b74d-e5a8-49bf-9a87-e02a7449b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011ff3e9-90ae-4929-b758-dbeef6f021e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19025240-317c-4c41-a46d-62fb690190b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c679eb-dd92-4b2a-ab09-ad2aeb8c5cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70b33c-15d7-43b7-b2e2-f87896847c03",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f7cac0-32f8-4045-8f70-5395e0f4d254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b29fa5-93d2-4759-829b-c01139215555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ddb8c-7382-484f-bde2-fbd06cea3969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f0db66-4b3b-47d3-8f4b-926e5becc8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c027d-c44c-4ab4-b45b-803d24f55a4b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1f5159-18e3-4150-ba26-f58b88c2b855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662b0339-3310-4a05-8803-7df1aa854eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43996428-414e-40ea-b864-e03de2e2de67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9d5c76-7f8f-4631-a1ec-3fe27c643377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4f35bd-73ca-40d3-b5e9-8e88979adf1d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ede6f7-ca0f-487f-a30c-a1326bca9a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba42e632-dcb8-4856-9d1d-53c31928cb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104780ae-8ce8-4e97-9d0c-161cee6df08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71661cc-2f47-4949-b247-9f7678a349cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a69084b-40b2-44c8-80c0-fcb6fc954656",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b9296-ce44-4b74-95f7-927ae45a1602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ad7d8c-38a1-44aa-b89b-589130527b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177ff252-1a5c-47b8-af2e-0d1bdcc3d5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49fefd4-bc05-4f3d-a8c3-48e83501353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc926c8-68f9-4e9a-b3af-081018b20b44",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9804ee2-8f01-4c59-a730-9744eaea3227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4f9ad9-3ce0-4b46-a6e7-f3bf4303f7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e4d20-def5-4dd6-a38f-d6cd60e30c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfada22-c204-4c49-b54e-804c62f34b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5ef9eb-f709-4de4-90de-421d88c28b86",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f5b9df-30a7-4353-9169-b21cca2a5390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456b3466-5584-4c20-bc3e-7ead796e25e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ecec04-c553-402b-b45b-121208808361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bebe7c3-e2c8-4b33-b72d-9a2d0d4a4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3ca0bd-4da2-4814-b9f5-f080c5091196",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9de9b49-8c4f-485d-8a61-5791ac287e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e98f66e-01c8-408c-9607-4c4ba527b9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61905596-fe9a-4aac-8481-c513bc797ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930713d0-2c4a-44f0-8737-9e6690075909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1be9c2-ffb4-47c6-8e21-036e330b3670",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fde7daa-70d3-4f2a-b38a-523eb02a46c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac033c9a-b215-4351-9597-ff32195b1e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c5d3d-c8a8-42d3-b403-1722ec1f997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82a374-d86c-44c2-90bd-005265ed78d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7e190-017d-433a-a859-22887be27132",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb259b2e-f178-487a-9e9b-c86642be9a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee948dd0-150e-4faf-b213-daf28a22baf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c8cca8-40fc-4c87-8342-8ac1dca85491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da17429-fee2-4288-b537-829036bce730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e2c4f-d1b3-48cc-a90e-2c5ae065af1a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf222e1d-5caf-4ed0-b627-02116701375f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f1041d-aedd-43b9-9308-64501f3b7880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c317a39d-4902-4494-894c-e7b1046333f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da030e0-95ef-43f7-81b0-fc3b432564b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93bc14e-7607-42bf-8d41-ee70dc4de495",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e28003-7ca7-43e8-80ff-013cec7bc43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722d41b5-b22d-49d5-881f-c78f596ca270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11611dc-3cd0-46b7-970c-1e6b4a0224d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55a1d2c-d647-445f-8386-46c679c6cf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45456554-1e07-41e1-994b-d3a84396f348",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c836398d-340a-4bd1-a603-ee79197668e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2fac92-876d-4d09-8ba5-2485e17fdb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf028ab-4017-4651-81d6-b4efa0f80e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bef716f-92d1-4463-84d7-8fdffc395f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9829757c-2116-4174-8ee9-a526c3d576b8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24913a77-692d-4a1b-b8ee-cdac224c615f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6b4f23-1ae0-4cbc-987f-55c8f3370791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904126f5-bae2-4b9a-a2cd-14d7c0288dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab03759-e7ca-4888-a8b9-e6624a101977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b606e4-7e96-4b38-927a-5f35ffa34030",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec94a767-168a-4576-8168-89c9c8c55e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e553ec78-bb34-4029-a331-3f649102862d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b5430c-7ae9-4570-be64-fd8d72f663b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2336f575-50dc-4715-aa6f-cdc5576c5f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80199d8-b307-4086-85f4-9a4d852afb9d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9315a0e-d9a5-4816-94bb-07d1914002b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d837d635-ee14-4308-b378-a0fdf44594a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dddda23-db82-4d6b-94c5-3a521ebd3cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9eb411-db9d-4931-900f-9ae79464f96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad31e14-8a36-4b1f-a235-e6bb0b6007aa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcab1e94-fa8c-434c-b52d-30b197a00b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d4233f-43b4-47a5-9088-74a55c99e454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c812c4-2d22-4fab-9430-5f0da3c5882d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df26be3f-1df0-486e-ac7c-1afdd6e634b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1659740-6786-4ba3-a5de-773ffb9254a7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00a6ff0-3640-4dad-926c-94aa3995dc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382c3742-4d99-4530-a217-dfc8acf388ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c873a705-a1b3-4c05-aa6d-3d5e365500d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92986523-a561-4053-b5bf-0e484c54068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be083d-5318-4116-a1dc-844e35caa3d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b58387-cbb3-43fc-83e7-8f3684f3f3dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c21738-23ef-44e2-a266-b71748820c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a999e3-ecb6-42db-9921-603d3c0dfa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a324a5ee-3189-46c3-8d68-f237a99c7651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d4e9b7-d4e9-4552-8bd4-5215db109b83",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e5d20-353e-4f4d-afb3-d024972adab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "921f2ae8-78de-4b94-9025-ec43f63eb27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03044dee-529c-40ac-9f01-87522206236d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d90d891-43a1-4864-a864-553acbeb9c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5a06a7-d286-4725-a859-c726b7f08790",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8bdf0c-319e-4c92-b451-93e4dc636321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f03d0fa-292a-46a4-beea-e08946dab3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146c3b04-9ad5-473f-8ac9-08f044fd1cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c8c152-6567-4d2f-b5c8-04f82b318d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb75693a-d770-4c0a-9b8c-d6d449f656f1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7328c8f-4c67-418c-b78f-cf114ab518f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7032af-66d1-481f-bf96-dd0710dfedd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d42c49-c73e-47e7-9623-e90798804ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e852c518-a8b5-472f-a25b-9df1ef2b66e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bca758-0ff0-40c4-b98d-a0f830d9089f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a712f1f-a452-4208-8ffe-0c0c1ae985d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bf3c73-131b-4856-9d81-c0b13c2118b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea1d7a9-1f72-492a-9099-ed4898a0e091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5f0dbf-16f1-402d-b666-aa5287d45162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04775559-2bea-4b67-84f0-475d861481b7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a19e149-3622-4d0d-9e90-7658dc668da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ed373c-9501-4bfb-a974-2dae455331e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071d441b-2d4d-4d34-bfb6-dbb3c62a8086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd959369-1ac3-41bc-94bc-50b256160284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660633d2-242b-489a-be91-3cd0346995cf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ef8cde-8215-4087-9371-c84ae82d50a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb409da-785e-44e7-a1cf-8eb8a7231d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a756b9f-8bdd-43fa-9d55-41e8818e6006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8795340d-db18-4529-927c-386fbe9f3966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868ed9b2-3f61-4e3f-9413-a091d2c18427",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc54fdb5-343c-4271-9d6c-d6ed49990b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86291ae9-70ea-4300-bbad-a1f92ea3ccba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fbb469-772f-4d07-a0cd-fd5fd38a33f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f676a213-37e0-4949-a631-93f4f1c0ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927b9ff2-bd1b-4c9e-b639-304c5f503c10",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b18a69-538a-4012-8856-22428f4d1328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca3052e-7de0-4ef4-b648-7ce6cab47607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4225f8-990e-417a-b286-ac6c6e2bcd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a945fc4-f314-4121-b783-bcf2478ea8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48403f0e-4fea-4331-af27-3259a1bdd512",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a434c0a2-aa9f-404a-8565-33bbeedd084d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f56363-44a9-458c-97fd-f0ab6f3574e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617ca37-a580-4e33-8913-a975d144d244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3de82c-6031-4453-9982-32d4cb88e790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b650652-a649-4794-a4a4-64e79d374b41",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade152ad-ad97-4fbf-b37f-6e27ffe9c0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483cbb3f-6ebd-4e4c-bbc8-e43b8a30ba71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70588d3c-0cce-4c3a-bc5a-61eb90bce7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e410ef7-05f4-45db-a08c-0f14dff74238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4a59f8-4caa-4c79-b49e-ac587593b183",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d70315-1639-4d6c-9c3d-a8b1f844df87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44227c06-8831-4a6a-b220-4747ed3a15d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d686d3f0-67e1-4e83-a223-ca7a238031bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f964d2-279a-4e57-8afc-855a0de7123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f01273-5722-46f2-b2cc-6e07a5351f6a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec6b099-c4d2-484f-a7a1-83405be65a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff9b54f-ee33-4a3b-90e6-89659ec603f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3699675-b766-4cc0-bbee-02d38d2a2234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e4ad58-1d0d-477e-953f-986bbb1993d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1369e747-127f-411a-ae2a-78076f21916c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6486bf1-6c58-4d3b-91e5-bb0ab6fdc7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d264a55a-317c-470c-ab8d-811279d0a689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3501c1-923d-478e-90c2-244bcbbc5003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390852b6-6c2b-4d3e-91a4-9a04155059c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de7b645-6d50-4af3-be7a-ae2aaf3383f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f9a2aa-ea15-4271-96af-e7013e30aefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116ceabc-3e8a-4669-9b73-7f9ac8d4cd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adceb4b8-a1bb-4e04-a534-27ea4b565062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01fa8df-3e06-454b-a92c-e2c184aaa6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f2b89-142f-42c8-9890-3adfac7b65dd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d92abb0-77c5-42bb-a9e9-7a363906cf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce457e5a-242e-4bcc-acd6-bdd5b55f8562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e199baa-a2c3-4ffd-80f8-124a1efe2775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376b236a-398c-4754-b0a7-a0a89427858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfefec2-8fec-499c-a2c0-f6779e0cb663",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbccfb2-ea4a-496b-88e0-89ef50fc09dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb54a0a8-1cf1-4f1a-bf4c-aa3e0d99bd98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883832ce-12ec-40cf-985d-3d5ea3c35745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdca5064-ad50-472f-8af5-01c30d150e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fab9645-88fb-4705-85eb-6cc8adc837c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a706430-8a3e-4959-bfe2-bd08e27edd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb2b5d2-24cb-450e-804b-416369d57f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f58f7b2-1e30-4b0d-9e5b-b6926cce1a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e4372c-f9b4-4e22-9b67-ce1f23553c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361432e4-b8c0-470b-9094-82c0d6105fa9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a41b9dc-2894-48d7-925e-86d59cdd6ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a03e2c-5edf-49f7-b4cc-2744832a7a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce33d3d0-0c9b-4b6d-8cf4-7bc1ba927db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbf3a4a-4e8d-4ff8-af99-2dc95ec4c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff93fde3-3cce-4735-ab11-5ede70471913",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c9eaf5-ae24-4d0c-8e46-e010bb36e9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ebd0ed-36ea-4ddb-862b-9a86bad58f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6874d92-7046-4fae-8211-9f009fa685ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c607e93a-6e38-4141-885b-6e099c964f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6431ee6-7a7e-4b0d-b456-cf05eecf4b12",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57676238-5fee-4104-8f63-cf4730fa620b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3e0344-58bd-47bb-bdce-985faa11c67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2abeb7-8560-488e-846c-b6767b439efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080cb98e-73f4-4131-90e7-025b1ee49359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b490d6e-884f-44c7-ae9c-f62171d008a2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21350ac-7695-4ab4-9a11-93bdacd11d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f932f3b1-4abf-485d-8992-2d49e3ab997c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7756eac0-1630-49da-891e-526045a7c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcb8a68-1f7d-490e-979f-e4ad91ab2549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42b6cba-eaaf-498d-8117-19067888f9c1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00796731-f26b-460d-b008-432c0374438e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac0d94f-28cf-46db-8e6e-0b36a347fd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3db3364-5c76-4f31-9f07-4e14ec54c652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cf842-d2c9-4a5e-b95b-743f7d80a343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceee6b9d-6605-4e9c-8777-488acbad85ca",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f076f-d531-46b0-b780-5a23c3308ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812e3de8-a183-4468-b49d-cb8a00fba9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836e31f0-b305-464a-af6d-647fee1994ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a900f7-8f6e-4cb9-b4dd-1057b25a62d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fca60a-3f2a-487e-9042-88dfcb954fbc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37306a6-f65a-4ab3-843b-3612ac6498ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aae03f5-a0cb-4f29-ba9c-0be17935b03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408fb43-045c-4c8f-92c8-9703813e0e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214a43d0-6e52-457c-9a43-8e147d2a67a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba52d55f-0c12-40be-8245-8c647d10c112",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088a344f-a99f-4f63-a1c4-971d8f884290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab7788c-723b-4417-96cc-56f9de066040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72981904-32ea-48b7-a0e1-00223572cf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64502f42-7532-476d-84e1-029b56eb044e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba2d9b-0793-4c6e-bc88-98a3f72e69a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b92a16-8f77-4525-8158-f115d90dd114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f580df-fb7d-48e7-8251-a9bc00c0abec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679b7e98-d95f-4519-8b0d-0abe405c72c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e235e0-666a-432f-bd0a-84d4081d5b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165618b1-df4a-493e-8302-fe456263f105",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db555e0d-d402-4d30-9a29-7de12baebdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ef6c4f-55a3-4ffe-bba6-d808a4ee656b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ecd358-9c83-4b11-80ac-1c52c7a422fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fed8cec-06cb-4a26-8616-4f147d69123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99b1c66-c546-483d-a1c6-04ee21c138b9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc94a6c-1016-4e47-9334-4009591fbacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4523b51-3e33-4c8c-be46-f20a373de358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a2e03-5032-452b-b754-19e0862a75bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2767b936-d67b-49f7-986a-438a245c5e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86c6090-8e6f-49ec-a720-cdc16c458ce9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813ca78-c6c3-44f8-8eb6-4057c28fb81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21b8d8d-c711-449e-a5f4-55b52cbc1f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc0b76-d1d6-4050-be21-8c043d397316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732168eb-16f2-40b6-931a-cad8d060f257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e9cbb4-9ca5-4ab9-8e5a-1570c47875e3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02da7696-208e-4ded-98b4-0065e583e7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a970ce68-ace9-4da6-8445-a0a5698f2795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9745b478-5b86-41f1-a550-029eeeb11778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d73ad15-b006-4950-ba82-10ab02c49325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a9aada-e6d4-43e6-8b29-5c411618a50e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8435eb-34b9-4cc8-acc7-5eb6675fd6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fd99f0-0314-4ff5-a7db-2f062efd3efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d0c1be-37af-4ff5-a3fd-436aa6615bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6338ac85-acf8-4ac7-a137-5fa4bde935a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2621b443-56e5-4965-b935-69827c839101",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7b8fa-6db8-4888-a8ac-e6c5d5996e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf20d731-4aed-41c1-b092-822595e8e753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c87aec5-4951-467a-9ceb-3eb873fae422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5001d5-9edd-4032-a043-e4bfdcf5b6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba37c816-aabe-415d-a58c-210dacd5536d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7afa1fa-74fc-4829-a4c9-e3174de9d879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96531d3e-aa24-460d-925a-a0a253ef3de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bf5f36-ad04-4d73-90b3-6ce2801373dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bc4426-a5ee-4fd1-84f3-c8eb0c9e1712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be96f6d-fd94-4771-89a7-9f1fbc903694",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904ee2b-aac3-4093-931c-c72b156faa99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a786e884-a15a-4582-9f97-eb7a87f134ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c30216-9250-4665-b6c9-1b87a38650a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de25e3d-2cec-4c36-9821-bc5b1ee99fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f602a307-ff08-4776-a8f0-0d063c35bac4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e912e9d-0612-4866-931c-bb11ea170ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe7713d-c4c7-4cf3-a235-bd82a5faf209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c02103b-8731-4f5b-a6ec-f3cecfba9a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c754be-32ec-45f1-94a6-4c13a7026369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44685c7e-096e-442f-a05a-4542b32d658e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c98604-d7d7-4664-852d-09894fd8a177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641d6c21-823a-4ba8-bfb5-b3a28d53fd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff894eb-f4ef-4ae9-9482-955940f3b911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac31b302-e6d7-4a69-b691-8e5dfade7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7299011-c2e8-432a-b7ac-8396ee217665",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca29f610-4ab1-45b4-ad0b-f38ebe0e721a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ae36e7-4175-4306-8223-745875fee3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fe30ec-4ea1-4ca8-bc26-ee47e85671bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d337e9ba-0ce6-454c-8320-06b9eccf98e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aa472f-5d22-46a9-ba64-df5f9d55e245",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97449e88-bdcc-480d-b7ec-1c52d3fa059e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67adac3b-bf62-4052-a041-cc19c8d9f45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394acf9-b66e-44ba-b1c5-29de5fd42b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ff24b3-9218-450c-a8bc-6c2089c50d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c63d8b-f6c5-4649-81aa-45e53095fed9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3042d7c9-3685-408c-8c7a-47089dbf2a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c942936-58ee-4aa3-8271-be9531ebaff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba049dd0-2615-46d7-9f52-a77094c2a80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6773d17c-4e1e-440b-b466-441ed612d142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffa6fd3-2477-42c6-8fd0-cac87c3e2a40",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f231d3-053b-403a-a8bc-08da4e0fef13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "135672dc-9a95-4ead-bdae-eb8c94838f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a02065-de08-4024-98e7-0495aaa779ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb82db5d-7cfa-4948-945a-e283e2921f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbce6e8-9eb0-4752-b947-ff5e930c0ef8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9c69ab-5def-472c-9407-c9cfe3ef9cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c41da78-b2e1-412f-bbf4-02b3a333427d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6bd121-189c-4e1d-9c26-7f2a83e14188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12554c3e-7226-4ea7-8846-390781a9e3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20feec8d-904f-49c2-9312-eb692665042f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46960015-0535-414c-ab31-9b9fb65854ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e036baa-cb25-4db3-931d-9716978951d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5270e4c6-ce86-41e4-a657-40343ee29a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0c5e69-1668-4807-b24c-1322d99bdabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d97fb8-fb98-49c2-9e08-756f72eaefa1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd2d7c-4082-4b93-8128-658bd8c5f275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccfd4fc-cc6e-428c-9eff-8d769fa84d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27109b41-07d2-43ab-8c09-1e0e741b4aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5490587-4e24-4609-8880-e38be9482786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2113cd3a-2dff-4411-bb53-e3f29aa3034e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1e9cc3-3750-40b6-9b53-1c719c5366e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c45b2cb-a9da-4991-bc0f-120f1c15f07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a12f1db-4b16-40b7-a8be-6d98c2a2bc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcc9518-dd2e-4116-9be9-10f4f741e817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2f1461-bc63-4272-abca-34dd277d12f7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a5a2b2-5b81-4fa0-834f-f7a2163f4c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f059ca6c-d5b5-411d-bfd2-39adfe3db5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d5e0ff-4910-4b1d-90fd-817902eed821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926d218f-f06f-4469-9bcf-0421104e3a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eefb13f-0eac-4c34-8d7a-8bc68ed75fbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6987c-e52c-4761-a81d-83b8da198a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fafa6d-09fb-406f-b0a9-48595b26670a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184cc37f-05ad-4db9-9957-ea6654a77a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39dbdaa-ac33-49cc-8979-c368e1c32392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8bce27-c4f6-40c5-a39d-cc743741c5f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426d3501-2cce-4f8f-b04c-7b8df252a85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4843917-b25a-4472-9b4f-5e2c991e2184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6cf53d-0bdb-4810-9bc5-655663331272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29524bbd-c847-4ae7-accc-adca2dd40e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd52afa7-0775-49aa-882f-0be78d16c64d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04ab8a-6017-42ca-9d65-1b1580b6c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c6f1fb-bfc4-40c2-bc72-1b8993bc09f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6485fe-1b19-4628-9765-5e35f0809010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8c6914-eb22-466a-8391-778746dbe927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcceab91-4f0f-4dac-aaf9-3279f6ff39ac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78827b87-d9b6-4d59-a59c-1d944055931a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad5aab4-a858-44bc-9b2a-6e73bccca7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7bac64-5f1b-4dab-a5fb-0bf755b55870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549c940f-92b8-44f6-b4e0-4d37c63d821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267df235-a3c3-467c-9bd5-1b5466d9ce46",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17dc9c2-b020-48f0-bf7f-3bfb9acf9e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f871d5-eb04-481e-ad15-c8e13a2f8869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab51a6f-5bc1-4874-ba74-0c9a43fe62b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129eff8d-e711-4d35-9a58-b18427615172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a721a30-2433-4b5c-9d89-f480bbe2c121",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d75d2-1865-4467-a694-023a45c5a110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb111eac-21bf-4c67-873f-315928dadd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2548008a-aa70-4ea8-aef1-ce5f9e6c843b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c1b76a-b981-4254-9f27-250935fa60ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ccd43-cdca-40e2-9dae-290c8b367eec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76525579-126a-48e5-8414-dbc1ef7b46de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0105b0ca-0458-4db9-9c4d-2cc9a37f0606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df7265-50cf-4342-9621-5d5b19d839d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4bdcae-f39c-444f-93eb-a300d83402ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b52c16d-cd77-457b-925f-4865277d5ff8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548541b9-7cc7-47d1-bf1a-e77628dd3222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13a340e-71df-413c-9659-f1a2cf83983f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a9efab-3a9c-4295-83ab-6b233318f23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf6983f-f4b7-4687-bc9f-5eb3c02ef1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f2f3c6-22dd-4fc6-b6fc-c51ff8447f22",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b08da95-ca43-4ffc-b8cf-3cc7b2f2a831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a837822-0c9a-4897-8956-41643801ffa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa2e998-0970-4c42-9e3f-5a0554b22393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3779950-761b-469f-9363-3128064133ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463a11f-c648-47a7-864d-1d0da37dc717",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430416f3-1549-4920-bb86-21ddc850183d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b181b63c-49d6-4e7f-a3ee-8b8f80cb8b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d10a96-c578-4d13-af18-aa2b802b62e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020fe20b-ce52-4b4d-83ae-dc8239ae6566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc5f869-8662-4ea2-aafb-f7f584c8d2f4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1314164-023d-4400-9015-4b37fdf740ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c36ff5c-eed4-4b0d-baa2-be70e6dac8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9767f574-8461-4f59-bc7a-6cbd4ee6c56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57bcd22-fbd0-475f-a536-96b7677eb0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7b94b5-85f6-4a14-9442-30b2b5a95f60",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b2662e-737f-48ce-b2c5-52a5e5f0d51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24509182-a7a4-446c-8d09-debcbe8e8adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939a5566-5478-4ca8-b5e0-6982c3393644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e6ae27-4c06-4dd7-8742-8b406b53f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04564d3-f5b6-4f4d-a2ec-11eb31971687",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9510f8e-4984-4fae-808a-55bfd3635eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9163ff8-3cc7-4708-a1a0-97831574b1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba5de42-4cc7-48fa-8bca-73a2ccf3231e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addab279-adeb-4260-9285-a619ea504f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c88da-08e0-48b7-ab80-7e72031bff78",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00010e6a-17a6-4ae0-bdc9-d8fdeb9d1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d2aaad-96c1-44bd-a1fe-63cb8d60557f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1786a793-5194-4249-9bde-2ba15ff612e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61600e2f-61fe-40b4-8ef2-689a40324e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e481f750-df6e-447f-a58a-3e0124090424",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b692407-114d-4860-aaab-7ff49cb573a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e6e6b8-9544-44fe-82eb-224b64b5eeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf8d5f8-b9a7-4ba9-beaa-46ce09218077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc27386-d525-4014-b953-4e49a5074e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61433e31-de20-4384-8707-d5ad48439819",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba563046-43ca-47cc-a8aa-9571b07c8d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5291a58-21c0-44fc-b2ff-2e58a2500482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6ce11a-a0bd-4264-bf82-8396c0f341b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db7b37e-6486-4c76-a4db-ab1b6aafa347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c052cac5-c178-4116-a23f-6cba37f4e33b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baea2b2-1cf0-4c4c-a733-997e8a600e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895fbf17-b1e6-4df7-a273-7813ee09280b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc966a0-fdb6-4033-a34e-259e5e7f9e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a9867c-2be6-4745-ab33-0d97f72949c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5996922d-feea-463e-9fc9-a8a71c9ebf34",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbf81ec-bf72-4409-b265-421bebbd688c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832e9657-ce5d-4344-a46a-4136ebfb9534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4a3dc1-9622-442b-b260-feca0438ce4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59320402-3de6-4100-a9ae-639694d14154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e810b1-05e0-4c99-9d82-0fdf0a6b542f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49c9383-3131-4a54-82b1-9ba583228bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb80bba-3864-475a-81c7-05533b80a1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e560ea-54bf-43de-8b1c-d563d787660f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd2d82b-9ef2-4d3e-9643-57542f76015d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d980777-d29c-4a87-b298-31f4a15594bf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfcc87a-899e-4e26-87a8-d605476c4d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cdaa2ba-ff0f-4d77-bfed-77a208261ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0dd413-6064-457a-af8f-594c18269538",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e846bcfe-953d-4a6d-9d65-4a7b2f895fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae4cb47-c1b8-45f3-8304-814fcec00830",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4071822e-920b-4fdb-bcab-952ee13f96ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e680f41-5085-4e55-9986-4ff2a3ecbb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66599b80-a72d-4d59-92e3-e1f05afeba2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602eb5fa-2b1b-48ce-a59b-d0523a316ac6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a00cd3-adb8-4e50-9d78-1e62f274e7c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60657fd-e963-470c-a4e4-f90895925594"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "395aa6e2-c6b5-4a7e-b00f-8ff25b1b06c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7062327b-2977-4cbf-81f1-994e6ec7ec7d"
                    }
                  }
                ]
              },
              {
                "id": "1d91463e-b7f4-4c4e-803e-70731189f887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b351c03e-c9bf-4b03-9db1-29f057743e2b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b59840-b098-44d0-ba53-05d298e20ba8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b3f8c5be-be1e-4a5b-bbb1-caa2d111805b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa285efe-d5fd-47b0-90ff-fcca675326ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af87155-5e4d-44e1-ba98-251d957b2467"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56448907-1000-42c0-8e3b-315cdf5a2760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "089311b1-f4f6-4547-ba74-3197ae51f39c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a46df1af-e72a-4515-bc9c-38b35866c5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9bbe7c2-d5d9-4561-ae0a-99b4d855e457"
                    }
                  }
                ]
              },
              {
                "id": "e7dbf74a-61d8-4910-9e19-ca3dc753f682",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d9c918df-ddb8-48e2-a269-c1c0c47a83b0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593f0cf8-8321-43d4-b252-38f77061c1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fa55d1e0-7f53-48c2-b675-bc5c21e3e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91057e5-6dd4-4c87-847b-faec91a9ece3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7337aefb-fe63-4b46-a044-b1aa2466a099"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1abd2b08-6eee-46c8-8a6c-589e23f38eee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "492189fb-3dd9-4046-94b4-8ba0f8d6c4bc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b25d1154-af53-470e-bf9d-d6cc3ab19f1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d1b1d80-9633-460b-a65c-2e057162f2a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1464824-c5e2-4400-814a-0647ed1ed567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de26c7f3-d5b4-4637-86b6-da5a42a44041"
                    }
                  }
                ]
              },
              {
                "id": "4865e5d1-7754-4f92-b21c-d4cb7ef3de1a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a14f3cef-09a3-4e78-a35e-50093ee7f1ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1bd9432-93fb-4fc2-91cc-1981eb240236"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18e14923-4586-4a91-a653-c2ce07a5efab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "153f2700-9ecd-4293-b999-f84b88715c9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9461ef15-f0c0-4a30-979b-896363e8da25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e9da7e7-a082-41a1-8355-335fa8399604"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "672329e8-5267-4aba-8b7a-96aa1dc4eb02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0602ed53-66d4-44b1-bb8d-01dcc7e61ce5"
            }
          }
        ]
      },
      {
        "id": "ac83b0be-5f39-4361-8617-316d8e301187",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ba01bd79-d84b-49a0-ac7e-df469d5b36f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99e4f217-02d0-4d5a-8b86-54370c22d8a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d351f5a-43b1-4c30-a722-542a1967edde",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e88f66-1dc1-4efd-b8d9-615f7de033aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c81d6c25-7f1b-490a-b768-d191d1978040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7f2df-90bd-486f-b7ed-75f3ffab4a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c2351dd-3390-4aa7-93a5-ec1441ea67a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ad3ea7-9b7c-472f-9c47-58cc9c7d24d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75799860-687e-4c4d-8632-e21c1f0708b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9bb494-6b03-49c4-b9c5-f9e7b4c2ee72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95dc7bdc-1269-49d6-8515-5b5be295a1fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ada11bc-8711-42e3-a26e-97af2c9350fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "55e9f953-e915-4c10-8ba2-d9cf66dd31df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "545962a3-0677-4316-91f3-c1e83af92b32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e1d580f-442e-4543-b489-739d9b7f5c6a"
            }
          }
        ]
      },
      {
        "id": "3c0ead04-cdc3-4e06-893f-2d676925557d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9f9ee26-ba33-426f-95d3-156e31e6d2b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8497a4c-7c3c-4704-9927-a963b10f5e61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fddf878-d898-4c66-9fdd-22fd4b2cac85",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ceb946-d5df-4c9d-94bd-890efadfdfe4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfa48321-36c8-4612-94b6-468925b7de24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2138fe2-dee4-4b2b-9fb7-155daee29a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdf0f14c-797c-4598-b377-728a1c7c9f76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21060f16-1ef7-46f3-839e-cf3edf5eb420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42d8c24a-aa9e-4b52-9b71-4faed98dfbed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cf73659-88af-4a4d-85a4-6d7232b19667",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89f89d4-34b7-4b2a-adaa-0d8e4c847eb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12a86159-d0fb-4cf9-8b89-97ab4e1283a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3887f90b-5745-421e-aa96-1a5a8d3351fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37d3dd5-1860-4d78-96d4-bf60e0602a7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82341b50-09c2-4aa1-ba48-3d396fb08600"
            }
          }
        ]
      },
      {
        "id": "a1ba1eff-bf1d-4e4e-8266-603da989c0fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bdab8ea4-841f-4f4d-b369-7859aad948bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d962ba58-46da-4c0e-aa37-e5d910804e60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "767ffa44-6623-4696-9820-99c114835698",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5e8d23-e5da-411e-9dfd-2ea666c14052",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c285962d-7608-4672-bcf1-385e9400011c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6efa2e7-a526-45fe-b8f8-c4d40f2c2501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1a19020-005b-4c7b-8aa3-aea528750b25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ede1d5-ccd3-472d-abf0-ac4205fe1e74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7955bca7-94ac-4287-8ec3-b080ab9ae1b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f66325ee-bf76-473b-8782-f72a7743c675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d47e3f5-036f-4d29-8274-56c194451351"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61aca745-43e1-47f1-b7a5-5bde4b2156a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94a871a6-3592-4907-9e22-7c1c74fc933e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dde4fe0f-5501-41ba-b6b6-c744852f09fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa34c1aa-c1f3-418c-86fb-2ee1ef07a82a"
            }
          }
        ]
      },
      {
        "id": "6766643e-46c5-4e3a-8f45-91eea1acf82a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4ecc670-80b8-474a-af27-423ebb7c0abe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786befd4-fa65-4c3e-819d-9fa57626ef38",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5dc6bd2e-a2a5-442b-a17e-0378f63a71a0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c7fd910-1422-42d3-ad86-5d3227c90ab9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91e2f44f-a5ec-468b-aed0-184f68d233cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.782456140350882,
      "responseMin": 2,
      "responseMax": 367,
      "responseSd": 28.12082404277241,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706143025348,
      "completed": 1706143036165
    },
    "executions": [
      {
        "id": "94a9bf7f-9ffd-4572-963f-329bf3580c23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "27461e43-59e9-49dd-8599-eeff652861bf",
          "httpRequestId": "cf1629ae-9354-497f-a885-4eafb40fad52"
        },
        "item": {
          "id": "94a9bf7f-9ffd-4572-963f-329bf3580c23",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b0cd3408-d5c0-4988-ae02-871324aab38a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "aec3c4fd-a9cd-4c5b-a25d-3116db435bf3",
        "cursor": {
          "ref": "29584383-cad2-4ce6-b50a-ceac65127397",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0ef7a541-2a2b-4e60-91e2-34d234af9cee"
        },
        "item": {
          "id": "aec3c4fd-a9cd-4c5b-a25d-3116db435bf3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fb6cca30-96cc-4f84-9b7c-1518c6ef66b1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a3f92f59-4856-4f05-adba-8440d36515cb",
        "cursor": {
          "ref": "96d924a2-4476-4038-ab87-cd05bd0fc871",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "076493ee-2ad2-488a-b3a0-7565b151bda4"
        },
        "item": {
          "id": "a3f92f59-4856-4f05-adba-8440d36515cb",
          "name": "did_json"
        },
        "response": {
          "id": "ddc55f41-1e97-41c2-8fb5-202974644f2b",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534e7c1-8068-48af-baef-f0b54f2cffa0",
        "cursor": {
          "ref": "4479f120-081d-47e2-8f39-585fc540683a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4117d3d3-a88a-464f-b15d-3d18a920eb57"
        },
        "item": {
          "id": "c534e7c1-8068-48af-baef-f0b54f2cffa0",
          "name": "did:invalid"
        },
        "response": {
          "id": "c9391ac1-d345-4cb3-a8c6-e37e7b18da6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534e7c1-8068-48af-baef-f0b54f2cffa0",
        "cursor": {
          "ref": "4479f120-081d-47e2-8f39-585fc540683a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4117d3d3-a88a-464f-b15d-3d18a920eb57"
        },
        "item": {
          "id": "c534e7c1-8068-48af-baef-f0b54f2cffa0",
          "name": "did:invalid"
        },
        "response": {
          "id": "c9391ac1-d345-4cb3-a8c6-e37e7b18da6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e704aa02-bc03-424b-807c-9ece5e4d9998",
        "cursor": {
          "ref": "5bdfd5c6-6c0a-402f-a058-c16175f22f30",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c628296-9f7e-48a5-8f07-502141c1dc18"
        },
        "item": {
          "id": "e704aa02-bc03-424b-807c-9ece5e4d9998",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "12fcdcc7-04f3-4245-8d62-a1cbbe45524d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 299,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4061a48f-6d9b-42ac-9e47-994ab104ea8c",
        "cursor": {
          "ref": "c5c15fab-f74f-46b4-9ba0-8e41d2545ade",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c07ef3ae-338e-481c-be58-b87d5a665db8"
        },
        "item": {
          "id": "4061a48f-6d9b-42ac-9e47-994ab104ea8c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2b9be431-028f-484a-ad35-553a1b07e519",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c22cd-509c-40d9-a019-a475fa48f5fe",
        "cursor": {
          "ref": "5a970b36-f421-44ce-9279-3410c693a363",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3cf54bd9-4df5-4579-bc90-6238073c7fa1"
        },
        "item": {
          "id": "a74c22cd-509c-40d9-a019-a475fa48f5fe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8cc8b976-7f1e-4fb5-b8fe-5892807f40b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087cc283-032e-4873-858b-7e4a4844b4dd",
        "cursor": {
          "ref": "8a036eae-6670-4ff1-8d4a-489b20c8680f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8df55771-04d0-4f5f-abd1-e1d22aed59d0"
        },
        "item": {
          "id": "087cc283-032e-4873-858b-7e4a4844b4dd",
          "name": "identifiers"
        },
        "response": {
          "id": "b96d2c7e-fdc9-49b0-8121-aa2084a13117",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8999f605-aa60-4b91-91b1-77c7521be1f8",
        "cursor": {
          "ref": "b3fa5e91-4154-44b3-bfc2-de88a05b50da",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10dff388-df12-44d6-936d-19c501f239cd"
        },
        "item": {
          "id": "8999f605-aa60-4b91-91b1-77c7521be1f8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "41cfaecf-c57a-4185-93b8-56854d4ffab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a278712-9225-4282-8886-6db8b8733972",
        "cursor": {
          "ref": "75c9adaf-9fb7-478d-b5b1-d6c76b3509a3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8bad9c0b-c7f8-4aa8-8454-fe1ffcbf1abc"
        },
        "item": {
          "id": "0a278712-9225-4282-8886-6db8b8733972",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc413dfa-7e04-415c-9ff3-89eea80724e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344c0aec-de1f-48e0-b3b8-5d6bf6a97860",
        "cursor": {
          "ref": "b09625ea-3a74-44bf-bcbc-09b3ae1d78a8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b91fdcda-3692-406c-b794-95133865843b"
        },
        "item": {
          "id": "344c0aec-de1f-48e0-b3b8-5d6bf6a97860",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "352a0278-b41f-4081-907a-6b9df623fb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1312f775-6ddc-4aa6-abbd-cb4eefae944c",
        "cursor": {
          "ref": "6ecd019d-60c5-4490-a33d-142dc35b7b36",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ac5969ab-0aa4-44f1-acb5-8a610043b7c9"
        },
        "item": {
          "id": "1312f775-6ddc-4aa6-abbd-cb4eefae944c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7c8274ad-a405-4b21-8180-0422ca448b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc2b9c5-25cd-4daa-b5eb-60d0b9ac6228",
        "cursor": {
          "ref": "3798e7fb-f72f-4dda-8487-7d14525aef51",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f3bf857e-d6fd-4697-ae5b-39b9f9612468"
        },
        "item": {
          "id": "1dc2b9c5-25cd-4daa-b5eb-60d0b9ac6228",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4abc6313-179f-4a78-a75d-945d6c03a908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3a266-74f9-4bb3-87a3-9684c837fcdf",
        "cursor": {
          "ref": "7cb53bf5-aad8-4577-acc1-16728c034440",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2512ae01-c66e-4abc-9959-316466739d6a"
        },
        "item": {
          "id": "89a3a266-74f9-4bb3-87a3-9684c837fcdf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f9dc761-9f0b-427d-92d5-acc7ba3b4c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c66966e-d4a6-463d-bb89-71bcea16b46e",
        "cursor": {
          "ref": "b4d6c712-d825-4597-9628-f4cdf7dcd1f7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c6198ea-3262-4c41-a489-3a8d7b93056d"
        },
        "item": {
          "id": "9c66966e-d4a6-463d-bb89-71bcea16b46e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dd95ce8f-1691-4cc5-9f17-02aef1197040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206afda-0f04-4609-b5f8-ca4d37bcafc1",
        "cursor": {
          "ref": "74d23f74-74ba-4a41-96dd-b24b187ec329",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "22614740-efae-4414-adfa-629a2c4ff449"
        },
        "item": {
          "id": "b206afda-0f04-4609-b5f8-ca4d37bcafc1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f21b4537-0e30-4a35-bc7d-98b0575f385c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ba6075-5456-48ad-a9a4-6b96f8efc75a",
        "cursor": {
          "ref": "80d42d99-e848-411c-b4ba-c1c8ac225295",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7fb1a27f-3810-4750-a26a-3ddd91398a27"
        },
        "item": {
          "id": "a4ba6075-5456-48ad-a9a4-6b96f8efc75a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a4105bc4-d642-4f7e-aa82-307184512222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666cf542-9d30-4edb-b0dd-ccf222d0de0d",
        "cursor": {
          "ref": "adc0092f-5d14-48b5-a485-f99274780e54",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d712d233-d3d9-4b5a-a7b7-2e808adb6492"
        },
        "item": {
          "id": "666cf542-9d30-4edb-b0dd-ccf222d0de0d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9cc2fe5c-5314-4c3b-bd62-80c72ee7d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3665d786-7e41-4e32-9851-c674735e4b1b",
        "cursor": {
          "ref": "cf908dc8-5dcf-40ae-8144-99d4d65c02d2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8c363b69-00f4-4343-bfca-caa5e509aac2"
        },
        "item": {
          "id": "3665d786-7e41-4e32-9851-c674735e4b1b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "67ed228b-3783-4c5a-950a-5200dc41e897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa7712a-fcdf-4ecf-b1e8-4d3b0e00f7a1",
        "cursor": {
          "ref": "cdfa2778-06f7-4b99-b7d2-06f8b4227482",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8013fcab-5b7b-46d5-a7e7-f0d6a5a2d423"
        },
        "item": {
          "id": "3fa7712a-fcdf-4ecf-b1e8-4d3b0e00f7a1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "327b9993-524d-48e4-8c6d-af5b273f3b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a84176-89f8-4967-9081-1bceaed158ff",
        "cursor": {
          "ref": "a2a1b08b-d326-49a8-872d-8ae5bc21c112",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d7a9757f-e1f1-4325-9944-645065eaccb2"
        },
        "item": {
          "id": "e9a84176-89f8-4967-9081-1bceaed158ff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b127de59-7f36-4a47-ba9a-5515c3737ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aff569b-e474-4409-8b54-958172e7ff6b",
        "cursor": {
          "ref": "c90766d6-f22e-42bc-b19a-85dd8a446571",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "84020700-fd81-46b6-b13a-af103910fe46"
        },
        "item": {
          "id": "8aff569b-e474-4409-8b54-958172e7ff6b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2cb67697-76e1-460f-a669-e55367c15ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9b5ed5-e4b4-4a81-9435-0da0bd71cdd7",
        "cursor": {
          "ref": "646170e5-7478-4866-9101-cd0f4160adb5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b99f3ea1-f253-47b0-9092-5a8cdc1d0763"
        },
        "item": {
          "id": "dc9b5ed5-e4b4-4a81-9435-0da0bd71cdd7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b2fa6540-a19b-4605-b651-8479cb63b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf66d71-06c8-47fd-9a8f-73f66ba6cb56",
        "cursor": {
          "ref": "a617fcb4-02ac-4ae3-9ae8-6787267fff93",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1572d2e1-b911-467f-ab3a-213e1ec8095b"
        },
        "item": {
          "id": "dcf66d71-06c8-47fd-9a8f-73f66ba6cb56",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fd71a193-f2cb-4b39-ac1a-cdd828a896e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d30cc-c198-4927-ba81-9f7fc976030f",
        "cursor": {
          "ref": "cfbabb02-2259-43d1-aca3-8db8e72b5589",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "61ab5708-7d42-4f46-8d71-b38a4c199a5d"
        },
        "item": {
          "id": "869d30cc-c198-4927-ba81-9f7fc976030f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b356a1f2-0e3a-4f32-83e9-6077b1697ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38168df7-9b67-4f48-a332-a336da8732dd",
        "cursor": {
          "ref": "800855e9-4c83-4274-a449-eb9ab725ab06",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e6834bf5-ff08-47ce-8b24-720c965b0c0b"
        },
        "item": {
          "id": "38168df7-9b67-4f48-a332-a336da8732dd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4da9461a-9e07-4a6b-933a-b87f9c73d0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e6d7d7-ae16-487f-9f44-6d8425b395e0",
        "cursor": {
          "ref": "6d239a52-d390-4e2c-b6a3-034c0cac1742",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4b7f4e63-06ea-419b-88ce-28c122055225"
        },
        "item": {
          "id": "81e6d7d7-ae16-487f-9f44-6d8425b395e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8c5493ff-d5c4-47f2-9c28-02ca8e2a5be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a396ec-2a9a-4464-b63f-80361d2c9897",
        "cursor": {
          "ref": "19ff7094-0e0e-4cd8-8c15-ad89f573a1e4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f97ca9c9-0c4f-4eb1-8cc6-9d54c11d4d34"
        },
        "item": {
          "id": "12a396ec-2a9a-4464-b63f-80361d2c9897",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "af1a002a-2eba-4bf3-9f5a-d8cc16b1b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361fc70-f4f3-4208-9e7b-cddc27fe3602",
        "cursor": {
          "ref": "69bd18d5-0e1d-4dab-a760-9b513ada8487",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7a3e31f9-0bf0-4517-9b07-e484622b394c"
        },
        "item": {
          "id": "0361fc70-f4f3-4208-9e7b-cddc27fe3602",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d67f669-8387-4759-b4b1-b54ed3bad156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a30b93-7eea-476c-9de1-869d6ae2f618",
        "cursor": {
          "ref": "63d017b3-6e94-4dfc-9ebd-46ee6c3621d7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7f85c22d-a51b-41d3-ba75-cbfdc635cd89"
        },
        "item": {
          "id": "c4a30b93-7eea-476c-9de1-869d6ae2f618",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c5a4eb6e-0be1-4acc-bf1a-68a06a61e359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41dcb8a-0bd5-48e3-9f2b-7331066df810",
        "cursor": {
          "ref": "3a5650e7-2b0b-4719-8b95-fc6c8924e7b7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fba6ba18-3f89-4133-bb8c-ec6deb3d8628"
        },
        "item": {
          "id": "b41dcb8a-0bd5-48e3-9f2b-7331066df810",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "91d71a09-79d5-4433-97d2-c705337249cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7379741-bfdd-4c53-8ca0-27f8114781dc",
        "cursor": {
          "ref": "53b448f5-0010-4071-b468-0eebf7b8b431",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1039e411-bfb7-4206-b4c2-6242e0046c55"
        },
        "item": {
          "id": "a7379741-bfdd-4c53-8ca0-27f8114781dc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3e97ff1e-7a1c-4160-9a04-33e2a0439743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e4c291-826b-431f-92be-cf0ca3cc88a8",
        "cursor": {
          "ref": "7d21c5a4-1c2c-4069-83f4-7ef5bad2d886",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fe9724b8-0c51-4485-9ff7-1a42715928ed"
        },
        "item": {
          "id": "22e4c291-826b-431f-92be-cf0ca3cc88a8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0fbe823b-7506-40b4-a4eb-d6b5c8699fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fb01c2-e845-421b-81f0-6a425c9f1ac0",
        "cursor": {
          "ref": "c8b32ce8-bff7-4960-8f3f-d418ff8d2881",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5490bf4-cb09-47fc-9075-a0f9aa394aa5"
        },
        "item": {
          "id": "55fb01c2-e845-421b-81f0-6a425c9f1ac0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6e016b6c-b644-4ca5-b781-9cc2120b84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b863931-4b24-4beb-89d0-2c79a571f875",
        "cursor": {
          "ref": "2480f8b0-f3a3-4170-ac10-f77fda1ab8bf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "628fd2a1-f6b2-4c63-95aa-8bb267074bb1"
        },
        "item": {
          "id": "2b863931-4b24-4beb-89d0-2c79a571f875",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "11b40293-5644-4974-bbee-f20d86501b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bda09af-efb0-44b8-862e-6616e805e32b",
        "cursor": {
          "ref": "6e3c80a2-0101-4eac-89ed-fbefbdf371ee",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "19cba3de-7178-42fb-a212-faa6bc6fea6a"
        },
        "item": {
          "id": "5bda09af-efb0-44b8-862e-6616e805e32b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42c3c966-1603-49fe-9ee2-575d0b1b35d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90fad1e-2521-40fd-b493-0bb5b2c901f8",
        "cursor": {
          "ref": "877abbe4-9d5b-47e5-908b-2388838dc062",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "56ad18fe-8b6c-4d5a-8f5b-b35b205d7161"
        },
        "item": {
          "id": "a90fad1e-2521-40fd-b493-0bb5b2c901f8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8e721372-6279-43e4-8b11-b3049f77fa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b586a-47e5-48f3-915b-0ca2189e81d1",
        "cursor": {
          "ref": "5fe3a2ca-dc3e-4d11-8f3e-d2c0e898d1c4",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d21be85-263d-4030-b1e6-a752ba52c394"
        },
        "item": {
          "id": "f28b586a-47e5-48f3-915b-0ca2189e81d1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1290c62f-2c65-400f-8b74-42902708db00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80960c9-8a56-4386-9ef0-943bf4069f42",
        "cursor": {
          "ref": "1c9fb7ec-4c8c-417c-bc64-aa07461eb26e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "34d9fe9f-0bd7-4ee4-97c3-11d9beca56cb"
        },
        "item": {
          "id": "b80960c9-8a56-4386-9ef0-943bf4069f42",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3ecb315-1669-4219-b9b0-1f5a9b12255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49dbc8c-77f5-4cb4-934a-488fbd751d52",
        "cursor": {
          "ref": "7487afe5-08a1-4d13-934d-d367883dc29e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d47a2162-14a6-4edf-8408-94fccc96af0d"
        },
        "item": {
          "id": "c49dbc8c-77f5-4cb4-934a-488fbd751d52",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c8a378ff-aec3-401c-84e9-1ed7dd62d62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532be862-30a0-4214-8c73-4470d579f314",
        "cursor": {
          "ref": "0e611b8d-4ff5-43b8-8e42-3ed01cdd6144",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ab519ee1-48ad-474b-9bb1-432b69e0750b"
        },
        "item": {
          "id": "532be862-30a0-4214-8c73-4470d579f314",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2993767-856a-4a27-94cc-94b44060b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb33516-0319-4916-8283-151e2d41a2e0",
        "cursor": {
          "ref": "52c8007b-67ba-47d4-bf52-1e8f551a8344",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8ad6b274-bbca-486a-8877-7a62147dd3b6"
        },
        "item": {
          "id": "3cb33516-0319-4916-8283-151e2d41a2e0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ae9eddfd-0cd1-49d5-81d0-924417ddefb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb434dc-8434-4b2c-9971-94d122a132c5",
        "cursor": {
          "ref": "581d36e4-66a6-430d-9a35-ed87cdc8225a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9a8948a9-7e7c-415c-a34e-d4695e87d0d7"
        },
        "item": {
          "id": "bbb434dc-8434-4b2c-9971-94d122a132c5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "36587dfe-8616-4e9c-93a1-265b242f50e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da7e022-ef2f-417f-8904-36c824fe20bb",
        "cursor": {
          "ref": "fbb034bc-5bb0-4c56-877a-7d4895491036",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1c356cdf-5adf-4b61-a2b7-1692e180a5f5"
        },
        "item": {
          "id": "4da7e022-ef2f-417f-8904-36c824fe20bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4e42e9c8-e50e-40d2-a6e0-12cdae32e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf392d9-2504-4ef9-a637-7b52c31bd6de",
        "cursor": {
          "ref": "c3f0eaaa-f219-4616-8773-883bb5618059",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3e4d6300-482e-4f19-be88-55a15ddd0ad2"
        },
        "item": {
          "id": "fdf392d9-2504-4ef9-a637-7b52c31bd6de",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc325fff-b19a-41e1-93aa-69ea6b688a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ef76e-16d7-447d-a325-495adb5ac259",
        "cursor": {
          "ref": "e23336c4-5fb6-41f9-a118-affa8a34f26b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "653b8b9f-331a-4543-9a65-397c2fd70df8"
        },
        "item": {
          "id": "0f7ef76e-16d7-447d-a325-495adb5ac259",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b33c039f-d420-4594-bf13-521406716a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1780882d-95a1-4639-a4ab-c480c570ca03",
        "cursor": {
          "ref": "43d2aff9-c752-4349-b6eb-9aa433ad775f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "53b335e9-b130-48de-a9be-a758237473fe"
        },
        "item": {
          "id": "1780882d-95a1-4639-a4ab-c480c570ca03",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "13724642-7fdb-4c83-970b-258e2f2df0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c360169-8ec4-433a-b8e7-44d1671c765c",
        "cursor": {
          "ref": "3fe4d6a0-9d83-4a04-a041-8e8e040aa4e3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c83f428a-2bbd-4ac4-97cd-f5a51b44d58a"
        },
        "item": {
          "id": "1c360169-8ec4-433a-b8e7-44d1671c765c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "81d8ba5e-c232-4777-b633-ad5140f88b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a2225-c214-4350-b2a7-ed66f81af04f",
        "cursor": {
          "ref": "dfab1b7b-c0b5-41df-a6c3-6edd749d907d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d500bb4a-296d-403c-b594-2a1341a90c34"
        },
        "item": {
          "id": "f57a2225-c214-4350-b2a7-ed66f81af04f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1e2a8c21-2673-42eb-931f-1844236013f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b63760-0447-424e-b364-a3ee1a958656",
        "cursor": {
          "ref": "1e9e45fd-ad1d-41fb-b63a-ada29f26bd10",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "406b9ed1-6c0d-44f3-9872-9c2c52361e77"
        },
        "item": {
          "id": "83b63760-0447-424e-b364-a3ee1a958656",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d10917f-8bd8-42a1-96f8-0e8897f3ff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b0d70-b298-440c-9d3f-aa173bfaeab3",
        "cursor": {
          "ref": "293ebb8d-394e-446c-9781-77d260203541",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "94e1a956-ee8b-4d9c-8133-8e7646b76d1d"
        },
        "item": {
          "id": "164b0d70-b298-440c-9d3f-aa173bfaeab3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "746f4b73-090d-429c-8b27-b13ea4dbc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae6eed-f5a4-4eb6-8e52-8c978cfc57fd",
        "cursor": {
          "ref": "b28d3205-0964-45d0-ae50-c9fdd1144d37",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4652cc50-88c0-4a11-afcb-4c807f84c768"
        },
        "item": {
          "id": "33ae6eed-f5a4-4eb6-8e52-8c978cfc57fd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc628fe1-dd9c-44ff-a442-d4ce3186f6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2addf0f9-2a12-4f8c-8c15-89554a342913",
        "cursor": {
          "ref": "dcdd70b9-9937-40f0-81e9-5f4c37934b21",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f3d9f9d5-aabc-4685-91f2-13a344cad8e1"
        },
        "item": {
          "id": "2addf0f9-2a12-4f8c-8c15-89554a342913",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d43591f1-3453-447a-8883-2feeafbd42ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de638dd-bd8c-4917-bb92-f02497f7f311",
        "cursor": {
          "ref": "f8c404b9-f38f-41e2-92a6-26d24c9b2ba5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "609c5066-8b74-4c8e-98f6-1507836d5d91"
        },
        "item": {
          "id": "0de638dd-bd8c-4917-bb92-f02497f7f311",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "11168143-9fdc-4a44-9da2-d315298eef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87854c1b-cbe0-4f24-abc6-af0997de3aaf",
        "cursor": {
          "ref": "0a4aa11c-731d-45d0-a2a8-8ad6f80e32e4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1e8107a9-69a5-42b4-b2fa-6a15e05abf99"
        },
        "item": {
          "id": "87854c1b-cbe0-4f24-abc6-af0997de3aaf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c7372fe-77ca-4c3f-8158-24e06c6c64ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae9d057-5e57-4fa4-99b9-8b16e6394948",
        "cursor": {
          "ref": "2dba1e28-ac37-4b47-82f2-98133ee57362",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7d01c94d-ec9e-4c7f-afc1-6912f09380a5"
        },
        "item": {
          "id": "3ae9d057-5e57-4fa4-99b9-8b16e6394948",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f63f6016-3a5d-4942-bab8-6a28be133416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b0fac7-377c-4c4c-97bf-31df15931b7e",
        "cursor": {
          "ref": "6c5b9326-28e3-4aef-9143-a3e1cb20574b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7c427143-1cf1-4c17-a856-84a0c405cf5e"
        },
        "item": {
          "id": "97b0fac7-377c-4c4c-97bf-31df15931b7e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c368a671-ac60-455b-b54a-45f643605625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7e217d-e64c-471d-9b6f-fec1a1304ff5",
        "cursor": {
          "ref": "40662901-9b0f-420a-8884-dc408ee20aa2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0992943a-e1e7-44a3-8ba6-70b9c1140623"
        },
        "item": {
          "id": "5f7e217d-e64c-471d-9b6f-fec1a1304ff5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1794cb0-82ac-4eeb-bb90-ddbd0ae14d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296dd54c-99fa-4b01-a7f7-86e8b7c96523",
        "cursor": {
          "ref": "6ffa076a-7652-4335-af6d-79bed0dd1404",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2592d004-c663-470e-8c4a-2970474176b5"
        },
        "item": {
          "id": "296dd54c-99fa-4b01-a7f7-86e8b7c96523",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1ce35afd-004d-493d-bdd1-06ddf6806f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dcd4ba-413c-440a-a9cf-cbaa77d89ed4",
        "cursor": {
          "ref": "d0dd60b6-34a3-4624-9f52-9b70a072061e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "470e1d3d-2d63-47a3-8c78-bc1ed7cfa491"
        },
        "item": {
          "id": "e0dcd4ba-413c-440a-a9cf-cbaa77d89ed4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "238185fa-69db-47bb-9f20-4d703fa152c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c93892-a00f-4d78-a85c-bd9bc3ebc3f1",
        "cursor": {
          "ref": "e9540994-b194-4f20-abbf-403bf8516e58",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eaa33781-c6ae-4cd8-9f88-f014ac76791e"
        },
        "item": {
          "id": "04c93892-a00f-4d78-a85c-bd9bc3ebc3f1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f765054b-af27-4f69-96fd-2a303915b2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60fa277-3e01-422e-b7ec-8298394e6bb5",
        "cursor": {
          "ref": "73e88ea1-e2f5-47ac-8c3b-6829dd65f9c2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c9eeac43-c607-4670-9612-9630c9237e24"
        },
        "item": {
          "id": "d60fa277-3e01-422e-b7ec-8298394e6bb5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b268d170-a91c-45eb-a274-4d4f67c00da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f87bb19-0ffa-4ddd-bc00-30187bea4331",
        "cursor": {
          "ref": "f3863d17-27a7-455a-ae03-3f788131aaee",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4f9b7c66-5227-4e4a-8513-11d807d4406d"
        },
        "item": {
          "id": "3f87bb19-0ffa-4ddd-bc00-30187bea4331",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f184d59a-636d-487e-a2fa-352f61770bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2b16a-9d3e-4582-83ee-0ed8d828c56f",
        "cursor": {
          "ref": "4d01745a-4a66-4fe1-8bf0-23e8db15187b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ae8842bd-c515-4a91-a142-5d4a317539b6"
        },
        "item": {
          "id": "d8b2b16a-9d3e-4582-83ee-0ed8d828c56f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99b6cbb6-80b8-450f-895f-dc29def842d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d220935-2fd4-4d6c-b772-907805c5d1a8",
        "cursor": {
          "ref": "e221c233-cc99-4e3d-b310-507e8f7c731a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "60baf6ec-d8cf-4a3f-a7ff-12f5f17e56d3"
        },
        "item": {
          "id": "1d220935-2fd4-4d6c-b772-907805c5d1a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ad40b799-be41-49e4-814e-3f79a7686d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d4055-e959-41c7-82a6-1cd6fa2aae09",
        "cursor": {
          "ref": "432ad40b-b558-48b7-a22e-bdaeff491d03",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fb72a8b2-b98e-4101-ad74-011c243de18b"
        },
        "item": {
          "id": "6b1d4055-e959-41c7-82a6-1cd6fa2aae09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "048089c0-fe31-41d2-a54a-8a86424873eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02deb9-191c-479c-87d9-98ec6a6e629e",
        "cursor": {
          "ref": "b4353b9a-87c5-4871-bab0-70927a8734d6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37d48a99-7648-446a-b22f-e09f8a33122e"
        },
        "item": {
          "id": "2b02deb9-191c-479c-87d9-98ec6a6e629e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7840f7bc-f9df-41c5-9c44-d42c6240ff93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7a975c-dd2d-4583-88ef-cad48f4bb0e1",
        "cursor": {
          "ref": "ce464202-ee8b-4b88-a0ab-d51610e430b0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7ee6fe60-3418-4870-9730-70c71542ac52"
        },
        "item": {
          "id": "9b7a975c-dd2d-4583-88ef-cad48f4bb0e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d6ab441-79ba-481e-9650-a76185f8d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719dae8f-cde5-4b37-b409-d88983412e0c",
        "cursor": {
          "ref": "a47527c6-1e98-4fa0-874c-c71e5436230c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e8ed6ecb-b7bf-4271-9592-f933953e140a"
        },
        "item": {
          "id": "719dae8f-cde5-4b37-b409-d88983412e0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f7f6d815-b45c-4246-99a6-400071df39ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3cd03c-118a-499d-9b87-fa7d0c4bc4a0",
        "cursor": {
          "ref": "7ac73896-91a4-4c65-9ae8-13ac92d51f28",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "84e9c40f-6120-468e-8b06-d626ee2b40d0"
        },
        "item": {
          "id": "cf3cd03c-118a-499d-9b87-fa7d0c4bc4a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f0944baa-9e14-4d05-ab36-b01eadf1ce2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01f5ac3-50bb-4c62-ad45-cc4e607d0a0b",
        "cursor": {
          "ref": "ce21f3aa-b672-4cb3-b669-f6700d9c47ce",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4a1e05e0-068e-411c-a7a3-4e15fd66c255"
        },
        "item": {
          "id": "b01f5ac3-50bb-4c62-ad45-cc4e607d0a0b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e626b35a-8165-4b68-8b61-44b335ab9db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e6dc87-44c4-4b60-b688-53af07332cac",
        "cursor": {
          "ref": "20e6432a-8839-45f2-97a6-ad8a6c080731",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "93cdf05a-6a6d-47dd-bd41-9ca93df25448"
        },
        "item": {
          "id": "c2e6dc87-44c4-4b60-b688-53af07332cac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fe44632d-c722-4f5a-aeea-e2b42ff32f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7191c6c-d165-403f-90b9-b08ce1c963b8",
        "cursor": {
          "ref": "dbf08262-6aa4-488c-a841-813548b74acc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "01d2d670-9d53-4273-879c-f136d7645959"
        },
        "item": {
          "id": "b7191c6c-d165-403f-90b9-b08ce1c963b8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9942ffc4-5c75-44e5-bd09-5763aa055931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8996a081-0250-4a22-b2fb-e4eeb046b389",
        "cursor": {
          "ref": "d96b18f9-27e7-45ff-b8a5-d56e557d5e5e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18e7f0a0-5eb6-4fec-893d-0f590b9676e9"
        },
        "item": {
          "id": "8996a081-0250-4a22-b2fb-e4eeb046b389",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7e093bd7-2aba-40a6-b0f7-29e42f8d8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd297ce-7458-428e-96e6-b306518e1e15",
        "cursor": {
          "ref": "32a38e64-cec3-4f1c-a9d3-17f7318362b0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1b69aaa-e948-43b9-a876-d7933bb44021"
        },
        "item": {
          "id": "0dd297ce-7458-428e-96e6-b306518e1e15",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d5df1c61-9c0f-4bf4-9087-25fc1a8e42e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20563168-8222-4d2c-8b81-7b1bb1376828",
        "cursor": {
          "ref": "efd92bb5-0893-43fa-8fe6-c12017b33039",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec3f3531-30f3-409d-a5fe-28e05f4d2299"
        },
        "item": {
          "id": "20563168-8222-4d2c-8b81-7b1bb1376828",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34c7981d-3e0f-45fe-989a-e4d858e46a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aab833a-e8d4-402d-a2d9-7aa2aee35805",
        "cursor": {
          "ref": "ded162cc-3b01-4537-93fd-306644024fdc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "456c1b1f-e6fe-459b-a64b-86aae6bee6b1"
        },
        "item": {
          "id": "0aab833a-e8d4-402d-a2d9-7aa2aee35805",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "87c3f215-9fd8-4cc5-a5de-5788bd65fdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541081d0-73cd-4f31-8428-9ad463db0d19",
        "cursor": {
          "ref": "4631d50a-9511-4b7f-a87c-603e7c1fea08",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dd12b7de-8da1-4dfd-bb1c-bcbeca78c7b9"
        },
        "item": {
          "id": "541081d0-73cd-4f31-8428-9ad463db0d19",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5040a159-4418-4f7e-a4cf-a1286d40b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d55e0f0-4bcc-47d7-89f6-943dba50cb3b",
        "cursor": {
          "ref": "226e2472-a971-4aae-b117-d4482231b455",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2d1a65f5-19d5-44e3-a366-f796651abf71"
        },
        "item": {
          "id": "4d55e0f0-4bcc-47d7-89f6-943dba50cb3b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "260cf488-8342-47d7-a4fb-637eff73049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e010aa78-2304-4dbc-ad97-254c07a84459",
        "cursor": {
          "ref": "b49ceb01-7f63-4f7d-a1fa-0decf8445723",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10a0d81c-c742-4e28-8e20-54efdf66c106"
        },
        "item": {
          "id": "e010aa78-2304-4dbc-ad97-254c07a84459",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1e948772-f73c-4143-9f1e-8c06d7f27a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197975b2-47f8-45cb-8c17-8cb45b30e74b",
        "cursor": {
          "ref": "f4fbc1f6-62c9-4150-82d1-176245e89ed9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d541eb15-5145-4631-a799-319a41233f6a"
        },
        "item": {
          "id": "197975b2-47f8-45cb-8c17-8cb45b30e74b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ec412ca9-e622-4bad-8034-d815f1e1e8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b216c0cd-afa8-4399-afa3-50bc0a1eeb1e",
        "cursor": {
          "ref": "944dd7d1-1612-4876-b17c-3511bc34b393",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5f6b98c4-3c37-4b97-bee8-ed30e35974a9"
        },
        "item": {
          "id": "b216c0cd-afa8-4399-afa3-50bc0a1eeb1e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5cd031b8-3379-431c-bf9e-a95b385ad5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff90b7d6-ae45-4eb2-bcfc-96a62da5ccbe",
        "cursor": {
          "ref": "01ace832-c213-4315-859e-f4fd0bd69f52",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0afd353d-707f-4a88-88d5-bd2da0751f35"
        },
        "item": {
          "id": "ff90b7d6-ae45-4eb2-bcfc-96a62da5ccbe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "16706c0b-897f-4775-9e6e-6797d089f1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed05b050-0b16-46f2-a0cc-79d4644027e3",
        "cursor": {
          "ref": "00f4cdaa-e04e-486e-87b3-c509ac5a6356",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90863900-9c2b-4dda-8fe4-0bad330e86b5"
        },
        "item": {
          "id": "ed05b050-0b16-46f2-a0cc-79d4644027e3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2b358fbb-fbbb-41e9-a8f7-7bab61d9c06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2461cd-3516-464e-8c29-916aa9f0ce72",
        "cursor": {
          "ref": "99b76332-4052-4d32-a30d-883a7531b099",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c94d6e8-d93f-4575-8972-3a1ab1d778ef"
        },
        "item": {
          "id": "bd2461cd-3516-464e-8c29-916aa9f0ce72",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68d32fc6-621c-4455-9e0f-e376871a747e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21706fe-87cf-4f79-9715-e1824ec86c1a",
        "cursor": {
          "ref": "de87fd8f-945e-49b0-9fa2-8c84a03d284d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2be5c2d5-47b2-482a-ab95-a2f9fcc3c302"
        },
        "item": {
          "id": "d21706fe-87cf-4f79-9715-e1824ec86c1a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "182ee814-6978-4101-9e3b-1b862d92fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27d288d-0759-455e-b71e-e1fea86edb2f",
        "cursor": {
          "ref": "d41dad0c-4af1-444f-b09d-0fdc6058127e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "31b3f763-ec43-46d7-b397-792f747fa8e0"
        },
        "item": {
          "id": "c27d288d-0759-455e-b71e-e1fea86edb2f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8a386da-12eb-40e5-bc20-198cfc196bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d4d8b7-5e9e-4258-990a-b58a1f3f68a9",
        "cursor": {
          "ref": "eb6a64e7-5a87-4a62-a23f-de2477672d91",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "afeaa14d-8728-4c07-8946-f05838d234ac"
        },
        "item": {
          "id": "69d4d8b7-5e9e-4258-990a-b58a1f3f68a9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "31ef17f8-8754-48ef-866a-5f6326c62d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab21fc3a-d050-4430-b720-cb3b8abdf886",
        "cursor": {
          "ref": "c8f40b16-057c-41b0-ab5a-08c1ce264dd2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2ba0a88b-a8a7-4325-b476-de6325079125"
        },
        "item": {
          "id": "ab21fc3a-d050-4430-b720-cb3b8abdf886",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "88d44a7b-bcad-461a-a048-a6a871784e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf4f8b4-cab9-4ea4-bb0d-b37cd16d8765",
        "cursor": {
          "ref": "5afd628c-34e5-46ec-a5b5-08626bcad0f9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "beefdca5-be2d-4856-8397-f5ba0b11a963"
        },
        "item": {
          "id": "2bf4f8b4-cab9-4ea4-bb0d-b37cd16d8765",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "77505f74-6d74-4748-bfc8-53c4f51354f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aa9d6e-ae43-482d-b13a-47ea7aaba8d5",
        "cursor": {
          "ref": "7accd910-43a8-48e3-b1d7-5a729c57b02c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6f93a78-dde6-4e5d-973b-e2fad4b762ca"
        },
        "item": {
          "id": "73aa9d6e-ae43-482d-b13a-47ea7aaba8d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff7e5da4-267e-42a4-9272-0d14bafcffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d62bb7-9a9e-4491-998d-89fc7abbc5ae",
        "cursor": {
          "ref": "05b0ef83-eb16-4488-b211-467814070d11",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7278e6ed-0aaa-4611-b26c-2646a4f3baf0"
        },
        "item": {
          "id": "d8d62bb7-9a9e-4491-998d-89fc7abbc5ae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "67ee95f0-afcd-48c1-bbeb-dcaf226df677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cde6e9-5c9f-4120-af06-2d0b2b11c988",
        "cursor": {
          "ref": "eabda7c0-68b4-4e6a-a301-246bd00a5c30",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1f6b3eb6-348d-4a9b-8327-7d948eb13254"
        },
        "item": {
          "id": "b1cde6e9-5c9f-4120-af06-2d0b2b11c988",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f371f77e-cad5-4730-91d2-d0f3a1341d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c1a60-0b8b-4b37-b3b1-e48637a43bf6",
        "cursor": {
          "ref": "5758597a-879a-4fa5-9824-d296e0f0f55f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f5b1ae64-a517-4fcf-855a-aa8be2b86888"
        },
        "item": {
          "id": "7c9c1a60-0b8b-4b37-b3b1-e48637a43bf6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5fa28a5d-844c-416c-a137-c828de5b3b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb721751-55ef-4e79-9767-cf64f63ab95b",
        "cursor": {
          "ref": "d4cf0913-6a19-4070-945f-acd5e2692b20",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c6f7f794-e8e7-476c-83ff-5355ec6c45ab"
        },
        "item": {
          "id": "fb721751-55ef-4e79-9767-cf64f63ab95b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f39fbe8c-463a-40b5-9deb-d1dfa7bb4f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03774abd-b129-4853-ba3d-734d6b8b88ad",
        "cursor": {
          "ref": "066edab5-4680-4563-9499-df9df0d2d547",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "474618b2-e8de-4aa9-968f-c6c54042a11e"
        },
        "item": {
          "id": "03774abd-b129-4853-ba3d-734d6b8b88ad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4cf51bce-a30d-4213-9bd4-ce2481d300ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d22d3f9-e5f7-4b2f-9cc2-a2abe7bc1704",
        "cursor": {
          "ref": "2d0befbc-acdd-4f86-8ab3-0bc6911a01f2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1511bdbf-5f39-4080-a487-af8b94dc2aa3"
        },
        "item": {
          "id": "3d22d3f9-e5f7-4b2f-9cc2-a2abe7bc1704",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dff189d4-cc7a-4cdb-b686-fc184f35b628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca68f62-f7f6-4a75-a66e-93aa97aec168",
        "cursor": {
          "ref": "60526994-260e-4ed4-94b8-a6c99f977f5f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52ff8105-d7de-47fd-9026-35a37555abfb"
        },
        "item": {
          "id": "5ca68f62-f7f6-4a75-a66e-93aa97aec168",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2ed91334-e47e-411b-8101-c035fd8edc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76b06dc-5b98-463a-92d0-fde4858134d1",
        "cursor": {
          "ref": "fce964af-5f36-4e1f-9a93-17ac442532e6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3913a813-2622-4d9a-9df9-45cf37707c96"
        },
        "item": {
          "id": "e76b06dc-5b98-463a-92d0-fde4858134d1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1762c25-ae1d-49b8-aa4a-3001534d4908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2ca9bc-0d1d-4a8b-a4db-22a5d1686601",
        "cursor": {
          "ref": "7343bf9a-987c-49e5-9e5f-ee0a3e6bbe35",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7fbb7330-4d91-42c6-998e-31e08ff5a974"
        },
        "item": {
          "id": "2f2ca9bc-0d1d-4a8b-a4db-22a5d1686601",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1974703b-ec36-4697-b81e-867b649ebccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc8cf09-3f9c-4fd9-91f0-50fcf3af3fc6",
        "cursor": {
          "ref": "65af18c1-c43a-40ac-af99-b7cc20a57075",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7d2ae6ae-3097-4b4d-8b5e-354e29b026d1"
        },
        "item": {
          "id": "7dc8cf09-3f9c-4fd9-91f0-50fcf3af3fc6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd6515ef-f314-4b85-aae5-ac642f906dbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fb9d38-10d7-422b-9da3-c518a67f9145",
        "cursor": {
          "ref": "72f4b273-ffa9-424b-9795-983e110cdf5f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ef008915-dd0c-4fb3-8686-9a8658f25182"
        },
        "item": {
          "id": "13fb9d38-10d7-422b-9da3-c518a67f9145",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9058d9de-dcff-4f6a-b9b1-64442a8ab691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4fdb8a04-b147-4c57-a2ee-bad54bc9c5da",
        "cursor": {
          "ref": "5e594fdc-64f3-42ba-a46d-4c3cda22cf5e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1677c0e3-d216-48a3-957e-d734af273a4e"
        },
        "item": {
          "id": "4fdb8a04-b147-4c57-a2ee-bad54bc9c5da",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae6f2333-ff62-49ea-b849-e0012a7d825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9785b34e-7c4f-44fb-8c63-731e11c48a8b",
        "cursor": {
          "ref": "66da7cad-a2b9-41a4-af0c-51987382cdbc",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "75b90a9d-f7ec-469a-a9d3-47e04a2ce065"
        },
        "item": {
          "id": "9785b34e-7c4f-44fb-8c63-731e11c48a8b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "993511e8-9124-470b-a8dc-88e3d21bbc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0f9f1b6c-1e71-4bb3-af76-84746e225fed",
        "cursor": {
          "ref": "27d28c38-a7bc-44eb-a78b-5223d87569d3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a1907952-dda6-4e69-b060-d6db75a84831"
        },
        "item": {
          "id": "0f9f1b6c-1e71-4bb3-af76-84746e225fed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c93fd85c-e88f-409b-a174-136b45857793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ab49af62-5a68-49ff-a3f6-bda87b40029f",
        "cursor": {
          "ref": "00a64250-782e-4833-9198-99297ac4c45f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b3b86694-bec1-4ff4-93d6-1e08daa28c9f"
        },
        "item": {
          "id": "ab49af62-5a68-49ff-a3f6-bda87b40029f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b4101bbb-8727-4e2c-9757-feca2f3ffa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "415fa559-7f42-409b-adeb-3175c3668b90",
        "cursor": {
          "ref": "e0befcd5-bcf5-4879-bd36-7670d4f33b0e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0a32d777-bb57-4090-b071-e1de1f8254f7"
        },
        "item": {
          "id": "415fa559-7f42-409b-adeb-3175c3668b90",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5ccccd41-11f1-4608-b050-8a1ec51207de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0669101f-9797-487b-bab6-514e6468e219",
        "cursor": {
          "ref": "ee87a24b-d4f1-417d-8a4f-a97b4f0b3956",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8c8abfcd-5f76-488b-8a71-38633edc2a89"
        },
        "item": {
          "id": "0669101f-9797-487b-bab6-514e6468e219",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fcffc4d2-bfc0-42ad-a4a5-d13ff56a67fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7ce0c96d-42c4-4772-a9fd-a0697b6f6b9b",
        "cursor": {
          "ref": "43d42efe-1939-49bf-9f59-937713f599a6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2f3ddc52-d97e-4aca-87e1-24f2650c80a6"
        },
        "item": {
          "id": "7ce0c96d-42c4-4772-a9fd-a0697b6f6b9b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1acbf5b-4f23-4eaa-927e-4a63e4d97d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c95e33-2c28-4ba6-b48e-1e0921eb4464",
        "cursor": {
          "ref": "3c14e0d8-5c04-4c82-aa87-8faa9bf8770b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "01678162-86a6-4bdb-9555-4f1b5164b5fb"
        },
        "item": {
          "id": "00c95e33-2c28-4ba6-b48e-1e0921eb4464",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f26a8ed-908d-4cff-8495-722082c29ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a2509-d38d-4da4-b689-ede29dc460b9",
        "cursor": {
          "ref": "1acc3a3f-fdc6-4e02-8af7-8aa40727ce87",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2357c382-077c-4b37-8ca9-bb897699133e"
        },
        "item": {
          "id": "fd0a2509-d38d-4da4-b689-ede29dc460b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9b4dcb7f-2a08-4653-9b8b-36e9e804c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40886bce-598a-44ed-8e71-086849586ff2",
        "cursor": {
          "ref": "19ca3ca4-4743-4023-8fc3-7b9516c31e84",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "91e885cc-a6b2-4d1d-abdf-1db04963e9cc"
        },
        "item": {
          "id": "40886bce-598a-44ed-8e71-086849586ff2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "262ab7e7-5a2a-4bdb-ae2b-749bdb365be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6b67db-a26b-403b-a67b-5f2acb9f5a4f",
        "cursor": {
          "ref": "7fad8059-626b-491d-98ef-78380517b4ed",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "18f21016-be69-4fe5-93fa-31e0a7caf7a2"
        },
        "item": {
          "id": "7c6b67db-a26b-403b-a67b-5f2acb9f5a4f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "224859f2-e8dc-46f0-ab5c-275c6746a35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4b304-cec8-467b-9bbb-ea6aa36df3d3",
        "cursor": {
          "ref": "a8ce8e1c-f42a-4e83-b6e1-1414b7dcbce0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c7be9b97-43c1-4744-b62c-93e11b2f2163"
        },
        "item": {
          "id": "c7c4b304-cec8-467b-9bbb-ea6aa36df3d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2e80269-723a-438b-826f-8280fc89cf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3dcd9b-3ccd-4aae-a097-450aec3f4ca4",
        "cursor": {
          "ref": "7cb53318-0a5c-4034-abc6-33dfd55d91a1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1417903a-a94a-45ea-adbc-0e247a686e0d"
        },
        "item": {
          "id": "0c3dcd9b-3ccd-4aae-a097-450aec3f4ca4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0a6bf48-180e-4677-a47a-ff2fb9792c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9212da8-c476-4e98-b902-68ff9892ebfc",
        "cursor": {
          "ref": "8f540866-4514-4958-911c-c482a5ce614b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a31f8eab-21d3-4ef5-9cca-0103a0f0e259"
        },
        "item": {
          "id": "c9212da8-c476-4e98-b902-68ff9892ebfc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "89015a1b-20ce-4747-9e05-75ce9d62ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62ee1e-9d98-4d17-bd5a-fc2b35369707",
        "cursor": {
          "ref": "5e30383c-e386-4745-938c-d7766199e605",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bcbc29b5-06ee-4d3b-86aa-6de2b5d18f60"
        },
        "item": {
          "id": "0c62ee1e-9d98-4d17-bd5a-fc2b35369707",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4544878e-81b1-4d7e-859b-f5f0762b9184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f02f64b-64f2-4a02-afed-c59c0056e625",
        "cursor": {
          "ref": "0c6ea8fa-8d48-4434-a0c6-bdc5e9163083",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "540c3b46-a6d0-4344-8105-2ce6929ece68"
        },
        "item": {
          "id": "5f02f64b-64f2-4a02-afed-c59c0056e625",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ceb4fe29-2347-4c35-9e24-de9c36af4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9659b1-3087-45dc-8dc0-8509efab344f",
        "cursor": {
          "ref": "adc38929-c345-4914-97fe-df0b2003265d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "00b7ccdb-d04e-4583-b63b-b2737c582e6a"
        },
        "item": {
          "id": "db9659b1-3087-45dc-8dc0-8509efab344f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a4404fc-0dc6-4bf4-830b-e9b336eb8d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a774058-c1b9-4594-a7fd-fe2f2408c16f",
        "cursor": {
          "ref": "3e9b006c-a444-40f6-a471-808b8e912d9e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "750a8b3e-6c1d-4a9f-9550-bfe4d495bf9f"
        },
        "item": {
          "id": "5a774058-c1b9-4594-a7fd-fe2f2408c16f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "919493af-cdd1-4ebb-8838-7932966ba039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a5ddb-d437-45e3-a29f-6a6c80fe6dca",
        "cursor": {
          "ref": "3feeeea6-3bed-47ce-bfe5-c8d1210b114c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b54c5eea-cd14-4c33-8304-8224ef8c8693"
        },
        "item": {
          "id": "bd7a5ddb-d437-45e3-a29f-6a6c80fe6dca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ccb01b38-69e9-4d3b-b264-53ad3caa3c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48dd7f-cae8-4962-ae39-426af6d7b230",
        "cursor": {
          "ref": "55e8d506-618b-4755-8eb7-e2c3d0a26e82",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b30680e9-eff9-46ad-b308-1cf74a557bad"
        },
        "item": {
          "id": "bb48dd7f-cae8-4962-ae39-426af6d7b230",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d72c0bb1-06dc-473e-9176-1cb54b516b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31790565-d644-405e-a458-c3813334ee12",
        "cursor": {
          "ref": "35967df7-bf1a-4755-bfdb-50483eede428",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c8fbfd90-2147-4499-a516-2dd97c93f912"
        },
        "item": {
          "id": "31790565-d644-405e-a458-c3813334ee12",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "08bd6a07-d28a-4452-bb28-7431ad4538a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa46bc-ac46-46f3-b835-06d75f768372",
        "cursor": {
          "ref": "e31da530-bf76-4d43-9009-61ae7367665b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ea8a623b-742b-44b3-82fd-d1270790664d"
        },
        "item": {
          "id": "61aa46bc-ac46-46f3-b835-06d75f768372",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5b17b423-b2cd-4b54-a90e-461323d6cadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebcc77d-f253-4dc6-a2d7-fc8b8e7edcb1",
        "cursor": {
          "ref": "7c90a9b6-5c6e-44ac-8a72-d8f6f359e22c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "acd153f7-5452-4962-88ee-dd3740ba8436"
        },
        "item": {
          "id": "9ebcc77d-f253-4dc6-a2d7-fc8b8e7edcb1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a84fee51-9e3b-40b8-81a9-93f3340990cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a81f7d1-a8ac-43a3-aeaf-2ad2bbe31f26",
        "cursor": {
          "ref": "6ba16f2b-2718-49d8-ae03-d332c96e53c4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6278235d-1b99-4590-a1af-59dfc537c7f7"
        },
        "item": {
          "id": "6a81f7d1-a8ac-43a3-aeaf-2ad2bbe31f26",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ccc62a10-7a7c-4e56-b540-fafbc9d6e501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c0d681-b388-4338-990e-91495e9ddbc6",
        "cursor": {
          "ref": "95688755-e938-4b88-b3b3-8454445ccd13",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9bc8c3a7-6256-4c83-900e-20978227ff45"
        },
        "item": {
          "id": "55c0d681-b388-4338-990e-91495e9ddbc6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e4193890-8d6f-4e53-85ab-4e207167bd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a38a7-72f5-4b2f-b4b1-d32498f5e3d8",
        "cursor": {
          "ref": "7a109e29-d731-4b68-a511-6a78b93688a3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "591f0cbc-5fe4-4da0-b685-4605b9b3e523"
        },
        "item": {
          "id": "995a38a7-72f5-4b2f-b4b1-d32498f5e3d8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7dde085b-3cd9-4c1b-9c78-44b1246a55ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb9714f-c0ed-482c-8513-245573eba143",
        "cursor": {
          "ref": "4e7e471a-71c7-40bd-9430-e3aa25e6df0c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0a87f1fe-3bc4-4c09-88ea-6c6fcf1b5fe5"
        },
        "item": {
          "id": "8cb9714f-c0ed-482c-8513-245573eba143",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "acc50c00-c4fb-47cd-afb3-641b310445d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa09422-29b1-4fe0-90c8-e92157f7f711",
        "cursor": {
          "ref": "546fbcd2-5593-4343-9970-810c074cef86",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bede829d-7112-4808-a866-ce03fd7e60ed"
        },
        "item": {
          "id": "2fa09422-29b1-4fe0-90c8-e92157f7f711",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "527dc3f8-3b6f-4772-92d5-a3d5ba030226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0934040e-af74-4c38-a7f7-c24040443900",
        "cursor": {
          "ref": "9ff59226-992b-43f9-b366-4d9b55f8d4fe",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "636d03ba-81af-491a-835c-3162169bd8f5"
        },
        "item": {
          "id": "0934040e-af74-4c38-a7f7-c24040443900",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "19adfe6e-647a-4140-ba70-6c59f0453310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4221b42a-fb5d-4d18-a9bc-a7edfd36f83a",
        "cursor": {
          "ref": "6d132e47-925e-4cfd-927b-dbadd1f093bf",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b0eaa386-7e13-42b3-ac31-e0f7710d05e4"
        },
        "item": {
          "id": "4221b42a-fb5d-4d18-a9bc-a7edfd36f83a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "738a34ed-7ef0-4167-a6a0-464e53ca3cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e206b3-fe70-483b-8251-c47d55664137",
        "cursor": {
          "ref": "e3c9df54-198c-4e5e-b216-d54b3186a246",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a81e68a-99b7-4afc-834c-c044294b58f2"
        },
        "item": {
          "id": "d0e206b3-fe70-483b-8251-c47d55664137",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "44cf323f-c65b-4061-bba7-9bbc7b40fc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236802b8-c3b1-4383-b195-9449b45dc798",
        "cursor": {
          "ref": "dde95357-4d86-4e92-81a6-901dc4e37291",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5c36fc8-9d72-4d96-a868-7b4c12da9386"
        },
        "item": {
          "id": "236802b8-c3b1-4383-b195-9449b45dc798",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37e00c8e-fc59-4332-b574-15b7faf8a44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2383bf9-af3e-47ea-a4b6-89a0f4f8fd66",
        "cursor": {
          "ref": "77bf9b78-115f-49fa-a02d-3a51bc0eada0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b90c77f4-122b-456e-b03b-c79da7e03c26"
        },
        "item": {
          "id": "c2383bf9-af3e-47ea-a4b6-89a0f4f8fd66",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4995646-12c6-48b0-b99a-a73da72e62f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db08751f-15b5-4dab-9178-a53cd0cae1eb",
        "cursor": {
          "ref": "32b6681f-a1bd-4b71-acda-3fc880ef6ed8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "db33a01e-ff1f-4da0-8213-5905b95419af"
        },
        "item": {
          "id": "db08751f-15b5-4dab-9178-a53cd0cae1eb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79ffe9bb-a6f5-4376-a9a4-bb7cefc7f9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce4675f-162e-4115-a856-dce13d3e7571",
        "cursor": {
          "ref": "491dd833-2080-475e-8465-29dd876447a9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "236d6002-7acf-41ca-a6d6-bda7a622f518"
        },
        "item": {
          "id": "9ce4675f-162e-4115-a856-dce13d3e7571",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b5d4e9d-a211-44bf-9709-f561bdc431be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c9cedc-7854-45a8-bb31-c1b1f4fb55f7",
        "cursor": {
          "ref": "8554bcdc-e40f-41db-918f-54efa1fcd1cd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "41d48e94-b34f-456c-b1a2-fa02184bb7b1"
        },
        "item": {
          "id": "76c9cedc-7854-45a8-bb31-c1b1f4fb55f7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "05d169af-e1a5-4350-8be3-8ecf4c6baa02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c528415a-3478-41b0-8c6a-5d52276eaeb2",
        "cursor": {
          "ref": "ce742287-65e1-4889-a23c-8e53b60b64a3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ef88dccb-2f8b-4de7-88ab-98c1d2693288"
        },
        "item": {
          "id": "c528415a-3478-41b0-8c6a-5d52276eaeb2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "70e4aa23-89ed-46c3-aa3b-c2d6c7920a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3f8f35-2274-4560-adba-0c33e8b05e27",
        "cursor": {
          "ref": "b19e9c23-4736-4e34-af68-cb0756d8c0dd",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2440a19a-5629-49ec-87bf-8940aad4c7a0"
        },
        "item": {
          "id": "ff3f8f35-2274-4560-adba-0c33e8b05e27",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f81e7ffe-d21c-4c95-ac1c-9ed3880c738e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93392df8-1232-4e97-b7df-2bd316854287",
        "cursor": {
          "ref": "01bb0780-aa5b-4941-bcb9-c68f967d9ac4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50832673-be60-4af6-967e-118893e00e48"
        },
        "item": {
          "id": "93392df8-1232-4e97-b7df-2bd316854287",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5d27decb-872a-4337-9d26-973619bc8de3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ba9d2-5879-463a-a25a-59f2417500b3",
        "cursor": {
          "ref": "12119b93-5b5b-471f-893a-531394a940a9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5e9f910b-93a6-4737-a314-3586c2ec484a"
        },
        "item": {
          "id": "907ba9d2-5879-463a-a25a-59f2417500b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa29a2ba-908d-464e-a28c-cebdd252ef42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3145dd91-5587-4ec1-98f2-cc4acaeca851",
        "cursor": {
          "ref": "cc507ec8-d76a-412e-b4b0-19523c93d5c1",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "48b29e47-36a1-4ce0-b192-6e14535094e0"
        },
        "item": {
          "id": "3145dd91-5587-4ec1-98f2-cc4acaeca851",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc0eafb1-c6ad-4036-96e9-d791ff7c200c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1cbb49-1eb2-4a42-8a61-ed9a47f4ae58",
        "cursor": {
          "ref": "7d8e6cf7-55da-4e57-8403-943c2fd03aa7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba37123e-1cde-4611-b611-6c5b9cc70d7c"
        },
        "item": {
          "id": "bc1cbb49-1eb2-4a42-8a61-ed9a47f4ae58",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90c2b395-3799-4c30-9a2f-e6253bb2738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ac3b4a-7f2e-482d-93de-9b31f5df2a92",
        "cursor": {
          "ref": "65472c67-6d26-4e01-8cab-9e0b9e68ff0d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1287ac41-57e5-4ef0-80dd-bb638a695244"
        },
        "item": {
          "id": "06ac3b4a-7f2e-482d-93de-9b31f5df2a92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60655136-2185-4e39-8edb-30a5268a9764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac43cced-0d1e-4d6e-8815-59270e405353",
        "cursor": {
          "ref": "cf899a55-c636-4b3b-b803-f1234791c236",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7b1a218c-93dc-43ca-81f3-07d0dddba86a"
        },
        "item": {
          "id": "ac43cced-0d1e-4d6e-8815-59270e405353",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4a2c2fb7-9e6f-4c9d-8e2a-8a733684d999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b952d4e-4cc3-4db0-bf8e-6d11dd61c824",
        "cursor": {
          "ref": "972efbc4-87dc-4a95-b487-bea8f22c720b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f7277c83-2962-48eb-9e57-92770729528c"
        },
        "item": {
          "id": "2b952d4e-4cc3-4db0-bf8e-6d11dd61c824",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2b8ca2d1-0085-4f09-97b7-d6d1631b51a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313d7303-df44-4284-bd4e-a83d61b45fa8",
        "cursor": {
          "ref": "0a10e12b-919d-4097-8c72-aaeda919612a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "663c69c1-9ede-412e-a302-964afaf0c438"
        },
        "item": {
          "id": "313d7303-df44-4284-bd4e-a83d61b45fa8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "854d97aa-4462-4242-aef8-314716738c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ebd05f-3f9f-40f2-ac1b-326e7df96b54",
        "cursor": {
          "ref": "0edfc9ce-72f2-4a43-826d-1b85bac605bc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5c7c18da-b411-4e97-a291-58de4f122ea9"
        },
        "item": {
          "id": "00ebd05f-3f9f-40f2-ac1b-326e7df96b54",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e37aade2-1586-454c-b6bf-2947a20ba320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11df79b-abdb-489c-961d-611bba6efcfe",
        "cursor": {
          "ref": "4009e993-ab35-477c-84de-804182ffa4da",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9bc27f0d-36d1-448e-83d9-39e7e8d13470"
        },
        "item": {
          "id": "c11df79b-abdb-489c-961d-611bba6efcfe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b5f47ba-9512-42a5-8568-c8e44febfdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53405597-392c-46e1-993c-eef9170dda00",
        "cursor": {
          "ref": "6d95fcc3-9325-40e2-b89a-5286ed2e15f1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d89309be-5ec6-4496-9130-6e4b0826df45"
        },
        "item": {
          "id": "53405597-392c-46e1-993c-eef9170dda00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41d9b9ef-076a-4af9-8a6a-0b35fb75b076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d006e10e-c15e-4b03-8adb-2211b3f3045c",
        "cursor": {
          "ref": "ae52b8a2-923c-4102-9857-f0482887a838",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7ff0663-b3fe-4fed-a29d-3af2578ca782"
        },
        "item": {
          "id": "d006e10e-c15e-4b03-8adb-2211b3f3045c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49006b7e-90ec-4b18-a23b-6724c2de6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4bce66-99c8-4646-a186-a39e2a6e565f",
        "cursor": {
          "ref": "188fd2a9-48f3-4973-b12b-20a42d573a1b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "94d54703-733c-4b42-aeb9-4d3db9fb9d60"
        },
        "item": {
          "id": "6e4bce66-99c8-4646-a186-a39e2a6e565f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef59c5d1-58af-4d4c-8113-0b64f19cfd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0dfc4c-aad8-4c32-811c-8b5248e5870c",
        "cursor": {
          "ref": "6ac97641-5268-43f6-815e-fa3277911cab",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "543a49fc-52ab-473a-b38b-ef693c16a147"
        },
        "item": {
          "id": "3d0dfc4c-aad8-4c32-811c-8b5248e5870c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e23658ef-0719-438b-867c-918dba63b3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8040e71e-eda2-4a35-bd4f-794d68c4e0eb",
        "cursor": {
          "ref": "1038013d-fbec-4c58-83cb-d5c68f65b38f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5cc6d5a-395f-4451-ada4-4f0a286c180d"
        },
        "item": {
          "id": "8040e71e-eda2-4a35-bd4f-794d68c4e0eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24d0ea75-dc84-4080-905e-7594d6bc94f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d0af71-bde1-4ef1-aa92-d27747993884",
        "cursor": {
          "ref": "ec6a17a0-268b-4d0d-a9fb-4bce97cadead",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd9a3257-2e2a-40c3-a94f-ef71efdead89"
        },
        "item": {
          "id": "60d0af71-bde1-4ef1-aa92-d27747993884",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "082c6ab5-d5bc-44e7-90d6-bffbe0271f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd6ec50-47d6-425b-930d-a15ea2319bf1",
        "cursor": {
          "ref": "f1a26c7f-5f77-4c17-b61b-983048e39fce",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1dc47cd0-9120-482a-a08b-501f8f7cf100"
        },
        "item": {
          "id": "0fd6ec50-47d6-425b-930d-a15ea2319bf1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7e0be89-19e4-46ac-893e-dbef10110b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89bbb48-41a1-4c16-9383-7e7b7be3ccf2",
        "cursor": {
          "ref": "62ea4a2f-72cf-48c1-bc9e-53aa5e148f16",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f9278f91-f7fd-44d6-afb1-1a8ee6a00fd4"
        },
        "item": {
          "id": "f89bbb48-41a1-4c16-9383-7e7b7be3ccf2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f210618f-ba5e-4f0a-896d-5b4d2599d8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c874dadc-46aa-429c-a0ea-c22b50f77531",
        "cursor": {
          "ref": "60108fe0-7a5b-4493-a7c2-67730e7cc709",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c461ede3-7861-438e-8287-28ae1b72b211"
        },
        "item": {
          "id": "c874dadc-46aa-429c-a0ea-c22b50f77531",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c09aa739-57a9-44e7-9035-174aeca21a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65564487-08e2-479d-b97e-0a36c6dd2c99",
        "cursor": {
          "ref": "f88cfec3-96c8-4ac9-bdb6-6394af2bd6a2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15801a77-0f08-4ef6-bf22-23ecc95d3158"
        },
        "item": {
          "id": "65564487-08e2-479d-b97e-0a36c6dd2c99",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc3864a0-3f23-40b8-9895-3c6bd72681f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d620cd0c-71b3-4de9-8951-873edeaed0e6",
        "cursor": {
          "ref": "e20c3b99-2b6d-403b-86aa-0afa8d3205a5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d5bdc97c-1095-4ba6-8f08-a925f2c5dfa1"
        },
        "item": {
          "id": "d620cd0c-71b3-4de9-8951-873edeaed0e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "69780c65-97ce-4abe-9298-c4c6d0d283eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8819a3d0-1d76-42bc-b67e-8e7ddfb475ca",
        "cursor": {
          "ref": "9a51b05c-a254-4e25-a279-2bdd9ea58a6d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "279a1f3b-bc42-4995-a894-d91a414fd71d"
        },
        "item": {
          "id": "8819a3d0-1d76-42bc-b67e-8e7ddfb475ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5ccfd68-bbaa-44e3-b937-a24991065566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b544d74-4f37-4e8e-b114-db35183a0243",
        "cursor": {
          "ref": "ad767cdc-6c58-4274-9923-9d7bcc1a78e5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c2904471-cbcb-4a5d-8b34-ae40a85488a8"
        },
        "item": {
          "id": "6b544d74-4f37-4e8e-b114-db35183a0243",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9bae8d9-263b-42d3-a980-d5a36d31595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64597826-244d-4a11-870e-6e2ce1143d60",
        "cursor": {
          "ref": "8ae2c03e-6962-4e9e-b39d-d19c6f26dd17",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4a9ca143-e6bd-4adb-b18d-8b149294f878"
        },
        "item": {
          "id": "64597826-244d-4a11-870e-6e2ce1143d60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96254df4-3898-4c3c-9550-2f3d2217c0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024ef482-aa10-4574-ac8b-a4cfd3bd5f4d",
        "cursor": {
          "ref": "bf24b459-fe05-45ae-942b-376b9649a12b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "54ab51e2-27bc-4062-b520-bf3860e2e532"
        },
        "item": {
          "id": "024ef482-aa10-4574-ac8b-a4cfd3bd5f4d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "09ca7415-944b-4eae-b28a-85fd6c481a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9db76f2-61e4-4530-864e-ea2ce74d422d",
        "cursor": {
          "ref": "2f83009b-08ad-4c59-ab90-7f9a61e962d2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "253816c6-0aaa-4180-ad7d-7569d154faa0"
        },
        "item": {
          "id": "c9db76f2-61e4-4530-864e-ea2ce74d422d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2e9a7974-5c95-47ae-9093-e95a822139dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3419d7a0-ae41-4236-b779-562f4df6b49c",
        "cursor": {
          "ref": "958b7e67-685f-4fde-b8c8-916cf49036cf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0d32d791-3b95-4256-8c21-3ff2b9c9faaf"
        },
        "item": {
          "id": "3419d7a0-ae41-4236-b779-562f4df6b49c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b4fc4aab-1bc9-4d2e-88e7-5e0702aa704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3213f51-5b77-45f7-a580-02c5d7d50503",
        "cursor": {
          "ref": "ac7346e2-5c3b-493f-bb53-fb3ef53de80a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "07f36d72-e139-44e1-8381-5b7bf462d07c"
        },
        "item": {
          "id": "d3213f51-5b77-45f7-a580-02c5d7d50503",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17be60f8-1847-4f41-ab47-c6eb119b6160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec102d79-db1e-495b-ac42-e94c10f10a59",
        "cursor": {
          "ref": "3f297c4c-4c1f-49ec-aa5d-117d26ce2862",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "93cf3b2f-12f7-4779-8d0f-61a23b620839"
        },
        "item": {
          "id": "ec102d79-db1e-495b-ac42-e94c10f10a59",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "06c72781-6580-4cf2-a92d-0f6bf45c1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24150619-5ccd-4a78-9e88-f2ed4c609abb",
        "cursor": {
          "ref": "801a723c-10a8-43ab-a041-d78cd201d7c2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b8446427-f4fc-43b2-88d0-764835e2a4de"
        },
        "item": {
          "id": "24150619-5ccd-4a78-9e88-f2ed4c609abb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a1848a0-e5ae-47ec-9cfc-17dc8878b07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3864e91-1856-4166-aaaa-31be6f668375",
        "cursor": {
          "ref": "07138840-6534-4b5b-b468-fbf15b91dea8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9257ad90-29f0-4eb5-b144-a982ac4ae56b"
        },
        "item": {
          "id": "f3864e91-1856-4166-aaaa-31be6f668375",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e2103d86-a080-43bf-b8d9-fa4324e5a6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4a0915-edda-4feb-a83e-486296a54661",
        "cursor": {
          "ref": "d371e49c-b1de-4517-84b3-5c4f56682287",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ab52d1bd-b9d0-4548-8e9d-e8b7c0729ed8"
        },
        "item": {
          "id": "ee4a0915-edda-4feb-a83e-486296a54661",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ea5472b-fe16-4e2e-ae15-96da303a64b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af11ac4d-08e2-4efe-8c23-b9b1d7bf73a3",
        "cursor": {
          "ref": "b4f871d8-7296-4e67-9673-cda8ef1edbf8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8ce46863-6bee-4519-9994-1f4fc02b9846"
        },
        "item": {
          "id": "af11ac4d-08e2-4efe-8c23-b9b1d7bf73a3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "96c1363e-8af5-4c67-a641-7960636847b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8400b826-57c2-4979-b9cb-402a5a5266e8",
        "cursor": {
          "ref": "fe1ecf03-4b56-4008-8cf1-e1b3898787d2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "be851fb1-854f-4eb7-a5cc-fa162d67ca46"
        },
        "item": {
          "id": "8400b826-57c2-4979-b9cb-402a5a5266e8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6156608a-5e02-474b-bf01-e82aecb93d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab6291b-f28e-4f59-9f65-6d826fa93238",
        "cursor": {
          "ref": "dd17956e-e003-4d96-a43a-7edfcae8af27",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "448ed2d9-11db-45ab-9fcf-d7ee32d6727c"
        },
        "item": {
          "id": "cab6291b-f28e-4f59-9f65-6d826fa93238",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fef7ce4e-0020-41f8-8e49-0493c0825fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5238d4-3bbe-4a4c-85d9-46c1a9bf056e",
        "cursor": {
          "ref": "9312dc8d-e494-40f7-813f-d8a5d1a6887f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98e699dc-22eb-450c-86a1-f9613d0300d8"
        },
        "item": {
          "id": "2e5238d4-3bbe-4a4c-85d9-46c1a9bf056e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c8468014-9239-45fb-9b89-317872d35f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1f8052-4e73-4fd6-91c9-3eb4cbde25b7",
        "cursor": {
          "ref": "2da6b357-9838-4c60-99e7-10b89d05e0df",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3c41f7b8-c023-45e2-b587-63200af8a4a2"
        },
        "item": {
          "id": "bc1f8052-4e73-4fd6-91c9-3eb4cbde25b7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4d38268a-f4c4-41bf-8767-afbe3f490a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac9be58-378a-4f8d-a04b-aaeff2f873ed",
        "cursor": {
          "ref": "dbd984eb-eb3f-4976-b4f9-1ce9bb2d2d89",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "64eb2793-a960-4cc9-8a6f-8e7044defb4c"
        },
        "item": {
          "id": "dac9be58-378a-4f8d-a04b-aaeff2f873ed",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3bd715d4-a13f-4830-8388-5fa0be2d4e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873ae38e-5e6f-44ad-b2a6-912558440a56",
        "cursor": {
          "ref": "62e5ac62-e3dd-4140-aaef-4262cadf4ef0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e5add065-2666-4210-883a-c469c23fe0ba"
        },
        "item": {
          "id": "873ae38e-5e6f-44ad-b2a6-912558440a56",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1af421d9-99e8-44af-b5d4-623bc055930c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fca451-c1e0-4b1a-a5a6-039f155c4f8d",
        "cursor": {
          "ref": "de334df9-4137-406c-ae52-148f770cdd08",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b3dac314-49f1-491c-9b95-ec19c80050dc"
        },
        "item": {
          "id": "c5fca451-c1e0-4b1a-a5a6-039f155c4f8d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a53386d0-934a-4892-b243-65bfc1517e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d634e09-e340-4a68-bc19-4f1cb961cc28",
        "cursor": {
          "ref": "ecc77e24-29e2-4d6c-a668-aa7e219400ff",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c868ccbd-ab09-4c50-bb94-06c5faed53e2"
        },
        "item": {
          "id": "8d634e09-e340-4a68-bc19-4f1cb961cc28",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a520542d-ede2-4224-b337-6f5c13860b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6694797-d27b-4cff-b89c-a9536e0fbd44",
        "cursor": {
          "ref": "eb19cb2a-940a-4931-b3cd-c8db3a4a7943",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "722910de-de52-4e5e-af27-7b6d28c9501c"
        },
        "item": {
          "id": "d6694797-d27b-4cff-b89c-a9536e0fbd44",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c0c10028-f8f0-4f3e-a3a1-18e23c13a23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bd63e3-1d90-4efe-abbc-4fe18ccbeb31",
        "cursor": {
          "ref": "0574d591-ae47-4741-8597-ec7358f18ea1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac68d0a1-faf9-49db-ba93-773a339d9ca7"
        },
        "item": {
          "id": "88bd63e3-1d90-4efe-abbc-4fe18ccbeb31",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "abece8c2-d678-4f81-99ad-b7a1277070b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb0a9d2-42e3-4cf1-af40-96143360ff88",
        "cursor": {
          "ref": "b1bd061b-8338-4ad6-b05a-60612044c55f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "56d9d206-491b-405e-accd-b67ee6d20376"
        },
        "item": {
          "id": "5cb0a9d2-42e3-4cf1-af40-96143360ff88",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d074cde-7675-44cc-9abc-026c2cf77790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47025b0f-f748-463a-81df-96c3e7b56f05",
        "cursor": {
          "ref": "8ea68500-4d1a-43f6-ad76-83099fe9483c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "564f73ff-922b-47d5-994d-64df00089a6c"
        },
        "item": {
          "id": "47025b0f-f748-463a-81df-96c3e7b56f05",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d3b82ddc-f0fb-4d48-a530-013dea4405e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be908fbf-9eb9-4f67-ae29-6b1b9f0586c9",
        "cursor": {
          "ref": "16275e23-bea7-458c-a251-efc6ebb598ec",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67238174-be27-485f-87e3-7c75f0851326"
        },
        "item": {
          "id": "be908fbf-9eb9-4f67-ae29-6b1b9f0586c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2aff57cf-9352-4c09-bdaa-46a7cc2a8b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927fdbb0-9fa5-4188-ac3f-7fb434c37c8b",
        "cursor": {
          "ref": "78963d0d-59b4-41e6-9031-03943b2b1722",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b2f15f7f-c421-4541-a757-80f66df774e8"
        },
        "item": {
          "id": "927fdbb0-9fa5-4188-ac3f-7fb434c37c8b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fb46ceff-eadf-45c4-8672-c1611f537111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952b4770-7408-47c2-8864-87304dd46f9d",
        "cursor": {
          "ref": "368a2aac-c624-4b52-8ad7-104035a66018",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e643e9b7-01f4-400f-9a1f-b97178afbc0e"
        },
        "item": {
          "id": "952b4770-7408-47c2-8864-87304dd46f9d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8de72cc3-d5cd-4727-84bb-975f6758e7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e9fb37-f954-43ea-a7d9-74bb0822077f",
        "cursor": {
          "ref": "3fd10a28-6e8b-41d9-9273-ed59a6c627b1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bd194bd0-659e-4801-8dbe-68aa809780f6"
        },
        "item": {
          "id": "01e9fb37-f954-43ea-a7d9-74bb0822077f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "998d41be-3385-49f3-9d65-04ad4721475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ca897b-1adc-4e0f-9c6a-eda8abef3c70",
        "cursor": {
          "ref": "266c53ea-7d06-420d-a877-415cd4dfbfac",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c1f6a62a-35d8-439e-818d-cc7d03dac63f"
        },
        "item": {
          "id": "48ca897b-1adc-4e0f-9c6a-eda8abef3c70",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "743cce73-0ecf-4ad7-bd1c-06f85659ae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37a9074-2bb1-4dae-9026-d70eb5864382",
        "cursor": {
          "ref": "ac5a2970-fb3a-4150-93f3-62cefabfb022",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "117b5169-53ef-4936-b788-95649d8f535a"
        },
        "item": {
          "id": "d37a9074-2bb1-4dae-9026-d70eb5864382",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "315dffb1-2574-4d8b-93bc-b6077bb987d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951e900-772d-40ff-b0e0-88c5871b4434",
        "cursor": {
          "ref": "86c62b5e-8c97-4f08-9aec-dd5c81d436e1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "72237afe-7d5b-4a45-befd-78d47082ada9"
        },
        "item": {
          "id": "5951e900-772d-40ff-b0e0-88c5871b4434",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "483e4d3f-3d2b-404d-81c0-a37fce07b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70b33c-15d7-43b7-b2e2-f87896847c03",
        "cursor": {
          "ref": "3b27db92-35d9-4d39-b662-edc06317e17a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e8ad092c-258f-4d81-8b63-80f9df58a625"
        },
        "item": {
          "id": "4d70b33c-15d7-43b7-b2e2-f87896847c03",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3255269d-3c4b-4789-9c7d-0774421d1de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c027d-c44c-4ab4-b45b-803d24f55a4b",
        "cursor": {
          "ref": "79fb8c50-71b3-498d-81d1-b44885036ea1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2cbf9a0f-665f-4caa-813d-86fe3755ec38"
        },
        "item": {
          "id": "d60c027d-c44c-4ab4-b45b-803d24f55a4b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "660d83a6-9215-4221-8b4c-0bd24a580e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f35bd-73ca-40d3-b5e9-8e88979adf1d",
        "cursor": {
          "ref": "cff0d4c8-1717-4615-8d3f-388f3443084e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "796dea09-7a94-4e8b-be08-3c1b0dcb7706"
        },
        "item": {
          "id": "1f4f35bd-73ca-40d3-b5e9-8e88979adf1d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "77b5c9d6-8441-4175-8b6c-7a200b495bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a69084b-40b2-44c8-80c0-fcb6fc954656",
        "cursor": {
          "ref": "1887da12-7d41-4add-b0b8-2f828a1725fe",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "95e0078e-1196-4deb-b192-08856996dac8"
        },
        "item": {
          "id": "8a69084b-40b2-44c8-80c0-fcb6fc954656",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1aba330f-95a5-4823-ad72-adbc1a1a9010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc926c8-68f9-4e9a-b3af-081018b20b44",
        "cursor": {
          "ref": "85c83e26-5574-4004-a321-4be344895dad",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "61e78e39-7e24-458c-862f-2ad16ed357d0"
        },
        "item": {
          "id": "bbc926c8-68f9-4e9a-b3af-081018b20b44",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9e603825-4faf-4070-b4f8-52e7298873c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5ef9eb-f709-4de4-90de-421d88c28b86",
        "cursor": {
          "ref": "bb777091-7255-4bd9-b434-31f213678b49",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9255b5b6-ea90-4b92-ae33-4aa2e50ed73a"
        },
        "item": {
          "id": "8e5ef9eb-f709-4de4-90de-421d88c28b86",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cf5de192-a137-4e41-9aa2-8a285568265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ca0bd-4da2-4814-b9f5-f080c5091196",
        "cursor": {
          "ref": "4d8605e4-4993-45f4-b8ec-0fb29475c4f3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d23e9c82-6972-46de-ad47-8110678fb9e6"
        },
        "item": {
          "id": "0b3ca0bd-4da2-4814-b9f5-f080c5091196",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16138bcb-a4ba-4cc6-b52d-da5da8bd47b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1be9c2-ffb4-47c6-8e21-036e330b3670",
        "cursor": {
          "ref": "ff31f271-b78f-48cd-a8d7-3c6e446ed97b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fa44ddcd-f90c-408c-8044-c09c0d588286"
        },
        "item": {
          "id": "4c1be9c2-ffb4-47c6-8e21-036e330b3670",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "938d95df-726a-4caf-983a-3719585e1f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7e190-017d-433a-a859-22887be27132",
        "cursor": {
          "ref": "e39a3fa3-cd7e-4508-bfe5-ea7221d9aea8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "49d82dfb-7bc7-4d9f-bbfe-8afeeb9bea48"
        },
        "item": {
          "id": "31f7e190-017d-433a-a859-22887be27132",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e030d778-2525-4ce0-9f06-e1dadfb85800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e2c4f-d1b3-48cc-a90e-2c5ae065af1a",
        "cursor": {
          "ref": "778fd005-01a2-48de-9e65-650dcabf1760",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1220424d-b397-4648-9c40-a15904e2ba52"
        },
        "item": {
          "id": "dc6e2c4f-d1b3-48cc-a90e-2c5ae065af1a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a030c425-ef14-472b-9cf1-6fc0b9208a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93bc14e-7607-42bf-8d41-ee70dc4de495",
        "cursor": {
          "ref": "4855f3b0-0b07-4411-9b66-3acc7574c572",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6b4ebd73-89b1-4c23-8797-911a5ff212cc"
        },
        "item": {
          "id": "f93bc14e-7607-42bf-8d41-ee70dc4de495",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ae08ca9-6ade-46c7-8efb-fadc2915c993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45456554-1e07-41e1-994b-d3a84396f348",
        "cursor": {
          "ref": "784c38ce-923b-4a8c-9003-b9d203488f6f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "561f95e5-0f6a-4e7c-8575-e6a3e798fe70"
        },
        "item": {
          "id": "45456554-1e07-41e1-994b-d3a84396f348",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "69aee0ef-b224-408b-b753-896d92886b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9829757c-2116-4174-8ee9-a526c3d576b8",
        "cursor": {
          "ref": "b7248df1-2323-4691-9ba3-db9791a04636",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "135986a9-cc88-47f9-a387-dfda9604b45a"
        },
        "item": {
          "id": "9829757c-2116-4174-8ee9-a526c3d576b8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "240008c4-6e6a-4994-a851-baa6eba0768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b606e4-7e96-4b38-927a-5f35ffa34030",
        "cursor": {
          "ref": "e670750f-5cc9-41bc-9f1b-553ae1ed845f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ed078161-fc1b-4a69-90ba-18c0dac3f91d"
        },
        "item": {
          "id": "24b606e4-7e96-4b38-927a-5f35ffa34030",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ec11ad47-2632-4187-8a38-d744b7a344b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80199d8-b307-4086-85f4-9a4d852afb9d",
        "cursor": {
          "ref": "5cc8b2ee-c5d4-4f07-8a6b-fa7f89ea7bf2",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d6f40bd6-768b-4ad8-916e-62dcec27266d"
        },
        "item": {
          "id": "f80199d8-b307-4086-85f4-9a4d852afb9d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3fe8bb1d-0bf4-4b1c-83e2-e2de09f04f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad31e14-8a36-4b1f-a235-e6bb0b6007aa",
        "cursor": {
          "ref": "4029ebea-9cf2-45f9-9666-a8ce95a468f9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bedf0f2b-2da8-4e01-a6e3-265d215aded0"
        },
        "item": {
          "id": "aad31e14-8a36-4b1f-a235-e6bb0b6007aa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "86c2c76c-d4e3-430d-bc0d-34f1c9f1311a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1659740-6786-4ba3-a5de-773ffb9254a7",
        "cursor": {
          "ref": "53bec19b-21c4-43d1-b37a-1b66d58bc35d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f62c9488-bb34-4665-bc13-af9cc9b05da4"
        },
        "item": {
          "id": "f1659740-6786-4ba3-a5de-773ffb9254a7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9158cc9f-5703-4714-a972-fd4606714224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be083d-5318-4116-a1dc-844e35caa3d8",
        "cursor": {
          "ref": "e6a055f7-6d2a-4a8a-ad5f-c05bd9b467dc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4829d157-6d13-42d6-aad7-d794da3e268d"
        },
        "item": {
          "id": "67be083d-5318-4116-a1dc-844e35caa3d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9621b856-ea55-4566-a6cc-13a078e4d0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d4e9b7-d4e9-4552-8bd4-5215db109b83",
        "cursor": {
          "ref": "b865e9b7-6be6-46e2-b7f3-407bf3b158c5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c077dd61-819e-4718-bba7-65db0eda2286"
        },
        "item": {
          "id": "21d4e9b7-d4e9-4552-8bd4-5215db109b83",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "06ebd7c8-e553-4b71-8dbf-df69579980c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5a06a7-d286-4725-a859-c726b7f08790",
        "cursor": {
          "ref": "422f9539-6c74-4378-b2dc-0dedc5c0bcd8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cd3effb7-ac55-42c8-a453-fbb3b4d3eb74"
        },
        "item": {
          "id": "8c5a06a7-d286-4725-a859-c726b7f08790",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "346eaa1b-bc87-46d2-aa01-53beecc2b2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb75693a-d770-4c0a-9b8c-d6d449f656f1",
        "cursor": {
          "ref": "8556b033-b456-4107-9dd8-41bcc692bc3a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c089a38-5fd2-48a9-80ef-b331dffe7a22"
        },
        "item": {
          "id": "fb75693a-d770-4c0a-9b8c-d6d449f656f1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "94452a1f-2a40-46eb-b16a-d454d62291cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bca758-0ff0-40c4-b98d-a0f830d9089f",
        "cursor": {
          "ref": "7e2307a1-8fff-497c-a7bf-3f458d2e0969",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "47667f10-501f-47fa-ada9-7defacc299c9"
        },
        "item": {
          "id": "30bca758-0ff0-40c4-b98d-a0f830d9089f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0adab86a-fa60-4421-85a3-1675ffc4ff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04775559-2bea-4b67-84f0-475d861481b7",
        "cursor": {
          "ref": "7ac2bb1d-9957-4074-96cf-a941ec3acf8c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d36fbfd9-839b-453b-84b7-89e3761a46e2"
        },
        "item": {
          "id": "04775559-2bea-4b67-84f0-475d861481b7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "87103540-3f1f-428e-bb52-64f5ebcc5e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660633d2-242b-489a-be91-3cd0346995cf",
        "cursor": {
          "ref": "d0a95cb6-24e8-4bb9-8cd8-143dcd64741e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72a718bd-123f-4f7b-b9b8-8257be9674c4"
        },
        "item": {
          "id": "660633d2-242b-489a-be91-3cd0346995cf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82c8b2bc-78e3-466c-9a88-620b1eb6929a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868ed9b2-3f61-4e3f-9413-a091d2c18427",
        "cursor": {
          "ref": "5e1bdd1a-c1b0-48db-aaac-3d4ba34f7813",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d635b591-887a-445f-bf50-f8317895d6b9"
        },
        "item": {
          "id": "868ed9b2-3f61-4e3f-9413-a091d2c18427",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8174c7a1-f1a1-46e6-bbff-cbb7984d10f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927b9ff2-bd1b-4c9e-b639-304c5f503c10",
        "cursor": {
          "ref": "df86f823-2f22-40de-ab3b-f3a62ec8636d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d30c8844-8838-4c42-8de0-e5b3dac911e8"
        },
        "item": {
          "id": "927b9ff2-bd1b-4c9e-b639-304c5f503c10",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "de632f7f-9f75-4d7c-8ac9-b4db28696243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48403f0e-4fea-4331-af27-3259a1bdd512",
        "cursor": {
          "ref": "2157226a-ba56-4bf0-8eee-59c4089ab868",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3af42a9f-2401-4524-b6d0-a7256f4a0349"
        },
        "item": {
          "id": "48403f0e-4fea-4331-af27-3259a1bdd512",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d9e359c5-3f96-4300-b746-d3d3bb5e8000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b650652-a649-4794-a4a4-64e79d374b41",
        "cursor": {
          "ref": "294d06a0-7e0b-4c56-800c-d16adbb3f2d5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "abfa8a01-4d2a-4151-9c32-4e9d9afa0774"
        },
        "item": {
          "id": "5b650652-a649-4794-a4a4-64e79d374b41",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "156282ad-8a1c-4397-83f7-1853fa8a4c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4a59f8-4caa-4c79-b49e-ac587593b183",
        "cursor": {
          "ref": "530eda9f-a8fb-4f0f-a1e2-735122d63cf6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ad9e533b-6af9-4fd4-9802-df5ef6c25a69"
        },
        "item": {
          "id": "dc4a59f8-4caa-4c79-b49e-ac587593b183",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "72d747e9-98fa-4c6e-a525-80f3ff60bb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f01273-5722-46f2-b2cc-6e07a5351f6a",
        "cursor": {
          "ref": "697bd0d4-a018-4776-9df8-8f9909ca52f4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4a3ee02a-3cf5-4ca7-9ea7-c41f60e9223e"
        },
        "item": {
          "id": "96f01273-5722-46f2-b2cc-6e07a5351f6a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ed478f54-93bd-4b8d-b591-d571993da426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1369e747-127f-411a-ae2a-78076f21916c",
        "cursor": {
          "ref": "26b03db9-e5d4-44cf-a55f-0fe279f5ab5c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "49620e2e-deaa-4b40-b098-5daf8c95a069"
        },
        "item": {
          "id": "1369e747-127f-411a-ae2a-78076f21916c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "be34ed3d-a42a-435d-b82f-67dd0a9314b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de7b645-6d50-4af3-be7a-ae2aaf3383f2",
        "cursor": {
          "ref": "3af3b10d-216b-4e23-b6d1-6903daf90214",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7ef73699-0dd5-445b-9ceb-6fa10acde657"
        },
        "item": {
          "id": "5de7b645-6d50-4af3-be7a-ae2aaf3383f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1cbec52d-eb6c-4110-a7ee-213cf21518ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f2b89-142f-42c8-9890-3adfac7b65dd",
        "cursor": {
          "ref": "9bfc5eb9-44ea-446e-a364-e865f3cb31ea",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b46032eb-c329-458f-a9be-8250d545b74b"
        },
        "item": {
          "id": "269f2b89-142f-42c8-9890-3adfac7b65dd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f7ff2775-f820-4484-8314-c8743eded850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfefec2-8fec-499c-a2c0-f6779e0cb663",
        "cursor": {
          "ref": "2c7c6a80-3683-4b7f-9cf8-3ebb1be46016",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "97422d8d-4df2-4269-aa47-a61465e26adb"
        },
        "item": {
          "id": "7bfefec2-8fec-499c-a2c0-f6779e0cb663",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5d19f3af-c85d-466e-b0cd-705d361d3b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fab9645-88fb-4705-85eb-6cc8adc837c4",
        "cursor": {
          "ref": "19d7a18b-d079-4826-80ab-947ba4e3a06b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5a18af4a-328a-4d4e-9100-bc53eff9e43e"
        },
        "item": {
          "id": "4fab9645-88fb-4705-85eb-6cc8adc837c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "810ee80d-529e-423c-bd16-b7d02e878204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361432e4-b8c0-470b-9094-82c0d6105fa9",
        "cursor": {
          "ref": "41e51f1c-3775-4b4b-b7ae-236651029b24",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ca64af0-8b80-4c94-9ea5-19395a88ee30"
        },
        "item": {
          "id": "361432e4-b8c0-470b-9094-82c0d6105fa9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cefdcabe-5a16-4574-9db2-9d85493d0de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff93fde3-3cce-4735-ab11-5ede70471913",
        "cursor": {
          "ref": "f680d731-80bb-4d95-afe9-720cec4fb25f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7af1ae41-3a44-4851-b43b-9cbe74b12d15"
        },
        "item": {
          "id": "ff93fde3-3cce-4735-ab11-5ede70471913",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e5613aed-b634-4d69-bed4-08ae5c76644e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6431ee6-7a7e-4b0d-b456-cf05eecf4b12",
        "cursor": {
          "ref": "13aa5ec2-ae21-43c6-b349-a33adc4a53a9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bd1a750e-7089-497a-a686-7cccbf2e1be5"
        },
        "item": {
          "id": "d6431ee6-7a7e-4b0d-b456-cf05eecf4b12",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6afdb0d9-9515-4a35-abb0-d0a9d9c89d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "5b490d6e-884f-44c7-ae9c-f62171d008a2",
        "cursor": {
          "ref": "347df6fa-805f-4a00-ad1c-9f9f4af74754",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7887df50-84eb-419f-83f3-4b6928ab6dd9"
        },
        "item": {
          "id": "5b490d6e-884f-44c7-ae9c-f62171d008a2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9f475c2a-c815-4a5e-81ac-b00c339b2951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42b6cba-eaaf-498d-8117-19067888f9c1",
        "cursor": {
          "ref": "7541ed4f-8ecd-4848-a0b0-b486e30c1f07",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac0c352b-89d4-4b86-9491-8aad7a2ac89f"
        },
        "item": {
          "id": "a42b6cba-eaaf-498d-8117-19067888f9c1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1b82015a-198c-4dab-8224-7d4eb0e2fd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceee6b9d-6605-4e9c-8777-488acbad85ca",
        "cursor": {
          "ref": "8d96a686-346a-4c0b-85f4-26bedc8c3dea",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b34de2cf-58b3-4170-bb5a-9ea27a2fa59f"
        },
        "item": {
          "id": "ceee6b9d-6605-4e9c-8777-488acbad85ca",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "08cde0b5-3379-4cd7-b3a3-46eb34bcece6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fca60a-3f2a-487e-9042-88dfcb954fbc",
        "cursor": {
          "ref": "16a79618-4da0-4fd0-ba6c-b415f461b434",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a5f3caf-1ee7-48d5-b4df-e7dba814b72e"
        },
        "item": {
          "id": "52fca60a-3f2a-487e-9042-88dfcb954fbc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4bda3b80-b2f7-4b64-94d1-ab146ec13ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba52d55f-0c12-40be-8245-8c647d10c112",
        "cursor": {
          "ref": "92341944-0fa9-4ba6-accd-b83ffa7543c9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "49fb6cd0-f57c-476a-bf31-41b44dcc82b7"
        },
        "item": {
          "id": "ba52d55f-0c12-40be-8245-8c647d10c112",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "33804833-c54c-4824-9a24-25b688b92d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba2d9b-0793-4c6e-bc88-98a3f72e69a0",
        "cursor": {
          "ref": "4cd3d221-9b34-4002-b480-cc34379edc2c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fd8795d1-a418-4bbd-8b52-197424df23e4"
        },
        "item": {
          "id": "19ba2d9b-0793-4c6e-bc88-98a3f72e69a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f6a9311f-bb99-416a-8ecc-bc96052683c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165618b1-df4a-493e-8302-fe456263f105",
        "cursor": {
          "ref": "b613d3c1-efba-42d2-81b5-054d4135f1ad",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae61a54f-15f8-4085-9ece-3a31e627c767"
        },
        "item": {
          "id": "165618b1-df4a-493e-8302-fe456263f105",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "53b94a41-e6da-4eff-99f5-a5488c7ebcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99b1c66-c546-483d-a1c6-04ee21c138b9",
        "cursor": {
          "ref": "e74bd10e-a6ec-4702-9825-9100a23faab2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1ee0bab9-bec9-4251-b3fa-85988a71a2c5"
        },
        "item": {
          "id": "e99b1c66-c546-483d-a1c6-04ee21c138b9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "39ba4122-64a6-4d67-97ad-c2eac58a6ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86c6090-8e6f-49ec-a720-cdc16c458ce9",
        "cursor": {
          "ref": "2437ef24-53a5-41aa-bf0a-0b83c0b30333",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fc4374bc-9c0e-48f0-8dea-899969924fa4"
        },
        "item": {
          "id": "a86c6090-8e6f-49ec-a720-cdc16c458ce9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e299dbb5-db43-4e3a-813a-90a8fc37ab4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e9cbb4-9ca5-4ab9-8e5a-1570c47875e3",
        "cursor": {
          "ref": "5164530b-8687-41b2-8f4f-5e40dc1dcc3b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ca62b247-bc05-4221-9cd9-757dd0e2ac0c"
        },
        "item": {
          "id": "05e9cbb4-9ca5-4ab9-8e5a-1570c47875e3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "434de6d2-31ef-49c3-9ed2-0f6a11c38806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a9aada-e6d4-43e6-8b29-5c411618a50e",
        "cursor": {
          "ref": "7735319d-79ea-4257-a29b-46903aab07cc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dd6aa89b-197f-4c17-abe0-1578295947fc"
        },
        "item": {
          "id": "57a9aada-e6d4-43e6-8b29-5c411618a50e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f7c58119-fee3-4582-8225-462700a88b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2621b443-56e5-4965-b935-69827c839101",
        "cursor": {
          "ref": "25967b2d-d1c4-4f9c-b553-82339d2030b8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "128b38af-439b-4025-b62e-9f3c35dc87be"
        },
        "item": {
          "id": "2621b443-56e5-4965-b935-69827c839101",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e4caa4d-1682-4eb9-8559-c24f702cbc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba37c816-aabe-415d-a58c-210dacd5536d",
        "cursor": {
          "ref": "e6b5d57d-0233-460f-a3eb-18cbc97ec1e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e593be5-5c66-4fb3-a231-1f40ac2a3c90"
        },
        "item": {
          "id": "ba37c816-aabe-415d-a58c-210dacd5536d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bcd95261-cc00-449b-a80a-3ddbccb40b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be96f6d-fd94-4771-89a7-9f1fbc903694",
        "cursor": {
          "ref": "99001049-c9ee-409a-81cc-94b81809199b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "721d11cc-dc5b-444a-afd4-a06920f30f0e"
        },
        "item": {
          "id": "4be96f6d-fd94-4771-89a7-9f1fbc903694",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d877b52e-b256-416a-b694-7c9e51f50c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f602a307-ff08-4776-a8f0-0d063c35bac4",
        "cursor": {
          "ref": "b7ea98d4-af8c-4dd8-bca1-c5a33b518057",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cfdf53a1-72d8-4587-a825-fc64b11bcd76"
        },
        "item": {
          "id": "f602a307-ff08-4776-a8f0-0d063c35bac4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "475e2ea8-8e78-48d5-bd43-f43e6e4db6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44685c7e-096e-442f-a05a-4542b32d658e",
        "cursor": {
          "ref": "f40865da-55c1-4a4f-82d8-8a26f93f3d36",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15b5c829-daa3-483b-8700-dc80d2149bed"
        },
        "item": {
          "id": "44685c7e-096e-442f-a05a-4542b32d658e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2100444-9d90-4d68-ac2c-216e6daa8622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7299011-c2e8-432a-b7ac-8396ee217665",
        "cursor": {
          "ref": "8810c6d3-0917-4d31-bf15-9b9df007b7ad",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8716eb88-cd04-42e2-971f-037669beae16"
        },
        "item": {
          "id": "d7299011-c2e8-432a-b7ac-8396ee217665",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3cda6550-8b4c-4446-99a0-18e8aec1fb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aa472f-5d22-46a9-ba64-df5f9d55e245",
        "cursor": {
          "ref": "d5a7a424-78d7-420c-8c62-c64d74ee9d81",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8fc6d12e-16e6-4d02-8485-ca5324c27fd4"
        },
        "item": {
          "id": "d0aa472f-5d22-46a9-ba64-df5f9d55e245",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "91807ad8-dd5c-4593-8fff-b4067a6ec958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c63d8b-f6c5-4649-81aa-45e53095fed9",
        "cursor": {
          "ref": "43e0c670-ae6b-408b-9a5b-284648392111",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "acb59dc9-6232-46ec-8fca-a4654801e335"
        },
        "item": {
          "id": "76c63d8b-f6c5-4649-81aa-45e53095fed9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "347369a7-f3db-406f-a889-26f7025c4240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffa6fd3-2477-42c6-8fd0-cac87c3e2a40",
        "cursor": {
          "ref": "c9439f7a-9d34-4df9-9b71-272b896f1e74",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1f2b244-b2a9-43ef-bc83-aa2dbdccedca"
        },
        "item": {
          "id": "6ffa6fd3-2477-42c6-8fd0-cac87c3e2a40",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d89aa0e2-7bbc-4cda-b113-29a392e4e1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbce6e8-9eb0-4752-b947-ff5e930c0ef8",
        "cursor": {
          "ref": "555f86cf-4cf6-47f5-8939-38a2aed43b82",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8165f634-f22c-4dcd-ab9f-77cb756a1e70"
        },
        "item": {
          "id": "9cbce6e8-9eb0-4752-b947-ff5e930c0ef8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a74e3c9c-6b49-46b0-8b91-07253ec59157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20feec8d-904f-49c2-9312-eb692665042f",
        "cursor": {
          "ref": "0e8248ff-234f-42a8-9e99-6ba796e276b0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e6286204-e630-45f0-96af-0c0f31528126"
        },
        "item": {
          "id": "20feec8d-904f-49c2-9312-eb692665042f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c6732d00-ec50-421c-9ab9-cdd930c9604a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d97fb8-fb98-49c2-9e08-756f72eaefa1",
        "cursor": {
          "ref": "130668b2-60cc-4f88-a478-ab0cc403b53b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d3dce5f6-af35-4083-bfb9-a85bd3f16f06"
        },
        "item": {
          "id": "79d97fb8-fb98-49c2-9e08-756f72eaefa1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "30c7aa15-e755-4c94-91c7-6efb89ad3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2113cd3a-2dff-4411-bb53-e3f29aa3034e",
        "cursor": {
          "ref": "f0e38ec6-8e55-4dbd-99a9-22ef4f31d7f7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6aa3d27b-3499-4e39-9e5a-833d504712d6"
        },
        "item": {
          "id": "2113cd3a-2dff-4411-bb53-e3f29aa3034e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9874d457-5db7-4ccb-8840-00b1811063f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2f1461-bc63-4272-abca-34dd277d12f7",
        "cursor": {
          "ref": "1bdadac4-f36f-443b-8ae1-35ff3af2e5de",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5cdd03d4-7a16-47da-a271-d0fa1c25905b"
        },
        "item": {
          "id": "9c2f1461-bc63-4272-abca-34dd277d12f7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0dbf2e0b-4b7d-4f94-b635-23edebe5c4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eefb13f-0eac-4c34-8d7a-8bc68ed75fbf",
        "cursor": {
          "ref": "66d8468c-30c3-472c-92fd-e011f9703e71",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8b213565-da63-4119-9710-c6df3c1278d4"
        },
        "item": {
          "id": "3eefb13f-0eac-4c34-8d7a-8bc68ed75fbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d6d9d67-ad80-435a-8260-043d3d94e09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8bce27-c4f6-40c5-a39d-cc743741c5f0",
        "cursor": {
          "ref": "15c91bd8-4c20-4805-a45b-b7ba55bca8fb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5fa05ad6-8f5e-4c45-9fb3-19b18f3232b2"
        },
        "item": {
          "id": "8d8bce27-c4f6-40c5-a39d-cc743741c5f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "226351c1-b4b5-4384-bdbf-d57015f6cc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd52afa7-0775-49aa-882f-0be78d16c64d",
        "cursor": {
          "ref": "a132d71c-2c42-4ff8-9d55-33dd0dbdb21a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "09615b94-bdf5-42a3-a3e0-c1da456d33d1"
        },
        "item": {
          "id": "fd52afa7-0775-49aa-882f-0be78d16c64d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "771746e0-8d88-49e4-a566-3a01e75a7291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcceab91-4f0f-4dac-aaf9-3279f6ff39ac",
        "cursor": {
          "ref": "f2b9de4a-a265-440e-a8f1-8df6b8eaa557",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e0157cae-20d2-4128-82e7-8d738ea5ce2d"
        },
        "item": {
          "id": "bcceab91-4f0f-4dac-aaf9-3279f6ff39ac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f66ca8f6-98cb-43c3-9a0b-e2c43c003d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267df235-a3c3-467c-9bd5-1b5466d9ce46",
        "cursor": {
          "ref": "6f327ff3-c82f-48c0-b522-a280fdf70d8c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3fd15a5f-b9fa-4aa1-96c1-5d788c8d01e5"
        },
        "item": {
          "id": "267df235-a3c3-467c-9bd5-1b5466d9ce46",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "81cebf28-3006-41d0-9149-c4747f54c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a721a30-2433-4b5c-9d89-f480bbe2c121",
        "cursor": {
          "ref": "7e70c74f-34ea-4e9e-9b16-36cdfbadd411",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5bc1c3f5-c9c4-48f6-aca3-9b138ea998f5"
        },
        "item": {
          "id": "2a721a30-2433-4b5c-9d89-f480bbe2c121",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b51ee43b-dcf9-465b-a182-526ed2eddb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ccd43-cdca-40e2-9dae-290c8b367eec",
        "cursor": {
          "ref": "1f01bd21-fe34-4384-b5d7-d02423a0abe8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f98c83c4-08ca-449f-b183-99d32c814941"
        },
        "item": {
          "id": "e73ccd43-cdca-40e2-9dae-290c8b367eec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "61fc3161-d100-47c7-b20a-b2f23a96a1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b52c16d-cd77-457b-925f-4865277d5ff8",
        "cursor": {
          "ref": "29fec951-f619-4fc8-b30c-912742425e58",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e996f630-d117-49d9-afd6-5ef661bc620c"
        },
        "item": {
          "id": "0b52c16d-cd77-457b-925f-4865277d5ff8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "666aafb5-57c7-4715-bfbf-6c7f368f116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f2f3c6-22dd-4fc6-b6fc-c51ff8447f22",
        "cursor": {
          "ref": "036eacb9-c930-4cd4-abe4-b10e5b53cfe3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "05acc11b-b1f5-4013-a595-d4d0478aca37"
        },
        "item": {
          "id": "b6f2f3c6-22dd-4fc6-b6fc-c51ff8447f22",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fb7c1307-7558-4bf2-b025-951e0a8824a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463a11f-c648-47a7-864d-1d0da37dc717",
        "cursor": {
          "ref": "4aaca744-1cf3-4b4b-ae17-e100c26b95f3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "19aa7634-28f8-4336-a5f4-a2b81f1ae504"
        },
        "item": {
          "id": "b463a11f-c648-47a7-864d-1d0da37dc717",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eadd220f-dbdb-4bdd-b538-180b63e82bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5f869-8662-4ea2-aafb-f7f584c8d2f4",
        "cursor": {
          "ref": "3cb3977a-d60c-4a1c-b1a3-1f7238376d5c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0af19482-db79-4f59-9ac1-d2dbee4539fe"
        },
        "item": {
          "id": "3fc5f869-8662-4ea2-aafb-f7f584c8d2f4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c21187fa-d04e-4b0d-a866-22762aa88b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7b94b5-85f6-4a14-9442-30b2b5a95f60",
        "cursor": {
          "ref": "2d641bd1-c8ea-4d33-8138-a4fecc6fa9c2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a9802d37-eea3-434f-aa75-271fef57dfd0"
        },
        "item": {
          "id": "ae7b94b5-85f6-4a14-9442-30b2b5a95f60",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a64757a8-5db1-4005-be5d-2b198598d677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04564d3-f5b6-4f4d-a2ec-11eb31971687",
        "cursor": {
          "ref": "ba26037d-bf28-4016-b3a3-34df2195fef4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "535b5d4f-28ed-4c46-9c01-5d2728c5cdd7"
        },
        "item": {
          "id": "f04564d3-f5b6-4f4d-a2ec-11eb31971687",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5ea3bb53-7279-498c-89f8-15d3675f0af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c88da-08e0-48b7-ab80-7e72031bff78",
        "cursor": {
          "ref": "163b14bd-9106-4c99-aa3c-dab4c98a3e88",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f36123e5-2ff4-4ad7-a753-4fb78d63b8c0"
        },
        "item": {
          "id": "483c88da-08e0-48b7-ab80-7e72031bff78",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "43316c5a-2922-4209-b0f5-3dc8d45ad859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e481f750-df6e-447f-a58a-3e0124090424",
        "cursor": {
          "ref": "c8fb569e-5c66-4773-99b5-39a5b6de4551",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "66542111-748f-46ab-9c75-9c1c139d2267"
        },
        "item": {
          "id": "e481f750-df6e-447f-a58a-3e0124090424",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3044dc31-efab-4c51-b035-5a3d15c22260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61433e31-de20-4384-8707-d5ad48439819",
        "cursor": {
          "ref": "e8d87e6a-ff80-44ff-9843-858cee0e9d8d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c403989d-5191-400f-8cf9-d93973ba1f07"
        },
        "item": {
          "id": "61433e31-de20-4384-8707-d5ad48439819",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "82f6aa7b-1593-4752-b55c-7ccaf6cf2293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c052cac5-c178-4116-a23f-6cba37f4e33b",
        "cursor": {
          "ref": "a8a660f7-1b64-4a1f-87c8-eb5550d14b8a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6b7049f3-424d-496f-8a1d-658b2b425d53"
        },
        "item": {
          "id": "c052cac5-c178-4116-a23f-6cba37f4e33b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5b7098bc-d8b4-48f8-a2c2-08fdeaebac93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5996922d-feea-463e-9fc9-a8a71c9ebf34",
        "cursor": {
          "ref": "9a5d2381-961a-4e03-ac6e-a56b4faf8935",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "55ba88eb-a944-42b4-8f71-b3eb0e742397"
        },
        "item": {
          "id": "5996922d-feea-463e-9fc9-a8a71c9ebf34",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9773a9d0-d52f-43b2-b5a4-0b826eb07297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e810b1-05e0-4c99-9d82-0fdf0a6b542f",
        "cursor": {
          "ref": "76e1bc58-04a8-4b09-ba47-1bbad50aff59",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f83499f6-cef6-44f7-aa2f-38bed6e43d2b"
        },
        "item": {
          "id": "29e810b1-05e0-4c99-9d82-0fdf0a6b542f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "73e17fd9-296a-4258-8d34-f15b1aa86923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d980777-d29c-4a87-b298-31f4a15594bf",
        "cursor": {
          "ref": "cb8cd2d8-74b7-4d92-9155-2a1d5c15cbb4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dfecaa91-cc56-4946-99e8-1c09ceb3708e"
        },
        "item": {
          "id": "5d980777-d29c-4a87-b298-31f4a15594bf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "62816b30-9d1f-47c6-8951-fbf0f1ff2294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae4cb47-c1b8-45f3-8304-814fcec00830",
        "cursor": {
          "ref": "dd0fc5e9-57d1-4e97-ade5-d42dc129602a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7e0714c0-de24-4b0e-831c-71fc4f92c39b"
        },
        "item": {
          "id": "cae4cb47-c1b8-45f3-8304-814fcec00830",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c912c30d-02e0-4ddd-afbe-5878ffd95985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b351c03e-c9bf-4b03-9db1-29f057743e2b",
        "cursor": {
          "ref": "f8ab2821-0e61-4496-9b1e-ba9709e51dc4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "35928b5e-0180-44d3-9ca6-a5fbaa427cc0"
        },
        "item": {
          "id": "b351c03e-c9bf-4b03-9db1-29f057743e2b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b0ced13e-fe15-4415-b7a1-441df665fa4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c918df-ddb8-48e2-a269-c1c0c47a83b0",
        "cursor": {
          "ref": "05117666-e9e0-445b-8962-b0b3b8e61f18",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a6215297-772e-4313-a31c-7109613fe783"
        },
        "item": {
          "id": "d9c918df-ddb8-48e2-a269-c1c0c47a83b0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5cea1687-e709-4ba7-b53a-c699a44d742c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "492189fb-3dd9-4046-94b4-8ba0f8d6c4bc",
        "cursor": {
          "ref": "aeccf677-6116-4585-bf10-14b5927d1547",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "67e6d6b6-3870-45a5-9b4a-3ecd29e5c104"
        },
        "item": {
          "id": "492189fb-3dd9-4046-94b4-8ba0f8d6c4bc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "29098dc0-4aea-4508-9678-6aeb58100da4",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4865e5d1-7754-4f92-b21c-d4cb7ef3de1a",
        "cursor": {
          "ref": "5982eb71-ce8d-4b4c-a592-7693466372cb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e3a3c45d-426c-41b6-b51a-b98fd7d0070c"
        },
        "item": {
          "id": "4865e5d1-7754-4f92-b21c-d4cb7ef3de1a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e22ce64-a6df-426e-8097-d1f64c0f106d",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d351f5a-43b1-4c30-a722-542a1967edde",
        "cursor": {
          "ref": "e86e223c-4395-4615-9166-a30ca015cc7a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5777d13-dde2-4a52-9cd5-2c802df84e68"
        },
        "item": {
          "id": "0d351f5a-43b1-4c30-a722-542a1967edde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e784514-5c43-4653-9000-09f091b2fd2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d351f5a-43b1-4c30-a722-542a1967edde",
        "cursor": {
          "ref": "e86e223c-4395-4615-9166-a30ca015cc7a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c5777d13-dde2-4a52-9cd5-2c802df84e68"
        },
        "item": {
          "id": "0d351f5a-43b1-4c30-a722-542a1967edde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e784514-5c43-4653-9000-09f091b2fd2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fddf878-d898-4c66-9fdd-22fd4b2cac85",
        "cursor": {
          "ref": "873b1934-fe95-43f9-a08a-c327731ee6f7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "35c20144-1909-4a61-b0eb-21623acf70c2"
        },
        "item": {
          "id": "3fddf878-d898-4c66-9fdd-22fd4b2cac85",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9eccfe3e-678a-4b4b-ad5f-ea36cf1f8fd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767ffa44-6623-4696-9820-99c114835698",
        "cursor": {
          "ref": "1218e5bc-c3c5-4b28-8a48-6ee5da50727d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "4f361893-912d-409b-b03b-5e5bda5a7a4d"
        },
        "item": {
          "id": "767ffa44-6623-4696-9820-99c114835698",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f87db69-0179-416f-b927-39d33aa760fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}