{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b146e76a-8da9-448e-ba28-3388d4e16bea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3125829e-11a2-4107-bac0-acaf8a71be8a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60432b1a-d97b-4999-b783-e48318c15c8b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "33104cc8-41d0-4a50-9725-36e64a2b5179"
                }
              }
            ]
          },
          {
            "id": "02cd672a-e41d-4cf8-a415-5f8d4ad2205a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84d11c68-6515-456b-93f1-1352a0a085ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9683192e-9116-4259-aea6-23c037475953"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "19809649-0c84-45d7-8689-0d69d2d2c518",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eb54483e-746f-4a73-b723-d49eec3ca4e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f98d38ca-09fb-4cf9-92ad-fe58aa2d019d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee51478c-9d67-4b22-b811-34a1d261e129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42ae677e-04f7-48a1-8083-e7565efa0b34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5941ed40-bd6f-401d-9201-90c2a2b9e1f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5655fca3-5db5-46ed-bd18-0777fd0e55b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe87d079-5dcd-4069-ad08-c190425f1132",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7eb371c-5542-43a5-bb7b-3b8796084d8e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7632337-7754-4166-bc69-4956c176caca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "93d4887d-dcc3-44e6-a439-75b309128e85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "891e63d2-1719-4242-967e-87841584cbd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1e31a2a-b03a-4854-96c9-791fd619f08f"
            }
          }
        ]
      },
      {
        "id": "a627b14b-a1e9-464a-8478-c794fc318cc8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d52cca07-3714-4f10-810c-0c104c1f2427",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bef324f8-4a79-4d27-b398-295381023bbc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc2c6f94-68ba-4a69-82de-6151347a1f68",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bdf4df-6b20-4f04-888b-9aa126876f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1e040a-335f-464a-8073-c1fcbe085edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1b2778-dbbd-46e4-9e58-36b4c00d5983",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e8551-6a7e-4c48-ac7e-673f73af9fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aece144-df5e-48f1-bf9a-39dbe3063a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867bc915-4060-4638-916a-b2234e4e4705",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf856e9-9b16-4cec-9d8c-9590cc75de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9306411-a182-49dc-be3a-f3974e654671"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab3b8ebe-20e6-4dbe-84b9-bd10d848fdc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13b3675b-e043-4963-8d68-56ade16b28ca",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a7d08a-a790-421a-93ca-420d3332e971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c17a97a4-051b-4869-b585-7f45d149b00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d97daa-f03f-4a4c-ab23-e50ad3cf2d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e85244-33e1-477c-a558-9e17a322ab15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9934a338-5d45-48e3-8fbd-f9440144fb22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d015d8c-376c-4c42-bdc6-b66f1c1ff802",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebe4c68f-686d-4381-b593-dee7b5c69762",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6955d9ce-0354-4494-88c5-db53f1a7a341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5a2f723-8332-4b52-aa22-1170f6f55c54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "df54c9d4-4709-4815-af73-4744afb3a379"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a4c1641-dbea-401e-8dee-15faa420c2b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3645f2d5-e585-41a9-8392-9f535d3658e9"
            }
          }
        ]
      },
      {
        "id": "00407b8c-c9f7-4760-b355-0490ab0cc6d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ba8db0cd-b09b-462f-9283-26d68fdc3ecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8224c6c6-bf68-4479-a1b7-d989271c8c6d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "faa85a81-306a-4552-a065-87a7ad93f06c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5efeac3-563a-4ce9-abfe-be9a42cbac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dcbfb5-ed56-4b79-8711-32bd8fd9ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9278cc93-51cd-45ca-bba7-4fa5ce4e32f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c502e0d7-efb2-4ce7-a0cc-ab9a0aa02472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c51ffd2-6930-4223-8803-c7abc3e7d627",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b120ee-3d87-4de2-b7c0-16a0f640cfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14fac68-f98d-4d30-9208-e93be9f5f065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b5613e-a3c2-4758-8981-45f1aa7ebdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af085024-c49e-423e-a30e-5ce0f28623ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb7539-88c2-496b-a286-08c88d79bc35",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecd70df-12e2-43d8-98fd-5fae057e2140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f471c654-ad99-463d-b216-cad4a9ed7952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcdc655-d6a0-42ea-b483-a5b9373ac73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a11221-9325-4523-8c2b-27321c5a9282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c4f7b3-550c-4366-bb48-40ef66de9146",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4352d363-61c9-48a4-916a-1515fbb2f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88589b76-6da4-4477-9364-4cdeba8443f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e6d82e-e6af-4e7a-91d0-fcc79769fc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d6fc7f-1230-46f1-b8d4-841310675d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b97710-01e8-48cf-8668-91e98b8a495d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d8ca9c-e8b8-4f21-85a1-285ab41eb274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd1b827-6a51-42e5-9f4c-c179959f523f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33fbaac-f417-4f9d-86e4-07087c35f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b781255c-009c-456e-9721-0206b2aeaa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0a4f3-9194-40b2-b16e-e00912e9a33a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac373b1a-be1e-47ba-9795-0769f15df168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdbaa83-bf3e-4b7c-a9ae-2e0127a0f9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ade07d4-38b3-4b1a-a0fa-a14474dc804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b782c1d-903e-4d93-bf8a-a7dfd978e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ee5857-e187-418c-a081-48b535a87b67",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e283e1b-c8b7-41bd-980a-885057415ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4701ca1f-534a-405e-9405-0687cadeef27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eacb2a0-7523-4f25-bf80-d5b9d9427b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4122f4bd-45e8-45bd-821c-fc3d709677dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7414b-01e0-4620-8fd0-838a84cbf6a2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffabe87e-d342-48da-a2f0-f6a5cf55b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98263ed5-ae19-4350-8f82-5e9e50ff5d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56455452-c8da-4f5a-bfed-995543bca519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66c30432-246d-411b-867b-3fb37039d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd196b6-c59d-46c4-95d8-57ebfa19c9c2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29efef2d-0cb3-4fe4-99d4-e556de3187c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d59d3e2-826e-4404-94e8-317434d52531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cab53a-3ee4-43ec-8299-3e56fb18ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fb51135-5cc4-4406-8692-566fa562b3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021ef8f-8505-48c6-82d7-49a0ea3905fb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770eda7-a82b-429c-8050-c1c599dca047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e026b42e-3393-414e-ba1b-2a0436035d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae832d8-1778-4bcf-857d-2b9e78b0d163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70496b11-d6a0-42b2-8c43-408b768659d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1a373b-029b-46a2-bb62-fed68782dd9b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29527d39-4dd0-4e11-b8c2-a0bab0adb5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfb8692-0b9e-4e08-afd0-e2821c302c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caa1ad8-6fb4-4fe3-add1-48cc0a165ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "badc9bee-9d5c-4658-8cb9-28b1df12e2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04c02d6-f5a4-4b05-821b-9f32e2a5b031",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2e5354-01dd-47ff-aa1a-1386ce2ee7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0010d48d-cd44-42df-861c-b9f380a05e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebbcb9e-2827-4f7c-b906-f7478f2ead62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06637db1-3a8c-4f3f-aa38-ea9b407e2f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14de6af0-8cf3-4f92-9cd5-410be54c20ed",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd27dd05-0ddb-42b3-94b8-133638e76602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dc1ed3-618c-4907-ae14-915351e99db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8cb88e-d164-4865-b03d-9466c833a481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceb8e994-fea1-4178-80dd-52471fda43dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb56fb1-0709-4c5c-9a66-0ba63dfd6bba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13883ea4-54f6-44e5-864e-f232ffd4d3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87faf19-08c1-4194-9c4d-1104a1795991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8141f1-6b51-4f25-9a9c-c8b61f01c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d12a7c2c-0351-4192-b307-c50d01cb0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3017351b-d49b-4611-9be0-d37852a4d01b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142eb93-bd9d-45ce-ba07-a4abf404aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0320859a-6312-4802-8482-56fed088156e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeb8fab-ed28-4857-a276-f1010165fb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4300e5a0-2e37-44fc-864f-c0184e2900cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86672d5c-e035-4a1d-81d6-29ddd73348e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd05388-2293-4580-af2b-95e4ac48ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708c228f-25d5-494c-90dc-391936bbdaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5547e4b-a29a-4693-9a98-b928b3eaa069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f5db64-e93c-46b8-b0a4-699e06f65c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8c007d-ee7a-48cc-a7b8-d142c0508aa5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97237553-41b0-474c-9504-f7c83a7411b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1008add-6184-41aa-b3e5-94d5d4199802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62015ae8-add5-48b1-9104-b4c141ed837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c87e7cd-722a-4b1f-bbe1-c3d6fbaeec93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b648f3d-4931-49be-9141-058c3ffae4dc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a74abfa-b6cb-4051-9aea-129a8231c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16047e50-8a4f-4565-974f-35859428b43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c00eac8-360b-4f86-8d4c-83071a70a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5294c65-a197-40eb-b6f4-cab87bc31677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594df1a3-0619-4e6d-89eb-7d7b0406e9d5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f11c909-7508-4bc4-af59-418275659189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b95dfc-3bb5-4795-85ae-64037b36480a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087ddf12-a56f-4c9d-bd2b-db13f27cdfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0e1244-9e80-4095-8334-0313f42f08d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694abb5-580f-400e-8e56-63847e24be01",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa556251-b6db-4078-8fc8-181d9402af5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a68f1e3-d921-43ba-9be9-3e0358ebbd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae809c36-0093-4905-9433-bcd608e29f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43595030-87d1-43ac-bbbc-d6f27ef1e77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9a6485-658f-4e30-b54b-73fd9956d0d5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4511128e-a092-476f-8e7a-8ccc02851bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40712736-be10-4654-bfa8-1833602f0077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cfabf5-547c-4955-8ddb-01bb34eab84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "807da14a-97b5-4861-aba1-961d525536ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1988cb87-a759-42f3-aedb-2dbb55d15e85",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82edcb95-6d99-4711-b149-2db0deca8034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29c634c-a73e-478d-96fe-6d8063f7fc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987b6ead-0a88-4c05-9b5b-73f0f4de8509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9176f6f-d940-4fc2-9828-4d90112b500d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf42aac-822c-43aa-8dcc-a2feac168c92",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be44229-debd-4b0f-8502-5e857605237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097d0954-fdbc-42bf-88d7-a36f857fe259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c89bdd-33c2-4c61-9c12-2c7dec1537cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "768d76bb-104a-4e99-91c1-e1ff6b6fce04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3876122c-9714-43d3-b275-96191fae7a29",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3375cca-2eb8-4469-8138-9d6e372eaff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3ddee1-ec21-4690-9348-eb79f774162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1925a217-b5d0-455f-aaeb-350b5336fc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8e353c-8912-4592-91b3-250b82cc5849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c0e1cc-0214-4d9e-8138-108044362469",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356ecf2d-9490-418a-b693-8620a2fc0130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c329a1df-ed4f-49a1-95d6-aed09d68077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d0e4e-8909-4bd8-ac8c-5cae07516fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80df54d3-1613-4b47-9293-66ef8530540f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfca576-8722-41e1-83db-e111e05cfed1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ddeb76-0e4f-44d7-8932-75493991afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb47920c-bd15-40bd-8c7f-c8bc8e827152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d854f9f-8692-4d3f-a878-e6f48efc7e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c17286a-80f7-4a14-9dc7-0adddfe536ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37acb50-e905-44eb-924d-8e34e2cc8266",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99af14db-1fe3-4828-94c9-94155ea0cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d8db55-953d-4328-9da8-861fcf568030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb826e14-d01f-4887-8837-090e0908c217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4bd34c-87b9-4c64-b86d-4ee8cb3798bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034dfdb5-bfa7-45cc-b1da-25a07f783835",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71706c5d-df3c-47ce-b15d-956edce0ddd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab799d50-4264-43c8-88e1-c79ea3c179a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3596c1-1695-417d-884b-566e51ecc31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e6156a-49fc-4cc5-aebd-c8127ddf168a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f5aef1-5d40-4aa6-aa7e-004a45f76b6e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1b7128-092e-4e09-878f-0a3c6e13a802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094d3bd5-5f1b-45db-88da-e7f4b1d49af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ab870a-a9e7-408a-97e4-c1ce609e1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b31ea9c-d98e-4863-adfc-58bd63e08354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d4d7ef-43e1-4fdb-8b03-deb452badfcf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a19393b-fc7d-4d39-9807-0713711319e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb255475-f23b-4eb0-af5f-1a0bc22c1fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4179d2-287c-43b2-8ab1-1f80f27b69ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "137c337d-1647-4a91-aa83-9f58f03f0694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc6fd7e-c4e3-4326-853d-0a55fbb8b7a3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cbaba3-88f5-45a2-8516-47f0231f38ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756a7d4b-5636-4c44-9006-570742905c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960dd2f6-5151-4ab4-a0c8-a61ad91364d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e06887c-0b63-4cff-9464-ff7fbbb28e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa47390-a7ba-4c71-ad59-5cde6b4ec29d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbf8fb-bbb2-4a75-b6d6-9876f808e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92475b91-6fb3-4514-af5a-7dcd8c917177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3943df73-2721-4a7e-adfe-768163ecacd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66aa3523-4f4d-448e-a3ab-c1e97d49c058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8d41ae-258d-453e-afb8-caaf1c5e813f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306699a0-3e6c-45d1-8d35-384785e1e89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3742dc2e-1e45-4912-a003-6ad596b5e5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f606d19-8b8f-4b11-bb82-87c2592eaf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93f6b78-a915-433a-83fb-f1af23e5b583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf386955-ce6b-4ff8-ba3d-42ab1a26e122",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addab80f-1a8e-40b1-9228-fbdf8f5f2471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeee506e-f421-4b06-b1bf-98cb722e7d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852213ef-4d71-4b62-b6a1-baf2edf2c870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "354d599d-abaa-4511-b012-e20f0ab13df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4880b237-3782-4a37-a475-63546d125e39",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723fbad5-b1c9-4797-bdb5-a0a71f202e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aadfc9-52ae-45c9-9f23-666f09c71cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607bc09b-1ed5-4ac3-9b9d-ab9eaf84b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "47244793-d220-4832-be13-943d2312820a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e943f87-e23d-4018-8ca4-a4bf0b2f751d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f181d19-1452-49f0-a887-389072d1b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03819c2c-0e8b-4d9d-9817-cd502700c3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5dd12-8421-404c-98c9-d05c7af9225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403a833b-37f3-43c7-ae16-de9ae5c5fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38197f14-f4f3-48d2-9f19-170879ecb17a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e6c3df-099e-4281-99cf-41c57177e403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510e3f77-e224-4191-a3bf-93237d4475e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f27c2ec-c2b4-4efc-9b4a-42fdbf5315c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7bb2ff-4871-44a7-8423-04ce18143e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c360c1-fab8-45b1-8a08-5acc07f9a982",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2009e68-3bf7-4ca6-85ae-ba681f06e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46fd7a6-b3bd-4d58-9e75-d38c2ca2747f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86273f9d-3d84-4002-8cd6-9b516d49f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df491727-7bf8-48e3-b9cb-b09ea4a123e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb6e66e-74ac-4d74-bfb6-23636c6687e6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bef561-a29f-4f31-8b6c-cc41c1ce5a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b4aae-4121-4942-8d25-04eabef5d509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c453a3-9b74-4c87-b03c-4541f253760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c434dad-b71d-49eb-b7f4-8a47b5cf0e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e9f0e3-b7b3-4a6b-9a9a-2a5f8003527f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fc8b1d-1d24-4714-9ca9-38448267cbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8eb7e3-6b6e-4ba0-8312-592e2b57c96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a665aa-018c-44d0-ac7c-2e6cd26c5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bc1f80-6453-4beb-b89a-8a274a8bb45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae5574-a2d1-4350-941f-67c508b1b2ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2250a3-ac0c-42ac-93df-5b8968d5a76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eba0c7-4c11-4646-82de-1402f4757711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f32a9-2e2d-4362-812d-0adf340ca32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63123dc4-ae71-4ed5-8b82-dd9a6a2fb15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af3669-25fc-4528-a22e-8feaf473d24d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066c26c-7931-477f-b981-d2196b5e0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437b14b3-4160-415a-b11e-95b1d6366a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d88a41-3b82-4dfe-b9ab-8e64ab31e2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18b539ca-9123-4ecd-b7b3-24724f2fb9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cb7813-dc6b-49bb-9242-9cb9c5d2ffa2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3e7a48-19cc-4926-b96f-b4346e2fda22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cb0fd5-10f7-49e9-b7ab-0ae9a1fc0073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45dfdef-3289-434e-8013-4d86cbe45435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d3afde-5c79-4444-9110-1158bee44b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2495e9bf-d032-4ace-956b-690fb9609b4d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff63425-c48c-41d7-af62-8f1d46ccc60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4fa24e-6716-4d0d-9bc0-b057123f5512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa76c70-7172-4a56-aaa7-5461d48e21d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e948bad2-023d-496f-be8e-550ae52e93c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3446b789-641a-465d-8874-35ca37996a13",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3f0305-ab90-4949-8aa6-82a1e577243d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db792884-563c-44a9-880a-63dbc51ecbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f3c4ea-e48f-446d-be93-bf5bd4fe8bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f917f5-1ac8-4a78-88c7-bd318b54bfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1ec4a3-b826-4b49-ae6d-2eed96a08e7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff6cc70-6a19-4581-9ac2-194e2e432bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c129fd99-afeb-4dc8-8cbc-d6bdf30c6a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d174c0-e01f-4fa2-9cf6-f472c321e559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79309a56-0751-4ade-93e1-dd1a0066d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f2e2f1-77d2-46cb-b82d-ff510449d007",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a783a96-df0f-45ac-8d29-27b36a40edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5a8504-e78d-4119-a1b0-4a7eab805695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d659a8-617c-4c0f-8bf9-a133701c9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c7ac4a-441e-4a91-be3e-49348ef5e0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf88ffb-fccd-49a1-9bbb-bc1a3c877a68",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f2e6d4-4576-4d29-a3c3-0b9ac6e95a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9dbeba-0bb5-4083-8889-65b0ce816457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a03c7c-c18c-4047-af35-c68e47bbadda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4b99f0-f471-4712-b1fb-d786eb64c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3c8f8a-674d-4772-8be8-0c4e42a88e3a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0c3d02-1b18-40d5-9e0e-03bc5a36bb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d18d90-947a-40fc-8e33-61e737b552ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ce5cb-b148-44ef-8aae-e38081c4d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca1e139-36e4-46ed-8053-f71c3f1fbdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40ecd63-a122-4504-a0e0-6357892e8591",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b580e8-f034-413d-bd9f-5a571cae3667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc35bfc3-3a4d-4bd8-b1ba-a00a8ffe8552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7ca24c-e0c9-4251-9569-215ad4f9cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca02fa4-164e-44aa-b301-48d88db8db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fced32-2853-494d-a95d-0ac700fedfe6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eda41df-1377-43b2-80ee-2743884f9854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e83e257-953c-41d6-a57c-52ef8f04c616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d04605-df34-48f3-ba67-0ece140641a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68fe1dd7-7536-4a3d-9490-1b1f956ddc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92808940-b693-4516-bdd1-e24fbfebeb00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ebab0b-9cad-489f-afd0-9b441046859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f3c5cc-9694-4f46-9586-56d107fdb25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc2051c-d2eb-46c1-9811-e4e8d361a8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "993e0c6a-b640-49d5-8cb9-f9ec10d3fb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377bdbca-2ec6-4d7f-a2aa-03e83623fe33",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc85080-3e4a-4439-ba7b-f73f97aa6a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625fc5cd-b2a2-47f3-af13-2ac3cd750a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4551e5ed-9d2b-4c4f-81f5-06d78fbce9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "226af5cb-eeed-4b1a-a7a2-b0d48f4a7e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede23a97-ffd9-4bd1-93ac-bc4d6a40d4e9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf4b915-64a5-4695-a5d9-535a37c8b48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6a38be-146c-49a8-add0-0871dc744cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cc2160-9786-4571-838c-08f48983690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d62598-6056-4e56-b1fa-01eb7195ad85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6599c5-593b-427c-87d3-769217aeacbd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4017eb09-0e73-4067-829a-c093a0ed260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133da398-489a-4d7d-8da7-d4f32e87bffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8a18e5-ec40-4135-99bc-f50e08f16758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "376c5b84-31ac-43ff-ae64-ee4b87c9bd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3704b51-772e-4f15-b425-55212a9e2889",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca6f28-1c4a-48c4-93ba-8b25d7abcb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8872f914-10b0-45c7-8e2b-68bff19e4c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262e6dbd-9d22-4907-8805-c8e5ac6ece5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0186890a-1cf8-439c-9993-f80fc3e25cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a1b321-3ff9-4d13-88e7-8edb19da96f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db9de6-6037-4393-8361-70136cffb4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bb7246-150f-4da9-8a99-b8747d0de6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007a5683-d2ec-473d-b0ed-353230bfeacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9701a77b-1d82-412b-b323-613a73693d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a544b2f2-51d4-4f0e-b812-b14eed5aa8d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19fdb49-d086-4111-9134-3ff8f13303a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812bb351-a444-47e5-bb37-3e32851f607f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fbf1a3-9980-456a-9fd0-f76c97548e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85c88e6e-1810-46c1-ad36-9b1ee48a4938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1f6c79-6362-413e-a45b-c97cb7b37d4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b9594-11af-46f4-b7c1-923b8f5451a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce90b788-e879-4873-a110-395e3775f835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2a42e3-5047-4826-bd98-58c40c6b42dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ff6c1e-2241-4edf-9378-5812ab837d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ed9d29-9823-4322-938a-acf345da11c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6a72b-5f70-4c1f-bc3d-7c5095064025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d261a5-6d28-4d5f-b30a-de56deaa1aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a22a8e-22c6-4eb3-b543-8b5517049883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "705b35ae-42f2-4d19-9b31-cf3e35ac8e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81f9a89-bb20-497c-8cdd-4cbaa26e6a49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d484004-e678-4fac-ab11-9756c7343557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca5be3d-56f0-44a9-8126-499fa136535f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac2b1dd-cd5f-450c-a880-a5e3b83c5f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93ee3b0c-181f-4501-9d15-465c6f202cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00b32cf-abb7-4776-a4cd-3e1dcc487dcb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281979cc-9c5e-4487-b868-eab9a04907fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefde5ce-d12a-4272-9a46-75c58141f59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324c14fe-80be-4bb6-8389-1378add8bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cb2740-3bf4-4331-a54a-3e5602f798e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e75d0d-2a32-43cf-98c8-ca6913ab7aa5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196e16ab-b8a5-4d41-960b-d5322dd82802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc30deb4-9005-4848-bf69-517e52c163c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd5122-8b5f-4ab3-ad39-372c26570334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6917893f-8a0e-42f8-babb-f97e39817be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba05d9ac-529f-4a0c-8c7b-7a6c91512a2b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1734c340-a411-4f2f-85ab-6bb014e15d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33aa6090-69ef-4869-ae44-ddcce0bed74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3567d8-787c-4ea1-9357-f9b2b0779c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "941a6b75-6e2c-40d9-bbe9-3d23933bcb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cb7c00-7d6a-43df-8042-aa5497983177",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6164aec-df0d-433b-a6e6-4e7b7e581e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dc9f70-57de-49ed-9dae-59030cc8a8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1e71b3-22a2-4d0d-9990-0bf6a6551eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7201578f-b720-4cef-9248-413f885d9b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e3fd99-8a97-4ce0-9b66-459846dc3175",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341a0f80-2aaf-4b91-844a-56309ac7d252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08de214-9dc9-4471-8de6-97eb65ce7b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3b91e8-1f29-426f-9b57-a6eed921bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b123a6-2453-4ca9-9213-8bed1a671d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da93b19b-9053-4102-bd30-e200ca709e77",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b6a53d-3792-4439-833d-34bd8def5915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75b8820-9608-46d8-a055-3fbbea87ba69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2881b97f-45b5-44b4-a668-a70c357fc8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c685fc76-9fe5-4179-96c2-3cce43603c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4078b78-88c1-41a4-ae26-9f4215b1ae08",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ee912b-ad1e-4a49-86e9-3f60630148f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9a9400-36fd-4965-9db7-50911d24a393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57770d47-3893-430e-953f-3a7a7b67a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7a9d53-bb51-4b5b-a2b5-64130408c714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed34e995-eb45-462a-bab4-7bab7afc2d19",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1599f48-8d29-4896-be9d-a999477c3c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f559f8b-728e-43f5-b3ed-77f072c28791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9bd00-8bb8-4c97-b5c6-184057fc8f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5caee15c-ec00-4af4-9793-7ac62605e64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da185786-eb5b-4347-ad1a-36af6497f8d1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f989184b-687a-4449-961f-bf910c9a0bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2b0020-d1d8-4c50-946a-aba3da26f641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23a2736-4bb8-41d6-a967-45e20783c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c06e05c-bfb2-40ca-b6cf-b6142b48d049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4e2561-6e38-416f-b171-ce982a5c4150",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de398e-9000-4e8c-bbf1-969b529e08f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6fb011-b7ec-42e4-9094-b9b8b24ac9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57279c93-5725-46ae-94b4-259b82d790d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25047cd8-9361-42f6-b94f-97a58c8f80f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33945237-31a0-4843-8e72-db51f16eadaf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fb38f5-ebd0-4858-b9c6-c2590ddab874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4c62b3-1f56-424d-8331-db26d65f9d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff041db-cd2e-485a-93cf-dec2d0fcc905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8616803f-7824-4273-957b-3bdb8e7240e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e05914-1ec7-4ae4-97cf-9b055aa4f2be",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4a7e7-1b28-4e48-b004-9196579fb03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a88102-143c-454f-a4df-64403b97ce13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833f8677-7ea9-405d-bf5d-c03fe6ec795b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac90856-84f7-4c37-b14f-ea5713184e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8b6000-f9c0-4504-9010-2bbffc150ac4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769260f-c274-4160-83dc-c633e62e36cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac71666-e30b-41ff-9f19-41b38b2a0a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148cd2c1-7cea-4dee-a012-2d87b5ae3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "487c2bd4-454e-4c26-a9d0-5cbd3736519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe79e4-8a0f-4969-a7df-00d286862132",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8955db-127a-47c1-aff2-c85bc613590c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86ba6c8-d3cf-4629-887a-2161899e81e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878d92cb-8497-4e09-a26c-3de5223a922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9068302f-a7e4-4b7d-8373-b85972cf7ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04e03c5-f37e-4bb7-b86d-f0d5d3a011b1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b86e61-25c4-4832-94c0-af442934fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a803a4-72d4-4abf-9d94-337794082fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab748b8-1ce0-47b4-b265-51d5a57d509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18da91e-4944-4c6d-b3ca-1373e19b3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef08c97-a031-4822-8a66-e9ff276cf42a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcc5121-5426-4ada-a5e6-2776510bd317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b7190d-3851-485e-8385-ce1d75eadff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea0313d-e28f-420f-9672-8708717fe6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "465c36bc-e38a-4642-83b4-84aa5bd6e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7348013-58ad-434f-81e8-b7edf7775d43",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646ce23e-d491-4ced-9c7e-88b9ad1e03c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1deb3d3e-b54a-4d24-821c-f14266fab18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f3936-3bf0-4763-b3e6-9fdcbbe83c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7a18db-2d47-4732-8841-95ce69905516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff2021-01a6-4653-99c2-581441f750ff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afb870e-5cc4-4f27-9ff3-7ebf8e0f1d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad94421a-37c8-45dd-913e-c2ab76fa9246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14676379-e16d-4ebe-9577-e61a96aeb8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2abc234-d649-4dc6-92a3-43fee7213f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966bf1ab-23bc-4171-86e8-800b17fa78be",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c78468-ee31-4adc-a383-13f1fa033e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27da04d8-cbce-4b06-89c8-00335b01fa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010c3322-4d64-4a27-aa66-d7348b816ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "380cf097-4deb-44a7-b5ac-cc5a84c58390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7d9549-2143-40ca-ad5b-53b60f413ff2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178b6229-5c85-4775-981d-06694335e025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b7c56-5fe7-4804-8e4a-1665d140db70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334c333e-17b8-431d-9259-d725a042142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18321ad3-1619-44a7-b516-fdec80cc78c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50517197-a73a-4427-937b-14aff43c67e3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d30d073-d96a-47aa-8927-d1bb0191b9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a61e63-609f-4f00-b527-9945bffe2b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ed0376-6734-4638-a424-2d8f527e20a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "311ccd0d-2620-48f5-b673-92997fc2d250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50481de-2cda-4692-9712-68251c052757",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acb8fe4-411c-437f-85ba-450286138ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f033cd53-0631-4c54-9d33-f72776c90e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8614f01a-29bf-4b6c-8f4d-06d8c5715039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e06c1fc-fda4-429b-aca1-5d4ae787d386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be457ac1-72a1-41d9-ae5f-b832c71df162",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dd067e-acc4-4640-bc6a-03a8523f0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bacdb4-cf47-4ee4-8be7-47dc7d69e583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385a15ce-6c36-4427-9914-3f88760a3443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "523cb2ce-aab3-4174-b87c-bbcb25a00ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b1912c-2766-45f6-985c-97e6230c5443",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4d2dde-e1e6-40f5-808e-691ef022aa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d3431a-d932-4d55-b2d2-2c2f1e699909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dd80d4-480d-4042-80d6-db8764c044e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2919925-9fad-4a09-a863-84ed745c677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3ebc82-cd6e-4dd4-aa64-1b68cc4978b8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9ffa71-5e46-449e-a5ee-6b5ec1f03603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee015ad1-c4f2-4983-be20-877f0c84b7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e09b3d5-66fd-4f46-af6b-a709090c8dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d212637f-b73a-40c3-a7d2-8f49f9815fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920ec7e-c1bd-4cca-a74d-25fee4bde35a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc7c6d9-738d-4325-8ad4-0f84a3e563ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680a811b-3c7c-4789-92a6-9163019d34d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fde824-b2b7-4863-a068-910275cf3779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0162585-691d-4cf3-a3c8-3d7df9812ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ae840-3f60-4364-973d-baa10af32e73",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c2ecd8-3837-434a-8ba4-07974392c9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f99dbba-5f33-4af4-ae8a-1404c3954649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57df657f-e26d-446e-be40-d8eb5c6cf173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "caff0e97-e5cd-40d3-847d-8375794da618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6225edc5-466b-45fc-b06a-79721f4a7e6b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e975c3-2f25-41b0-860a-41e485a6c754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675971a4-6857-44f8-9fb6-baa66e11a0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7604d812-3848-4f3a-81f4-8e0cb5546cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ef4ff6-efc8-4721-9bb5-f08d3b651934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c07de2f-6505-415f-a359-df0c7bf6780b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de7a82-7ee8-4c40-98b5-87190a646af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14477247-1ab0-44f8-924c-4cba4b209a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271f93ef-b375-4c5c-b291-3d450c799f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58e0c163-13bc-4d6f-be27-417df1846e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8660202-3e97-4e46-84bd-f13018c51b11",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de53694b-eb3c-4f86-ab11-503803c233e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd67a11-0f5b-4c99-8499-ee1d984ba2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b138967-2962-457c-a2e0-572b40508543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "149d20a0-9410-4414-b8b2-586a62b9cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e90ca6-3dbf-46e6-82d7-1cebf37f2791",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31e40a-b89f-4969-b20e-96d329ab0eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f4893cd-545f-4765-90d7-c61acb520686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5de19a6-ff52-467d-90b1-36f7a21b0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9ae97c-22ee-4bcd-bba7-12499483707e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "481f6ab3-a286-40c2-b00d-dce85552dde3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e07affa-1d1e-4c2e-82a8-75ff4ed47485",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ec721-7e1c-45d1-b415-56bda4d36602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f4323a3-714e-4f60-a322-db3ddda6ab40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01f6b4-03f1-498c-bf78-fa11957a012f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed86621c-c5c3-4c63-9940-eac2062fae2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ad9d0c-ff7c-4744-aa4a-25d9ebce9d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0f7b694-2c70-4d5d-bf53-e31a1e3b22a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e349c43f-23bb-46ff-bc41-90410071b6e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e004f0b4-9dd8-4dc9-9d37-71237d147fd8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "159d0c15-eb03-47fc-ab96-589c1b18b9b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3f04d13-d9f2-4137-aa94-60cae9060e3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "005b50f4-dd6a-4627-b300-05754c127ead",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50229224-436a-41a5-b769-22093ca43ebe"
                }
              }
            ]
          },
          {
            "id": "ad152649-c949-4721-895c-fa455fb42972",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd0b1f00-d159-493b-aac4-7ead814f8d8c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "02123c0c-4c1b-4fea-88a6-954b415f214c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4716734-c59e-4bbe-9fe2-53338f6322be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fa932de-fb4f-48a3-a22b-e46478064b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491eada1-0f7d-4633-a231-e2949c7d4fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c46f18-4048-4e57-9dee-1ef9d987c1ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9496f974-7a9a-49ad-a12d-fbf579f3772f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f058497-366a-454c-8048-a774558716a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0530c5f6-1047-48db-b62f-bcdc38523b86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96b93ad2-9350-47bf-b28e-5ec05f36f468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da9f6ca6-7c71-4fea-a20d-82171fc9dd06"
                    }
                  }
                ]
              },
              {
                "id": "e575f03e-d209-4662-b424-ab9c25e872d8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016cd445-f810-403e-b37b-ee105cd9381a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "839503ca-1bba-4689-810e-ade9246b1994"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12181066-9fda-4459-b290-390f82f332a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0daa4652-2780-4272-aedb-028c82c42e54"
                    }
                  }
                ]
              },
              {
                "id": "49e0946a-639d-45f9-b9b6-ef494bebe2e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1bb3b74-03e2-4106-9643-8259861f1970",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "874ed18b-75da-4c49-8eb8-1f8a669a5682"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8edd03d7-26d1-4f05-8b52-fe234dfaa183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09d512da-202b-469e-a307-0421df97c740"
                    }
                  }
                ]
              },
              {
                "id": "025bf317-b668-49d1-91ef-0ca665fbd4dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d295acc0-ed83-4e82-95ce-a5754ccc93f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34c7b518-56d2-40c5-ae88-3f914de0c652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df392363-911d-4036-8d90-9c38c81fe2ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b4c246cd-b45b-47c3-8caf-ffbd81e72257"
                    }
                  }
                ]
              },
              {
                "id": "0a0ff445-91f6-41e0-a8cb-1d61979c747e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13111ce4-b8b1-49aa-8ce0-bf0c5eeb17dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b185ecfb-4f7e-4f3d-9b03-aaf89f2c2992"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9f1b11c-e03d-4d85-ac6e-6f826627c58d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0a5ed81-c6f3-4b9b-b72c-46d895a2a7e7"
                    }
                  }
                ]
              },
              {
                "id": "4e23a181-93c7-4033-baf1-09ffbef505c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65341e5-c621-492f-9da0-b572f1e552f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de33c2dc-32c1-48de-85ab-e0c03ebb0786"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "969cc157-3d70-4fe8-b2a7-819aef59bee5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "045e3369-825d-4f13-a46b-695c4ea0e1d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38f15cd5-f56f-457f-a863-4336beec405c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8ff4dae-6cc8-4d8e-bce1-e38e916c351b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2aa4b98b-d466-4981-aac4-c1d8607cef34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02833984-c9d3-47ca-b088-2210d29102cb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab2e5e1f-8bca-4b0c-a2a8-a638f1be1e96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a6f45a55-b819-468c-92d1-ec794a055496"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a6bcfda-2252-4873-bd79-eda84962250e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24f1e693-77eb-4679-a3ae-e01a6128f39b"
            }
          }
        ]
      },
      {
        "id": "7e67b8fa-a9d6-45b9-8635-31fcd3917a2b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d8b362d6-0c8b-4a40-b603-cbeaed2cc1cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f8dfe7b-f103-4ca2-a39f-f2e5eb995a25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3427128-7b22-43e8-a312-fccc876eb72f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80af3eeb-8534-48c2-8c03-f4bb7a6ed33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b253cb-6a7d-441e-97ef-0e8d20199329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b97f30c-799d-4486-8125-3886528bfce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bc4ec6-e025-4e8b-8382-2c058b9bb037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437afccb-162b-48a9-9cfa-dab166885081",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd98ca9-cd23-4224-b9d8-8c3004aaf96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573eb419-2796-432e-b700-2146b7f2b79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb76503a-895a-4d7d-882f-7c601600ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63a05e5-802f-4ee0-bcda-67132bb69631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef956d47-43e0-469a-bf4a-d5097de5e20f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b4b584-a9e8-4256-8812-538e9cd36376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cecb74-5847-4a33-89de-45e04efdcb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38530e20-4ac0-4306-93c8-4e85ce828f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1267c84-e8a6-4a3f-ba10-6cadb7e9bcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ade26-1c96-4e85-8b2c-345a1f8a39f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd06c6a-7880-4ed9-bc63-bc1a65c4a007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44616a06-1fc5-402f-aeab-dc6cb5aa7ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b25329-b4d9-42c1-b751-d63a84a29622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fb24a8-7274-496a-89bb-e3c2db22eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce342fa6-826f-4db1-9ebd-7e980e6a3090",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92023297-2b8b-4cc8-99b0-5a381c75b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76854b6-a857-4a8e-836a-ff465bfbb2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46293b2c-cf02-42d6-a786-6d8754121b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5cecc1-10cc-4e6d-b134-35476e3b371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58062f-1836-4303-87e6-1af21661ec4d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f525142-0b48-403e-989c-c9ee12e05e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fd62eb-a345-4567-ba1d-95cd7c4ce9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27652a6-b8d5-4130-80d5-1a0d39121565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00416e96-4b01-4ec4-91ba-ef03bf79a2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f2b283-6795-4a40-b785-7cdb1574762a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e7f548-12a2-4998-854f-5b00c7ff0989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d2428f-f0dd-4f8f-8f98-1b39a1a28b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb92592-20dd-472d-8d1a-b73488578952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1750d0-22bb-4c74-8369-9294c6573ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f305a71-1d54-4ec2-afb1-49ea4357eb32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6772d64-c247-4354-96bf-2d183e8899e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59937835-a98c-4a8b-9df0-54bba350785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c87518-0e25-4520-8a5e-c22981b975e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e5d7e-3730-49fa-bbae-a8a38555e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee8b3dc-8b79-4209-9817-9aa61efde056",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6938ee73-7f1f-4c95-881d-c3c79acb6b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0703a2b4-a192-4287-a613-3f368190ad6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883e1e29-b51c-4f4d-9c25-6bd6cc30f26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a929b0-6dbd-42e1-a964-a5b35f30bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11b6540-dd34-4565-939a-c26a326fbbd9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f1e4a-b321-46f3-8db1-0ceeace21ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a367310b-9ef8-4866-9d1d-1f2d73560c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdb50e0-b4e7-4e3e-aa50-089647006cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db38813c-35a7-4ed4-a9de-e5632a6d0aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec75439-f375-4026-91b2-73a6d709d685",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71567b1a-56d5-4db9-ba98-631c0c583a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659c74dc-3e91-4b38-97ee-273c4dca9323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251f1d3a-32fb-40ce-b592-c10b002d617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d923739-82ce-4b28-a6e0-0dbad05a307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2a8552-ccce-43fa-9961-dbcae2758c5e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5ed01b-77a4-4f34-af75-02aa91781e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b734d9-1d80-4e3e-acea-df4fecc0a644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cf2a54-fe8d-4385-ae0b-06fcfc1d2dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9221fcd1-d6eb-4a46-851f-37fd4ec752ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5491e73-eb64-4e41-86ae-7928b919a025",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2c8bfc-7c4a-4080-9c73-43d2f28d53a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61825059-ab58-4e41-b684-ef2cfd652347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce898269-1ca3-4832-ac47-f2d569bfbbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de23278-6362-4955-abf5-b9f96c6e6fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5c55cc-3457-41e9-986c-f3013d090f5c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c487ca69-fd9f-4ac1-a86a-75c1ed896dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5a8eab-73a5-4514-8c52-c9681638d52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20609ea-1d59-4419-b19b-338c3ca7a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f26fd1a-a32a-49d5-9dd5-c032b17efc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4090061a-58c0-49a8-8229-3c754234e79e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58886deb-3318-433b-8d08-3ecc065502ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fc3a4d-e5a6-4aa0-8bf7-22c3c145f931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e99e46-e37d-442a-93fc-b460df3b66c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9c8e4a-faa9-41ab-9fe2-3f2a4c30e647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dbbe8a-579b-439b-8e7e-3a49825de458",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c41437-c5d0-4b67-9b0d-f9fd51cedf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7a1de3-ee50-4373-a631-4a378385f1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab66a210-bee5-4efd-814e-39fcb2c0076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d20c6d-fb5e-4271-a096-47a31b4d8818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5c39a2-45df-44f3-99dc-e4763f87a93c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a99447-39c3-42e3-971f-58f33288e78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d26e7-5fb5-4ea3-9369-fc2b9b88d03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a4af4e-d399-4c65-a7b5-071c043f7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fab1b1-b353-49c2-8b0d-c0e7989796ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b95cf28-5f68-4308-8106-82a98d220e8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3d3925-5e77-4171-9dc6-593c2ad13cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696bd894-3fdd-4c26-99af-44528920458f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0813d0f3-b449-46dd-84d8-1957897654bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cbb433-17ad-45e5-86ea-bc1471c5989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03e1f51-0286-4840-8df7-79f9818147e9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb397975-1800-4549-ad46-f82b34297a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553d883d-265c-4790-9b3b-eb2517d7d9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2eb47c-dac4-464a-bbb2-7a5a6dec9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b8536c-170d-4be7-b5d5-f49870bc2e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a713e-e455-4c2b-88b5-0088cb7b2aab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea95c1-1d28-4965-b734-98dd29acc291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfa755b-abb6-4b9a-a602-b1a5ec82f6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba292db9-c633-4b22-a266-70b7f4d01bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebf3be0-5953-40bd-b8b7-702a1339e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7b3cff-cb07-49b7-95a8-02fac5b08f2c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d0ecc-adf5-4e81-9c93-7229e7429bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0396b437-3d91-47e8-b701-500504f938bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec7a610-d9d5-4806-942f-94166b8a7831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b6f750-0183-4ec2-ad48-c5be41d5251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5abfa02-cd88-4b09-8024-3afe50751154",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fdc1cf-2b79-497f-af2c-6302cd9a5bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a89a2f-f3c4-4ca2-be45-36284d9d9085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a691f05-c3bb-494c-b40a-45ffe7d86f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0309b79f-893f-41f0-b628-36a8021031a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77cfaa7-3784-4daa-9223-ec0c79d19e71",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7909362-3d39-4759-99bd-c0514de49a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a0babb-c945-4570-ba66-66ba39ca52f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9349e74c-2409-4784-87db-1d07f67e619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce65b0e-5ca8-4dff-b339-3636d25eb7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ffd34-2b49-4bcc-8cb1-2039b31aaa40",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f31043-dbcb-4c7c-abc1-6155d13dad11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1c8b5f-139c-4b74-a1ee-bb5d7d20fe82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e4d026-879c-4e39-bdf0-6115e4d27e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01baff94-8725-490e-a4f6-ec9e252429d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a07db-a5ab-4522-86f4-ab4a234da643",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b7e9b8-eed4-4d9d-bb1f-2d9c4ff595cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cde63ce-06b3-4b25-95ce-9676fd1b6054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f3d324-6feb-4828-b54b-5a081c154499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10aa6965-5902-47f9-93e2-c76ef1f428e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf8745f-32ae-4849-a6dc-5c4eac48abff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c6a818-c482-4187-9366-12db33c3abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05e0190-deb3-4c32-b0f9-d9a14c164a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d85e552-145a-42dc-bc14-61a376f567d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec72748-4edd-4515-86dc-c10dc8d03b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9289b6-9251-46ce-8e5e-2eb3a8eef81e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304bd1f4-8a53-4016-8c95-7760c9189816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e032b36-26b5-4df8-be8d-41aee48aba5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5ae41-cef6-4c63-a58c-fabd83348983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82dc905c-ca8f-4595-86c1-7b71f9ec638e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02478f-7008-45f0-9f93-efdbbc2b592c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2418ae2a-ed0b-4d86-8aa8-753b3f446624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1df7323-b39c-4b7d-99f1-c27b5474367c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bba4fc-7e57-4ea5-a070-0df04e8bc9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17cb4d0-8a12-4045-b70c-693eb869e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c2bcc9-f5e7-4223-8976-781e2f46dbec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06680a5e-37c5-494b-b481-b415c817b9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c2836-f4cf-4f42-b966-0aa78a637592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cedd6bc-c6cd-4715-86f6-ee2e6aac91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eeab7e-cd83-454e-abe4-492b658b9302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc181545-a8d9-4e05-80fa-2fba5fdab51d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e563669-3ef5-45cd-99de-f5667da8d246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1caf840-23ad-4791-b8e3-06df07fdd9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5ded9c-7016-4667-8750-785e2090af5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c7f822-06df-4229-b569-ed95f0c88d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a63a7c9-c42e-4d8b-b119-75a81f550a8e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4258e64a-c499-45de-a8ae-bfea4f7dc0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333e79bb-0dd3-46ed-9b9c-2e09f2d05c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c898f0f-ccee-46e2-a92a-30bc8ed01949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61dfb1b1-916f-4e9c-83a8-a3086436cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e23009-2e32-41a5-92d9-328001442c2a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6421b4c8-0020-4b6a-a5ee-3459c6cf9780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1908189-51fb-4cdf-95d0-d8fdfb6eca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3acbc4e-d067-4b05-bbac-1f25439f7552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b1535c-6088-4dfe-a8f2-84aa31c80f1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "268cedfb-38cf-41fe-ae0c-3dc512fbb394",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3c7faf8-340b-487f-a590-8613612ee78d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e82b605-e5f4-4515-bdcb-7074f2c1f303",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03d2685f-3188-445c-9b75-d70c3a5c5392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1637b9-cc7a-403c-91c3-d11639c8f870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "021c7fd3-0a4b-4f9c-b09b-ab4fa727cec1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "646c1f96-eb23-4469-bdb5-c57b0fb16120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ff54403-0f33-4c28-9358-baf7f07a58f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71550dc0-6753-46da-a8f0-dd228e620e7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6beeab7e-9f10-446a-956d-4cec15eb8f68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db0a7abc-596f-4936-a4eb-b6e9f1c5ec4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4213c40d-385c-4d0c-b1f4-51b7d2199e79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a72e47d3-f52c-435f-af85-ec1a13bcd13a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d61b747-0abb-42a5-aedd-b038df227e43"
            }
          }
        ]
      },
      {
        "id": "7c6882b6-afbc-4984-bbc1-ff22c627fc10",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d152a273-80bb-4baf-9ef9-8ff73e78489e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99f90e15-25ba-4b7b-97ef-ed94cbb3586c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9fc2d44-4803-4f1b-b16e-fb9c850f1d2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c6970f-99e1-4d1f-a5d5-c8a700bc9cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7220b7-4432-408b-a4f9-e98357c80d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bbaa40-46a1-40ee-bc9c-590a665fbcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a7efa3-78dc-42c0-b80c-3c9949bd392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd90e9f2-7679-4e1c-b553-2eaca62a5dcc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd6eaa4-4f39-455d-883f-e4b353a28a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2181dcf3-3491-42dd-acca-5c7c2ba5b507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8850c49-5c02-4ef1-970f-22121b7471d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f535944a-c726-44bb-a8cc-f969aff58826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74930d0-1ffb-40b7-9142-362a867d42e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715938c8-33eb-40bb-b63c-3b1141e53ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2686468-2047-426a-9b24-7ea846757fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c26bc58-954c-4808-a862-33841b9da654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be280df7-e966-4f6d-9292-72b7e08dada1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb72e5b1-916a-480a-9f83-3c0d2158086d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35653a61-2d65-46e1-9456-83d6c3615673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac6c09b-5efd-46e5-ab59-c25f7f43dcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c77dcda-00ec-418b-bbfe-d13952813624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba904394-a8f9-4ae1-a39c-cfb75a9c1427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4953a5d7-0002-4879-8fb1-029dbbc56ad2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113acf09-b81a-44b7-9dd5-2ab06bc21e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba5495f-eac0-45d9-a46b-1c303b5126f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e624f9-9997-456d-b46a-6b215a3c0e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86790127-112f-44fa-904b-ac56e095bdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e787f65-b982-4f58-b0c6-76d04622e6bf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd252e1-5724-4f3a-a104-2e5e9714daad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9782cc41-791c-40a9-bdaa-3f38d663f874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48de0a7d-274c-4793-8ef7-6ebcd3b54689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64ae810-c7dd-48ea-a556-bee55c460557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd8fec-c732-4002-81ba-9665dbc953ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee9ff6a-b077-4877-973a-31e1f6c89fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1a7ddf-9572-4fd6-8aef-6c74842f49c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb33106-8814-4ccb-90d8-41df0d176dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a57304-f2c2-459c-9053-ff853f351008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08059b93-b37a-4945-ae43-afc7a98bb510",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176409f3-42d1-4cf5-bc96-b814e7fd55fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0e6f04-859d-46c7-ae8e-29fc7fee8b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a818c6e-b78e-4ab0-9109-66a6a60950e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68721547-0774-46ae-b284-e04f5eac1451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34af3cfe-c202-4a15-9f2c-9e661febf7f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff78c61-6b68-480d-be95-c930053cdab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0206e11a-7bca-46fe-ba3f-8c05de75b78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3d30a-5a0d-4b45-9b6d-fe6d0c1c02f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d5a4d8-4464-4a95-8469-bc366c7b03a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cb0bdf-eb99-4201-aa10-11079d0ec464",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5967bbf4-681b-4853-8fcf-d36756882004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84920fd8-3c41-4eb0-be90-07eaf8561912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092f159b-9091-415a-890b-3203d9ffff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d478dc9-1d92-43fb-aa2b-4e230174c360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07130936-ea8c-4a56-92f8-6c99db8e231d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347aa4fb-7d15-448d-96e5-3aa21b5cf686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69d9586-2ae1-47be-b8b4-6e6bedced172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b875cb4c-ca86-406b-a668-9917eff0602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8efef942-0c93-4405-ba26-5233e357f196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d749587-35c6-44bd-8ebe-0aa3e828c24b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd4bd7-ac6f-48ca-b022-4c1d4a02db09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c653d8b0-4978-493d-8d9f-93a16f54f756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a00787-85a5-444e-bf58-cfec5b6bdff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f980550-9442-45a6-8143-abdfad443cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c91ff-badf-4328-a374-083817c1854b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2551e89a-12a6-4432-8afe-d246c8da8e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbfd833-9dab-45cc-8375-097dcf4509ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7222ae17-50c3-4b24-99ba-834c2bf01069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "487ebac2-b60a-4ef9-b2c6-22ad7a375585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a3a8e-eacd-440e-bf67-58c7e222d123",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ec151c-fc72-428f-a6ce-8b323c994de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59da07f0-be9f-467d-b387-c36cd56a8ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5fce8-5598-4e16-983e-b9ddba7e6a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fff4084-f691-453c-869c-910d9384d166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98df59f0-0700-4692-baf4-728e0e47db63",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25829ac3-359e-4c53-a99e-43ea7012db88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738d4dfb-579b-4b07-8bc6-3da47a091887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f797662-0223-41d4-8865-1b441a24a8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "92888580-9136-4f31-8453-8aa6a8d17e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5995c34c-47ce-48dd-85ff-926ca2d01c45",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ade30d-8615-4f8e-8dcb-76de5a023691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52082cc0-f00f-4acc-aae7-60728b40172e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c16e5b-401b-4eb3-8618-217c99de79da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be125ed-18ec-4739-b96f-9d5c85f9b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c258c19-4960-4ad7-9173-67d15f7424fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26953532-d130-412f-852d-ffa61bcce143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287a907c-dca5-4d88-a98c-fee1a03b96dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ed8f0-1f25-4eda-88fd-5bf8d80b671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "214a141b-e3f2-4ba6-9469-936bd626da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fa85d9-12d4-4dcc-86c3-a96f3bd15c36",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad58dbeb-1b26-43d8-ad22-a4c0c940f9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72720992-3eac-49bb-89f9-97ebcb384c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ea8934-8cf8-47a0-b2be-758b4d783961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d4a00e-804a-411c-bd19-1ddec6b1d1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef81ac2d-9408-4e5f-8357-4b308f836417",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff441e1-b27b-497a-817b-eaf9fd214e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c83b2f1-49b1-4e04-a12e-0de835c4c0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eec7c9-2f61-4bc2-ad49-5b5ad74ad13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb4edb9-ebd2-46fe-aec6-77e8c5168336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d1b9cc-7a77-4d6b-9efb-7ed98fdd9cc5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5e57f-ac96-4136-90d9-07514afba72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5431371-280b-4b31-848e-a9a454e80ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905848e4-f31d-437e-bdcf-84214b2c4d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21002d7-3fcd-4442-abb1-86cc0859cf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cea8d2b-7fa3-4c49-ba90-5f9e88a188a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9717ea-1161-4b60-b207-a58450297fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90ec088-7bd8-4d74-b9c6-c049fb204dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5efbcfe-8c4d-4319-88ae-464ae8eb9d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6b187f-8453-4d3f-8852-cb26b778b897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7128ba7e-136e-4507-a3d2-ba0b3e98d869",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7347b46-2c8d-4518-bb71-6deb740e50ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb6488d-73d7-4717-9035-273d82dce3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81f6668-71c4-4a01-8214-3fc0bb99b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7149609-bc73-4c0f-b00c-8760ad7e4bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c635fe8-eed6-4835-91f1-1fee00398f80",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5116fee2-be51-4b02-ae00-2f863b9b80d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f108cdf-9ba5-488c-a8f7-3ac710d7940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70a3181-bb29-4492-b512-c008e824384d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "339a32d0-c73f-4b3f-88af-c58a97edc87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a8aae1-9fac-4375-9ea1-4f6bd27a830d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9b49ab-51eb-4946-8393-f427c76ec1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad7991a-d090-48b6-a64a-c2a9ab1381cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255a801a-1e16-48b0-ad6f-0d6cdbbdec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eadf45-bf13-4c1f-8cc9-95e96b2be253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeccfb2-1410-4c50-85ee-114647a2841e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523437a-a327-48bb-ace5-a5d94d491215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae3b18c-e210-4c77-b550-55aa35ff3485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1179cf19-7e8b-47b6-b3ea-68b7766d6167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9c0975-4f3a-4abe-b250-4472d2b18950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d38bcc3-d697-43d2-8fe4-0a4c4c81f58b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527cb645-c3aa-40de-96e8-1408fe8c716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80381302-ce9d-4538-bfbd-f9aa64a36b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256d1872-89a9-4909-91a9-80aa4abb949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "353d20bb-14d5-4edf-87b7-cd844637dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a9b6c7-c701-4803-90a9-ce773906f212",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6429ee03-967b-4717-894c-17aba87e30a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c4c84a-6a39-46a6-a9f2-78fe4ade61a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a047f41-d490-4966-804f-9143274365ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4beb76d2-ae57-4386-a881-7baffb292024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e84a4b8-e061-4f88-a7bd-a53d129effa9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5434db-3cf4-4d29-b5dc-a0314784fa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe1f142-c453-457a-a73b-980eb5d1601d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc427280-3112-476b-bff5-c4f51680508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4889c836-0544-4226-9c0c-2f1c01a17033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfab59bb-2ff4-4e64-a4de-d47ef7eb8370",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a75a96-60fb-4d7a-ab27-29db7d18e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9f5d74-b4ad-4619-a064-8f08fc330aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369eb9ad-d771-4932-bd2e-1ed3463af126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46705cb7-7acf-44c9-89b1-e5933b046dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66fc6f8-23f5-4e32-957b-a87ff941a156",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cdbe49-6922-4d8d-b8a1-636d9a437109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151b8c4e-e0f5-4f50-8983-5f990e1f9cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93790e89-5e5a-4d4f-a810-cdf6070b72f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584f76df-924e-4ae1-b602-4885efe88b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed931bb-b6c6-4881-83d1-79299068a0ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40763435-3576-4e31-b06f-40a77998572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a77db36-23e3-4022-bf8c-186f2c488105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d9293-a4cc-4dc1-aba3-46e4d48b61cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c29c4f3-a54d-4f2b-8d20-4167fcadbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af7db5-515a-4f7b-bc10-f980e78fa18f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c7b411-397e-4e1e-aaec-b5cb1f683ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97efb01b-71ee-4502-aead-d738d26f80a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c08f9d-73c7-423c-a11d-1f20503f701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eca37f9-47e4-47f4-b958-d2f068fcd9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf291340-fdde-461a-b891-68e625a2eb8d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156fb608-f156-47ce-89eb-abda56343915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9ad62f-ff0d-45e6-ac72-e973a397a19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a73cec-27fb-4bec-8a84-cfaacc77ff9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94389cf-22bd-4b1c-9fc7-5da5f201270a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd7fa0e-6c4e-4984-b25e-769c430b1ee3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab0a5d-da10-49d5-95e0-f013c92103c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782f96e5-eabe-4f2d-aa62-a2a5f82dd7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285c47a9-f620-4849-8cdb-8da25b8a2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67de2bb2-fcac-4816-86ed-efe2108c48ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc58071d-8b4f-4813-b770-ce24c89b6e33",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc14f790-a94f-4fb7-a62b-3da7ec2c6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d631dfd-5a54-4cc5-99d9-e2766564c8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5665bf-7368-428f-bf4c-4524dd3294cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d2f946-e922-4a09-98f1-06409cdc6758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10522d7-417b-4e0a-8406-00716d49d9c3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c42594-ae9f-4e97-a4b0-94dfdeac3b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3c6da2-d639-48b6-821a-da530be66f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fcab67-1dda-4aae-b29c-ed101e11b471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d6a65f-1750-4855-8b06-e80045d348e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3eaeb3-7361-4b65-9d14-51566c21d8d0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e419c90b-e67e-4336-b1ff-863081aec9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86564564-ab60-4773-aded-a2610a527285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0105c70-3a5e-432c-9181-b2789c0b8e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "424e0a49-74e4-4329-a071-c59f774222cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bae206b-fe9a-4632-9a18-c24dca872f35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec3e386b-03bd-438d-a9fd-59671fce5d2e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355606de-f343-43ea-bc23-65341f17bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f35b2f21-700f-46b8-8d7b-4bf57f1c6403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d93951-c910-422a-9aa6-b646215162d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cafc2ea-802f-41ea-bdc5-d17e00ee2bb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68f4abb6-f046-4667-87c9-2689b2e204f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f23f7224-79b6-4076-968b-2950c9d959ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd51c83e-7967-418a-9a8c-14b942178852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60cad25e-f101-42a6-80e2-74b8a6ed1ac8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c52a2a95-0e1f-48ed-8711-88fe4f35920b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68b4046f-59de-4118-bd7d-456797ad790a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49a30aae-a3c7-4f6f-81a3-cdc540580e8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77ccd584-e596-414f-b9c1-43f67307f75c"
            }
          }
        ]
      },
      {
        "id": "81620e5d-1784-4c0b-bdc3-43dc6807cde3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "837c95f3-77a8-4e37-bb89-9c7fa6c5cc6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dce12ba8-4be7-4340-8029-7b24b5f03774",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1431d9cd-13c1-4dba-9799-a050d7c0b14a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3190cf83-7ed6-4602-be02-48239f24a92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5276f7ff-cb00-44d0-b21a-d8b18e70f81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03023df-4934-4e07-80aa-3d4eea3b51c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc320efe-a52e-4568-9a95-73a1ebba55f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5cca36-c31a-499a-8a6c-4c69ab687ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4491e029-80df-41f0-ad0f-72219d9b79d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf89507f-6682-4447-9d7a-6d1e84307667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b87e5cb-6eb8-4253-919b-e3e062a9910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb63d20f-a69e-49a7-a030-7dab5e02c9c6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c6862-7c84-452c-99d3-8ba738014bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710537e3-9317-4269-b2ce-ed84459619b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124eb1eb-1e41-404e-9043-50b1a5f13c08",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c4e99-9c30-4c30-9c84-83aeb9551fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0e9c4a-f08c-457e-9c6f-a16e585c4716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460e6e43-1468-4bcf-88e7-6bde456644f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0b29c1-ba4e-4f11-aabe-83c2778ad754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f57c9-e521-466f-ab8b-5e1c6b654214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f5b0e-b1ad-436b-b66c-27fc8e21bfe3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c039bcc-3417-4214-b6d3-6b8703791d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cb056a-36c5-4406-9d14-3c7ee19ca38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb03167-7edd-4545-a44b-0e0fdb2976c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28300e6a-db68-4f0f-aa6e-e46a9a811f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b867b1e-c813-4aef-940f-616020d80e70",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e620a-9004-49e5-881a-3b161753f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166e694a-ab67-49ef-a046-4d39e8b42d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97693497-203a-47d7-b996-463bbc51704b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9479bda4-d977-4bae-98ff-12fe750a8d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50eff03-3723-4e3c-b0ec-a49e479ac9d6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350928b4-e2d4-41a8-9f56-c96492e411a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16951875-a925-467d-af65-f8052fd3b3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab17508c-a8b1-4cb5-84a7-513440eadbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b208bf-52bd-4502-8853-c766de6984c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0821c2e4-3b54-4fc7-b71f-bd885767d69b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f15a36-50bb-4167-b26e-04ded2da9017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb850099-e849-4354-9042-92cab04ce420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa0d1ee-9379-44f3-b0e6-79e62418f192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d3af80-6538-4791-9b33-b9186127d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19587167-fc8e-4ec1-a25b-17c18e9b2b6b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a4a161-5820-4be2-b123-f844818fc7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2728cf-feb0-45c7-9208-edc55b3e084b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07de7c4-950d-48df-aaff-d02963d1c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91b0999-78cd-4a22-8ba1-3a2a9ee3cb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852000ec-4939-4a53-806a-b9d344c498cb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a43c7e-0e4c-4b19-891f-d315a3e72ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e66e3ff-26e4-44c2-94c7-1965ea26a0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e1961e-fac5-46fc-898b-6bbf382d6917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3702ccc-3e52-4bcc-b82f-1dd2cc1f4335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ae8957-bc13-4bb7-abe4-97f0db82fc87",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ab48a0-b0e4-4282-9a62-36460f95a984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad733cd-0b22-4b07-98ec-a2115ad78d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27aba50-8015-4bc1-b3d7-47d5a7f88661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375e3fb5-5bf9-4c4c-ac98-b9cd5fe3a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a7e063-f56e-4fbb-8e58-17f218f8fc73",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99238a4-bab8-45f6-a334-830c1b910319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138bd2cf-7102-45cc-860d-3e2f3a735fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc2b32c-9a58-4f43-950f-6a7c90c9b58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ff994e-89c9-4ff6-b83a-90b5a0bcc9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1afa8e1-4dcf-47cb-9481-ad1db38e0679",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052db3f4-f44a-468f-bc7a-77a701c264d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faaaf0ba-f847-461e-928d-5248535e577b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7c11ce-85ad-4b69-8d5e-19c105838212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0bf00a-e809-4653-9b28-b88266cda551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a42ed7-c6dd-4cd3-b2d0-91ddb96d943f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b1d071-b119-4ffd-9dc4-efdd2ff236b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5faa962e-1d30-417e-8623-c07c1d651a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9622aca3-7dab-4077-83f8-570e8f1df364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b4fb73-f18e-4830-92c9-82b2d0f25288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6314e9d1-da95-4c52-96cb-b21cc15a3c31",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0122b67-3938-4816-a516-249e80a213ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c826fb94-5856-4db6-929d-47daf863896e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635fd836-bbe9-4d66-95ea-51e50bf37806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3714173d-b83b-44f8-a7dc-49a9270e29d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b45f284-b658-4d9a-bd76-92f6f24c8f83",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec11e0-3a78-4a1e-9d60-6ba56e820527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6fd1f6-50a5-499e-bfb3-6e755bf5b49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d8cd8-0e87-4997-b741-4e03873ab75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f65691c-cd86-4cfc-9a69-88b45e3c1375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c7cd7c-aed9-4c53-9c5b-63804837b0f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe1f8d-e7cd-4529-abaf-f2f3df8c45de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64676a62-e36d-47ab-8800-25e13c137756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097a7878-773e-42ab-9c36-0a487875d070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbcc9cd-ed46-4e47-bfb6-91ce8984df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2a2f2-8899-4636-a081-aa07086c1087",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2f9eb3-890e-47fd-a915-0e087381bd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2307e89-b1ad-4fec-8ab5-8d10c72a3233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25150487-1bd6-4564-a51c-8079e8c87363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d3cdf3-5764-4b41-84d2-d518ee818b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaef566-9b3d-4b56-ad16-d8e7387136f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7411c60-bf6b-4db2-8990-d5aa5c0575a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff11ecb-beb9-4161-ac1a-2a7603edcab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e8e755-7844-49d2-ad72-253d803f792d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bceb516-ce8a-4a7e-b68f-054d92baf2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12a97a9-376e-4035-8c52-024b3bd8def2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bb48ac-c12f-4eac-90a2-7521a5c85e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724cd19b-b261-4333-8ed4-7df517f7009a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b892784d-c763-4cc1-87a3-8ce0c39b5fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effcf230-3844-4835-9711-d8e27d5701ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438a8b77-c5cc-476d-b9d7-cd9da84387ce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e517a60-f120-46c3-809e-53127d8ee4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89d39a3-da46-417c-91c7-cc39868652a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd8ba6-1660-4c5e-9e0c-b6677e228754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e7dd7d-9158-484e-a299-57686666e072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb45463-c70f-4421-a358-532e2ce8ac9f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481928d2-b33a-4db5-a5f3-721f68c6f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e78f6b3a-bd56-43f0-8927-c2221678bb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3746d57-31c0-4887-9bc2-de0c7ab1f2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5184a2-b97e-457d-925c-df53a23f6047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61185976-3147-4ebd-ac64-b3f3fcadf164",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6607daa1-8a1e-4ac3-9d47-1af845405a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4e66eb-dbe4-451a-a4e8-e076ddb14751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031a48e2-05b4-40a3-8d52-6ab45ed36838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a15715b-a30b-4879-97cc-9bcf03a1e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6068d7b4-cb6c-4618-bab1-6cefec3692a3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23622a3c-928d-4c8f-a27e-3adb18afe5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8297443-6cfb-425d-b67c-d5aa5f2bea9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b73fd04-a088-441d-b009-94c98e686a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcc3fbe-d9a8-4123-aa13-9d26b265a0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0b62b3-2d0c-45b0-b718-54f3a2b35263",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf15a7e-97ed-469f-9310-673d20a3b753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cb1bf1-779c-46a6-b01c-354da6216b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7dde23-6677-471d-b51a-41646f54924b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d91589-49ed-4b1b-9e23-84f702912f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b751a1-4eff-487f-adde-2d3ef43ca9ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4671d4-58a0-41ec-bdda-7202c8ce02cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aae585-d8b2-4202-b8d9-a83925d7ed72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b56cc-5f3c-4c44-8abc-c2fa166b9d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a895ee57-8d54-41a1-a3bc-b776cd834b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4386aa48-b852-49bc-9a9f-7f11cbfaea91",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f392b5-6ff2-47c0-817c-bbcda972c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0695f2c8-6a11-4c8b-90d0-871134bed940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68e933-64fe-4270-af7b-507141ea2495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96c2060-73b1-49ec-900a-cab356c4f02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ec0c7-f40b-4dba-afb0-3a61fa0b0953",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36daf2e-db44-4deb-a180-a8e16e324446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2aa7df-a11a-42b8-a2f5-3ef1de0e76a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45d1723-d4e8-4b28-bc22-9b66fde8e372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5082252-b6b6-4ee1-928f-f7441829ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b833c16c-c097-4284-b95e-981c60812e63",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11ee2ec-a1dd-45e5-ab43-1e014ae02887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc3a7343-44f8-4c9b-9190-3db101e95e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1cd360-99ce-4eaf-88e8-913274b8b198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3907b542-fba2-4b42-b16a-fad8b64537dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099aa513-60f1-499f-874c-e1970d81d3ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75f9aca-0b2d-4fb6-8fa0-a4322b175caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5360d14-8884-478a-9515-d5e9df976e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e680d4-3e62-42d9-8fdb-9929bd3f303f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e963ca9-ad18-4f35-8bfb-d76b9048699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cde791-cd59-4552-8b2e-fee70af00802",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bfd896-4178-4c40-8eec-e17ff5a3bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a324c4-d8d5-436a-87e3-5a8e01e635db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a58f84-2641-45a0-b3b8-f00bbcd33b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f365ce-d72b-4b1e-93ff-fc02c633ae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9819eb1-5cca-46c8-b3e8-e01f12edfa41",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d9a7f-c17b-4cd9-b884-ae6ac34784bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ed3e32-6283-4555-9d59-22ceef9f69ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96534f5-7f24-4c54-b09e-33b5650ff020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4677c9-bf1f-4854-a54d-6020e2112fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e88b8c-b9b4-498e-98f3-7150bf8dfdd5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc15627-d56b-4839-8c6c-9f1366ec0862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebf1df8-3144-447f-907b-db19558e33e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04975b1e-5a34-426b-9877-ed82840be3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d447420d-c4ec-4a86-a430-8b4925f83343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc4fec8-bd7e-4971-87ca-4ae9985e4b4e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cb0273-0440-4d11-a3bc-727a46897e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2feeaa1-0ce1-48ec-aa58-7f1f21120371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7001632f-7fbf-4547-ad42-ef0b1a011c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf697f6e-7ef1-43b6-a55e-a7300a104092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25369698-9916-4d33-bee1-d7b78752236b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4986d5f3-06d2-4ee8-a438-7a62aa4a3a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dd0273-09c9-48b7-96de-7a481d5fad55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c147b2cc-3056-4b1f-b472-66ee43940542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0126fe-3120-4048-babf-5f1d7edbe7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025cc0f6-2c2d-4e54-987d-f336fd0dfd3a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd9830e-878a-4aa1-8c82-84294a6fcc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e534b7c-676b-4e5c-92cd-fd5880457514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0572c9d9-4930-4dbc-8d21-853b88f4ed24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde8b4af-4f0f-4c68-aa46-466a1733ae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ef35f-6c37-430b-9887-3e31d5ff85e7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262c7501-cf36-43ae-bf3c-810a3f5d011f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf69761c-f100-4e77-9ead-c08a58a0409c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678f994f-2b0b-4153-b744-e1e5f83d6991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbdb27b-1d3a-40ae-a899-697da6ff222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56e3c34-2b5c-4b91-ba1a-fa9e7fa2ce00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fc3f6e-ba7a-4de1-a7ae-3a3d68da6ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d836f771-243f-4f29-a477-48a6856184e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7369cdad-56c2-455d-9cfa-beb52f537ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72565c91-9c74-47a9-9147-c2aeaee25e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebbb6d4-c7b1-4731-b330-1bb330cd085d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baf57fe-3b31-41a9-aaf6-ea88228bc090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16be8934-5654-4576-aae3-f839e4052306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbaf35a-978e-471c-9fe9-2e2078fdef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec785940-f4f0-4177-a2ee-14501a16e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e96fa80-912f-4ff4-89dc-c6e791fd8fb0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c06053-1798-40bc-893c-6f48de935b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384b05f-8cc7-489e-ba0d-7b333e1658f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be862331-7817-4693-a789-1a8de128ed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9cd22d-9d6d-4128-88e9-a525ea14ae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0152ec-3599-4f4c-877a-2f067e4760e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e584b4-42ec-477a-a15b-4f0d928017ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7352a6a-c957-45a1-815c-4c47eca830e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf220a1-8c0d-44f4-9f1b-f7b0a95815f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f480584-a6b7-468e-889f-ef20c8ce2f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3c3150-0ab9-4e95-b2ee-907eb0fb88b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e915fa8-f88f-44e8-be02-3af61ee6f57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957f469a-e1d1-48f9-be91-9313dd52ccc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ece3cc-74bb-43b5-9f22-5aec7260bf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e36095-90fa-4358-90cb-4d2d904c4f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5667cd6f-3a7b-409e-8af6-12c1c23a0f86",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee10c4ea-6ef4-4af4-9c63-a2acf89db0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4a35b8-9297-461c-8d3d-2cb58adb0a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b722045e-ac5a-46bc-8e57-308e84837f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851e88f9-3707-4795-9fc0-dcf551d2d248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d502c1-0478-44e5-9fe3-c938dbf5ffef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eda7531-f14f-4146-a75a-d4e81a292579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b5c723-c5b0-45ad-8fae-626e52815658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d81232a-4fa4-4632-8749-0fc5b21c49a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbef001-649c-4379-92ab-5e1e31f3efbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9fdb32-c130-4c21-8043-1de6bbdcdf7e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ac885b-8343-41e9-b62e-10915e79c3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a14082-f834-411a-a3c4-967619608354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eae8d69-11bf-4380-bbde-da7a4c5ca027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11b7074-cdca-472f-8985-917c4215e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c365c9-bc2e-4216-84cb-86f8a407bf28",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72463b-efa5-4d54-bb65-34bc0c5567da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cad8d4-4e4e-417b-8787-54fb095b0d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26976e5-13c0-4a7a-8738-b8556eb4cedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a8ddc2-b45f-4282-bc90-00e4ea400108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8a435f-1ce7-4723-91e2-8b2c9961c904",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66e2079-63a4-46b4-aa63-2db7ec9d487f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd272d27-933f-47fe-b63e-8cc8b0f59e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6612ba77-0452-44a7-b075-2e286045c602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8c3ca3-7d8d-4a76-9d2e-036ffe39442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e396d97-a744-4a0d-a3e9-09562c5753ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bf2711-9d3d-4ad4-9a65-c7f99c78e9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6835b9f1-cb0a-47c1-b361-3881234f3de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda6259-9ebc-4f60-9559-e48f957df92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e346a35-251e-4339-84a8-5d7a75ee06df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292a56a0-e0d4-45a9-acf3-e2f1842fe08e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f2992d-15fb-4451-a52c-ccc96ab8b136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d0edfa-1c5b-4eee-bb68-8bdf643c1f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e718c-af2a-4edb-8968-6a44de4fc7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd5f2a4-c5b5-4dc0-a4f9-54f58afd7570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb43e59-cbd1-454e-8195-0d4fd42f52b4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27166bab-2e43-4a4a-a955-c68d89158dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a42a5b-3db1-4608-b52c-604775f85e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8789d331-0fd8-4a4f-87b2-2a3239b951e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea33211e-e9aa-4694-a3d6-7b29ac1d1386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7461b7bd-9e8c-4b61-83af-219d1b324315",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b45bb9-2f4d-4645-964f-e1acdf4f72f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238ff033-78fb-45e8-8bc8-f3bb8dd74e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f90a4e1-c946-4012-af6f-63551997dec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e64f0dc-6536-43c1-8f5e-ff574654dad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e6ff5d-e0d2-4192-b477-919d8a9ef3d9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64e45ee-a97c-45f3-a990-42dc90ee76f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b869b2a9-02f7-4249-b640-1a244aee192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bae353e-2e07-4d56-b05f-2ef6eb82cfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c7a43e-0ae9-4636-a489-aec4cc8a32ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb25d060-6173-4b84-affb-4d9be90d8bb3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be03b0cb-925e-4e84-bf20-4223ec09838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6b5b84-153b-47c5-8070-3e1c45c8f8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e2dbb8-54e8-4421-a03d-83f25931fb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e545a857-ec14-4dff-a328-e89a7c3aab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0599b6-ff81-4092-9ec7-b522a5ccee7e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6834b9-679d-4e0e-b845-f308ba221886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a1d97-a480-4269-8a71-c95ecf27a891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d93f1-bce3-4834-a1bd-9f98d5cacb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64c0f1d-12c7-45df-aa63-1e9e8b133004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7cfe9e-e353-4aa7-9604-8c08139823a7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66e13dc-c420-4db0-b8e7-b6ddcaed7e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a2aced-e909-4405-87bb-1659ed0dfa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3458fb4-372f-4ea8-834d-fe1cf2d7a692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cf625f-2d2e-4469-85e7-b812a2667589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1849a9a8-cf59-4a41-8638-9c7ace0e811c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a65cbed-992c-4373-b585-cde34176dff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2beb222d-ef3e-468d-818a-e03f344fa0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08be9d-19b1-49dc-89e4-a21bffb73471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc9e3ec-f806-415f-8849-b3d451d38c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60441a8-06d2-46b2-bc30-10205399ed7f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffb2a4c-62a0-4992-bdf0-8d4ff7060460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708c0417-92c9-4477-8304-76a41a240d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7399ca-b511-4ea6-a6d0-644e0b761218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89ca44-e620-4843-9646-0dff261c7c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa28e2-a66e-47ac-a6a3-fc48b3a0e812",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea16dce5-1f88-4284-ac50-9adfa5767a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f789846-3b2c-4919-a682-76cf78eabe8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66c593f-bf33-4f98-95d9-b8da252b737b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216b74d9-77eb-4934-ad91-e7febaef4465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f916ac-0d11-402b-8473-21c2374a401f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9281f2-750b-4307-bbf4-c367d1859f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db69067-de6e-4b29-adeb-87bbd21d7930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab690ed-6636-41a8-820a-beeb2c2a57ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe931b8-da69-4786-8e86-80f9153dc8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c281d53-16e9-44a7-a131-fcb0b60fe37e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6106e4bd-8033-4313-97ff-749374c8396e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d3f53f-4832-430e-bfce-da0667035fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2338f47-5f79-484e-b7f5-68487b02c574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f52fe87-0d3f-437d-9e64-297421216652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb69f7fd-a4da-4ff0-a43f-a115029255dc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e86887-981c-4e7d-b1e4-a56893974f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2ebffc-7e71-4806-a796-1b5359c56a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9551487-243c-43a6-80b0-2249eaffd418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66f8d95-544f-4b2c-a521-547cd1a347ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a9b251-7cf0-424b-9827-8189e73b1710",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4fa5a3-a6b0-4d77-80d2-8ab450cd4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66eb78ef-3a48-47b5-bc29-8865d3847f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd18486-4d10-4808-aaf4-ed0c65befb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dacf45d-c265-46a3-a86d-befaad5725c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c050b56-a349-4931-92e9-a1573aad8263",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bf8ec8-8f6b-4b7a-928e-59d5f13f59f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f98f83-cd2d-4367-bc51-6fb1b7666a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f968dbee-1fd7-4431-b6e4-55d646147ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6558e2-3281-414a-9294-89b2b0d9397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36688114-c3bf-499f-9f7d-0b22c35660b0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c917d2-be13-41c1-97fd-ea2c3569128a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805c6e6e-5e84-47ca-b320-741128664c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28302d0e-3080-4f99-b06c-8abcc4207f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e660b978-acbe-4ddf-b975-6bc50f0f5aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f0abc-5da9-4fb2-9f53-e37c2e0df161",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd18d842-8162-479b-8ac0-b2e2cee3a28e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87cc1544-2e06-422c-98b0-fe1121b32cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c752280-054f-41d4-b435-c25a2f41d3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72186351-97ed-452f-95a8-253b64bc62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd974d-db16-4776-a4ea-9e30e7ffa3c8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c625f2-7bc2-439a-8ba1-181fefb30097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8bcf73-2d28-4d97-9f43-e13e90558657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987204b1-b9bc-4799-864f-6a8252dda09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8191ab-c9ce-49b2-aa93-e49e7486eb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c807d46-a746-4d2c-9506-b00169ee9ce8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc360d1a-5dc3-46dd-8ef8-4cc92aff8d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df2c476-5c97-4ce1-a711-2cd3856f01ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595ce21-4fb9-43fc-bf7c-8762a97230a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6081052-cbe0-494b-b900-586047362969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8386b4bf-4b53-4660-a322-b8f2cccd9a9a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dcc4e1-5324-497b-a939-1cb0caaf0626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a0dd92-ad1b-455a-b781-c970d87fdc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274deaf4-0bb7-4707-838f-6151c1785102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c45905-7b64-43f5-9f25-86ecca371679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca26f9-8ed7-493e-a5c3-2e242545efcc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8165908e-02b0-40e3-92a6-59d0a920ed38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2467c38e-b5c3-4f0a-92c0-1a30bb6653af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf282b-4483-4dd0-a065-890da1ce8982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a65c890-a41f-41e7-a745-0f6456fd51be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db0b6dc-e41b-45bc-b5bb-d988e55f180c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8495e81f-4cad-40f6-8cb5-d811128621ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7214c480-bcbf-4930-a9fb-029041336340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1158b9f-b15f-4477-bf97-1f131e5880ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce95f15b-3f1d-412d-84f3-f6e9bd50d932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e6077a-bdd8-4227-8661-f8e4de9ef066",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0f8102-671f-462f-8c71-495b5fa9fd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6b8c02-083d-4765-9db4-6526fc6a0be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc03acc-ca50-4098-8936-2d24867be60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6cf73f-b01a-4d95-83d8-a5d2c4bdf7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cffdd5-13d7-4c64-8ae4-8ce0733c4049",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf85a2f-08d1-4a99-b7ef-2f49cbb6000e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02f6bc5-e9a4-49b3-9b00-b45b30dc58c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef188c59-c6ad-454f-a047-ff4d6b9cfb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75473f4-ce82-4629-96be-19faf941a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484b14bd-afec-4d82-8907-8e19c04e27d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee8046c-cdec-41cc-bba6-664714e6267a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf4850d-6c50-473e-905a-b366eb2f0510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75787caf-d86e-4ca1-b1f6-c702ef03e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e624acac-fddd-4b4b-8ca2-fd680025d3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6cc4b9-a19f-443e-968e-55b851ff0978",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af967c6d-3b10-45d5-9874-5151f0f6833e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c0f237-a4e5-4fbe-b46e-67ef9138da45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad953cd3-1807-4dad-887c-ad5921ce4025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f31adf-80d5-4cb0-aad8-7e34a7752e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0c0664-0474-4d25-be48-676b4e5cf3ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682f7515-eef9-4807-9035-9c21c38c50cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3979ae95-d969-4eb6-857c-281c2bc0e14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930c46a0-0818-407c-b082-39303b83820e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00163455-686c-430b-8157-5f6197df6a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2a1cb4-7d6a-455a-8225-185b8197afbd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16677f77-71e3-45eb-9616-c5897fd834bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec8de63-ebb6-4c31-b584-203e6ffe6db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6ed286-96b8-45a9-b190-08965d70bd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0683cd95-d9db-4e50-8a66-544677a4547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4b7dc5-5533-4b43-9f29-5d169086daf8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee54648-2e0b-493c-80d7-3aa787e4ccf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feedd6e1-22d3-45fb-a33c-0554b9cf2a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a4a47e-45d6-48a8-beab-575ecb0739ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fb9607-cf9a-4d4f-a469-f61a01b7bd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d29645-237e-44fd-ace3-dd5036b0f558",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c8c69-ac5b-44c6-87a2-762101c48016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ed6e61-a331-4fe4-bde3-fda00dc775cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474ff27c-c285-43cb-8521-631298f3fa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4d03af-e78d-49b0-8600-e134de6c900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc1ee7d-28cf-4f53-843b-53f4686102ec",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2610e2de-80af-4603-a377-db7ec6515a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee2c797-0dc0-4f67-a45c-933e91ab1533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae5a34-632a-4069-b13a-412aef8d9a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171bc62e-86ff-4ef4-ab2f-b1ba06417458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b38fb4-09ab-49ad-a34f-37aeca02d481",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66443b83-a363-4f8c-a00a-e168d8aad4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c241b0-a25e-4033-998e-bd2a7c40822a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519b1c9-bc7a-49cc-af41-ac463b66de21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62958245-fd66-4442-9f42-7abb91261b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b63708-aab7-4276-a126-b94f5f7dd071",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356336c7-fd49-4af0-be7c-37fdac510b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197c438c-e751-413d-a8bb-50c7b9030572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694c2d53-739e-4824-8dfe-09eeccc1698e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d1d9a0-f579-4215-bcef-dcdbff26e8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f7f39a-1aa4-4441-b2a8-46da09216878",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba1aeed-5797-4670-97ee-a543bd381cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a5d263-f6f6-4d14-bf80-4c4d796e0587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c0fd0-84b5-4bed-a354-b9edd0e3c1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10dd4c3-048f-4a62-b4d5-6256a96dbaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49f610d-0a5a-4cc3-8c92-69a35e72962b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb6e64f-098d-44a1-a766-80166a07724e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484a1ab1-a231-4434-9eff-7e9a2e5fd1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d9d3cb-9837-48a5-a0a3-53483ba72a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e8bb92-0b15-4e7a-a764-074ca5e553b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbbf5ff-c3c5-4ef4-a55c-033c37b843c7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86265d91-a920-4c41-8937-df67fbce9ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26dde27-bf79-4e7d-bb10-de3183f328b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d87a5-7c71-4d63-8b65-558e2398d58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f6dc78-6feb-45d7-85a9-d5224e1a6d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e955a6ed-cbad-4e76-8df6-2e393b5424e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e71a324-807c-4b96-a25b-c77204d3d472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b133c1-06de-4601-b435-d1a3ab2a122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37114ffc-8e20-4454-ba51-92b81efdf1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e58fce-0f36-4184-a63b-81052202a4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b60d48-b198-4dae-ac1b-f9841d4e24d6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e4caef-ab57-4f4c-9593-2ee06a8a9b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f91ce87-bb65-485a-a0e6-4bd4de5582f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019a1595-d1a1-4f15-9112-ad0cd626ec4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4063b5a9-0922-4600-be0e-7861d74f5194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34f6e1b-867c-400a-9831-fe7842da2018",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55e265-51f3-4145-a33b-996383d601c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19cb9be1-5ee8-4212-9d99-935bc2a3fbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b9658-0a19-4d65-9f35-3e79e32641a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6696f132-9547-4e3c-ba8c-dabca9c01a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d500307-9235-41f3-9b66-ca0a6b4aa984",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f1ca61-e77c-45ff-b08b-8bb9ec12930f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5416a886-c604-480c-9501-776ba35cc61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b1304a-d754-4fe1-ba0c-1798a8b7e55c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cf11ef-b6b1-406e-aedd-e10d4bdefaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f1249d-a01d-4539-93c0-589c02956595",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4701a4-c315-4e5f-967c-f178b62c4233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a75f7a-f618-4eb8-8fe3-785dda46dcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda4bc34-1ee0-4c11-bbb6-3f7e7d8f63a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26690017-4787-4c66-bb9a-5bb3861ced7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f6e560-500f-4272-afbd-8530c32583cb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356f604-60a3-473f-bdb1-c2be13a8ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8502dd97-e732-4606-8a29-015998b93cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04076ff2-1551-4614-8c37-640dc06ce1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89092aa-b1c8-414f-b940-a79e4869151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0646f27b-3821-4113-a43a-7ec0f37ac900",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d51c279-4c2e-44f5-a99d-2fd96c77c51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148d7022-0ff6-48a7-99cb-901cb99ffa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc26495-94b8-438c-8489-bd1567f1bb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe53f48-1e31-4a3c-be51-1cdb102c4756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35818bb-80b3-45ec-9398-e831e231678f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568b1d1d-9b57-4719-a0d8-4c11f867dbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93ad3ba-24be-40b2-aa44-883e57ed832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818438b3-8633-4889-ae9e-ad448276f4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb7f19-1cec-4556-b4a2-85dd34ed1945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4789a2f2-d3b3-49cc-a3cc-7b097dfd6a03",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b6c27e-2a36-4821-aeca-d8bd438ddd27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932dc92c-1c58-4486-8919-df575eeb6291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5bba18-a0ca-438d-a368-64f0f43801e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5f0478-2c4f-49b5-9345-4ffd113001df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666c7c70-0d12-417d-8f47-6f32767f1a13",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d20579d-d5aa-4e3f-829c-b8e6d3da18c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a972dc-bf23-4939-9efa-fbc52b9500e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bb5a7b-44e3-41a7-9850-698e944fe43f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7964807c-a483-429e-9aee-b832b69e59cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14bafa0-b232-4edf-9257-a499580a8906",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ff0d4-c071-48d4-9772-166f431e2b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c1ad81-cd04-43c5-9cc8-f9cb3d39bea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6824ca4d-c881-4b07-b65d-c2d761a6121e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9ee962-17c4-46d8-ab28-39b96967c408"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48c1ba0f-253d-4c84-9db1-944f4003f829",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8efbadd2-6670-4abe-b538-94ff8ecb6d57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9611eda9-8464-4ad3-af0d-778c87caa305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5411b50-b27a-47b5-8c33-776b6dd73902"
                    }
                  }
                ]
              },
              {
                "id": "fd2bec74-f5df-48d2-871a-342e552d5015",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89bb6985-34ae-4c16-8968-86c8fc6309b1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5e76c8-d107-49af-a07b-ed99e8b0e999",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "94becdad-3137-4818-9144-a71170de6c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bba8382-cb4a-4e9c-a14b-36eb2a243e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a759cf7b-4a36-4263-bf35-a2745129dc82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5128789d-fef9-4468-91b5-10d33abb348d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54910817-c59d-4be7-bc22-191147d5ed64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4da24ad-aaf5-4bab-b29b-790801da0af0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c05ab2-3e11-4ff1-b0b2-22d25d31ab55"
                    }
                  }
                ]
              },
              {
                "id": "4614e694-422f-47eb-bfda-6293cb9d3f93",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b5c0885-1b99-450d-888f-030673df1dc5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781fd84b-3711-4cb6-8ef5-4bf4f5ae1907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "007a8233-e128-425d-93c5-75084f9a7846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fddb89a-3d60-44fd-83a0-3c0cd73f7441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d005f4e0-69d1-4e3c-8f5c-18e820de7c96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb4ba3ef-717e-4750-8113-beda101a72e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51928219-6cb2-497f-9fdd-0a51eabb2982",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f74ae47-bf08-441b-ae7e-e64f743c0b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c91aad8c-cf57-447d-ad01-936873a72ad9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3c756d4-0039-4adf-b2c7-d71cc1ec16da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0da8834b-8863-42f2-8cbc-51d56a96e410"
                    }
                  }
                ]
              },
              {
                "id": "08b812ce-eea8-463a-8a2f-529ae109bcd1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7da68a-64c8-4421-8d66-3eb0c57fca6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e8e733bb-8fc6-4e84-9989-f6c2d3a8deff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3de45e-5aa6-4a6f-b6e4-32a11a8ac536",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "097bcaa3-2a0e-4fdc-94dd-4b8cdf5db39f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3acbabe8-ee63-436d-b952-088efd17fe39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46c5e94b-f62e-4b79-9b75-de4fdaadfa4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "663a28c6-87d0-4f12-a290-1a74790587a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f540bf55-9f54-4c68-960a-9827a26bcd39"
            }
          }
        ]
      },
      {
        "id": "055bc69a-9e6a-492c-a69f-53465afd3905",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fa042ebe-9813-4c8c-9695-a8b6a7ecfe81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "598ee39c-692c-4a3a-b52c-9fc062117933",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f610c3f-1087-4430-b083-845a7731ed72",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6e0666-a868-49eb-925e-b25521cdc6a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "01cd801c-d603-4ba3-893a-1bdadde37771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca4ec0-9319-47a2-a1a0-00aed6fd48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b35bd9c5-1617-4ce8-9240-309ea3502207"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0720c75c-ecae-4f80-a003-8880920f0a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d529558b-5a8e-4147-ae19-e022288d4090"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e41b79d7-4c80-422a-9adf-8a3cbcdd9bc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79ac9795-7cf1-406a-b30b-79b88b51ba68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c30f6594-d769-4d37-86fe-55e906ae9795",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1cc0c67-c007-40b0-bfc1-8dc4459ef7d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fcc0b1d-93dd-4ea8-aea9-4c5d923cf55a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "444e406f-f353-467b-9c29-02861eaebafb"
            }
          }
        ]
      },
      {
        "id": "603b72b8-2f18-4959-b85a-e0874c5f0c85",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9e2cc80a-a142-415f-bd74-20ec7dce34e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6ea7a05-4930-4579-b8f5-e476e0b482b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9c4ef26-8ea3-422d-8584-39abb97aebd3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b684a09e-4c2a-47ee-bd02-786739ff179e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "145ac6ba-84af-455a-946e-e18702471cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd6e932-577c-4647-9cf5-dfdcbb2f9cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c899af59-7009-4250-b12e-09fdc6b336fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be3a5d5-e5e1-44fa-b3b9-3f4ca81923ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c2785a5-9f3c-46ae-91c2-ec7ac46f0f96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29460951-eeb5-4c11-9e04-2ab9457e032f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d7cde68-8f37-4a72-bc8f-83ac9d362202"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c427dd3e-5ec5-4a62-ae18-c9de114d1534",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b708f412-a4cc-47e6-acc1-2c1d1fae7e32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f56ddd5e-d085-4834-bd97-9ae5099d6ad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3405836-2454-49e5-b742-ab35174d9764"
            }
          }
        ]
      },
      {
        "id": "c70d9ef1-7156-4461-a27f-f71c9852cc7c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a86146f1-563e-4f42-be2a-8fdae83b5b5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e9494c6-9524-4b6e-804e-fe8316e47878",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d518f910-2545-41c7-9142-6f18e9211a3d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccb2913-4d6d-427d-b427-3fc6724f5d00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a05d1d-970a-41bf-adaf-ba9990d50d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027fcf41-7dae-4e08-b003-184874eb4300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8f86472-1161-414b-9387-6fc95438e7a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc4fbf4c-b285-4e59-8e2e-d0a59de15281",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1a57d3a-b8b9-47fa-b3fb-c147ea0c074a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca2eb0cd-1ccd-4604-b72b-bd3ce15b8809",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea1acea-48e3-46fa-901d-fc710e7e8e5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cb6a856-3c04-49b7-83cf-51d7d419a661",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82db2f7d-4429-4ff2-ba40-85bcf6ce8add"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9052179f-b0a2-4447-9a60-b05458f75016",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ec206d3-7e5e-41e9-a247-c972a1185420"
            }
          }
        ]
      },
      {
        "id": "9a24394e-8239-4150-9c72-a8ae14876c1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c0f410e-9d95-4bcf-9a76-15458563921e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad014649-12cd-40e7-8cb3-c7fde3561fd6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2589e497-96cf-488f-9ee5-10fa46792e92",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e934cde1-d9d5-42dd-8f21-868819ca4a7f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02f6db5a-6e45-41ce-97f1-2ec1dd66ada3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.02807017543857,
      "responseMin": 7,
      "responseMax": 2942,
      "responseSd": 333.9285235813022,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702427762416,
      "completed": 1702427804546
    },
    "executions": [
      {
        "id": "3125829e-11a2-4107-bac0-acaf8a71be8a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d873938c-73c3-45f9-96f9-b17387415e83",
          "httpRequestId": "e6c1630e-c48d-42ac-a142-f149f458a726"
        },
        "item": {
          "id": "3125829e-11a2-4107-bac0-acaf8a71be8a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8e0f55a5-581b-4e0f-8f72-1400ebfecbf9",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "02cd672a-e41d-4cf8-a415-5f8d4ad2205a",
        "cursor": {
          "ref": "b9ef6285-b236-4e5a-acec-290b2323746a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "df2f1087-7410-4ae8-8aea-19f90b2d91e2"
        },
        "item": {
          "id": "02cd672a-e41d-4cf8-a415-5f8d4ad2205a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9f4e9986-2ece-4ffc-98b3-36d78e4c4abc",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "f98d38ca-09fb-4cf9-92ad-fe58aa2d019d",
        "cursor": {
          "ref": "e43b1a79-292a-4d20-8131-b17dcdadd17c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd2556fb-9c96-4497-8605-df1b68397211"
        },
        "item": {
          "id": "f98d38ca-09fb-4cf9-92ad-fe58aa2d019d",
          "name": "did_json"
        },
        "response": {
          "id": "986c832f-65ad-4803-bdf6-9ce5e76301ce",
          "status": "OK",
          "code": 200,
          "responseTime": 1028,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c6f94-68ba-4a69-82de-6151347a1f68",
        "cursor": {
          "ref": "aa3294b0-243b-47c4-9dc8-82f61f8e636b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "542350ac-60c4-42cb-9305-4592e34a0ba4"
        },
        "item": {
          "id": "bc2c6f94-68ba-4a69-82de-6151347a1f68",
          "name": "did:invalid"
        },
        "response": {
          "id": "71174b8f-95d5-4909-942d-35ab146a4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c6f94-68ba-4a69-82de-6151347a1f68",
        "cursor": {
          "ref": "aa3294b0-243b-47c4-9dc8-82f61f8e636b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "542350ac-60c4-42cb-9305-4592e34a0ba4"
        },
        "item": {
          "id": "bc2c6f94-68ba-4a69-82de-6151347a1f68",
          "name": "did:invalid"
        },
        "response": {
          "id": "71174b8f-95d5-4909-942d-35ab146a4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1b2778-dbbd-46e4-9e58-36b4c00d5983",
        "cursor": {
          "ref": "57b57a1c-fb5b-4f8d-af93-d83d1ac45c76",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d34bb0ee-8f67-4335-9724-87a3f7dbc0c6"
        },
        "item": {
          "id": "5e1b2778-dbbd-46e4-9e58-36b4c00d5983",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1a574971-4929-4935-b03e-959e85349284",
          "status": "Not Found",
          "code": 404,
          "responseTime": 165,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867bc915-4060-4638-916a-b2234e4e4705",
        "cursor": {
          "ref": "c865ff24-0f30-4b5f-be26-bd7e6bc7e398",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2716cb03-49ac-4e62-8660-37c1be8e66e2"
        },
        "item": {
          "id": "867bc915-4060-4638-916a-b2234e4e4705",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "58c34d8b-befb-40f0-8fda-7cbba8f3d93f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b3675b-e043-4963-8d68-56ade16b28ca",
        "cursor": {
          "ref": "2b0a5820-6b3f-4734-8563-0f1b020b45ac",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0da45a17-6441-4789-818f-36c8e3da40f6"
        },
        "item": {
          "id": "13b3675b-e043-4963-8d68-56ade16b28ca",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "77cae117-34dc-4c94-b309-60208308d5c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d015d8c-376c-4c42-bdc6-b66f1c1ff802",
        "cursor": {
          "ref": "6ed814d8-5cad-4ed2-808e-b4579b40a54f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0cb0814-9a66-4940-8199-7a9fb947d6a3"
        },
        "item": {
          "id": "7d015d8c-376c-4c42-bdc6-b66f1c1ff802",
          "name": "identifiers"
        },
        "response": {
          "id": "1f56618b-98e1-4422-a023-415f8491a0cc",
          "status": "OK",
          "code": 200,
          "responseTime": 504,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa85a81-306a-4552-a065-87a7ad93f06c",
        "cursor": {
          "ref": "f37db78a-b711-4e14-8945-c5df0e3c3838",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ebbc57a-07f1-4e3c-a841-7b2cb3dd7464"
        },
        "item": {
          "id": "faa85a81-306a-4552-a065-87a7ad93f06c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b3d831c-56ef-43a1-81c4-a21f2513d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c51ffd2-6930-4223-8803-c7abc3e7d627",
        "cursor": {
          "ref": "42a589a1-111c-4147-bfb2-fe971a3ce537",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d68df42-23b5-4c3b-967f-b7871c901fdf"
        },
        "item": {
          "id": "4c51ffd2-6930-4223-8803-c7abc3e7d627",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9fa62cf2-98a6-4228-8f85-af78dea7090a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb7539-88c2-496b-a286-08c88d79bc35",
        "cursor": {
          "ref": "d65180fa-58d6-4993-8bbc-f66cddf8dc33",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88879616-854d-410b-9ecb-cb7adc58adc6"
        },
        "item": {
          "id": "95eb7539-88c2-496b-a286-08c88d79bc35",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "82c604b2-91ec-40ad-93b3-231a1e219574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c4f7b3-550c-4366-bb48-40ef66de9146",
        "cursor": {
          "ref": "409721d0-8495-492e-8370-512e7eb36f1e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "996d825c-aed5-488d-ab0d-8122e91a6020"
        },
        "item": {
          "id": "a9c4f7b3-550c-4366-bb48-40ef66de9146",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4bb9e99c-2b44-4531-8687-3cfb412ad9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b97710-01e8-48cf-8668-91e98b8a495d",
        "cursor": {
          "ref": "b006ace1-921e-49f2-b67c-245cfcae4acf",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f76d9733-e359-406d-a8a9-fc37174abae9"
        },
        "item": {
          "id": "40b97710-01e8-48cf-8668-91e98b8a495d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "218b19ee-6591-4702-82ca-44bf7a5e2229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0a4f3-9194-40b2-b16e-e00912e9a33a",
        "cursor": {
          "ref": "1673c903-8c02-45b7-bba7-3916c827a987",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "057e5d65-4301-40d0-a843-960f03ccf600"
        },
        "item": {
          "id": "4af0a4f3-9194-40b2-b16e-e00912e9a33a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "31a88c9b-2c3c-4fb4-a297-aaa981fa54f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ee5857-e187-418c-a081-48b535a87b67",
        "cursor": {
          "ref": "e023461f-caf5-454b-a862-151763c8d451",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "74ac13eb-781a-40cd-bcfe-46d6ef841944"
        },
        "item": {
          "id": "57ee5857-e187-418c-a081-48b535a87b67",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b6cf636-94fd-4c13-87be-e37c6f4c8f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7414b-01e0-4620-8fd0-838a84cbf6a2",
        "cursor": {
          "ref": "27164de4-22d1-40e5-9ea2-2a156899ed81",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "42812a56-63c4-4258-bbcf-eaba04ee3d18"
        },
        "item": {
          "id": "69f7414b-01e0-4620-8fd0-838a84cbf6a2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a8cbac8-1127-4c48-b4d0-9e4d7e445b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd196b6-c59d-46c4-95d8-57ebfa19c9c2",
        "cursor": {
          "ref": "e8f4df83-d29c-4fd9-aeb4-970959ba0734",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4233c4ae-12b5-496e-bae8-2a5929c7f5dc"
        },
        "item": {
          "id": "6bd196b6-c59d-46c4-95d8-57ebfa19c9c2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "afec7b4f-2701-4788-b7ec-c6184c5344cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021ef8f-8505-48c6-82d7-49a0ea3905fb",
        "cursor": {
          "ref": "7809bfb9-7055-4c43-bad4-5054fb764e15",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f523ee0-f5eb-4aa4-8d7a-d227c49e6e30"
        },
        "item": {
          "id": "1021ef8f-8505-48c6-82d7-49a0ea3905fb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bc0b20df-41a3-456d-9a3b-327963b4c78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a373b-029b-46a2-bb62-fed68782dd9b",
        "cursor": {
          "ref": "b462d351-b0c2-4b62-a9ce-cde203692c20",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f94e5b71-b2f9-4a81-83bc-513086d414cb"
        },
        "item": {
          "id": "9f1a373b-029b-46a2-bb62-fed68782dd9b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d492074b-4250-4e0e-8d7f-523876f0a54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04c02d6-f5a4-4b05-821b-9f32e2a5b031",
        "cursor": {
          "ref": "12596bbc-9deb-46d8-8678-032d8a7380c4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7b6677f-97e5-4c05-8360-37ca119163e6"
        },
        "item": {
          "id": "b04c02d6-f5a4-4b05-821b-9f32e2a5b031",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3d3c4798-2b54-4af3-a43c-1cc843da0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14de6af0-8cf3-4f92-9cd5-410be54c20ed",
        "cursor": {
          "ref": "30c5928b-ee2b-4c0d-94a2-99ee4b802e86",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "16bd6c63-6b18-44e1-83b8-ec9d26012292"
        },
        "item": {
          "id": "14de6af0-8cf3-4f92-9cd5-410be54c20ed",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c54136b5-6982-48ca-95d6-3eba6c01cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb56fb1-0709-4c5c-9a66-0ba63dfd6bba",
        "cursor": {
          "ref": "aa7bcd78-3226-4b79-beea-955345d699e0",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "88b18151-c68e-4c0d-8bab-6c49f98bd4e5"
        },
        "item": {
          "id": "6eb56fb1-0709-4c5c-9a66-0ba63dfd6bba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "af4d1435-5e39-4e9e-b92e-a0d72282e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3017351b-d49b-4611-9be0-d37852a4d01b",
        "cursor": {
          "ref": "23a0c686-772a-4733-b6cc-fda493168b39",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea20b090-0366-4375-b15e-faf333e52be1"
        },
        "item": {
          "id": "3017351b-d49b-4611-9be0-d37852a4d01b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b8774503-48bb-4ee0-9cb4-dd6092442e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86672d5c-e035-4a1d-81d6-29ddd73348e0",
        "cursor": {
          "ref": "790d6fc0-13ee-4025-af43-d12201c052d8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3fc77269-d262-4052-bdd7-b5dd249de585"
        },
        "item": {
          "id": "86672d5c-e035-4a1d-81d6-29ddd73348e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e2883fb4-d957-4aaf-bdd9-588f53af0536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c007d-ee7a-48cc-a7b8-d142c0508aa5",
        "cursor": {
          "ref": "7ca41ee3-381e-4cea-ab5c-b1da3ccf3782",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9b6b8c38-c908-43fc-9d2b-28e1a59e01f8"
        },
        "item": {
          "id": "8d8c007d-ee7a-48cc-a7b8-d142c0508aa5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4fea6176-c117-4046-9783-d920e97f6a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b648f3d-4931-49be-9141-058c3ffae4dc",
        "cursor": {
          "ref": "255c6468-3c6c-40f3-a480-ca07adb522fb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "768337fe-55df-4ee8-b64f-cfa8a1c02411"
        },
        "item": {
          "id": "2b648f3d-4931-49be-9141-058c3ffae4dc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f9f1f95-117d-4ad8-92c0-313173e1a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594df1a3-0619-4e6d-89eb-7d7b0406e9d5",
        "cursor": {
          "ref": "25d9fc39-93b5-498c-8413-e609ff5042ac",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "680e49e8-c29c-4670-a670-bcde210d995f"
        },
        "item": {
          "id": "594df1a3-0619-4e6d-89eb-7d7b0406e9d5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1cc36ed6-1b0a-49e7-a7e8-e437cc710a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694abb5-580f-400e-8e56-63847e24be01",
        "cursor": {
          "ref": "ed416da1-3355-4b5d-a71a-ae4fdba0481e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b80a7a0b-9014-480a-be78-b97529597b40"
        },
        "item": {
          "id": "c694abb5-580f-400e-8e56-63847e24be01",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "86b1865e-bc85-413c-8d93-141b058ca96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9a6485-658f-4e30-b54b-73fd9956d0d5",
        "cursor": {
          "ref": "15f6b74f-cf79-42ed-b996-8a7ce102a0b9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7f883274-d672-431e-b8cb-7ecd71cfae57"
        },
        "item": {
          "id": "0c9a6485-658f-4e30-b54b-73fd9956d0d5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3b281a3-f507-45fc-98e2-e8375e61b564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1988cb87-a759-42f3-aedb-2dbb55d15e85",
        "cursor": {
          "ref": "0538052a-a751-4c6f-9108-0e91ff892cf3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "80fc7e2c-6d2c-48c7-8880-b52b6106bc27"
        },
        "item": {
          "id": "1988cb87-a759-42f3-aedb-2dbb55d15e85",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8c406085-2376-47b6-bd44-7f3f69ba9a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf42aac-822c-43aa-8dcc-a2feac168c92",
        "cursor": {
          "ref": "9453eff9-46fc-4e8f-a11b-e768790045a8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8335b3df-8a03-4222-b615-33d8d1e84313"
        },
        "item": {
          "id": "8bf42aac-822c-43aa-8dcc-a2feac168c92",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ec5dbd8-44cf-48ff-9878-a68477675985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3876122c-9714-43d3-b275-96191fae7a29",
        "cursor": {
          "ref": "bd40c813-e400-4f5f-ad35-e355ef17f80c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "616416ea-ef89-47c1-80ff-6e8237d67863"
        },
        "item": {
          "id": "3876122c-9714-43d3-b275-96191fae7a29",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d096e878-5bf4-4fa5-ad5c-f30c6280bdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c0e1cc-0214-4d9e-8138-108044362469",
        "cursor": {
          "ref": "65205dcb-bd66-4451-bbe7-784dd0ee3924",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8b016a6e-0864-48aa-8619-deb3504e8560"
        },
        "item": {
          "id": "17c0e1cc-0214-4d9e-8138-108044362469",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a74e109-1dff-4115-b5f3-6c97351f9647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfca576-8722-41e1-83db-e111e05cfed1",
        "cursor": {
          "ref": "7c278d8a-7c93-4a10-a624-8043e89ab52e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7b9f01ec-5da4-46e5-ad71-bf112a907f9e"
        },
        "item": {
          "id": "5cfca576-8722-41e1-83db-e111e05cfed1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "200f4b94-f2b8-45a5-89c3-c542ce8ef807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37acb50-e905-44eb-924d-8e34e2cc8266",
        "cursor": {
          "ref": "6ed90314-0b39-4707-bc68-fd08304b4391",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c66e9fcc-8089-4b51-859d-dbc321ea59e7"
        },
        "item": {
          "id": "f37acb50-e905-44eb-924d-8e34e2cc8266",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f18201e-2044-4cb1-ae6d-d43af9a58ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034dfdb5-bfa7-45cc-b1da-25a07f783835",
        "cursor": {
          "ref": "16a2fc93-c21c-44cb-a536-1af9c665a9c7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "03b729c1-2c52-4de6-a71a-c6e9d84436f6"
        },
        "item": {
          "id": "034dfdb5-bfa7-45cc-b1da-25a07f783835",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "24c17dbb-fa10-43d2-82ed-ec6835be93cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f5aef1-5d40-4aa6-aa7e-004a45f76b6e",
        "cursor": {
          "ref": "c25253bc-26d6-4363-9b25-74078b86fd9d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fb08f0ec-99fc-4761-bec0-31e6638a67c4"
        },
        "item": {
          "id": "36f5aef1-5d40-4aa6-aa7e-004a45f76b6e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "530b3c62-e3ea-40ed-9a18-c415283583b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d4d7ef-43e1-4fdb-8b03-deb452badfcf",
        "cursor": {
          "ref": "4dacd1c7-8d24-466a-9e3a-49d4af283318",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f1ff8522-d08f-4f7e-a068-16c3ddaae271"
        },
        "item": {
          "id": "89d4d7ef-43e1-4fdb-8b03-deb452badfcf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0bae748a-f154-45b2-a63b-a09294686429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc6fd7e-c4e3-4326-853d-0a55fbb8b7a3",
        "cursor": {
          "ref": "2df1d7bf-52c6-4ade-89db-82788dc0dc87",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4512a31b-14c5-45fa-9c17-27441bd36503"
        },
        "item": {
          "id": "dcc6fd7e-c4e3-4326-853d-0a55fbb8b7a3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "69c293ac-2ba3-4477-bf7f-bb5bc61294cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa47390-a7ba-4c71-ad59-5cde6b4ec29d",
        "cursor": {
          "ref": "be7a42f4-168a-40fb-a3ca-0404e6edde03",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f68ef95-0666-401a-96ba-ebf1fe3a5540"
        },
        "item": {
          "id": "aaa47390-a7ba-4c71-ad59-5cde6b4ec29d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "444369f5-6d68-4c4e-9d4c-6f6ee8bb1d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d41ae-258d-453e-afb8-caaf1c5e813f",
        "cursor": {
          "ref": "c0650659-9960-4443-a33a-9f1ff0fe929d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "567c4964-890e-4116-8c36-a3e4cfe35982"
        },
        "item": {
          "id": "0d8d41ae-258d-453e-afb8-caaf1c5e813f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "06b3dbc5-5a50-40b7-a21b-8e5798d5589a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf386955-ce6b-4ff8-ba3d-42ab1a26e122",
        "cursor": {
          "ref": "7c0315c6-43a1-479a-a7cd-eedecf1d38bb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "13549ed3-88a4-47ea-b4de-595472c706bc"
        },
        "item": {
          "id": "bf386955-ce6b-4ff8-ba3d-42ab1a26e122",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d4674f3b-0006-4017-b05c-9d92f6bc14c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4880b237-3782-4a37-a475-63546d125e39",
        "cursor": {
          "ref": "f12751af-7b7f-4cae-8287-3b8e3cc9ea9b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e3f14342-112c-4d29-aff4-b4f284901d70"
        },
        "item": {
          "id": "4880b237-3782-4a37-a475-63546d125e39",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "99cfdbd8-303f-411f-b7dc-747aa190d9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e943f87-e23d-4018-8ca4-a4bf0b2f751d",
        "cursor": {
          "ref": "7820f131-25dd-44c0-86bc-3b8f48946c96",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "28a688fd-059c-4378-a200-13e1ab3c6609"
        },
        "item": {
          "id": "8e943f87-e23d-4018-8ca4-a4bf0b2f751d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "23c293b1-a0b2-4a67-b9a5-6a74d155a499",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38197f14-f4f3-48d2-9f19-170879ecb17a",
        "cursor": {
          "ref": "d98b5def-6ed8-49b1-b0b5-be8d0e299a2b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b033b7eb-619b-449e-90de-b0933e529173"
        },
        "item": {
          "id": "38197f14-f4f3-48d2-9f19-170879ecb17a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd4cda87-306f-4864-a1f1-f608d0eb5672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c360c1-fab8-45b1-8a08-5acc07f9a982",
        "cursor": {
          "ref": "a19a3904-48c8-4cd0-9c79-2cb64c7b95fe",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "968976c1-46bb-4595-b500-be4d95798f16"
        },
        "item": {
          "id": "c8c360c1-fab8-45b1-8a08-5acc07f9a982",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f4b5d602-ea68-4085-84e0-d5cf17b075cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb6e66e-74ac-4d74-bfb6-23636c6687e6",
        "cursor": {
          "ref": "4fa3c79e-816d-460d-84db-b04277611327",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cc5193b6-a868-44db-9c23-cc66b932de2c"
        },
        "item": {
          "id": "afb6e66e-74ac-4d74-bfb6-23636c6687e6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "68bbeebc-3e9c-4bed-94ab-5f4587d1063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e9f0e3-b7b3-4a6b-9a9a-2a5f8003527f",
        "cursor": {
          "ref": "ee374da0-f170-4771-90e7-a8c8f88e48b6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e9eb1bb-b7eb-4191-b563-4a467ae07a89"
        },
        "item": {
          "id": "e6e9f0e3-b7b3-4a6b-9a9a-2a5f8003527f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d52f6add-0f00-4c0f-a066-05a3dcb70c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae5574-a2d1-4350-941f-67c508b1b2ef",
        "cursor": {
          "ref": "456dd752-195a-45ea-a6a2-447388ebd569",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6c86d3cb-f37e-45a0-8cf0-8076307c244c"
        },
        "item": {
          "id": "48ae5574-a2d1-4350-941f-67c508b1b2ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c98045fa-68d7-4b5a-bd3d-94dbaa927506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af3669-25fc-4528-a22e-8feaf473d24d",
        "cursor": {
          "ref": "583a981d-3919-4769-a5a0-f5eca65536ed",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c4defb3a-98ca-4467-852c-2bfdfa77805e"
        },
        "item": {
          "id": "f3af3669-25fc-4528-a22e-8feaf473d24d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f238e1ea-2445-4b4f-be34-03d4d190e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cb7813-dc6b-49bb-9242-9cb9c5d2ffa2",
        "cursor": {
          "ref": "2b5379d9-868a-4ecc-8a90-99f1d3932752",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "69f6d431-d668-4279-914e-cf86a201e873"
        },
        "item": {
          "id": "29cb7813-dc6b-49bb-9242-9cb9c5d2ffa2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "efd6fbf5-3246-41f1-96f8-a1f50e344554",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 330,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2495e9bf-d032-4ace-956b-690fb9609b4d",
        "cursor": {
          "ref": "5ae7a4d9-1c87-441f-8864-d6cf8a8eeb38",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f3feed93-743f-4755-b46d-37a4dc2ff838"
        },
        "item": {
          "id": "2495e9bf-d032-4ace-956b-690fb9609b4d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "54f9d637-a908-4d9a-a221-409d27a8ec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3446b789-641a-465d-8874-35ca37996a13",
        "cursor": {
          "ref": "4f975779-a6f9-4b37-970a-714ff567b85d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e034d50d-1f37-4457-a734-3080dede1e95"
        },
        "item": {
          "id": "3446b789-641a-465d-8874-35ca37996a13",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5aef747f-b615-4bae-96b5-69894c68f122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1ec4a3-b826-4b49-ae6d-2eed96a08e7c",
        "cursor": {
          "ref": "c679a4e0-e34d-4533-9ee3-e26aef13a3dd",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4c0baf16-2d36-483d-8cb9-acd0ac4eb7da"
        },
        "item": {
          "id": "4e1ec4a3-b826-4b49-ae6d-2eed96a08e7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "54df5128-abec-4b09-8521-fbed26ded68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f2e2f1-77d2-46cb-b82d-ff510449d007",
        "cursor": {
          "ref": "2c5e9ea9-f104-4c93-bf05-0e72f9d52c57",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d18ef91a-adfe-402c-9a3f-f6bfbd67fae7"
        },
        "item": {
          "id": "30f2e2f1-77d2-46cb-b82d-ff510449d007",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4d50e89f-b3cd-4b35-9de5-d2eaa7bfdf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf88ffb-fccd-49a1-9bbb-bc1a3c877a68",
        "cursor": {
          "ref": "c3dfc9ca-81ce-4891-b387-c309a1be0179",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "499fa5e5-9547-47a2-a2b9-4742133d75e0"
        },
        "item": {
          "id": "8bf88ffb-fccd-49a1-9bbb-bc1a3c877a68",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bca15b3e-f47b-469c-8440-1610dd90eef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3c8f8a-674d-4772-8be8-0c4e42a88e3a",
        "cursor": {
          "ref": "cef51fce-64cf-4c55-8660-3956b3dbde86",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bb19cc8b-27c3-47a5-9843-33eb0ffdc2c6"
        },
        "item": {
          "id": "5e3c8f8a-674d-4772-8be8-0c4e42a88e3a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "097f5f43-16ef-4a99-a512-c4452ea7a2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40ecd63-a122-4504-a0e0-6357892e8591",
        "cursor": {
          "ref": "2e5d9384-95eb-47f1-8e73-99ce9db9e612",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3be327ca-2db1-447f-b956-3ab6db9b64ed"
        },
        "item": {
          "id": "f40ecd63-a122-4504-a0e0-6357892e8591",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "df0a0949-d1dc-4c6c-ad18-642f8f20af01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fced32-2853-494d-a95d-0ac700fedfe6",
        "cursor": {
          "ref": "10256854-8cd1-4f47-87e5-02ec50ea611b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fabffe0b-bfbc-49b6-9c7c-0ee420e131a1"
        },
        "item": {
          "id": "b9fced32-2853-494d-a95d-0ac700fedfe6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c6d5307-7806-4b0f-be23-3a7535eac221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92808940-b693-4516-bdd1-e24fbfebeb00",
        "cursor": {
          "ref": "0800c874-5140-409a-a0d1-f3194d97aa72",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "54990607-8720-49f7-acd0-b21550516c57"
        },
        "item": {
          "id": "92808940-b693-4516-bdd1-e24fbfebeb00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c9e8a60-e1ed-415e-babb-0f918f76e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377bdbca-2ec6-4d7f-a2aa-03e83623fe33",
        "cursor": {
          "ref": "042edea1-ff53-4dde-bae9-2d2c33f6fd7d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a8025826-6d47-4704-a795-2641fa13f85b"
        },
        "item": {
          "id": "377bdbca-2ec6-4d7f-a2aa-03e83623fe33",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d726b27-d9f1-498a-918d-73623dd4fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede23a97-ffd9-4bd1-93ac-bc4d6a40d4e9",
        "cursor": {
          "ref": "9023a971-2eab-4b13-8d73-4dce3be274d8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3c0394a2-edc5-4ee6-9f98-27f0f7d5424c"
        },
        "item": {
          "id": "ede23a97-ffd9-4bd1-93ac-bc4d6a40d4e9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cefaee49-45b4-4ea2-8184-d19666476022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6599c5-593b-427c-87d3-769217aeacbd",
        "cursor": {
          "ref": "200053cb-447c-464e-82b7-294635abbccd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "38b856b4-391d-4932-a39a-56ae5bf2f8bd"
        },
        "item": {
          "id": "ef6599c5-593b-427c-87d3-769217aeacbd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c28c28ac-5f84-41fd-8876-61aafdf4d8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3704b51-772e-4f15-b425-55212a9e2889",
        "cursor": {
          "ref": "b872035c-8c16-478c-90fc-8885a270d1e9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "96e93d42-9f16-4e57-8765-edfdd7a546c6"
        },
        "item": {
          "id": "c3704b51-772e-4f15-b425-55212a9e2889",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "93674f02-f5ec-4e98-97e7-2a1bd39b9841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a1b321-3ff9-4d13-88e7-8edb19da96f0",
        "cursor": {
          "ref": "9cfd1750-b7b2-44a8-851d-aa247c81476e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cfffc062-b8c2-4201-9366-334204430099"
        },
        "item": {
          "id": "11a1b321-3ff9-4d13-88e7-8edb19da96f0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "beaf506c-634f-417d-b67a-aa5746839ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a544b2f2-51d4-4f0e-b812-b14eed5aa8d4",
        "cursor": {
          "ref": "93fc4b53-8e09-4265-a5cb-284700d4cf4b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6943c0a6-79d0-42a9-84cd-dfa8110d5dd4"
        },
        "item": {
          "id": "a544b2f2-51d4-4f0e-b812-b14eed5aa8d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "208fbb2f-520d-4757-98cf-cd4cb09b0c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1f6c79-6362-413e-a45b-c97cb7b37d4e",
        "cursor": {
          "ref": "8d3145b2-f9e4-4bbf-9fc6-5866eb13a216",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "beabcf5b-86e5-4d66-9a4a-10b25c019497"
        },
        "item": {
          "id": "4b1f6c79-6362-413e-a45b-c97cb7b37d4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d212896c-da1e-4e5a-82e2-6ad5646762f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ed9d29-9823-4322-938a-acf345da11c2",
        "cursor": {
          "ref": "48ed9826-26fe-4966-91ea-5c0980d30a70",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb4439ec-e24d-4d0c-b855-acbe6b884b75"
        },
        "item": {
          "id": "c3ed9d29-9823-4322-938a-acf345da11c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "601b5a40-204c-487d-a127-7ee9fbe39799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81f9a89-bb20-497c-8cdd-4cbaa26e6a49",
        "cursor": {
          "ref": "be9fbc89-19e0-4c5a-83cc-faed10966330",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "28796d0c-9340-4f64-83a3-948a75b494f6"
        },
        "item": {
          "id": "c81f9a89-bb20-497c-8cdd-4cbaa26e6a49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0e91908b-d1ef-4927-8ab4-02680ecb498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00b32cf-abb7-4776-a4cd-3e1dcc487dcb",
        "cursor": {
          "ref": "99c88844-d236-4861-bf46-e9cc989470bf",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "19894c92-716b-446e-a612-4aeb2a5410cb"
        },
        "item": {
          "id": "b00b32cf-abb7-4776-a4cd-3e1dcc487dcb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "64bc1d76-fb06-4286-88b9-0d493d197221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e75d0d-2a32-43cf-98c8-ca6913ab7aa5",
        "cursor": {
          "ref": "ffa299db-4b79-455f-a544-faa1fc7360b3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "21c8ad4e-6772-474e-a4f0-79f6e5931745"
        },
        "item": {
          "id": "33e75d0d-2a32-43cf-98c8-ca6913ab7aa5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bbb19176-ec7d-458c-9cc9-3739fa6f2e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba05d9ac-529f-4a0c-8c7b-7a6c91512a2b",
        "cursor": {
          "ref": "8c74f710-9cd4-49cd-84e7-d96ce2f9b204",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "36590155-2ef1-4729-849d-4c8be50c68be"
        },
        "item": {
          "id": "ba05d9ac-529f-4a0c-8c7b-7a6c91512a2b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5d87477-e212-4dc7-b760-d9512d681ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cb7c00-7d6a-43df-8042-aa5497983177",
        "cursor": {
          "ref": "0868b2fc-c63e-4d71-b8c8-a3bdc2959a37",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a0397c9-12a6-43ed-bfd1-bdccfedd93d3"
        },
        "item": {
          "id": "59cb7c00-7d6a-43df-8042-aa5497983177",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9aabbdfc-ccd8-4e70-85bc-1d6cc9a1f212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3fd99-8a97-4ce0-9b66-459846dc3175",
        "cursor": {
          "ref": "e2b7b186-5b2e-4c74-ba8b-6ad28f602abc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fc35f88e-9db0-46dd-ad09-1ccef55bf4c4"
        },
        "item": {
          "id": "65e3fd99-8a97-4ce0-9b66-459846dc3175",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "12babd66-aabb-428f-b0da-7fd4b7729b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da93b19b-9053-4102-bd30-e200ca709e77",
        "cursor": {
          "ref": "9c27d604-31f3-4770-b899-e60301b9d650",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "66f03020-4c44-4536-acb6-4c971e9be49d"
        },
        "item": {
          "id": "da93b19b-9053-4102-bd30-e200ca709e77",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aa071997-dc9b-45af-a041-4ca0b1d074bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4078b78-88c1-41a4-ae26-9f4215b1ae08",
        "cursor": {
          "ref": "447da33d-a1fd-4edc-8e56-56e2c639c59b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "86d47671-cccd-48d8-b505-33e5421fe3f2"
        },
        "item": {
          "id": "e4078b78-88c1-41a4-ae26-9f4215b1ae08",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a6bd4b1-6bec-4cd8-aea0-7a691c680c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed34e995-eb45-462a-bab4-7bab7afc2d19",
        "cursor": {
          "ref": "6f54fe6a-f38a-45cc-816a-9942cdb03b4d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cd86189a-12da-431e-b99c-31e06c5df0cc"
        },
        "item": {
          "id": "ed34e995-eb45-462a-bab4-7bab7afc2d19",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9e7c61f0-ecd7-4596-89c7-ce83119372b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da185786-eb5b-4347-ad1a-36af6497f8d1",
        "cursor": {
          "ref": "d6f23d26-d27b-4f5e-a200-15757bdb3216",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "883a1dbd-905e-4f51-bd23-3df1779a75a6"
        },
        "item": {
          "id": "da185786-eb5b-4347-ad1a-36af6497f8d1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "afb08f4e-0161-42a4-b3ae-f5305d81d1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4e2561-6e38-416f-b171-ce982a5c4150",
        "cursor": {
          "ref": "23a1976d-5079-44f2-b0df-63272411c23f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fde9c923-e391-469c-aa26-bb12e87b7f92"
        },
        "item": {
          "id": "ff4e2561-6e38-416f-b171-ce982a5c4150",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5d30854e-24e4-4738-95c0-3cd0018e254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33945237-31a0-4843-8e72-db51f16eadaf",
        "cursor": {
          "ref": "42c5b8bd-72b1-40b5-be8c-6385e3c5d6fc",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8ffa0aa-2082-4cd9-aafb-f761f28fd44f"
        },
        "item": {
          "id": "33945237-31a0-4843-8e72-db51f16eadaf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "235c0d0e-112c-47e3-a4d7-3b3adfbb4b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e05914-1ec7-4ae4-97cf-9b055aa4f2be",
        "cursor": {
          "ref": "fbdf076c-3b27-432f-8797-7e8f892835cb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "982db95c-6168-4990-aafa-b0b1f5758194"
        },
        "item": {
          "id": "44e05914-1ec7-4ae4-97cf-9b055aa4f2be",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6ed15cd-5db2-40f6-aae8-e7610970f2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8b6000-f9c0-4504-9010-2bbffc150ac4",
        "cursor": {
          "ref": "3b6c4c52-9593-44c6-af7f-367c1d7a70e8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0fd8b20f-8847-4148-9f38-eecc438f2c34"
        },
        "item": {
          "id": "bf8b6000-f9c0-4504-9010-2bbffc150ac4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "de1d4661-3593-47da-92b4-90891f15666b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe79e4-8a0f-4969-a7df-00d286862132",
        "cursor": {
          "ref": "254c8741-2fab-4588-93a4-7927e4717295",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e2d7e70d-463e-4c03-9071-3bc21e0574dc"
        },
        "item": {
          "id": "8cfe79e4-8a0f-4969-a7df-00d286862132",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f10ba29e-57b0-4b5c-82a1-4b591917ca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04e03c5-f37e-4bb7-b86d-f0d5d3a011b1",
        "cursor": {
          "ref": "83180743-54fe-4161-a5a6-a149916292b0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b44eed3a-2c19-4dbb-84e5-59a6386ec5e9"
        },
        "item": {
          "id": "c04e03c5-f37e-4bb7-b86d-f0d5d3a011b1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1a7494a6-ebfd-46cc-9082-9e475cec4dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef08c97-a031-4822-8a66-e9ff276cf42a",
        "cursor": {
          "ref": "bfd1c960-8f84-4bb1-95bf-84faa86aad5c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de14533d-be9c-403c-b5c5-c9df56ba1ece"
        },
        "item": {
          "id": "5ef08c97-a031-4822-8a66-e9ff276cf42a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bb209612-0188-4d27-adf3-86436205b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7348013-58ad-434f-81e8-b7edf7775d43",
        "cursor": {
          "ref": "71ed97b4-3b4a-46ad-821a-23e96246d1a4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf0bd584-ba7a-449b-9b1c-e229b0a00e29"
        },
        "item": {
          "id": "e7348013-58ad-434f-81e8-b7edf7775d43",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d27ac1a1-531f-4fc7-9993-12d0d8e7adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff2021-01a6-4653-99c2-581441f750ff",
        "cursor": {
          "ref": "402f8fb7-fad4-4e84-a675-2fb2aa7f269c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c76fcec-8660-4ed9-99de-20a1ed1363ad"
        },
        "item": {
          "id": "63ff2021-01a6-4653-99c2-581441f750ff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "66b38d63-4654-4126-b8d6-62ec903be7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966bf1ab-23bc-4171-86e8-800b17fa78be",
        "cursor": {
          "ref": "02dbf94d-5557-4e3b-a78d-2cda6065d0b6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ca12e678-7661-43c8-a520-7f38e36103a4"
        },
        "item": {
          "id": "966bf1ab-23bc-4171-86e8-800b17fa78be",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "33353536-3629-4840-b36b-120f3774a101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d9549-2143-40ca-ad5b-53b60f413ff2",
        "cursor": {
          "ref": "8c478188-daff-40ed-a343-f62740c6c11a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1b764602-31a3-4348-85f5-851f4ca7e82b"
        },
        "item": {
          "id": "bb7d9549-2143-40ca-ad5b-53b60f413ff2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1f51d7c6-e99c-49d5-afc3-8e0d26f01e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50517197-a73a-4427-937b-14aff43c67e3",
        "cursor": {
          "ref": "612c6bf3-83dd-43b1-ad97-7d9a9cca7946",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "50681e29-6480-4f9b-8975-49beb963d452"
        },
        "item": {
          "id": "50517197-a73a-4427-937b-14aff43c67e3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d86112fa-b98a-4f1a-a0a9-c50f2343761e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50481de-2cda-4692-9712-68251c052757",
        "cursor": {
          "ref": "fae4d511-ee43-46cd-9349-99d6c9f39142",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5775f041-5c01-477c-a06e-5e0fb75b8480"
        },
        "item": {
          "id": "b50481de-2cda-4692-9712-68251c052757",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cfcbce43-5e80-4b68-ae8d-09e019932e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be457ac1-72a1-41d9-ae5f-b832c71df162",
        "cursor": {
          "ref": "510bae27-459a-4b24-b050-9903602ff146",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "256d82ff-8dd4-4477-9a2d-636c952c47f8"
        },
        "item": {
          "id": "be457ac1-72a1-41d9-ae5f-b832c71df162",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "667b335f-cf56-406c-95c0-755ae0b7ddbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b1912c-2766-45f6-985c-97e6230c5443",
        "cursor": {
          "ref": "aa200025-2532-4192-b615-6e49fffaba1f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "73d4385f-aae9-4244-a2ba-cd620738f0f8"
        },
        "item": {
          "id": "36b1912c-2766-45f6-985c-97e6230c5443",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d5f1494-6c5a-40c8-846e-62707c4e2011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3ebc82-cd6e-4dd4-aa64-1b68cc4978b8",
        "cursor": {
          "ref": "9a41ac85-036a-4f28-9722-42e076a7efb5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e210a6f8-fbf5-4c13-8890-c52bbaebfee8"
        },
        "item": {
          "id": "ae3ebc82-cd6e-4dd4-aa64-1b68cc4978b8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "564a3dbc-f4eb-4a56-b3a0-d3315ab2d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920ec7e-c1bd-4cca-a74d-25fee4bde35a",
        "cursor": {
          "ref": "c82b53f6-858b-4423-90e8-74ff315f47d7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc726a13-cb66-4c68-8cd5-ced330371940"
        },
        "item": {
          "id": "c920ec7e-c1bd-4cca-a74d-25fee4bde35a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d60e22a4-653e-46b2-8282-64f10347c331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ae840-3f60-4364-973d-baa10af32e73",
        "cursor": {
          "ref": "0455eb99-9d1d-4ad8-97b3-cbbc5cca2708",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79fcc2eb-48e6-4b29-ac2f-3d8b10b6b86f"
        },
        "item": {
          "id": "867ae840-3f60-4364-973d-baa10af32e73",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ae0d53fb-43c2-46b0-943e-b891b64dd697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6225edc5-466b-45fc-b06a-79721f4a7e6b",
        "cursor": {
          "ref": "f4078ccf-8bbe-4b03-b90d-99d973101218",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aaaaef44-e431-4b01-9fef-bda83476c426"
        },
        "item": {
          "id": "6225edc5-466b-45fc-b06a-79721f4a7e6b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0c67a437-dd6b-41a4-9b65-6b497b5bae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c07de2f-6505-415f-a359-df0c7bf6780b",
        "cursor": {
          "ref": "167f17d1-54cf-471a-b7d7-7e4ca455d09e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1a8b1a80-366d-4da9-9e56-dc2bb4377075"
        },
        "item": {
          "id": "1c07de2f-6505-415f-a359-df0c7bf6780b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4ced1fd7-6b8d-494d-939a-fd5be7238e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8660202-3e97-4e46-84bd-f13018c51b11",
        "cursor": {
          "ref": "fd47eebe-4cf5-44d8-a758-c54c1383266f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "91ea2f73-24a2-470e-b0cd-f2f96f4f3302"
        },
        "item": {
          "id": "c8660202-3e97-4e46-84bd-f13018c51b11",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "686c9810-0914-476a-b09c-3d7f8219ecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e90ca6-3dbf-46e6-82d7-1cebf37f2791",
        "cursor": {
          "ref": "e23a9b64-10ae-4ae5-bbb7-a56b3de9b8dc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e24ee0ff-39a8-4799-8ec0-8ddd67d6dfa1"
        },
        "item": {
          "id": "a5e90ca6-3dbf-46e6-82d7-1cebf37f2791",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "71104cc0-51a0-4b0c-b30a-d47ba6bd2fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e07affa-1d1e-4c2e-82a8-75ff4ed47485",
        "cursor": {
          "ref": "814e642b-6b86-4889-a27b-968788e6a995",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9a67f6cb-c722-48da-a358-ba77199c97c5"
        },
        "item": {
          "id": "7e07affa-1d1e-4c2e-82a8-75ff4ed47485",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "726f6cc3-999a-4c0a-b0a2-f64e8c2d3ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02123c0c-4c1b-4fea-88a6-954b415f214c",
        "cursor": {
          "ref": "d8111ba7-3c51-4c6f-be90-5ad5f5938458",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "38c0b001-ae9c-4f6b-82b2-0a93e7712b10"
        },
        "item": {
          "id": "02123c0c-4c1b-4fea-88a6-954b415f214c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "430e77ba-f44f-4a15-80cf-02337e859bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9496f974-7a9a-49ad-a12d-fbf579f3772f",
        "cursor": {
          "ref": "68d3c3df-a630-48cb-8d67-37032cef027a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c30292bc-525c-4f71-914a-c1cc883a6458"
        },
        "item": {
          "id": "9496f974-7a9a-49ad-a12d-fbf579f3772f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "edfcc44e-01bd-4cd0-b012-c204a553f5d4",
          "status": "Created",
          "code": 201,
          "responseTime": 2942,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e575f03e-d209-4662-b424-ab9c25e872d8",
        "cursor": {
          "ref": "1a108287-ac3f-4ee8-b1fe-e8905678e319",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c92d9e99-6852-49e2-a2b3-65d712baf12c"
        },
        "item": {
          "id": "e575f03e-d209-4662-b424-ab9c25e872d8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a9b1f52e-bcb7-4815-ac8c-0979fce9f7e4",
          "status": "Created",
          "code": 201,
          "responseTime": 2136,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e0946a-639d-45f9-b9b6-ef494bebe2e1",
        "cursor": {
          "ref": "bafc3a1f-e381-41ea-91ac-3afbc2eb35a1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b959ab39-ded6-4de2-a644-c5588ce69446"
        },
        "item": {
          "id": "49e0946a-639d-45f9-b9b6-ef494bebe2e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "237a41f2-18ae-4caf-99f6-2fda8d457742",
          "status": "Created",
          "code": 201,
          "responseTime": 2112,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "025bf317-b668-49d1-91ef-0ca665fbd4dc",
        "cursor": {
          "ref": "79e4cafa-07fd-40b0-892a-1ab4f2c67d45",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f59b1c00-6ca4-42aa-90fb-44aaa9c8af99"
        },
        "item": {
          "id": "025bf317-b668-49d1-91ef-0ca665fbd4dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c12d8ff3-f236-448d-b7a7-567e90df0e57",
          "status": "Created",
          "code": 201,
          "responseTime": 2722,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ff445-91f6-41e0-a8cb-1d61979c747e",
        "cursor": {
          "ref": "ee8dfabe-35b0-4c69-94f0-fab5087cecb3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "088b4511-98ef-45af-98c2-0d42d9cae958"
        },
        "item": {
          "id": "0a0ff445-91f6-41e0-a8cb-1d61979c747e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "91e414ee-861f-462e-81e8-b13d982d6bb5",
          "status": "Created",
          "code": 201,
          "responseTime": 1934,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23a181-93c7-4033-baf1-09ffbef505c0",
        "cursor": {
          "ref": "1c56626f-8f91-417a-912c-5407448eca44",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7cfdb64-dc23-4d58-a81b-2c8b1a024bca"
        },
        "item": {
          "id": "4e23a181-93c7-4033-baf1-09ffbef505c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8821c502-d7f9-4045-8e98-5564c601af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e3427128-7b22-43e8-a312-fccc876eb72f",
        "cursor": {
          "ref": "8039665e-789b-48f3-ba0a-9b45de4afba4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9437131-a6af-465b-a04f-7b2e59e96106"
        },
        "item": {
          "id": "e3427128-7b22-43e8-a312-fccc876eb72f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91688bbb-ef00-45d1-982d-7fe48771d1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437afccb-162b-48a9-9cfa-dab166885081",
        "cursor": {
          "ref": "7086c8b7-6ce4-4a28-a236-f98e86d0d953",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "32753938-1b21-4d31-b01d-75126f23fa76"
        },
        "item": {
          "id": "437afccb-162b-48a9-9cfa-dab166885081",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0988778d-f943-4923-994b-3147cd8c119b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef956d47-43e0-469a-bf4a-d5097de5e20f",
        "cursor": {
          "ref": "36adea22-cde8-44f7-ab32-4ca73eb42c96",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8bd73c89-9f23-4e99-a285-4d3df48eb9c2"
        },
        "item": {
          "id": "ef956d47-43e0-469a-bf4a-d5097de5e20f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1c6913f4-9c09-4a3f-9fcb-ebbaa1a87116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ade26-1c96-4e85-8b2c-345a1f8a39f6",
        "cursor": {
          "ref": "17abfc3d-9036-4512-9642-2096bce913a3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "02aca5ec-d021-4dc6-bf01-e0ccfcf36a9d"
        },
        "item": {
          "id": "842ade26-1c96-4e85-8b2c-345a1f8a39f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91e177a8-318e-445d-9b8f-1c8bf55c2b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce342fa6-826f-4db1-9ebd-7e980e6a3090",
        "cursor": {
          "ref": "ed3b912d-cd34-4bc0-9576-0bcbfe106036",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d1fb491-2a70-4c6b-ac32-2d0425a7ff77"
        },
        "item": {
          "id": "ce342fa6-826f-4db1-9ebd-7e980e6a3090",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad9b0f64-b985-45e0-9968-55cd0e546e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58062f-1836-4303-87e6-1af21661ec4d",
        "cursor": {
          "ref": "d519bbb8-cc45-40de-b51b-c6fa974cf125",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e80e4699-c583-43e3-8b2d-19f971cd97da"
        },
        "item": {
          "id": "0e58062f-1836-4303-87e6-1af21661ec4d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74dcf4e9-b992-40db-a44f-a3a8bda7feff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f2b283-6795-4a40-b785-7cdb1574762a",
        "cursor": {
          "ref": "d18eddcd-07f3-45f6-9379-ca1488c9903a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e81467c8-d0bc-48de-a389-7eb00b887015"
        },
        "item": {
          "id": "f7f2b283-6795-4a40-b785-7cdb1574762a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea3b68c5-dc90-44d8-840a-9c9be5a1b5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f305a71-1d54-4ec2-afb1-49ea4357eb32",
        "cursor": {
          "ref": "d5a9a85f-06fc-4bb8-8704-4c6c8ee70903",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89e5576a-8e62-4b09-8238-94a15ff4a612"
        },
        "item": {
          "id": "9f305a71-1d54-4ec2-afb1-49ea4357eb32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f0182f2-f9a7-4e6c-bb7e-e618e2f0b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee8b3dc-8b79-4209-9817-9aa61efde056",
        "cursor": {
          "ref": "7e75e580-45e5-4eb9-b32e-ca42db79afb7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "27e327a7-c25b-4683-9dab-9876879910b2"
        },
        "item": {
          "id": "fee8b3dc-8b79-4209-9817-9aa61efde056",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c08c7394-a27a-45d2-8915-5a87f09b3cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11b6540-dd34-4565-939a-c26a326fbbd9",
        "cursor": {
          "ref": "7a749093-9806-4f58-b3c4-d99b3fb8898a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "18077c45-7d08-441b-bfbf-6b2c4009e16c"
        },
        "item": {
          "id": "f11b6540-dd34-4565-939a-c26a326fbbd9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "71f768e3-d495-4937-be46-9c92f0ac85a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec75439-f375-4026-91b2-73a6d709d685",
        "cursor": {
          "ref": "d473e754-2126-428c-a25b-879f6e28910e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7a18fdaa-363f-4678-a3a7-8abe2c694c6d"
        },
        "item": {
          "id": "1ec75439-f375-4026-91b2-73a6d709d685",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0bda2269-5495-4bd0-9c46-8af6d94da046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2a8552-ccce-43fa-9961-dbcae2758c5e",
        "cursor": {
          "ref": "a766dfaf-c980-4768-9644-95b4e064c8db",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f8edf4b7-def1-4935-9540-0ed932fbe06f"
        },
        "item": {
          "id": "2d2a8552-ccce-43fa-9961-dbcae2758c5e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d0712929-f3fe-4f3c-b51f-7bdaf0ce51b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5491e73-eb64-4e41-86ae-7928b919a025",
        "cursor": {
          "ref": "53c3681f-14dd-4bc2-9090-83f59cb245d2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f8a4e41c-132c-41ca-8ad4-f62b9f3f9c5e"
        },
        "item": {
          "id": "f5491e73-eb64-4e41-86ae-7928b919a025",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ae746e9-4ab0-4c4a-990e-15e3c0e881ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5c55cc-3457-41e9-986c-f3013d090f5c",
        "cursor": {
          "ref": "17238981-e597-4b27-8768-3256a6c8b7e2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a8bf011e-4ce7-4194-ae5f-da092fc72a49"
        },
        "item": {
          "id": "9c5c55cc-3457-41e9-986c-f3013d090f5c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a6c9a5f-e7fc-4783-b476-496c4100662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4090061a-58c0-49a8-8229-3c754234e79e",
        "cursor": {
          "ref": "f680c40f-2f88-4296-b501-52ce80a34b87",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11bb4f4a-a0cd-49fd-9452-bd92e2ab2e26"
        },
        "item": {
          "id": "4090061a-58c0-49a8-8229-3c754234e79e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "211cc61d-2c2e-4262-9551-03d21c9062e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dbbe8a-579b-439b-8e7e-3a49825de458",
        "cursor": {
          "ref": "691e878d-8ae3-4d52-8ed1-e8d0eddd2504",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5532edc8-91c3-4a1e-ac7d-a0ffa83b08a1"
        },
        "item": {
          "id": "c5dbbe8a-579b-439b-8e7e-3a49825de458",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a8d06bee-f4ff-4622-92b1-cdbd29bcaf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5c39a2-45df-44f3-99dc-e4763f87a93c",
        "cursor": {
          "ref": "1f1685be-b1a7-4906-b02c-aa84f70eea4a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fd215e42-b7f8-41df-9820-1778fc8fea91"
        },
        "item": {
          "id": "5d5c39a2-45df-44f3-99dc-e4763f87a93c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ae41cb8-906a-4b93-8721-aeffb04a275e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b95cf28-5f68-4308-8106-82a98d220e8d",
        "cursor": {
          "ref": "df69775c-9544-47ee-9394-e268fa71d7ef",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0fa8e527-9903-4124-ac5f-4bde082747fa"
        },
        "item": {
          "id": "4b95cf28-5f68-4308-8106-82a98d220e8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8d9652a7-588b-4c01-a594-f0cfd9596967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03e1f51-0286-4840-8df7-79f9818147e9",
        "cursor": {
          "ref": "90b28e5b-f892-4ac5-a016-11541addae75",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ec6def62-5ec5-4fca-9a3e-95925d97252f"
        },
        "item": {
          "id": "b03e1f51-0286-4840-8df7-79f9818147e9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "692f5572-ff69-4efe-b8c5-527b82d34d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a713e-e455-4c2b-88b5-0088cb7b2aab",
        "cursor": {
          "ref": "7b1103cb-8514-4029-b132-9972e82b7cb1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec6a6e23-c138-4671-9540-f80becc2e1ad"
        },
        "item": {
          "id": "705a713e-e455-4c2b-88b5-0088cb7b2aab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aab7c67c-3b4c-46fa-a952-81044f925af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7b3cff-cb07-49b7-95a8-02fac5b08f2c",
        "cursor": {
          "ref": "af08c013-977c-45c3-b0d7-c0ba26ec47ae",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "79e985b3-1a01-4492-9063-b2e07000642a"
        },
        "item": {
          "id": "cc7b3cff-cb07-49b7-95a8-02fac5b08f2c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9311279a-c914-495f-9014-731452e69b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5abfa02-cd88-4b09-8024-3afe50751154",
        "cursor": {
          "ref": "701f07a4-6316-4f04-84b5-d999b0e13f45",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05b832fc-9747-4de3-9d42-1f87fa4dda65"
        },
        "item": {
          "id": "e5abfa02-cd88-4b09-8024-3afe50751154",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "15b3d266-5a99-4a32-a728-358c9a6b4e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77cfaa7-3784-4daa-9223-ec0c79d19e71",
        "cursor": {
          "ref": "7ad30887-b8e8-452f-a52c-53ecd7af5f87",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "05a6d404-d2c1-4a84-87e9-db931b556df6"
        },
        "item": {
          "id": "d77cfaa7-3784-4daa-9223-ec0c79d19e71",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65ca16a7-23f9-4d99-917d-cc69334c8a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ffd34-2b49-4bcc-8cb1-2039b31aaa40",
        "cursor": {
          "ref": "3f586d0b-0104-4b93-afa4-b0388a89331b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1853ea35-9096-4f44-a0d3-c309c83276c0"
        },
        "item": {
          "id": "b98ffd34-2b49-4bcc-8cb1-2039b31aaa40",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c2c39620-563b-439f-aa93-603cc5d34856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a07db-a5ab-4522-86f4-ab4a234da643",
        "cursor": {
          "ref": "4da38925-f2d0-4f86-b9eb-0827d32f9a20",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a12518b7-425a-438b-b213-408add779bea"
        },
        "item": {
          "id": "6e0a07db-a5ab-4522-86f4-ab4a234da643",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9730592c-c901-490f-871e-5e246e793ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf8745f-32ae-4849-a6dc-5c4eac48abff",
        "cursor": {
          "ref": "8380a73c-7e41-43c8-b3fe-147d9a05e363",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "082202a5-b9c8-4262-bfff-86e50cc1768d"
        },
        "item": {
          "id": "fcf8745f-32ae-4849-a6dc-5c4eac48abff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "619994f0-8388-45ba-aac9-b058e2731ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9289b6-9251-46ce-8e5e-2eb3a8eef81e",
        "cursor": {
          "ref": "9162b144-a5c2-416c-8d83-c5d7b7da7474",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "54b71aba-453c-420d-bc05-73531b04852e"
        },
        "item": {
          "id": "ae9289b6-9251-46ce-8e5e-2eb3a8eef81e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e14b7bcb-558f-4a91-a9f8-6a1d5ab48679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02478f-7008-45f0-9f93-efdbbc2b592c",
        "cursor": {
          "ref": "677d1ec7-2462-472d-bf42-4921b002f57a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ab9ea8c6-28b2-421b-ab36-03fd3e05dfaf"
        },
        "item": {
          "id": "1a02478f-7008-45f0-9f93-efdbbc2b592c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba50e4df-2c58-47ed-8c6b-94dad8cc2158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c2bcc9-f5e7-4223-8976-781e2f46dbec",
        "cursor": {
          "ref": "75494793-00a4-44cf-90a7-c371f6dfcb01",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7a979ae6-9e97-487b-8d63-69a3c33fce50"
        },
        "item": {
          "id": "d9c2bcc9-f5e7-4223-8976-781e2f46dbec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2506c0bc-4e06-40cf-b02b-4ace18c803d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc181545-a8d9-4e05-80fa-2fba5fdab51d",
        "cursor": {
          "ref": "ea077931-ed10-44c4-97b8-6f5df812d5a4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1deb38bc-fad0-47b7-9c18-a115d7f2a0ff"
        },
        "item": {
          "id": "cc181545-a8d9-4e05-80fa-2fba5fdab51d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4c6fcfe9-f7dc-483f-b395-94fa6d84664e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a63a7c9-c42e-4d8b-b119-75a81f550a8e",
        "cursor": {
          "ref": "e969d207-20f7-4e08-bb7d-b1db8772792b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1440aefe-56ff-406a-a450-5d02712134ce"
        },
        "item": {
          "id": "6a63a7c9-c42e-4d8b-b119-75a81f550a8e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27c14f50-07ca-4b87-b540-c869f5a589de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e23009-2e32-41a5-92d9-328001442c2a",
        "cursor": {
          "ref": "a650e2da-5c30-4d6c-b011-8b06fd0fedfe",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f71cc9ae-6e87-4334-b096-05a3d1844bf2"
        },
        "item": {
          "id": "17e23009-2e32-41a5-92d9-328001442c2a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d517869-6802-4da3-bd6e-cfffdb94ec9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c7faf8-340b-487f-a590-8613612ee78d",
        "cursor": {
          "ref": "c2183d47-74f4-4cf1-8902-0c9a80fce7d7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e5a4698f-84a1-46f9-9f08-589ddf63ee1f"
        },
        "item": {
          "id": "c3c7faf8-340b-487f-a590-8613612ee78d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41d1e5c0-4f47-48a7-8eb8-dcdbaf9a57c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fc2d44-4803-4f1b-b16e-fb9c850f1d2f",
        "cursor": {
          "ref": "1fa662b2-d6b5-4c7b-aa7d-3ac0661c2cd0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c51de603-abbd-416f-b2b6-a1b617a5641b"
        },
        "item": {
          "id": "d9fc2d44-4803-4f1b-b16e-fb9c850f1d2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d24e3b63-95ee-4979-8171-960831e7250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd90e9f2-7679-4e1c-b553-2eaca62a5dcc",
        "cursor": {
          "ref": "fb49afac-6aa3-4184-b392-8ce2da1e05b0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4622f41d-e1dc-4e5d-af7a-87500adfebbd"
        },
        "item": {
          "id": "cd90e9f2-7679-4e1c-b553-2eaca62a5dcc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03bfead1-2a37-4c2c-aeb0-2b4bf22cbdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74930d0-1ffb-40b7-9142-362a867d42e2",
        "cursor": {
          "ref": "32f3f2b0-9a5f-46de-86c9-f1655ffd3f08",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a630541-d312-418a-b1a7-5a6d491832d5"
        },
        "item": {
          "id": "b74930d0-1ffb-40b7-9142-362a867d42e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c37f4856-71a7-4668-ab9e-1bf1cd8cb1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb72e5b1-916a-480a-9f83-3c0d2158086d",
        "cursor": {
          "ref": "3ce7dda0-c62e-4e98-a745-c8930630f8cf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5aac91ad-b6b4-4058-bc5c-989c2996a398"
        },
        "item": {
          "id": "bb72e5b1-916a-480a-9f83-3c0d2158086d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "350ad821-37de-4b17-bf05-e31a7a5217b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953a5d7-0002-4879-8fb1-029dbbc56ad2",
        "cursor": {
          "ref": "3f1e56c6-d3e1-4c5b-910c-1bcaad698728",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e1078753-2470-40c5-bb4b-93a1305ee9b2"
        },
        "item": {
          "id": "4953a5d7-0002-4879-8fb1-029dbbc56ad2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1e01a767-982c-4447-a7a2-74adacf7516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e787f65-b982-4f58-b0c6-76d04622e6bf",
        "cursor": {
          "ref": "030ed8fc-4d1c-4700-a518-ba0af6d9b654",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b7b349e8-f165-45d1-a765-9887d3c58547"
        },
        "item": {
          "id": "8e787f65-b982-4f58-b0c6-76d04622e6bf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c1e06cb0-6e94-4f1a-882f-52604dd46d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd8fec-c732-4002-81ba-9665dbc953ee",
        "cursor": {
          "ref": "5010ca33-c3cd-4a5d-b205-b10f631598f6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ece42130-3428-4771-82ca-387edd9e98fb"
        },
        "item": {
          "id": "d5bd8fec-c732-4002-81ba-9665dbc953ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "791240ef-4dcc-47cc-ab9f-417d9f868103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08059b93-b37a-4945-ae43-afc7a98bb510",
        "cursor": {
          "ref": "1f8b4005-f977-4354-aa88-9245685174d7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a39394ab-4561-483d-87c6-005b13456dea"
        },
        "item": {
          "id": "08059b93-b37a-4945-ae43-afc7a98bb510",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1fd9629b-8f63-408a-bac0-a8a0796e03b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34af3cfe-c202-4a15-9f2c-9e661febf7f4",
        "cursor": {
          "ref": "22d47c22-b857-4e84-acff-528a4d50649c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aa72b222-6db6-4523-9e67-9ce420b98732"
        },
        "item": {
          "id": "34af3cfe-c202-4a15-9f2c-9e661febf7f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bac1d31e-446f-42aa-a2a7-13ef251614ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cb0bdf-eb99-4201-aa10-11079d0ec464",
        "cursor": {
          "ref": "8b2b453c-fde8-41e8-b93b-e018013b23a7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "019a3778-5208-47a4-8a42-8b21b467671b"
        },
        "item": {
          "id": "47cb0bdf-eb99-4201-aa10-11079d0ec464",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ee1f79c-af94-47bc-8bf2-91d99707a9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07130936-ea8c-4a56-92f8-6c99db8e231d",
        "cursor": {
          "ref": "32c8d9bb-6a43-4afb-b7bd-c5a1e4d5178e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1b55c961-63b7-4ce2-ba8f-02b1528b40bc"
        },
        "item": {
          "id": "07130936-ea8c-4a56-92f8-6c99db8e231d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d2078e7-2372-4ab4-8585-ab49902325ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d749587-35c6-44bd-8ebe-0aa3e828c24b",
        "cursor": {
          "ref": "2085da3a-52c4-4a15-bb28-184da92b09e5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9068864d-2fbd-434a-8946-44e7a7ff765f"
        },
        "item": {
          "id": "3d749587-35c6-44bd-8ebe-0aa3e828c24b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eb3a3714-fc68-44ba-a2c1-0068fe46d0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949c91ff-badf-4328-a374-083817c1854b",
        "cursor": {
          "ref": "3f0ba13a-7b32-44d4-b6c5-0045336ff0b3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "24c7ff1f-52e4-429e-9a42-de8f3f544381"
        },
        "item": {
          "id": "949c91ff-badf-4328-a374-083817c1854b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9d1e6157-2736-4cea-b99e-1589ab11aff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a3a8e-eacd-440e-bf67-58c7e222d123",
        "cursor": {
          "ref": "4d599e39-68a7-412e-8789-57130e4b6611",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "63bdd472-0b99-4e43-a11b-4745ba4d2faa"
        },
        "item": {
          "id": "237a3a8e-eacd-440e-bf67-58c7e222d123",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2d04f9d1-e189-4c6b-a79e-b373c6f5f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df59f0-0700-4692-baf4-728e0e47db63",
        "cursor": {
          "ref": "5db186c5-565e-43de-a7a7-2f210f792264",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "37deb5c1-ec5e-4bbe-ae9d-0c86500f75cb"
        },
        "item": {
          "id": "98df59f0-0700-4692-baf4-728e0e47db63",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ce1368e3-6d1b-424c-84e2-42bdc711414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995c34c-47ce-48dd-85ff-926ca2d01c45",
        "cursor": {
          "ref": "1d15b325-292e-4f2c-972f-dcc2fb59b47d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e902016c-ed3c-4691-a4aa-11da8e94e107"
        },
        "item": {
          "id": "5995c34c-47ce-48dd-85ff-926ca2d01c45",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e3f5076-4ddf-4986-8b93-6c2f21cd4651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c258c19-4960-4ad7-9173-67d15f7424fb",
        "cursor": {
          "ref": "bf34cbbb-1276-4166-bf49-ed975973bd1d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e5112e6-ceff-47b7-bb6f-ab9ad30c80fe"
        },
        "item": {
          "id": "9c258c19-4960-4ad7-9173-67d15f7424fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "747a0c6c-00eb-460d-a4d4-071d1d30c67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fa85d9-12d4-4dcc-86c3-a96f3bd15c36",
        "cursor": {
          "ref": "f8ac09e3-d4cf-4fb3-946d-6acd681e7126",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce04ea52-c5f0-4eb7-b0d5-12830ad4df27"
        },
        "item": {
          "id": "75fa85d9-12d4-4dcc-86c3-a96f3bd15c36",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b76a5cbb-bde8-42ca-b526-18d738ce36db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef81ac2d-9408-4e5f-8357-4b308f836417",
        "cursor": {
          "ref": "a73f82c6-dc3f-4d48-9170-c6f025ba8a4d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a9849e86-ddd6-41e3-be3e-c6cf6adf7726"
        },
        "item": {
          "id": "ef81ac2d-9408-4e5f-8357-4b308f836417",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fe48f61-aa7c-4f87-98e6-d1dca1dd9839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1b9cc-7a77-4d6b-9efb-7ed98fdd9cc5",
        "cursor": {
          "ref": "bde91a91-68f3-4b87-9a3b-e7164b01fbd3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e9faf200-2308-4bc2-9e11-be75e35c20f7"
        },
        "item": {
          "id": "86d1b9cc-7a77-4d6b-9efb-7ed98fdd9cc5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa29aad0-62eb-433b-9fee-0094bf05c092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cea8d2b-7fa3-4c49-ba90-5f9e88a188a9",
        "cursor": {
          "ref": "b853ed17-3cb0-44a3-9170-ca33d8280a7d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ae0e4c42-15b0-4f66-929a-41a25ba422d4"
        },
        "item": {
          "id": "5cea8d2b-7fa3-4c49-ba90-5f9e88a188a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5eada7e7-44bc-41a6-85de-86478c7a493a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7128ba7e-136e-4507-a3d2-ba0b3e98d869",
        "cursor": {
          "ref": "ad76103b-d567-4eac-9690-49733d81488c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4776a788-fe1d-4ad3-a84a-3de8eba47708"
        },
        "item": {
          "id": "7128ba7e-136e-4507-a3d2-ba0b3e98d869",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "288199dc-b299-4512-a21e-f7a8904fd4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c635fe8-eed6-4835-91f1-1fee00398f80",
        "cursor": {
          "ref": "c014b1cf-fcf9-43f8-ab3a-9c0272d7e26a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "608afb05-bef8-408f-87fc-ee7d95a3b81f"
        },
        "item": {
          "id": "2c635fe8-eed6-4835-91f1-1fee00398f80",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "30241df3-ed57-45f3-b17d-92b23153f01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a8aae1-9fac-4375-9ea1-4f6bd27a830d",
        "cursor": {
          "ref": "ca0ddaa5-c86d-411d-81b3-b0bf79cd345c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "56073cbf-d53f-4d1d-8a99-0c069b7f42fd"
        },
        "item": {
          "id": "17a8aae1-9fac-4375-9ea1-4f6bd27a830d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "758d8b4c-fcec-425a-8b00-78e0b5c2420d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeccfb2-1410-4c50-85ee-114647a2841e",
        "cursor": {
          "ref": "7eaa71f0-c7f9-4fab-af4d-a00d5cccbc2a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3488df36-c77a-44a3-8e0c-4f5f27a3818c"
        },
        "item": {
          "id": "daeccfb2-1410-4c50-85ee-114647a2841e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "241b7dda-6716-484c-afe4-bd879b8848e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d38bcc3-d697-43d2-8fe4-0a4c4c81f58b",
        "cursor": {
          "ref": "d37f481a-8e32-4bd7-931e-724afebb0843",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0b7b7ab5-bf74-45c0-b14d-931bcd9ee5cf"
        },
        "item": {
          "id": "9d38bcc3-d697-43d2-8fe4-0a4c4c81f58b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c04e3fd-0b9e-4549-9847-1b190878a6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a9b6c7-c701-4803-90a9-ce773906f212",
        "cursor": {
          "ref": "9f313892-ac27-42d3-9082-b9f98e70e841",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "da3dbc60-4e88-48b5-ba83-94c41a03ef66"
        },
        "item": {
          "id": "28a9b6c7-c701-4803-90a9-ce773906f212",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "65754439-d2dd-43a5-a453-1d4cb6ca99a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e84a4b8-e061-4f88-a7bd-a53d129effa9",
        "cursor": {
          "ref": "80001187-0818-427e-880f-dddb1fdec35f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ce0f4e4d-986b-4a25-a7e7-f074c6a3d6bf"
        },
        "item": {
          "id": "5e84a4b8-e061-4f88-a7bd-a53d129effa9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffa5fd7f-d756-45f4-a139-8154e968ae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfab59bb-2ff4-4e64-a4de-d47ef7eb8370",
        "cursor": {
          "ref": "b473039b-6941-4633-b23b-7667ed3bb183",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e33ee858-b80e-4aca-a237-2d5cf928a42b"
        },
        "item": {
          "id": "dfab59bb-2ff4-4e64-a4de-d47ef7eb8370",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "240fbcb0-8d2e-4a1c-a8d3-287aca306eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66fc6f8-23f5-4e32-957b-a87ff941a156",
        "cursor": {
          "ref": "cb834c09-7ecd-4074-a879-cdd156cb4750",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "828b952e-9900-4a6d-bfc7-3dbcfcffc2ae"
        },
        "item": {
          "id": "d66fc6f8-23f5-4e32-957b-a87ff941a156",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "afa14f06-5f45-4871-b91d-698a82a7fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed931bb-b6c6-4881-83d1-79299068a0ff",
        "cursor": {
          "ref": "49a93124-4e3d-4743-b72b-13fe3cfa4ffa",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43fc1577-a27d-4ad9-ae64-c245774954d0"
        },
        "item": {
          "id": "2ed931bb-b6c6-4881-83d1-79299068a0ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a45b537b-cd16-449e-a817-98f4c868506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af7db5-515a-4f7b-bc10-f980e78fa18f",
        "cursor": {
          "ref": "8286fa0b-10f1-4ed7-a2a7-f58fc53fa3da",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d6fd27b-22d1-4359-ac60-85bafb16c8d0"
        },
        "item": {
          "id": "d9af7db5-515a-4f7b-bc10-f980e78fa18f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b5d450c3-8d42-46a7-b761-8dc5375c6373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf291340-fdde-461a-b891-68e625a2eb8d",
        "cursor": {
          "ref": "946016ba-dadd-43e0-b285-fee9cda0a73f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "465c380f-3213-4142-afdd-b4d417234681"
        },
        "item": {
          "id": "cf291340-fdde-461a-b891-68e625a2eb8d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0edf0bbf-a92a-4781-ab6c-cdddb9f58c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd7fa0e-6c4e-4984-b25e-769c430b1ee3",
        "cursor": {
          "ref": "73e45edc-eec5-4295-9cfa-1012905c08c3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dcfd4fa1-3016-45ea-ae35-05e7598cf8c7"
        },
        "item": {
          "id": "edd7fa0e-6c4e-4984-b25e-769c430b1ee3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3aad7437-a550-471f-8f2e-79e3c235a546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc58071d-8b4f-4813-b770-ce24c89b6e33",
        "cursor": {
          "ref": "50a1a3b2-6a33-4231-a280-ec3918fdf14c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cb398b33-d0a9-414c-aa0f-5f92b387b72d"
        },
        "item": {
          "id": "bc58071d-8b4f-4813-b770-ce24c89b6e33",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "205615f6-39a4-4198-9179-ad4586f4417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10522d7-417b-4e0a-8406-00716d49d9c3",
        "cursor": {
          "ref": "7fb9b737-dc4d-44f2-91b4-a827be6d8be8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d5d8d946-1c0e-413c-b0c3-1ecd4f251e47"
        },
        "item": {
          "id": "e10522d7-417b-4e0a-8406-00716d49d9c3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "90611b92-8869-469f-8302-8765481bb1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3eaeb3-7361-4b65-9d14-51566c21d8d0",
        "cursor": {
          "ref": "a2ad946d-966b-42b2-b8df-e1b9ec57a9bb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7210fb42-8285-40eb-ae0c-7b04bd7b3659"
        },
        "item": {
          "id": "ac3eaeb3-7361-4b65-9d14-51566c21d8d0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "74cd6fd2-9807-45ac-b4bd-04a1ecc57777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3e386b-03bd-438d-a9fd-59671fce5d2e",
        "cursor": {
          "ref": "d7600e3f-fe2b-4226-8b2f-85098c3ca2d4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fbef730c-4279-4a87-a723-0af4c03ec588"
        },
        "item": {
          "id": "ec3e386b-03bd-438d-a9fd-59671fce5d2e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "39dece37-331e-4f7b-a19e-413f29262895",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431d9cd-13c1-4dba-9799-a050d7c0b14a",
        "cursor": {
          "ref": "64919380-9112-4983-bc02-6269503b6ba3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "845a31ec-a20d-40d0-837a-40f3428e5d60"
        },
        "item": {
          "id": "1431d9cd-13c1-4dba-9799-a050d7c0b14a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "178aeb6b-0e18-451a-8eb7-b6ee71641b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03023df-4934-4e07-80aa-3d4eea3b51c1",
        "cursor": {
          "ref": "659af44c-accf-442c-9458-c7a092e007cb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b8f01ad1-0671-481a-932a-938b4b84fd55"
        },
        "item": {
          "id": "f03023df-4934-4e07-80aa-3d4eea3b51c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "588b45ce-9857-4e2e-8a7d-a9bfc80b4ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4491e029-80df-41f0-ad0f-72219d9b79d9",
        "cursor": {
          "ref": "17d3f756-927f-4e39-916b-8b4b3dac005f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5974f45f-6603-4683-8c41-7f54ee701d9a"
        },
        "item": {
          "id": "4491e029-80df-41f0-ad0f-72219d9b79d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6914de50-977b-4dc1-b74b-ed189a5e854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb63d20f-a69e-49a7-a030-7dab5e02c9c6",
        "cursor": {
          "ref": "2b57ca25-1bf1-46d4-9fa9-fb940b73e5a8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c36e9936-ba5a-44a9-8d45-25b71762c8b9"
        },
        "item": {
          "id": "cb63d20f-a69e-49a7-a030-7dab5e02c9c6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2cbbfe48-a198-4b10-b45e-224d96c490e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124eb1eb-1e41-404e-9043-50b1a5f13c08",
        "cursor": {
          "ref": "fb872812-8b3a-4fd1-969c-e67093fa4f32",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "93f440b4-7b55-4dfc-b8d5-f76c4e2cf5ab"
        },
        "item": {
          "id": "124eb1eb-1e41-404e-9043-50b1a5f13c08",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1d1aa5f2-bd6c-4c9b-b459-5706c723ca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460e6e43-1468-4bcf-88e7-6bde456644f8",
        "cursor": {
          "ref": "438d0424-bc12-406b-a992-4ddc791e3fa9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8218fb7c-cb2b-4829-8c4a-7d341324add4"
        },
        "item": {
          "id": "460e6e43-1468-4bcf-88e7-6bde456644f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e309d9f6-aebc-479e-8d09-99c84596ce43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f5b0e-b1ad-436b-b66c-27fc8e21bfe3",
        "cursor": {
          "ref": "a03b12c6-070e-40a3-b32f-90217105c95b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "187a8696-28ae-44d8-992c-a2c368d789e8"
        },
        "item": {
          "id": "1e7f5b0e-b1ad-436b-b66c-27fc8e21bfe3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "efbb426f-ec24-4dea-ae46-ba9875421599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b867b1e-c813-4aef-940f-616020d80e70",
        "cursor": {
          "ref": "0e48c008-45ee-4405-9126-4b08503b09b6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "72dbdd7b-9168-4245-a467-1a1ac6def6c2"
        },
        "item": {
          "id": "7b867b1e-c813-4aef-940f-616020d80e70",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5c6b78d4-fc00-4be6-bb6e-3e031e7fea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50eff03-3723-4e3c-b0ec-a49e479ac9d6",
        "cursor": {
          "ref": "c92dd8d0-15c3-4b60-b286-a8b1f316a58e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3eb5c94b-d1f1-4d6c-af9d-40d5e078e8eb"
        },
        "item": {
          "id": "e50eff03-3723-4e3c-b0ec-a49e479ac9d6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cdf2ae7d-373a-47f8-be84-868f2d07d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821c2e4-3b54-4fc7-b71f-bd885767d69b",
        "cursor": {
          "ref": "6a328833-e09a-4ebf-a7b9-656cacbcff5b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2a2e5aa8-28cc-4e8e-8df7-f54cef1e47ba"
        },
        "item": {
          "id": "0821c2e4-3b54-4fc7-b71f-bd885767d69b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a687866-6fb8-4e0f-b91f-cbd730ff5441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19587167-fc8e-4ec1-a25b-17c18e9b2b6b",
        "cursor": {
          "ref": "74a356ec-05e6-47ec-b61f-7fbefa48f4e7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "93be6674-0b63-48a1-b605-4d3601d62d76"
        },
        "item": {
          "id": "19587167-fc8e-4ec1-a25b-17c18e9b2b6b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "aec2e19d-4c97-4e6a-a603-e281804c6eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852000ec-4939-4a53-806a-b9d344c498cb",
        "cursor": {
          "ref": "3d60dee8-37c2-4bc0-b637-b758d10f6241",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "002822bf-70cf-4c3a-9e2d-35fcbaefee82"
        },
        "item": {
          "id": "852000ec-4939-4a53-806a-b9d344c498cb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "595db175-33d9-4324-8f49-b2c102f152d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae8957-bc13-4bb7-abe4-97f0db82fc87",
        "cursor": {
          "ref": "be8913c7-6636-4b38-b2da-a1e976ad7ef7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "da04f8fc-8fe8-40f3-a79e-6485fc09a02f"
        },
        "item": {
          "id": "c6ae8957-bc13-4bb7-abe4-97f0db82fc87",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e10b5e4-16d3-4f5f-a653-fefc83f322e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a7e063-f56e-4fbb-8e58-17f218f8fc73",
        "cursor": {
          "ref": "21fade10-125c-45cb-9f65-76b75244a95f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "318670d1-8457-41be-a3e3-caf45c181ece"
        },
        "item": {
          "id": "71a7e063-f56e-4fbb-8e58-17f218f8fc73",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d4119e7a-d8f6-4149-8814-8091e0e73334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1afa8e1-4dcf-47cb-9481-ad1db38e0679",
        "cursor": {
          "ref": "e13e6c8a-3d7a-4be3-9737-af092c3caa65",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6964ee1c-5066-41c5-9df3-400a89e7ece1"
        },
        "item": {
          "id": "f1afa8e1-4dcf-47cb-9481-ad1db38e0679",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "31395b5c-b76a-4efa-8a3b-55a53830770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a42ed7-c6dd-4cd3-b2d0-91ddb96d943f",
        "cursor": {
          "ref": "4c6837f2-937f-499c-8a21-e6ed36ad4f53",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fc6ba70e-bfa9-409a-b24c-0219e5b187a7"
        },
        "item": {
          "id": "66a42ed7-c6dd-4cd3-b2d0-91ddb96d943f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bd68c818-9f9f-40aa-8bcf-28a7bd068da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6314e9d1-da95-4c52-96cb-b21cc15a3c31",
        "cursor": {
          "ref": "a5ef08f4-3c02-4bc4-9e79-135b8f07157c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5c047f6-ef13-4c05-81d3-5073f1ce0ae7"
        },
        "item": {
          "id": "6314e9d1-da95-4c52-96cb-b21cc15a3c31",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c096fd7c-d228-462e-a473-df2eab312e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b45f284-b658-4d9a-bd76-92f6f24c8f83",
        "cursor": {
          "ref": "1015ff45-1941-4467-94ce-d0975ed46e35",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "99d11a72-32a5-472e-a667-91b9abc964de"
        },
        "item": {
          "id": "9b45f284-b658-4d9a-bd76-92f6f24c8f83",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cf8f96d-a451-416a-b64c-4b049bf13df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c7cd7c-aed9-4c53-9c5b-63804837b0f2",
        "cursor": {
          "ref": "47ab4dad-b691-4e53-ae77-f45935f3b5eb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e8dd3f4f-0b5c-4a17-a767-aeffa1545020"
        },
        "item": {
          "id": "63c7cd7c-aed9-4c53-9c5b-63804837b0f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "092ae77b-0462-451b-8444-70fd8990bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2a2f2-8899-4636-a081-aa07086c1087",
        "cursor": {
          "ref": "076d28fc-ce7e-49d5-9583-ba6a5334e34e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd4c3f1d-ed17-4868-87ca-a0b345045840"
        },
        "item": {
          "id": "c5b2a2f2-8899-4636-a081-aa07086c1087",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "962e9e80-f94b-4a38-9668-35a94ca81600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaef566-9b3d-4b56-ad16-d8e7387136f8",
        "cursor": {
          "ref": "0848fec9-ffd8-48c2-855a-fb211bdbaa8c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ec5d2d6a-d64c-4b9d-baee-4d93be31cf86"
        },
        "item": {
          "id": "eaaef566-9b3d-4b56-ad16-d8e7387136f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8e9f881d-9fff-46fb-85f1-82e4275b0923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12a97a9-376e-4035-8c52-024b3bd8def2",
        "cursor": {
          "ref": "021441c9-2554-4a7a-bc3f-6cb0fbe2aca3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "259e3125-3c76-4e68-a669-8e1797dc9b49"
        },
        "item": {
          "id": "d12a97a9-376e-4035-8c52-024b3bd8def2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "56d8fbd9-a0eb-4125-a319-497ba7f70880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438a8b77-c5cc-476d-b9d7-cd9da84387ce",
        "cursor": {
          "ref": "b51eb7d1-dc97-4154-beb3-0d8343fa218a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa8b228c-1051-49ce-90f6-a9237e1eedc2"
        },
        "item": {
          "id": "438a8b77-c5cc-476d-b9d7-cd9da84387ce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9a8cda3f-64c0-498c-9e27-247d42d0b389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb45463-c70f-4421-a358-532e2ce8ac9f",
        "cursor": {
          "ref": "1f2ee2c1-678b-43b6-bfee-554084ed4b0c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0c5fe8b2-f763-45ab-ac10-72bf1db4ed1c"
        },
        "item": {
          "id": "aeb45463-c70f-4421-a358-532e2ce8ac9f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f417334c-b5f4-49e2-8743-adae17f4a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61185976-3147-4ebd-ac64-b3f3fcadf164",
        "cursor": {
          "ref": "cbc3aa4a-a183-4374-a1c8-249c3368c3af",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3c4aba34-b061-4c59-80f3-d245468e798e"
        },
        "item": {
          "id": "61185976-3147-4ebd-ac64-b3f3fcadf164",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "015f9610-27ac-4c43-854f-453b12d54577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6068d7b4-cb6c-4618-bab1-6cefec3692a3",
        "cursor": {
          "ref": "043a6e8a-367a-4b31-ad69-f2dbc24d3bcf",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "35c74775-a36f-44ba-b5f1-82e863fb55c4"
        },
        "item": {
          "id": "6068d7b4-cb6c-4618-bab1-6cefec3692a3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2ce5e54a-c015-4f5c-baad-3709eb58f995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0b62b3-2d0c-45b0-b718-54f3a2b35263",
        "cursor": {
          "ref": "3a4f780c-f685-4770-a3c0-74397169908b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "68bfb27a-6b57-42f3-8e56-55d127e533d4"
        },
        "item": {
          "id": "db0b62b3-2d0c-45b0-b718-54f3a2b35263",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7713e844-9c49-4bdf-a0ae-32fe0128cb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b751a1-4eff-487f-adde-2d3ef43ca9ba",
        "cursor": {
          "ref": "b70daa05-4f6d-460f-b97e-ace8e04836ac",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c4a1fc3f-065c-4755-b723-64c5f2dc0eed"
        },
        "item": {
          "id": "49b751a1-4eff-487f-adde-2d3ef43ca9ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ddc8faf7-10b8-47f7-b203-45a5625cdea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4386aa48-b852-49bc-9a9f-7f11cbfaea91",
        "cursor": {
          "ref": "6dabd1d4-d777-4d01-bf94-8de57b252627",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "92ad8cfc-e1a9-4720-9640-6a070b0648e9"
        },
        "item": {
          "id": "4386aa48-b852-49bc-9a9f-7f11cbfaea91",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1004407c-ffcd-4265-95bc-d90ea80a095a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ec0c7-f40b-4dba-afb0-3a61fa0b0953",
        "cursor": {
          "ref": "d73cf0e8-f39c-402e-8a2a-b9551ccbe55e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "911b2720-4f1e-42f7-89de-684a568b0df2"
        },
        "item": {
          "id": "356ec0c7-f40b-4dba-afb0-3a61fa0b0953",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "44db1fc7-7f4c-4e4b-a85c-8002f244e4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b833c16c-c097-4284-b95e-981c60812e63",
        "cursor": {
          "ref": "bb5fcdc2-dcae-45f0-891e-d4f2732ee49d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c04a5b0-658b-4ab0-8dc4-23c30615b04f"
        },
        "item": {
          "id": "b833c16c-c097-4284-b95e-981c60812e63",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "07daecc7-d2ec-4758-a334-4d6475a15780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099aa513-60f1-499f-874c-e1970d81d3ca",
        "cursor": {
          "ref": "8a0513c9-1712-46ec-af4b-dd9de1693262",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b4772e3-d31d-4de0-be56-ce57d6c1fdd0"
        },
        "item": {
          "id": "099aa513-60f1-499f-874c-e1970d81d3ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "64874195-db3e-4798-a80f-76c472ba0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cde791-cd59-4552-8b2e-fee70af00802",
        "cursor": {
          "ref": "1716c699-da4c-4e98-87ea-9d89547ef347",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0220fce9-9e2f-40c7-9ff5-cd59da851a28"
        },
        "item": {
          "id": "28cde791-cd59-4552-8b2e-fee70af00802",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f9461f91-7d8a-4126-9b67-a19505578fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9819eb1-5cca-46c8-b3e8-e01f12edfa41",
        "cursor": {
          "ref": "787fb784-4b05-4e0e-bfa2-94d4568dab0b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0c835fcc-37dc-44b5-9da8-e3ef95a31129"
        },
        "item": {
          "id": "d9819eb1-5cca-46c8-b3e8-e01f12edfa41",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c50d5783-79d0-4495-9b9a-c1d1377ea5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e88b8c-b9b4-498e-98f3-7150bf8dfdd5",
        "cursor": {
          "ref": "73b69110-dad8-4b52-8ff2-2752eb1e5831",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "90a3d2d0-c6c2-41a6-a5d7-f61efaccee5b"
        },
        "item": {
          "id": "26e88b8c-b9b4-498e-98f3-7150bf8dfdd5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d734b235-f8c0-4089-bcd1-fbc1ead530fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc4fec8-bd7e-4971-87ca-4ae9985e4b4e",
        "cursor": {
          "ref": "6d685817-0a9c-452d-81ea-928e1f39a74c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "438024d0-6cf8-4b78-b576-0a32522d9dd0"
        },
        "item": {
          "id": "6bc4fec8-bd7e-4971-87ca-4ae9985e4b4e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3078daae-2eed-4c04-89b5-c449673df475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25369698-9916-4d33-bee1-d7b78752236b",
        "cursor": {
          "ref": "3b827980-9960-4e93-8a87-cf78153dd2ec",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72030bfa-dbac-4e0e-b4c8-4867a9c64dee"
        },
        "item": {
          "id": "25369698-9916-4d33-bee1-d7b78752236b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5cfbe857-7e76-4f17-b4f5-fdc8a657fc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025cc0f6-2c2d-4e54-987d-f336fd0dfd3a",
        "cursor": {
          "ref": "41460076-8ece-4b58-aaad-489795797728",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cdb5544a-2c81-41fa-b77d-349c1165cc93"
        },
        "item": {
          "id": "025cc0f6-2c2d-4e54-987d-f336fd0dfd3a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca45681b-fa42-42de-9112-9103ce01ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ef35f-6c37-430b-9887-3e31d5ff85e7",
        "cursor": {
          "ref": "46a9cddc-c523-4c53-9e8e-b1c079836b8a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ab4774f-5f2a-4803-889f-89476453ca64"
        },
        "item": {
          "id": "a79ef35f-6c37-430b-9887-3e31d5ff85e7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "708b5dfa-9e1b-4205-9e96-847d165a0f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56e3c34-2b5c-4b91-ba1a-fa9e7fa2ce00",
        "cursor": {
          "ref": "fedf4d15-61f4-4e56-a21c-26c23398fcab",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "97794fce-2165-49be-9077-c36dbe2764e9"
        },
        "item": {
          "id": "a56e3c34-2b5c-4b91-ba1a-fa9e7fa2ce00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fe7c0353-dd09-463c-be6c-a1211345eef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebbb6d4-c7b1-4731-b330-1bb330cd085d",
        "cursor": {
          "ref": "a434fbac-61d6-40ed-8e9e-f54f9b5bd06d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9dcb27d2-a499-4ddc-a4cd-143f8c66e269"
        },
        "item": {
          "id": "7ebbb6d4-c7b1-4731-b330-1bb330cd085d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a809ac90-7447-431e-b2af-7651bc6c6b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e96fa80-912f-4ff4-89dc-c6e791fd8fb0",
        "cursor": {
          "ref": "781f5c5f-80ab-409a-98ec-3ee71e4838f1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e95cd0bc-683c-474d-866d-f241051f7765"
        },
        "item": {
          "id": "1e96fa80-912f-4ff4-89dc-c6e791fd8fb0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8f848f5f-5ca0-40ee-851c-b17281cb37e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0152ec-3599-4f4c-877a-2f067e4760e5",
        "cursor": {
          "ref": "62cbad9e-2d69-411e-8af5-a79942cff6f0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fa4c8bd6-3648-4488-bf74-55f77eadcd2e"
        },
        "item": {
          "id": "3f0152ec-3599-4f4c-877a-2f067e4760e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c106b334-ef25-4aa7-98bc-475f3f66f4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3c3150-0ab9-4e95-b2ee-907eb0fb88b6",
        "cursor": {
          "ref": "7cafe1fc-1e4d-480c-8c22-d1359072fbde",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6514c419-a2eb-4660-9743-c5c2ddd1e993"
        },
        "item": {
          "id": "2f3c3150-0ab9-4e95-b2ee-907eb0fb88b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e659557c-81ab-40fa-9c1b-5ecb865defac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5667cd6f-3a7b-409e-8af6-12c1c23a0f86",
        "cursor": {
          "ref": "6e53ddb1-b69d-4c82-9846-fda3d2fd1161",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fddc81f1-0807-41f1-9b82-863b8cb6d5eb"
        },
        "item": {
          "id": "5667cd6f-3a7b-409e-8af6-12c1c23a0f86",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d50d0e3e-037c-4ba7-9e79-490beb5561c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d502c1-0478-44e5-9fe3-c938dbf5ffef",
        "cursor": {
          "ref": "ccbcc9f6-1ee2-43cc-9ad1-c3d1aa50d42c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af595352-6614-4a19-933e-05e839c1977e"
        },
        "item": {
          "id": "b1d502c1-0478-44e5-9fe3-c938dbf5ffef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9c75a24f-ce40-43c4-bdec-d4f8cab2c9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9fdb32-c130-4c21-8043-1de6bbdcdf7e",
        "cursor": {
          "ref": "a8d44246-58b5-4e15-b3a4-977592ec832d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6e10509-d5c0-4ac2-bdd4-8af595084686"
        },
        "item": {
          "id": "af9fdb32-c130-4c21-8043-1de6bbdcdf7e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "baedead7-a9d0-4b9f-aa21-a862329a1ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c365c9-bc2e-4216-84cb-86f8a407bf28",
        "cursor": {
          "ref": "14598f94-05fa-46b2-a6d0-ca32e5745458",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4ee8ad4d-e2d4-4a9e-ae39-fbe032a01870"
        },
        "item": {
          "id": "e8c365c9-bc2e-4216-84cb-86f8a407bf28",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a88a3d11-ba1f-4f9b-89db-9fbb0e0d0318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8a435f-1ce7-4723-91e2-8b2c9961c904",
        "cursor": {
          "ref": "4fc9294a-186a-4aeb-bb9e-55f15403eb9b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e6881007-9391-4e21-af93-6fd50f97bf19"
        },
        "item": {
          "id": "8b8a435f-1ce7-4723-91e2-8b2c9961c904",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a537dc8c-156a-4b42-86ae-b65558501749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e396d97-a744-4a0d-a3e9-09562c5753ca",
        "cursor": {
          "ref": "b5330b7c-eb05-405b-8cce-374528f0129c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1c8b9c18-555c-47ad-b814-07f75ca2e392"
        },
        "item": {
          "id": "9e396d97-a744-4a0d-a3e9-09562c5753ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "de281041-4c70-4139-91b5-229407dc9a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292a56a0-e0d4-45a9-acf3-e2f1842fe08e",
        "cursor": {
          "ref": "cd9689bf-bb3e-4bae-b9af-25741fab9d99",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02b51436-0290-4101-ae55-f2ed4c23cfd3"
        },
        "item": {
          "id": "292a56a0-e0d4-45a9-acf3-e2f1842fe08e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "50fc7202-7bb6-42af-a65f-58bd712dee5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb43e59-cbd1-454e-8195-0d4fd42f52b4",
        "cursor": {
          "ref": "e15e6f8a-2d64-4bfc-a55d-aaffd7709344",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e07b85aa-55f3-4b20-946b-c9e8314cb081"
        },
        "item": {
          "id": "ccb43e59-cbd1-454e-8195-0d4fd42f52b4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa7d215c-8940-47d9-ad83-705fc316f09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7461b7bd-9e8c-4b61-83af-219d1b324315",
        "cursor": {
          "ref": "8edab6cb-36ed-4c9a-b1c9-94bc32cf0911",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "01a99c67-dfcf-4674-bbab-2489fc101d58"
        },
        "item": {
          "id": "7461b7bd-9e8c-4b61-83af-219d1b324315",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f2ac62c3-1353-48fa-9e2d-42353abb93be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e6ff5d-e0d2-4192-b477-919d8a9ef3d9",
        "cursor": {
          "ref": "6e0f906e-fedb-4465-84f1-c315ec62370e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6036dca-7508-47ee-89bb-786f1d8c51d2"
        },
        "item": {
          "id": "d0e6ff5d-e0d2-4192-b477-919d8a9ef3d9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa58a5df-54ae-4867-a472-8de6f8068ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb25d060-6173-4b84-affb-4d9be90d8bb3",
        "cursor": {
          "ref": "ee80b2ff-2916-41f4-934e-bad6d6b3e3e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "daea34f0-3406-4617-afbe-8517a6d1a231"
        },
        "item": {
          "id": "bb25d060-6173-4b84-affb-4d9be90d8bb3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "916c4d43-5cde-44f4-82f6-b9f9db694aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0599b6-ff81-4092-9ec7-b522a5ccee7e",
        "cursor": {
          "ref": "e36515ba-9a0f-42dd-92d7-e792004c6989",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "801d8574-2c73-4f6b-b944-72e4cd5cb34b"
        },
        "item": {
          "id": "dc0599b6-ff81-4092-9ec7-b522a5ccee7e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9be9eba0-3b4a-487e-b515-85a23f0ab200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7cfe9e-e353-4aa7-9604-8c08139823a7",
        "cursor": {
          "ref": "50132e28-ba05-4297-96c8-1a4263b7581b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ce570b66-7e85-4b89-8503-9f6bf02b114a"
        },
        "item": {
          "id": "fa7cfe9e-e353-4aa7-9604-8c08139823a7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "037e4ba8-92e0-4120-a846-dd7b6d7e4014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1849a9a8-cf59-4a41-8638-9c7ace0e811c",
        "cursor": {
          "ref": "040fd8c4-7691-48e3-b916-8260c8b4d4ee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d676e26b-66e7-41e4-bef1-5113b017218d"
        },
        "item": {
          "id": "1849a9a8-cf59-4a41-8638-9c7ace0e811c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f770d512-60df-4525-812c-d063b6dc132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60441a8-06d2-46b2-bc30-10205399ed7f",
        "cursor": {
          "ref": "1cb3b27f-1ddd-4391-a97c-3843536e2c35",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "64e49367-a590-4fc4-bb5e-2013d9ba248e"
        },
        "item": {
          "id": "f60441a8-06d2-46b2-bc30-10205399ed7f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "50cd2fd9-f78f-48b9-a5b9-b54cbea773d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa28e2-a66e-47ac-a6a3-fc48b3a0e812",
        "cursor": {
          "ref": "55dca9b7-0936-4523-bc60-a9ffdffb2d42",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eee39ce6-e71d-4d9a-be95-96fa9a87845c"
        },
        "item": {
          "id": "2faa28e2-a66e-47ac-a6a3-fc48b3a0e812",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cfa6512a-6e2e-4537-9cbb-924d2279f776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f916ac-0d11-402b-8473-21c2374a401f",
        "cursor": {
          "ref": "bdc7c91d-bf54-4178-8bfc-c4cd11432275",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e0fe2112-9131-477e-887f-fac11a775a89"
        },
        "item": {
          "id": "85f916ac-0d11-402b-8473-21c2374a401f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a1d3d394-4fc3-4942-82ca-48518ff03e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c281d53-16e9-44a7-a131-fcb0b60fe37e",
        "cursor": {
          "ref": "2a580e63-0f18-4666-8713-04972514014d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a5ff8670-fe2b-42ef-a87a-b6b01477c97e"
        },
        "item": {
          "id": "7c281d53-16e9-44a7-a131-fcb0b60fe37e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ff39a28-2b5d-4d6f-909e-32bc3ee3fc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb69f7fd-a4da-4ff0-a43f-a115029255dc",
        "cursor": {
          "ref": "24ab4bc4-fbf1-433c-bf9f-f6fd10dce7fe",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b99eced3-9f74-41fa-a1b9-81ad053c9574"
        },
        "item": {
          "id": "fb69f7fd-a4da-4ff0-a43f-a115029255dc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dc200081-eda4-423f-93bf-4e0dc1fe1c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a9b251-7cf0-424b-9827-8189e73b1710",
        "cursor": {
          "ref": "377afced-d953-4859-b0f9-fe2d896c82b1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3e0f116c-3381-4233-9de0-b169e06306a0"
        },
        "item": {
          "id": "06a9b251-7cf0-424b-9827-8189e73b1710",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7c545ef0-0aee-410e-889c-95dd003e9b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c050b56-a349-4931-92e9-a1573aad8263",
        "cursor": {
          "ref": "bb8f2d45-0793-4735-9c11-d90733658063",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d87a5d77-6c48-46a4-b5fd-c0cafc584cf6"
        },
        "item": {
          "id": "2c050b56-a349-4931-92e9-a1573aad8263",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d07cd7a0-2060-4381-b9e4-e573defc3ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36688114-c3bf-499f-9f7d-0b22c35660b0",
        "cursor": {
          "ref": "55f003ef-878e-4f27-adc8-21c6c2776221",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1ec83fcb-a8f0-4208-9485-52004b4678b1"
        },
        "item": {
          "id": "36688114-c3bf-499f-9f7d-0b22c35660b0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "09ea23e4-d581-4215-97f8-43362d34b818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f0abc-5da9-4fb2-9f53-e37c2e0df161",
        "cursor": {
          "ref": "abcedbd6-3771-4893-95a4-d2729d36a288",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "33a30bf8-043a-49d5-b959-49b1f8cb4b18"
        },
        "item": {
          "id": "da6f0abc-5da9-4fb2-9f53-e37c2e0df161",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "be0646d8-cbc2-488e-a024-1c8076730f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd974d-db16-4776-a4ea-9e30e7ffa3c8",
        "cursor": {
          "ref": "20333b3f-55df-4e8b-95f0-11f9ed007ec7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78f7b4b8-1963-49e2-ba3a-87a1e94d45fb"
        },
        "item": {
          "id": "50bd974d-db16-4776-a4ea-9e30e7ffa3c8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c9eb03a-d6aa-40f3-9abd-98cffb388d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c807d46-a746-4d2c-9506-b00169ee9ce8",
        "cursor": {
          "ref": "b857cdcc-925f-43fd-991b-047bebd6a2ea",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "882cc6b1-1364-4638-8869-9156e8be1862"
        },
        "item": {
          "id": "0c807d46-a746-4d2c-9506-b00169ee9ce8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "35352b46-0723-46b2-a165-988350aff6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8386b4bf-4b53-4660-a322-b8f2cccd9a9a",
        "cursor": {
          "ref": "cf8fec3c-307e-492c-974d-c658534256ab",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "daf9a979-4e22-443c-984d-f5d30c36e846"
        },
        "item": {
          "id": "8386b4bf-4b53-4660-a322-b8f2cccd9a9a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9af41c17-6430-470c-a436-b703ab2125c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca26f9-8ed7-493e-a5c3-2e242545efcc",
        "cursor": {
          "ref": "32eb032e-9155-4f19-9588-032b57eccd1e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8357a75-c5d7-408f-b4d9-092e061f9fe8"
        },
        "item": {
          "id": "d5ca26f9-8ed7-493e-a5c3-2e242545efcc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e36e358-ab06-4d1f-9eeb-5b6c859613eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db0b6dc-e41b-45bc-b5bb-d988e55f180c",
        "cursor": {
          "ref": "30890597-bfae-4a28-bddc-ad3f42fed1c4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "735f9595-befc-49fe-bd39-e15dad738cf7"
        },
        "item": {
          "id": "4db0b6dc-e41b-45bc-b5bb-d988e55f180c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "55e6dba8-0a8f-4320-b415-201d7794c3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e6077a-bdd8-4227-8661-f8e4de9ef066",
        "cursor": {
          "ref": "f4dc055f-04ab-4d91-aab6-7cccbe689bb1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f3fdf89-95c7-4be4-ad4f-c632173c0d36"
        },
        "item": {
          "id": "a7e6077a-bdd8-4227-8661-f8e4de9ef066",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6f43d999-2502-4fe1-90ab-e82b3be43690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cffdd5-13d7-4c64-8ae4-8ce0733c4049",
        "cursor": {
          "ref": "3258c261-4687-4141-977b-846e45da3291",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2e2f7cdb-4f4c-44c0-b0ac-bcb6603e6650"
        },
        "item": {
          "id": "d9cffdd5-13d7-4c64-8ae4-8ce0733c4049",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "acd40350-bb1f-4011-a148-36e55574d117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484b14bd-afec-4d82-8907-8e19c04e27d7",
        "cursor": {
          "ref": "5ef35aa3-b578-4c03-9b1e-c7fc23818ac3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1c31c8d5-dcfa-43a8-8d6e-ae380bc483f5"
        },
        "item": {
          "id": "484b14bd-afec-4d82-8907-8e19c04e27d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4bfec2cb-34cb-4c5a-a32b-2235ed575141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6cc4b9-a19f-443e-968e-55b851ff0978",
        "cursor": {
          "ref": "dcffc852-703b-465e-9db0-6b811e04c22f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d5598e21-9896-4e1a-906e-594f40227d46"
        },
        "item": {
          "id": "4e6cc4b9-a19f-443e-968e-55b851ff0978",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d8498ad-9350-4b87-81ef-fe8c8d8b319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0c0664-0474-4d25-be48-676b4e5cf3ea",
        "cursor": {
          "ref": "99a404ef-5e72-40c9-a29d-52fa0c1fad3c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d66305d8-0b84-45d9-adf7-44217b627da2"
        },
        "item": {
          "id": "7f0c0664-0474-4d25-be48-676b4e5cf3ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "944d6a8f-a3ec-474e-bf0e-3c6b89192d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2a1cb4-7d6a-455a-8225-185b8197afbd",
        "cursor": {
          "ref": "c2d16d93-3565-4c36-8973-38f66b30cea7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ed264085-f39c-469e-bd6a-f5c252056eea"
        },
        "item": {
          "id": "0e2a1cb4-7d6a-455a-8225-185b8197afbd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7869bd82-bb88-4f21-a5fa-2070adbe727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4b7dc5-5533-4b43-9f29-5d169086daf8",
        "cursor": {
          "ref": "3e421464-72ca-426c-91f5-0b275e1277a5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1e492862-522d-4e76-906c-5a6a7c23f466"
        },
        "item": {
          "id": "aa4b7dc5-5533-4b43-9f29-5d169086daf8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22403f71-f9cb-42d4-8b6d-0df490b2b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d29645-237e-44fd-ace3-dd5036b0f558",
        "cursor": {
          "ref": "4fa4f28e-3724-406f-8c65-4a1a08b1c271",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1d1b5e98-8794-4dfa-9376-b1d359104ded"
        },
        "item": {
          "id": "b1d29645-237e-44fd-ace3-dd5036b0f558",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0399f2fb-92f1-42af-9fea-daa747d5d997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc1ee7d-28cf-4f53-843b-53f4686102ec",
        "cursor": {
          "ref": "d46a0d64-85ef-440e-ad72-794191fbd535",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "deae2c1d-9f26-48de-a4b5-96a91a125867"
        },
        "item": {
          "id": "5cc1ee7d-28cf-4f53-843b-53f4686102ec",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba275db6-4e14-4748-a0ec-e49b8f795911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b38fb4-09ab-49ad-a34f-37aeca02d481",
        "cursor": {
          "ref": "c81c5d42-7b06-4a8b-8079-9a3d5e1fd5a4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4728c08e-854f-49c0-9bc1-9898b18847c8"
        },
        "item": {
          "id": "94b38fb4-09ab-49ad-a34f-37aeca02d481",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4fbef2de-525f-4f1d-8a24-97617af589a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b63708-aab7-4276-a126-b94f5f7dd071",
        "cursor": {
          "ref": "b2bc0147-5cde-4354-8197-3f43edc0dd6b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "787ab76e-2282-4e9e-8007-63d8ccabf7e7"
        },
        "item": {
          "id": "87b63708-aab7-4276-a126-b94f5f7dd071",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8218a773-7964-4d3f-a603-0e27501f8224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f7f39a-1aa4-4441-b2a8-46da09216878",
        "cursor": {
          "ref": "ab7f5a1c-d149-4f33-812c-048208ce0c4e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c5ea518c-6201-4747-92e9-d9c163fe6d04"
        },
        "item": {
          "id": "b9f7f39a-1aa4-4441-b2a8-46da09216878",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2d4f8828-eba7-4d89-8612-4f0c8b1c059b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49f610d-0a5a-4cc3-8c92-69a35e72962b",
        "cursor": {
          "ref": "8b5ed434-2335-4758-84b7-44a05e3eb92b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "aad0ebc8-2e17-4e69-b0fe-586495ad779e"
        },
        "item": {
          "id": "f49f610d-0a5a-4cc3-8c92-69a35e72962b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eed8f18c-fdd0-44e0-ab7d-8158558b2c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbbf5ff-c3c5-4ef4-a55c-033c37b843c7",
        "cursor": {
          "ref": "a3662d4a-ff9f-4c3a-bf39-1ebb8aa9f1a4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a9bce0b0-5b2c-40af-a848-26623421e917"
        },
        "item": {
          "id": "8dbbf5ff-c3c5-4ef4-a55c-033c37b843c7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c912fb7-e545-4ea5-9c02-2e3d7bb632e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e955a6ed-cbad-4e76-8df6-2e393b5424e0",
        "cursor": {
          "ref": "0ed5a955-0a89-4feb-9025-47aa032a2c79",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3d569db5-0a96-4be6-ae29-f96a535c721f"
        },
        "item": {
          "id": "e955a6ed-cbad-4e76-8df6-2e393b5424e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "16528655-98cd-44ab-ba8b-b26a48ff2d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b60d48-b198-4dae-ac1b-f9841d4e24d6",
        "cursor": {
          "ref": "380fa7db-d7c1-4bd9-adbe-8c15b1eaa10b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6a7055f0-533f-4087-80f9-018ed85b4f0f"
        },
        "item": {
          "id": "d5b60d48-b198-4dae-ac1b-f9841d4e24d6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9feddcd3-4e3f-42e8-9a42-df0749912a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34f6e1b-867c-400a-9831-fe7842da2018",
        "cursor": {
          "ref": "8d0b6e1c-13fc-4e0f-99f7-185601005fd2",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e0233a76-b5ef-43dc-9221-e3492d8e37db"
        },
        "item": {
          "id": "a34f6e1b-867c-400a-9831-fe7842da2018",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d985ba9a-7591-441b-84ad-c3094651e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d500307-9235-41f3-9b66-ca0a6b4aa984",
        "cursor": {
          "ref": "039bb525-0f76-429e-a7c9-5d88b79f94cc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a63c27ee-9ca7-4ca7-b4b2-4abc4afa6a3d"
        },
        "item": {
          "id": "6d500307-9235-41f3-9b66-ca0a6b4aa984",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5620ca87-0966-4926-b6f3-d7f4851c8eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f1249d-a01d-4539-93c0-589c02956595",
        "cursor": {
          "ref": "73fe1157-42c0-4d1b-bece-56359bae8fef",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "46fce413-65f1-4eb2-8b84-95a5bcd10724"
        },
        "item": {
          "id": "47f1249d-a01d-4539-93c0-589c02956595",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5e0314b-d009-4f37-9ea7-be56d7e53f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f6e560-500f-4272-afbd-8530c32583cb",
        "cursor": {
          "ref": "81af9409-342b-46d7-a789-115f8faebee7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "41a49da8-c2c7-4be2-9002-c16727c872ae"
        },
        "item": {
          "id": "01f6e560-500f-4272-afbd-8530c32583cb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "477a19ad-96d4-43ac-8b2c-691dcbe6951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0646f27b-3821-4113-a43a-7ec0f37ac900",
        "cursor": {
          "ref": "fd779cd9-9c97-482f-b516-c63c20eedc84",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dcdb7b4e-7bf8-4579-801d-54948de04169"
        },
        "item": {
          "id": "0646f27b-3821-4113-a43a-7ec0f37ac900",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a8735f43-498c-45e0-85f8-ad4f97f24a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35818bb-80b3-45ec-9398-e831e231678f",
        "cursor": {
          "ref": "8391b393-6b89-4633-8805-aacfe833cff4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "24a1a9f1-c277-48af-9f34-152e10584eb6"
        },
        "item": {
          "id": "f35818bb-80b3-45ec-9398-e831e231678f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eeca4346-07cb-4fad-b51d-95b71d08520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4789a2f2-d3b3-49cc-a3cc-7b097dfd6a03",
        "cursor": {
          "ref": "7bff85f3-3c79-478a-8378-bd37e7307f39",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "59ee4049-e87a-4e8d-9add-29d60bae10ff"
        },
        "item": {
          "id": "4789a2f2-d3b3-49cc-a3cc-7b097dfd6a03",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0350befa-352c-42c8-b109-f53e285d95dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666c7c70-0d12-417d-8f47-6f32767f1a13",
        "cursor": {
          "ref": "8318221c-b78c-4ec1-96e9-60a9995df6b1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "23c2b989-fefb-4eca-8be5-4a72276e00da"
        },
        "item": {
          "id": "666c7c70-0d12-417d-8f47-6f32767f1a13",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f1241ff8-299b-4796-b5a8-3c8848171e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14bafa0-b232-4edf-9257-a499580a8906",
        "cursor": {
          "ref": "7b7c050c-79b0-4461-85ec-0a0c8ff2a7fa",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a7e4841f-1472-434b-ab63-33fbc3bd86ed"
        },
        "item": {
          "id": "a14bafa0-b232-4edf-9257-a499580a8906",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6500db6c-fb26-4e53-8683-a942abeaaf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bb6985-34ae-4c16-8968-86c8fc6309b1",
        "cursor": {
          "ref": "af069e0b-58b9-4387-bca6-7ab31db1a503",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3c70706a-6cd1-4171-aff0-05d1ab42f526"
        },
        "item": {
          "id": "89bb6985-34ae-4c16-8968-86c8fc6309b1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "231e5942-8db8-473c-8e28-d21bafe793e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c0885-1b99-450d-888f-030673df1dc5",
        "cursor": {
          "ref": "12b3099b-61f4-4740-bb4e-29fcded35173",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1b2fdc6a-47bb-43fb-bd25-2f91fd55d0dc"
        },
        "item": {
          "id": "3b5c0885-1b99-450d-888f-030673df1dc5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc0bacef-0554-417f-acd9-809ce2ce6c7a",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "51928219-6cb2-497f-9fdd-0a51eabb2982",
        "cursor": {
          "ref": "3d9c812c-dfe3-4bc1-a9e7-0434cf667454",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1a641aa9-d49e-4cfe-91ca-93935d02ed46"
        },
        "item": {
          "id": "51928219-6cb2-497f-9fdd-0a51eabb2982",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a3b7f01d-9903-4616-b521-3e2a34d21cdd",
          "status": "OK",
          "code": 200,
          "responseTime": 1465,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b812ce-eea8-463a-8a2f-529ae109bcd1",
        "cursor": {
          "ref": "f376205e-e61f-4882-805b-651b3b62ab62",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0ec8bec5-a290-4821-9751-f63147d3667f"
        },
        "item": {
          "id": "08b812ce-eea8-463a-8a2f-529ae109bcd1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9522895d-a588-45c5-8ba5-55fd23065bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 1372,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f610c3f-1087-4430-b083-845a7731ed72",
        "cursor": {
          "ref": "89fbbdf8-f415-4e52-ac75-cac16a92c084",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "22054c1e-aa67-4214-99aa-22c0ec6d9b3f"
        },
        "item": {
          "id": "2f610c3f-1087-4430-b083-845a7731ed72",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51f8e22b-245d-4fa5-8ae1-91fba672f648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f610c3f-1087-4430-b083-845a7731ed72",
        "cursor": {
          "ref": "89fbbdf8-f415-4e52-ac75-cac16a92c084",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "22054c1e-aa67-4214-99aa-22c0ec6d9b3f"
        },
        "item": {
          "id": "2f610c3f-1087-4430-b083-845a7731ed72",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "51f8e22b-245d-4fa5-8ae1-91fba672f648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c4ef26-8ea3-422d-8584-39abb97aebd3",
        "cursor": {
          "ref": "a70278b1-4920-433e-9289-1730ec8236c1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "204a6aed-699a-4aeb-89ec-b6edf5fe94de"
        },
        "item": {
          "id": "c9c4ef26-8ea3-422d-8584-39abb97aebd3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f85fce37-e360-4b9f-80bd-17d24bf0f145",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d518f910-2545-41c7-9142-6f18e9211a3d",
        "cursor": {
          "ref": "a2f25901-ed56-437e-bb34-d76e9094d227",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "30a37b71-58c5-4042-91b0-cab4662a36a6"
        },
        "item": {
          "id": "d518f910-2545-41c7-9142-6f18e9211a3d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "81623e0e-6fa4-4aa6-b5ce-3d8e77e026a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}