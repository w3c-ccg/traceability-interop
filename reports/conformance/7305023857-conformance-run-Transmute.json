{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d472420-fccc-4edf-9e87-140a1f1b492f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "09a5d81b-acc9-453e-bb39-11555c2017e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04398887-b3ea-48c4-b349-0611cc003c31",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59f58339-424e-49db-911d-8a7541c1832e"
                }
              }
            ]
          },
          {
            "id": "1c73447e-20fb-45ac-b116-9de020d206ec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5809a95-b315-4ea7-908b-dd31e4bcce5b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "132e35cc-2f55-41c8-a470-13bfb44c87ab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "00458725-9ec1-4905-b342-16acbadb7f9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c4767278-0caa-494b-8c9e-4dca67124b33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee54b309-7a4d-42b7-94b6-d787bbccc2b1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f286f70-c64a-49c2-af5f-f0a4dbf6a79d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd065fef-cc21-4d2a-90cf-3731674da861"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3c9a520-c244-4c78-8092-d1f4df762d59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48d58493-cf42-486c-afeb-3f824f9607c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af21238c-3c6c-44af-af8c-c9b93984f681",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0692e8a0-2a66-4736-b966-4f91308d8224"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b58bc0ef-366b-4f09-810e-456636086133",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5c39775-8e3c-4cfe-b438-036d64b545c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59ec75aa-ea69-48d8-9fe6-f66e870ba1b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "355b5f21-aa5e-4351-a2c7-af95b1350ded"
            }
          }
        ]
      },
      {
        "id": "67bb7df7-b939-42a0-8b1d-0643040fbde6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fd1447c7-3beb-4d95-948e-bdb948b995e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e08af99-49fc-4bb8-b1c9-3cb2455d4f75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7baf08c4-b192-4f3a-9823-61e871a20240",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3706a28d-c501-4dd4-9855-53b5f6292960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d935506-24a6-404f-9bac-309f7a493e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18faa9d5-874b-4d27-91ac-92ce62d98097",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbb026d-1d5b-4b26-9698-a6ddf78a4c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be4c00e1-78bc-4dfe-97cc-4ab06a688de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfe2dd9-d5da-4078-ab01-32a03493a3d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d7381f-9db5-4b67-a278-0dafea33850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa708ba-025a-44e7-aa62-80f55322b605"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5f5ca68-4eba-4881-9fab-07024aaf2043",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b71abd76-300e-4e93-96b3-2338fa3157a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bd216e-e1ad-41fc-9645-91b651eb16d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60716c4c-1400-410d-86b6-916c7655f587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15508792-cf8e-419c-9cf2-1944c913befc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f2d52-44a0-4867-aae7-70ab2f9a4aa9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c54d4ec-44f0-4db9-af0f-3b2f5d003518",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c68206c5-e897-4bd3-a2b3-df1236e3a0fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91460c85-3231-426f-9b88-2028906e7db6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1c0b6df3-6907-48f3-9ee1-33f01fc3372e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e6ea646-07c8-416a-8a86-401b39b8c2b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1ed2f229-3e44-4692-b43a-7954f00270f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bbe96c8-e50c-4cd0-9358-1e1af51f5447",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "718412f0-56f2-456f-813a-16d72b7e5e22"
            }
          }
        ]
      },
      {
        "id": "6153db29-844d-4a73-92d0-f2a470c433e5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1fd56526-4087-4ca0-bd83-14288c16017e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "721e1be6-e555-4fad-bc16-8df41cdec905",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8f12f082-00ab-40a4-b397-dbfb2a69da79",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c063c16a-262d-448e-a32b-f09795670b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802b4972-d3ee-4ba2-b89c-623c407edbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e3776d-32c5-42fd-a650-5436a6acbad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc4ab8b-d9c2-4f2b-bc93-00ff849d54b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa32e236-1b33-44dc-a669-05212b117586",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb1d5dd-a760-4c84-98df-673d103fd973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce703120-2736-4ca4-90c8-47c0bd43598e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8021a4f9-e38a-4450-b8f2-e4fc4a18611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4452fb8a-699e-46b7-b39a-01e7cce25543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a145d64-805c-493b-bce0-8e42df36675f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72435a5c-4a1e-4e2f-9f8d-df91548c9ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953d9457-3015-48f5-88d4-8a3a3a28c2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c342f15-f97f-4589-8766-0b3e785f48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242b889a-dba9-45b5-9ddc-9a8682abbf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a01e65-7d85-45f8-8b0a-77012fa9c762",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9ca428-df31-44ae-95f2-8858913047fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1af7df-ac15-49e9-84b8-e01ed8edcc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac7d8c-da84-4c0c-938d-8f03f10bc5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d0a82a-b7ab-42d5-ae63-2e2c949bb045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682ef7bd-36ff-4019-ac07-abac17abb272",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aae0741-bde5-4e88-8e2f-be309925abac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b2315b-4558-4d2a-aab4-c49ae184a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb190c1f-71f4-4b45-b529-0f4bf1e04761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77d41efc-f3ef-4472-9ee7-566e011b92bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80072e71-bbb6-49ce-a0f2-7c116b198939",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2512d352-4141-41d9-bb69-8fc9430f279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3992df8b-417f-4630-a852-a2bf99ddd418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3d5bb9-d90e-43f5-9e9e-80921f57ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c16853d-8821-4a4c-9eed-99079eddef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dd80c8-12e3-4e19-b5bd-357632b73572",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b4e64-6fb0-44dc-8003-6b9a42f8046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a82753-c6af-4bd1-8301-c834c8b22d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3b5061-dd28-49ed-8cbb-c3670b119a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbf38b71-cca7-49a0-8053-bafcf0b613c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba296d5-eeb5-4a31-8976-d46ec97f7559",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ee70f-c8ad-432f-9b53-b709ca388b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c0de3d-ff3a-455e-ad0e-64ca63dcc7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397ec24e-a227-42d3-b039-14f4c7b5a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c940f2b-52ad-4dd5-88c6-b83cb5f335a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ba45e1-92c0-463a-80eb-a3457f7fec2e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c78ec35-b4a1-4215-8f3e-57dbc2153bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df935d12-26ea-4e81-94aa-09cf3ad96463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc51514-a810-47a0-91f4-49e4dedbe686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba10062-e857-4b05-9cf3-38c5395872e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112c09a3-b182-495d-97b4-f989fbbfcb91",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9bdd08-f2c0-4265-b9a2-3184aec56b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc81b204-9950-4855-8390-b4d5067910f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b197149-3aba-4f1f-95eb-cb003f3ebb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e66bfff0-ee46-418b-a947-cdf94a13650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49694a-a0fc-4c9d-8412-b6cb49024b0b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b66b86-2daa-4973-a9ce-47260a1f8aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeaf88d-c6d4-4e7e-b6a2-5715e04ffa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f678952a-5487-4ecd-a705-b5bf39539fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79231209-49b7-4b79-a169-a1f4ec37e3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa25ac0d-b60d-4c0b-bb7e-e70ce6d47037",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be0940a-065f-41e4-971d-805d43b0bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35708d0-2562-4092-9f0a-2e0d18d4a277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4505c27e-5762-410f-b0e8-7952a83b10f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc96dae6-271c-4f54-bc10-3921b97553e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422ec115-0964-4874-b14d-9086caf3a6ba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4c8f68-d317-414d-9a86-4a29b8d4b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0dbf12-89d4-4b98-ab60-7595d3c7a903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab12768-73d1-4a9a-80cf-4faef2241270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a599ad07-c612-49da-b9aa-72bd20101e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baecfbf-c5d0-4f5a-9677-684fadbe782f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6410df2-bdc0-4ac0-80e3-a4014d5d40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2f69ec-85de-4a9e-b14d-214e875dc5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4fe890-c386-4edf-86a9-cb4884e085fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "208bd500-8a56-4213-8dc2-d68a90374203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701249ce-146e-46b4-8f56-cc153e8ff8b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d4702-c763-40c4-bd43-0fc38a72db68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5cf888-fa4d-4a9b-8c05-6f5c7909ee04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df9f41e-89de-499c-99f7-82504c653fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c77c2547-19ab-4465-9a9d-39c17da1c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a470fc12-bc19-4e4e-ab4d-5690bbea0a14",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c209c-6be4-40b7-afec-bd82ef84e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644623ba-e408-4da3-b5f3-822e9f271221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15784f79-35ca-47d2-9b84-7f9f2c910338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73461269-0ed3-4bfd-8b9f-86cf5c9918f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849425ae-9fba-4f5e-9e79-15164b49e544",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8637d998-e3b4-4e21-8a7f-3a1cfcba07fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18327055-47be-44bd-8449-cfe4c28ac0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddaa5c6-cc76-46b0-a6ef-02fc56d9669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c10e212-afd9-49c7-bb6a-8c2e4d51e97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df589586-8e03-4a0b-8595-e4fbc4898365",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc392ff4-2e0e-49e3-9f9a-3cf6454913c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715d058f-238d-46f9-ac94-50ef28b009eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8864f713-14c7-47cf-8d7e-5956a97a15fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16904891-d886-418c-9769-e4f7007d1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac4b8f-08d2-4cf1-9615-ec2a785061f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6190a1-5cf6-429a-a366-857421ce98f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a48b0f-71b0-4774-be8a-c860ecc929c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593cb925-7b82-4811-9222-f356a3b31afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec77dc4-0d11-4af4-8f08-8b9339f44eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f254cd2-ed5a-496c-9966-89c8fecbee06",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f5bd96-b863-4436-9c28-857d3c9fd56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683aeb14-c21d-4d41-9d33-0b739f13b685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeec3fa-4df1-4506-82f3-9817bc121767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea84228-58b7-4b2f-83ac-347d8e27c88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386c3deb-8e5e-4650-b613-e5399aca30a1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34edd26a-a631-495a-ac1b-72e066df6aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3b7805-8e19-4245-b89b-4a6c4af98efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc5f09-2ca1-4202-8152-fccfffe41563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f07c0d-ad74-4ac9-9f34-d4b5a0f59fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b408ca7-c912-43a1-bc35-dacf960963dc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c427f9ef-e538-4a11-a35b-02392d2afd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc34453c-933d-4cb5-b42b-7536a8ba11ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed128b65-d406-4d71-a7d1-604a1d9f3644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49a7dcd1-994c-4c79-ad94-0ea0d1f692eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce1c4ee-5227-4c5d-89f9-342cdfc25218",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02492584-7a9f-4601-acb9-53a365c37ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aca3dd8-8cc4-4c41-88ce-87fb6adae901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0275c5c3-92e8-433c-8efa-c90351cfcb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f60aea1-4566-40c8-93c1-bd3deeb4187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18b7739-9129-409c-8c15-99a459c6c88f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e25fe9f-de0b-40b3-a325-1c8d5c3ff443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad17c00-b372-4d75-9d69-7b15a8229615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dad900-d22a-441b-afd6-167c5d3f47eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd9bae8-e5cf-460a-9bfc-6955f804c4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c81bed-e660-4c1f-9cbb-e3f2073342be",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a795dded-2c31-4323-b948-71fcf33d5016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90d3f9b-cf1d-4425-9d01-ad5755d9b1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d84b7ed-f3e3-414f-9bbb-fb83bbea426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c92c5341-776c-4190-9b5e-e7b90c7d2c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80769c9-10bd-4305-a280-c4690f15164f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0cf89c-8b91-4fbd-8d71-41925150646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa0a407-de0d-4016-ae9d-aa60b6718618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60fdabe-7f69-45a1-bf6e-5654c98d83d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f0e729-fc1b-4dc1-825f-68a9862260b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34867331-ac4e-48ac-962e-2f70d3f8f5f4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58254060-c3f9-4899-ade8-b48504d09148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1325fa3c-5780-4422-8bfb-06bc8a77a9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ec75c-d3d9-44ad-bdb6-7885f08296fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf44844-1981-422b-ba9d-be27c4e7e14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a73fc-1a2a-4288-8a59-bf6dc23c892f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac0b9ba-202a-40ca-8dac-05f1fd5bca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05468658-09a3-49b9-b99b-82d43b953322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5400077a-93db-4ca2-88be-c01528627788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa979410-44e6-420f-90c9-3dfa936997c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667e9105-4ed2-42ad-8dde-15407a17036b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b68a82-4ed1-4b9a-b94c-28b7d9248256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c0bb0c-a6ab-415f-9fc0-42167c7c60c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc3280e-57e4-4c23-b2d5-af50d1a551b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "809126df-05a9-44c1-9f88-379fd4ed3d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5a2db-6cf8-4882-af8c-8af15538e465",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e20f401-9d22-4e4b-b2f9-6fca1c2b57a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d7c2d1-85f2-40cf-838e-28cc5290892e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118ffea4-be5b-48c2-84f7-b58ff703ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "441dda37-e376-411c-a43a-9fbb8ef7b75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254f8389-20ba-4459-9bd9-b18803b781cc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250cf2d-6215-418b-8840-1de96608d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725c3564-04cc-4b71-9476-488844e6ed6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf2e861-6bc6-4131-91de-1dacb4daff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a20e86-7649-4d35-8a84-8da5aadcddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef21dba-13c2-4a1c-be98-ff589e5cf88b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561b627-969a-4348-8b2a-a9bb83895cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968a1c75-2837-4f5b-990a-70cff906d03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2f7761-f6ba-4083-a10b-0748b478e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da91f6e6-14b9-4e91-ae0b-f619854d1afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e7ebee-0766-434a-b947-da37de60b59f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a509b77-1daa-4dec-a2fd-b449b22c38d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8582990b-f02b-4acb-83c4-97f1ae3f256d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a28c6b-3117-4eb2-a825-938e5efad073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7c6556-391c-4010-90b9-ec807027a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45181536-d4ae-4fe8-8402-cc7c6428a384",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef245fd-3f34-4581-b870-e8894ccf099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba76abc-66a7-4e3c-93b2-642ef937ef0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232f8f34-0f03-404f-ad84-374cb922abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1801e1a4-4570-4570-9d27-86572156639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b924002-fb4b-48ba-8d07-1228f0991aad",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcb753a-1b76-4122-8b20-2704dcc63143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d87b54-79ce-4ae8-9042-26296535191e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb728097-9ce8-4794-930c-1dbe52534445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59b99432-4642-4840-b909-328a4d6d93b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6445b8-cbdf-490e-a2c1-8eb2d33e2408",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bb5f4d-fd48-440e-bb86-8a21f5095c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9667211d-ead8-4c6d-8e7e-8b87800655ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4736d7f7-4199-44db-985d-56a28e67befc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03e1f3d9-8974-4c48-a63e-b9fe9b11ff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba7caf1-0618-45cc-856d-52e98e474e67",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a1edcd-532c-4564-9093-3bf1f185e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf051394-dc28-414f-b486-f669dd2f6cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef63de-4630-4026-89be-50e531cc4c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13c71bd9-8223-4235-ab9a-06feb2cc7f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d0435e-49a2-446d-8c74-28c4fbc636b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d68dc46-07fc-4bba-be00-50330c1e730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b7ff87-ff3b-440a-9c49-19032b8b86de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936100b1-5200-437f-b318-261276066a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fa8151-0bc5-476a-854b-aaa13e537a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db20e73-ef58-469c-8d3d-3aaec31e6ee9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8635cdad-4379-4adf-ae24-563632f72fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6ca063-bc7a-4608-ba65-ebaae774bf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf784947-8656-4d4f-994e-881f705e517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f92fab70-d0ac-427e-9a10-d9dae2261699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8befb67e-e1be-47a6-bdc4-31f4d6094b79",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cc45b3-8988-4521-9ebe-87ad795c79d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4dc40a-c144-4fa5-b9bd-189e7ffacdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff49574-e5ce-454a-a3f5-5d4601ec019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b535bf27-fec4-44b4-b2f7-ee095ee4ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c39916-2125-45f6-8ac2-50a2e7ef00ef",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804f406-55dc-445e-8f56-881abc4fe57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1991575-bb89-4fa3-be08-cad631a8087b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd59709-d152-4e19-b6db-ea1994f28c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "253f4cab-4d1e-4580-9ded-4bfab38bfbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6851baaf-d66f-4d87-9cb2-052d5b284540",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c66d8-b01b-455a-b8dc-20d11e306a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ebf0e4-5721-47fb-8437-c1fcc7c66d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03241f6c-4273-46e8-bb60-89a78b23d932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e0369fa9-fbba-4d4f-a26b-256ee04004ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353635e-c639-40dc-b435-aaf8821dd7d0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f284e370-dff0-4f1d-9da1-4026a5c5fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e10b56-d829-413d-971d-d90f7c92d3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245e6b6-aa2a-4a38-b06a-57a7c23c2560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0a667a-19e0-42f7-8826-35e316ecf13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff2913-1563-4a40-8a8a-71017d2f337b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e22cf4e-c52d-4198-b9f1-503446a19552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a8858-c4f6-4af7-82af-c1f62aee78a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd74a6b-f028-46a3-9e8c-ee42fb80664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "49976a18-73bc-48a6-a50b-a2faafc81840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec056ec-2ef4-473c-8cf1-27da565d1da7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a04d6-dcda-43b1-ac35-35cf54270bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e632d70-ef1d-4038-993e-04fe0d85409a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f6f48a-853b-41a6-8e12-c8360da2cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ece80c6-a202-4228-97d6-2d850d52ae31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b48f77a-a16d-4e61-806a-094c85b9c7b1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b154c-d6a4-426e-9ea5-1c7460f2023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22473107-0af7-4e5f-b705-34bf0711e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a59e95-718f-4887-a5e6-752bd810c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe9dedb-e2e3-41ad-904b-147be72ad69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7707252-2552-45a3-9aa3-3bed743e2b02",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8ea8a-2991-4956-ae22-147beeb6f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b429328-29db-4b01-910c-d341c4710094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251dcbe-db87-44ca-a08b-5770edded8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4511330f-a645-4b2c-80d9-32de01158aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ca268-6400-4eec-a491-a3f0b2c1097c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f64206e-10b7-45c3-b3ce-403226ebf410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013a7893-a97c-4332-81ba-e44ad4375c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7eb680e-1b01-4c8c-a3d5-f90eda8ad73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e897a96-3ead-4c9c-9efc-e904eaf29720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d8299a-015f-42dd-9a0f-80445296f0bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfc9359-89ff-46dc-a446-e0a4d0038043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21e033f-e213-4c8a-85d2-d7241ec9ad18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25db9772-4e66-4520-9c45-8c2bb92352a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "225a35c3-82dd-4a2b-a646-f5c3ec8150bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb8286-906c-426d-a18b-b6c359d8d4f0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafd98bc-c883-4a70-be5a-197b97e9cc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed2fc81-f5a5-423b-b191-6653f94ab0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc0942b-22eb-4007-bfe4-15d959d5c64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0faa1f0-0a8f-4621-8c20-9ef3ecb79749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734fe4b6-8d84-49d3-9eb0-5359459bac96",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685846d-4299-4192-9b2f-9998d3d50cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791d3571-6f0e-49eb-b196-53ccd4797560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7178ef-cf1b-45bd-9f20-ce1c31925208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1b16f1-1eeb-4bf5-a643-6fd60d05b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec09892-1405-401a-9dae-53915a280126",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af9006-f3ce-4a80-86dc-1cc8c2e85b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b27fe3c-8617-43be-becb-30e8114752d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d4196-8117-4409-8c2d-818867bf69b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f798e69-f1dd-4635-9a87-2eb73ac28c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c95331-d799-4ff6-b5aa-31bf47b9e2df",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af967e89-4ce4-4c1a-b47f-8c89dc198aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3866998a-4933-4b29-8529-98d0832b0faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d08d98-8147-4334-ad66-1a8182e0f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46c3c78-d56d-4f31-93ed-1d7e933078ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9539f1b9-2b78-47fc-bc2e-9215781c8408",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff68ed3a-4626-42b1-a674-23de16ec70c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6723f4-1e65-442f-b903-3a6c28917fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5845c6-05e8-4874-8c60-859a4ee061e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e97607-176a-47fc-8eb6-f3bfbe475d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4212d629-12d6-4b23-9d63-3652484ea81a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e72e2f-4a7f-48d0-bb2b-13b2b818e5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941dff4b-c6fa-4984-9f97-29eaeebd8c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b338322-a85b-4a89-a7e7-c82215c815de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "932ea1d1-c5b7-420c-859f-9e0d99e4402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501fa287-3c83-43af-a45d-253475f1caef",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca26363-6fce-48f9-9fc9-20d1aa2be484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e9b480-e6ef-4dcd-a68a-3fc802eca73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18667db-6b22-4bd6-acf3-b6fcd9b3e479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "216ce248-a9bb-4495-9d0f-3500a8f13176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a823b800-b543-4a83-970a-3ddf313a5f32",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f0ee4a-8bff-46d1-8bd5-6942aa07b170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ba29aa-de73-40f0-8f14-7e9aa8bff943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ce5e6b-a017-4db2-bb35-b9c6eeafef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c0d252-12b1-4863-b944-bd73de1f4527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2d0000-1bf9-4400-8cdc-cedd5bcaebac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f425db-2362-459a-97b6-8fbcaf258c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d1fd44-1c67-4127-83f4-6d299c01392e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027118aa-3e06-4180-803b-632b08259d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee13b147-9207-4412-bc30-afa71c294f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f24c79d-fb0d-47d6-aa23-00bd2d7f5236",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1762fc0b-5f1f-4469-848f-c67648cda1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4062c13-b062-4d14-91f3-b007f16784c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40d7741-9ca3-4ec3-bba3-516fa8ac9b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "292af8b5-406c-4e73-8417-a21c8ee3fcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86968f43-f4b2-416a-a6a7-a31b76a7c4d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086a28c-b345-417a-86bb-d257228b1cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cc4b08-4c57-45b0-ace3-f4d4e71368a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee920bce-2bca-4c29-ab79-d79e1cfd1730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62ccb6a-9754-4c72-bf91-06600ab3a220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030b1a76-0aef-409b-b72c-274cf559b1a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8b878b-6bd8-41ef-8382-47dd77c84ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f07fb3-2291-4edc-94fc-801eee163aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b0d9d4-4ef2-456c-9266-ff2d898c6c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2e909a-42ff-48a8-b824-2d10a757b9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba3f59a-e1db-4339-bab6-30d2988f452c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5935ee6-cbf6-4cb2-bcb8-b79c004bedce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db393ce7-e5c8-4a07-b6cd-923479262b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5ebcde-8946-4009-8d3f-db299e6c7344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a53bfab-eb3c-45cc-be54-684047b2d07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8262fe-5711-4d83-99ff-5b6ea98f397e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bcc2bb-e4a0-4e63-bf40-447d9bd9f013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219295f1-a9c4-4de7-9770-71224ff111c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624cd16e-e0b1-4f5d-8a61-db81c0588256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a047479-62cd-456e-9a3a-59c2786eb266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f5aa8b-6241-40d8-9531-9bc45448fa74",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d477a8-f242-4626-bc8d-c2be92ea4d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba119d33-87ee-4595-a15c-5b5a0ce2d849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aca8460-c30e-4e46-ad70-16a60f3847ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b2df3c-74c9-4a4e-ac15-6ae919f72e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee2d18-0abe-44cd-9338-48ee14bf739a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555d5398-277d-416d-8128-4dab7a265bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1de089-d4d3-4325-9be9-dc097a2c7b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c6a83-24b5-45e5-8a3a-82ccab233ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b13fde8-40ce-47c9-a447-b0ada956b664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ae3db4-c1ab-4c50-a708-3cdaf291017c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafa6a10-66e5-4991-a82b-57c27583116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9f8fed-e73a-4424-b2f6-7c4f4a6806a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6619e14-07e4-49da-895c-14320ccbf499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec7ab52-0705-4beb-9751-0c3c75773485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9404a0-7708-4f65-8e52-9c2d58c39eb7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b741848-da32-46e0-a4de-2721aae9b49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff8d725-ed26-4d25-9470-9093cfb43258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a98bee5-2f0a-49a6-b61d-a7d446935714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce48d5be-fe34-449e-8db2-5e31701192a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46f6926-2c87-4c7a-9895-8202c6161b87",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21021481-e7cd-4fe2-a9b5-fa7666d16085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a618b21-d9aa-4145-9e50-e61c6ade6729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887d5ee-1528-4653-ae10-a56b24eced53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56dfa6a4-1bd5-4c4a-bb4d-c6b599849a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a535879-ac94-4ea6-8612-dbd50f2facae",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a494f-747c-4f12-ae9d-d33300400a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc4a4d1-4854-4b85-9ad8-78a09d741ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046eedb8-394d-4e90-b8e7-4b7fc80bc23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68159f3-09d5-4014-bc44-3495ee36807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79529d1a-4c1b-40ec-a1b5-97909bbe58b8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6828f87-0633-450a-b042-c295b9342018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bdd93a-6140-47e6-aacd-33ba1168bcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fdf49e-3020-45e8-8904-6f88ed2a6fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22416ad-91c1-4acc-a856-655cd4fff13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9864e559-02ae-4a56-a246-419050fedfd9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5116b70-0167-4624-8308-d6a1b12969cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f359aed-815c-4cb5-96a9-28e45e00d361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bde831-4c8a-42e8-a4d3-55c729b9f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1977f95-5225-4911-9b1b-140ae7699030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917b93ca-05e1-450c-9aa2-a09db8849848",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431560a-4aa6-4090-af65-3085f1bd9676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ad9a16-f4cc-435f-883d-1cea3c96b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3c3bd1-9679-4a73-bac1-1f07ddaae47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "308846ad-42e6-41a3-8f87-8178560a5607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec40792-0605-41e8-aa23-c8f76ae630f2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becb1cc6-e07f-43af-a9cd-f11b60d039e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c994a9-5b39-4395-9ce5-1c46261f72d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41931d98-4711-4c51-b6c6-857011d2bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b01706d1-9ea1-43b7-a2c2-026b913b312d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe7d674-a4f3-44c0-b381-d12e6108b3d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ea07cc-00c5-4ebd-ace4-737e2b59eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0510d17-a9ee-40a9-bc69-501fa16f15d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6826c746-eeca-4627-88ea-8c08a1b900ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c377af16-e7a4-4af3-be4c-2121c04260df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee8a539-6f8a-4f08-a03c-255bc4e4564c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f17ede-892f-42af-8c91-91984b988ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da20a5dd-4983-4bc9-9ac1-e4923d693574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f2208-2444-489b-a9bb-7ff5f362d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fecb6b-c5d1-4454-93f5-40c8657f9a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b920e41-8f13-410c-92d6-a63025c85158",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d241818e-d406-49fb-abda-adff13ee2efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36a840a-32ee-4a7f-bf0e-d694fa4b7f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee403c6-2a09-49a1-b29e-d2bf939649eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13684257-2c3d-46e5-bd51-66ec0e390801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d48791-ab3a-4cc6-a002-117b42d36805",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b8a27-528c-47e2-aa9b-5c94707d38ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76962e75-e374-434e-b81b-e2d68a540240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239983da-8016-44cc-812c-4f5824ee1045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f7d7a1-6667-4a5f-833e-9972bfe3ec14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b948f8-4a0a-4f76-a988-983d39dc34c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e68799-5ffa-431b-beed-1546d0eaf7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ba6f39-d842-4986-9243-b085b65df769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fccac55-059a-45c5-83dc-fb4d5f71b8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67ff04f-fbbe-41bf-805e-1b513aeaf571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851a0b5d-9bfb-4200-8efe-20f130fa3718",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce567d85-e104-482a-9c6c-181d14e56970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fb04f7-a32e-4e3f-a2cc-1c5d6c37e45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c734fc77-7613-4e2a-8e08-2ad008966a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5de0bfb0-d19d-4bdd-88b7-e1930046b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261afb68-99e9-4559-a21a-36345a586a5d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c97cff-a33b-4d2f-9f89-05687ef99047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3f299a-2a07-4345-b92b-e39402221fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccba7cc8-2218-455c-a310-8819b419bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b217d4ed-626e-43e5-8ad1-5ca5275be055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683dd367-2c2d-4ed4-8b31-061bb245b5ac",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bae5cb4-8245-4e37-85a6-9a373c728dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abb934d-1ace-412c-bdb8-33a1986de024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a457cd6-cfaa-4ad6-8fcc-4029f418dbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9c0220-aac1-45ab-89af-372b58b49494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bd514b-7789-4b44-b6b3-33a506cffec3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122fe115-f6ac-458b-87c1-70ff19ff04fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d572899c-8f5c-411d-acff-89b310e45f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ee0415-24b4-4823-bbdb-d50dd6566736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26266f7-1943-4a6a-b533-a65d744938eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41181bb8-f787-4419-add1-166c88cc798d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d094743-2f39-4d48-8300-e256c1b35823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ead76cb-4220-48d7-8a9e-9a49b43c2825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48346880-2905-4125-8569-6d2901c142cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61ec63b-bf0f-44ed-9e28-5dba80a37ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4654bcc1-bb53-4af2-95fb-05a1f66c85d3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b61727a-df9c-44d5-961b-262f4de2f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c339adc-b9fe-4310-b1bc-e934162d265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0888ec99-0f9c-4039-a455-7be21b258249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb600ad-0dae-4bb9-a77c-8e4ac51507a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3ba4cd-59ad-4c86-8ea0-de1894c0c0ec",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68c2435-36d5-4d12-ad96-88a74eb67ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3374ffe9-5f6c-4a62-93ee-0050d5034132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0584e1b-4ca6-4cb2-a290-5ff1574f5a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b12a02ae-f3d2-4f3e-be01-11ac96ce06ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6ee383-282b-4951-8e4c-ba0c02f8d1ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b3ec18-82ab-406b-a2b4-174b58d3e288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d611ed0-ec64-432e-9f8f-7c2f4183bcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323f540c-58f3-45a0-95b0-eb3b515580a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f22413-f82b-452b-abb6-b266c234c227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cb0a1f-0b7f-48a5-97ef-1ce22148bd63",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf1032-75d8-4e66-a8f3-00a950735560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a56ba9-d7c4-4650-9b16-702be89b4aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cb2ec4-3656-423c-b741-2c5bd5541352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcc7d72-add2-45da-8db4-a8c182735224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8292976c-fdd3-4795-843b-a2cd6051dc94",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e17c1a5-9536-48fc-b3b7-d43c0c3d41c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4257fa-4c41-4e7d-9041-13c5748af96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91498955-d7ce-433b-ad8a-5e0f68c9891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d586b6d3-2138-424d-91ec-24d911e06ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cc23b5-7bc4-47d4-a1fa-ec7a334bbe3a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd06aa6e-4aee-4aae-b046-562e99a018ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1a9933-239f-4ed9-83d9-10465c9d6ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ff05c0-cae2-442d-b2dc-940729e14d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c99349a1-d2b0-480f-920d-c017865e6b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac8b320-38c4-4402-b0cf-884d8d1643f8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed6ef3-e4ab-496c-8216-67e0bcc4abb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53b248a-3413-465b-815b-53b976e8d5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3acc822-05ac-48e3-926e-34963b652468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd4025c-35e0-4319-acfe-9c4d04b15e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7283d70-632f-4ea3-82f1-4b1d80e96b5f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5693694b-b471-4544-91aa-c13e3052f27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26d0652-ae9e-44a4-b879-9c3433113291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008a98a4-172a-43ca-a8c7-2fa56cb2cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "47eb559d-2add-4829-88ff-a75f36a1fd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7148084a-fe7d-43aa-96e5-8748bc41b141",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44986976-2be1-4ba3-ad9e-fe6ff88c5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f4b9adce-4ae8-4355-b182-be1c00ba36d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb4fd4-8b5c-4b77-a8ca-81f63df342cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4203b9ed-adfb-4d20-9511-68b418d6a3bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3e660f1-1d55-4712-a331-6739fec43c4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29c2c368-f9ca-4084-aeef-c96b487c8cbf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d7476-621e-47c6-a2d5-62eda2892492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d1cc780-1288-4c13-ac07-f6a26f223355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed5214b-0b10-4a5d-ba9b-857bd01fc194",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84dd3c0c-3a8d-44cf-a726-805c4bf9c23b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "790e37ea-24ae-4379-bc95-e4d683e3ea92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db77f966-b100-4d77-81a4-227fbbdff7df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7365b049-8751-4e77-b15c-33aa0080c406",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "775d7309-ddf9-421f-8482-dec7197f8619"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0428fd2c-1d54-4682-94b3-cf9f3e9d7581",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6697db7e-471b-4af7-b6c6-512216b8b0c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e51e64ab-fdf8-4608-b950-35f5bac837ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "680d3ba3-9159-4755-8d76-e0fcd383301d"
                }
              }
            ]
          },
          {
            "id": "a4e6e95f-67db-45e6-bdb3-bec1a7eb64c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "427b99c7-6fea-4b4a-b2ba-9b3d0b3b21a7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6229e05c-4b13-4773-936f-73ab10b32f61",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae37ce97-678d-475a-bed5-b264407ca3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31682263-d7db-4449-988d-e30f80dcf2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8107d30-52f3-4701-860c-0c6a172ad168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5a1b20-9ff6-46be-a844-f859ecf6fbd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8535ed64-004e-4f0d-a622-d2f96e2b91e5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef77a407-afb2-487e-8b8d-ee007e9a0580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f01361d3-69f3-43eb-a217-b45b7e5a836b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4009f22e-b39b-41c4-ac9b-882819f5e9ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67d5a78c-b5ed-426b-bf24-f5c9066063eb"
                    }
                  }
                ]
              },
              {
                "id": "b8867e75-bcda-4d0b-89b6-a4c1b66845e3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbfdf3d4-cf6a-4074-94ee-dc22a6f3d6ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fecb5494-5b03-4ee0-81b3-1259a11c5b2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c08d4819-8195-4fc2-9288-ef28ab5c7d57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e700e17-513c-471b-8e72-ea5439a24c9a"
                    }
                  }
                ]
              },
              {
                "id": "b7548e56-093e-499b-ac5f-fee6479de906",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "517bae6c-e6df-441a-9925-5e5bbc5e324e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cc68f02-4f5a-4f58-87be-b5a21d7e162a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70fa754b-ebd7-49e8-a5c7-d5e844d4b29c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61e45314-4c82-4896-b8cf-9c82ef4fd32c"
                    }
                  }
                ]
              },
              {
                "id": "7c232264-90ad-48a2-b854-9b20e2888d12",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a635bdf6-e104-4fe1-80e2-4b646b4792ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9b992b7-0c46-45ed-b19c-10fc3b4f25b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ba07af1-88b4-418a-88e1-8b8cb4a5438a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4da6e36b-bb42-4d47-bb23-2b1c5e40c318"
                    }
                  }
                ]
              },
              {
                "id": "c7e0da9a-0e4c-4b07-a2b3-04a4d7a5b468",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92be6ccf-abd0-43ed-b2c6-2445bf29f7f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a951a2b1-2bdd-44d7-b06c-36658bd62ac0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70440dd2-49d7-4d17-8eb8-2a05810166d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b518c0d2-8e62-46fa-9035-22baca6c02f8"
                    }
                  }
                ]
              },
              {
                "id": "084158a9-9b0b-4506-84bd-e60830c9ea05",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aeffac7-827c-4c57-82ae-c996b0e36454",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6e42b08-445f-4c53-a74c-b66b420b8971"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "830675db-2462-4329-85c7-3f40a9ec2b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "952275f0-1f2c-419e-93ce-d2221e7e0985"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b5418af-ae45-4be3-9c7f-a7c80e0c006d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ebc0fe1-cc3c-4e8f-8cc9-099aa65ecb73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "beea1375-045a-469b-906e-298c501db298",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f01c6626-2aa5-4883-9882-52e2c80c6aa1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23eb521a-c298-4d36-8d01-82fb98fb1f7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f9a6506-f648-4420-ad31-3110b3b2ac13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "369d1718-29c1-4d5b-82d7-a5cad66d23bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ba9c4d6-79ca-4eb5-8300-58ec49c07a1d"
            }
          }
        ]
      },
      {
        "id": "180ab740-5162-40eb-a345-7d1748494a7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "58851c29-19d1-47a8-a4ea-3a68a29f6208",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff8a3ab8-3fdc-4056-ba01-32c666ecc57b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e58e3968-613d-4979-bde5-b430ec6c0cea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac26bc07-7ebf-4aa9-bff0-e8641c9afbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52d621c-e4ee-4597-b796-3825ab4799c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32647d51-1226-4c4f-bc8e-c63a1b9c3a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc89c5e-e4a5-4cc8-838b-d58f3303d96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59426082-0d78-4c1d-883f-fda9442dfa7c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535d1b3c-5e42-476a-a707-3e334e8391d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6657a3a9-afe3-4eaf-89c7-450ebd4216a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed7d40-5537-453b-973c-3ddebad24a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d091dd-13e4-47fd-a48f-73b7357c53a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea26c7-edbf-4c2b-b20f-aacd85c7335a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7101c7-ad6b-40e0-a42e-91467f9c8139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36935f79-e2e1-4f6b-8b83-7311a25c2c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cee93c-8311-4d94-9558-b39d1e9548f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f43e0e5-9c5b-4c50-877d-b9897955f993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5cd8c8-7e55-44ed-9022-56a6756f4262",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faec4d54-c2da-4cae-a03d-3119e4ed0d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffb1255-c703-462d-bd6f-8cd910ffb1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1edea5-ae33-4a01-8615-85ec3ad6dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c41264-af1f-4b2f-9561-eb17e770a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752addf5-8598-425a-9e98-8709fccb5a8d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e157bda-315c-4009-bbd1-507e78bfa724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ec751a-c19c-4ffe-8668-29a12eec8c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd80377-2092-44d2-b291-229ebf57e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6388e0a-afc1-4de0-9428-ed780c00e0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e50b7-1b47-4260-9c7c-ae728a5e8b90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eea1a6e-ed0b-4b8f-b374-744f6eda5706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a039de-cf03-41bb-a8b7-24bce06a2686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6388e7-44f8-4741-9abe-f4dbb3bbcfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f01dd3-437d-438c-863c-f32720e740ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ed0a73-af4e-403f-b723-62daa472cfe5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5124a133-cb0a-4afe-9e9e-8d3e2cb213e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e0f5c9-d9c0-46b4-bab2-5493b0ccdf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0872f3-0bf1-47bd-b9e1-37821acf2a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9a98cb-83b9-4d20-8fdf-203a1188d367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a45266-bae6-437b-90e4-ea3bfb171ddf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9d3d98-b85e-4dd5-b6ca-f48218b0453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c2801a-d59f-4030-a6ed-77486b3d6cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37c50ec-e00e-4a3d-9603-1b26ebc6678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17259b3-ea35-42d1-890a-ce8ec0d2ce56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c425fdcf-d0d2-4dc5-8bb6-9fc1ab169191",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610db44a-9c5b-4399-a9be-4ac477054991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6667952b-f510-4923-a726-295cb8552424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a12e578-a50f-41c0-84bf-e38126232871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9788a685-894a-4b2c-86d7-005fef6a9b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493a2163-bcd3-4f4d-8e85-b49cfe3b330c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ff6fc-937e-429c-84da-6989ba11e02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8b72aa-8a4b-4ee5-aaa7-6b2047c42f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ea09d-cd81-4ef7-a2d3-2ba48334a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d58a645-7803-4fed-a302-0c0bbd13a58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641f5f39-c294-4bba-9a52-0f7a5e52cf06",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c870e3c0-32bc-453d-93a1-1c34df09e21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214b6991-016f-4626-bbbc-0ca4594d2593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106d10a5-b483-434a-84f9-0743bed98980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef1dbb1-24b8-4537-973e-ff88b4c08c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35906797-5575-4eaa-bd99-d5f3479669d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03b3e22-7013-4953-8f07-e30ed8cfca65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6a6191-1cbc-4203-b151-2877c09e88ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a690684a-c58a-453a-a4e7-873b7c5f6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f484a4da-e6a8-432b-9595-43e209b2634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c367b-92a8-4f97-aa72-fda9eebc7bc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35d485f-0823-42d2-b074-790c8bd25940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc41584-a56d-4e58-92ea-9be6bad3c57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13a5fc-4c82-4671-ba71-df2c7fd22edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70eec95c-de87-4f9a-8d6a-dcdefb158bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64ad133-bc83-460f-b61c-811f672db4a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46361671-f53d-4828-ae3e-7550c5f84a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7737272-42b7-44be-98b6-ba4a5db43359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cc556e-138a-44b0-b270-ab8c1186efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa435ba-09a5-4e88-9fb4-88c9040b15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2acea8-af93-446d-9d27-1a4566f0b838",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386c704e-32d1-48c4-b66b-fb1a1c581e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e1b86e-d1d7-4961-9b46-825492304c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f0abae-de0b-4450-bcc6-11369a1a61dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d27e80a-96ad-4bb0-a276-46439d2ed1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d5a45c-11a0-424c-9f77-92f2e766e443",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a473c72a-4af5-4308-acbb-f833c1e3904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fd7840-4ece-403c-b849-f9a3f4dd7c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4f7664-584f-40af-ae12-c2fa06471945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f55fa02-f10f-466a-8066-b942856ff235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b35c86-8fcd-4cd3-a6a5-3f188d2a6c1e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541ee20-0404-48d6-b946-31ff5e655781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a05210-cc9d-4e36-9034-144622958d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98c85cc-04f2-45a9-bfa5-6fe7582ca85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf6512d-5983-4c23-86a8-f11e7eb15ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ac0917-e488-4889-be04-f3b33bda95aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bcc142-f251-47e0-bc54-0d74675c9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035a5187-36a6-428a-aca0-46a09910bba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b213568-7f9f-410b-9438-503f3a5975b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a5b5db-ece0-4910-bc00-bdc25d594d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138b373d-6faf-4a1d-af56-8d9f1b71ef0c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070788a3-659c-431e-9c2f-d04bc03fca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf991c8b-85db-4d7e-8ce6-92ce5114d623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c52ea3e-8400-4e25-85e0-86520276eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b2894a-cf4e-43dc-af4b-f6b8fd0ff057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad8a43-d3ec-413b-b634-b3fc92486841",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034d6b3-a5da-49e7-aad1-1ef18418b7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63cebb7-01bc-4939-a7fe-ce0afcd4675e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194a6612-b60d-4dee-b1b0-0e9904a0549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a586d1e1-5d9e-4966-817e-96c066ae535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29156316-8fff-4a8a-a32b-b10b7e8fdbc8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963f506-b614-4465-810f-16309d5e1c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762ca2b6-f58e-499d-b99e-995780cee316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3ea834-9136-4351-b528-ffd709387783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32fa6dca-d329-4af5-97d2-917cb34beff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537894e2-4031-4232-a40b-44637d6192f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d910d84-6f1f-4123-b1f6-0757be4a771e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705a3995-62f1-4a5e-b873-31201b778c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6c63cd-02d7-404f-b8c6-ab8e14e2b6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0837b1aa-94a6-4ed3-83a5-5b15ce4dd515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e8d6b2-df73-4f0c-a80e-0d862af96dc5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aee0e2-0be7-4f65-92e4-7271d8305718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85ea002-71ea-418f-af53-0cf1c15d50e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef7306-3e1d-4f9b-8d7f-a9ba226cf210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88693d73-5422-4e90-bc3a-1933d7d5e005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c52517-4802-45e7-b394-f2cada29b9d6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5794dfa-46a8-4579-8b22-90ac55082f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0237d88b-683e-419b-bfe3-4024ad76f57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8669bd-debc-4e18-ac94-d02d7a980800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23a64ac-37fd-4d48-bab7-021b0738c1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c8aa6b-59d6-49a3-8ae4-1e15ee5126dc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235c5c9-9078-43c4-9ac2-be9a841372a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bb2813-08ff-46ab-b0e8-4ec7eed94495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2df67f-6c02-40c8-a81f-a93edd45674a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "314f8df0-ade0-4034-a94f-15d556e27892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9a07c1-fb65-49a9-bffb-3cd80fe5d9e7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed69a2b1-2512-4943-9ceb-d4bf769f57ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2c1cb1-8c7c-4fbe-b555-4b25dac0a1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943ea51f-2972-41d1-bfea-6e9523c085d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780559fd-1965-4c1d-a889-292101dbfc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7bc6ee-95d9-49f7-a701-a6c7bd528cf0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370dded5-6040-4faf-9b11-995d928a1af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40864a41-810a-4f60-b3ed-71a5d244799e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c855691-2b2d-4da4-beee-6d7007396415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7e06d7-0382-4ef3-a274-0997d9b6f6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623f55a-77e0-4ccc-9a33-6ca49a954b9f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ec1260-5d80-4d57-9ee6-e169577214bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b9bf5d-4e38-4d70-ac41-6714ea65c301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b58c37-2ad1-4231-a932-260c204135ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "038f474d-3aa2-4b4d-b386-e5a71e5dbb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b54674f-5e49-450c-8e21-3226ed920168",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f237db8e-f6e4-4b9b-8b5b-dcd39c426ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e48bd26-dad5-408c-8d58-fce012683b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cbe1f5-8146-46c3-8c8a-d6aaaf9db383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd99e09-8a45-4e1c-ab28-504aa2d95218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ccc2c2-3dc2-483d-b213-5428c9b1704e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a86c5c-fda0-4ddc-b7e2-ecb01fee0826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3393f4ba-4743-46a2-a8f4-451d636aab7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20780995-4b17-46b8-b908-6b66db1cc398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f5a336-bba8-4a01-820d-5ef899539c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad41834-e559-41f7-9ac3-c16fd137aec7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7982f7-64e3-4701-afc7-11b86b8a327e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e2ff82-5154-41d9-9756-0898b638ee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f253a810-9288-42f4-87ba-6d6ced8d2a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0c4729-5f77-4912-9730-bb43d2c2114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986aaf8f-c869-4883-9eb5-8d78cec81791",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc89bb-bed3-407f-98a7-0920f9ff6aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583e1efb-c14d-447a-9550-c02aa72e7168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a86936-29bb-4dc2-bbce-ebf92a5ae8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b24d893-43a5-492b-a428-a61b248fe8aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "274086d0-ee62-4ad7-a9b2-63dd553594d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1125a29d-5db0-4790-8529-731a76ae8725",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aebfb1f-a683-4d14-b79a-19e18606265c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e80de17-62a9-4dd9-923e-e447f5773b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f99f57-b630-4d40-9dfa-337a66b632b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9583f0ec-cbb0-4408-9fcd-33b7b431e8ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1e3efa8-bed0-43d1-86aa-df00d1bb3f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31c93e09-d88f-46e7-9b81-29c8f394c85a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b742452-bf98-45dd-b814-4d7cecca2672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0b3c780-1dc0-41e7-99e3-ab434db29b1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5dbf7a4-c365-490f-a408-3e3610873672",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1a42709-4d46-43e9-a06b-a26ec8c39d1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59ca0929-652f-4780-b3c2-7e5be42d5405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ba200e9-5ecf-4ba6-b40d-f47652aa063e"
            }
          }
        ]
      },
      {
        "id": "18dc8693-c08d-40d2-a7b4-7a44ae6120a5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6bdf8393-29a4-4225-aa11-91ab36e07963",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aad915db-4929-4c55-b4bb-81f2a0a454a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1d39d60-78bd-415a-82e3-1109b6f5965a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e0f6e-2d0e-42a1-ac9e-6b1f9152760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea93b73-ac43-4b3d-9907-89069176e3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2379aa5d-8523-4c1a-b3e6-1c0e37fecd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de8bce3-a9ad-4dd4-a632-e065a47829ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645caf20-8c44-4e80-b765-cd36c24a2099",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c797a2-a825-4141-90cc-dc71bace6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31de56b-f9dd-46dd-87a4-ce5df516d169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b96983-606f-416c-9b84-495501c1495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81115fe4-83e4-4d2c-ba82-718d37e9fb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897921c6-eb00-4300-906c-d070316bd7fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73105ff-815d-49f2-93f0-ea0b0e25cd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff58aa18-334e-4f97-8ee0-ff461f70b26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884df686-0991-4968-9ffb-000c50f9e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99dc10e1-c656-433a-af22-bee9fc8fc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3af909e-2ccc-400d-a14b-29c066097f6c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b45abd-74cd-4b10-94e8-dbb300608aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7e39ce-ad00-45e0-9469-19bd3f51a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b50e8-a991-4fb5-881d-9b8d01ca6304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "306a6ff7-aaeb-4bc2-aac0-4562d893895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83535244-fc48-4930-9015-fc793a60c62c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c175efc4-deb7-493f-aedf-1b8bee301418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2f7d8c-259e-4ccc-8f77-e09ca65ed01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5047d34b-7665-4bba-a025-d1c1abc90045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5516ad1b-21b8-4544-a713-399fed481f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb3c0a7-9429-4a62-bbbc-fb3b1cb7303e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe78500-1a54-4abd-be2b-001739c06060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34181995-fbdb-4bb3-b592-d95e0e2968e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464f5c07-1a14-4ab5-9275-b809ab2eb597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0086eb-b9db-498e-bfac-7fc5348c38d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8b3e73-68b2-4503-8687-6472a2f190e2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1732f37-a16f-4c33-9d55-8ce5f08ac622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e40d43c-0e9d-40df-bca0-9bffa9f6ea64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ce27ca-a4a2-4543-86cf-f7030f5b50c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae3f734-27ae-4717-b9e3-990e27fb192a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23159c94-2181-41b9-93a3-56021d5ba365",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3951ed93-4aed-4a26-89f4-cd24d3a55b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432627c2-d5d8-4cac-a9d8-b3b6046b58c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ff9e7-0621-4fc0-aef5-fe9dc3c163d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f98fe53-69e1-4f15-8c89-e2c978a2112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f7b3f9-daf8-4a3a-8d90-127c0d95b752",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa957fd9-107f-48b7-bcbb-189bfdb82d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd82eda-3288-4839-8320-62b5d00527d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadf9ab5-6b1c-4843-8fe8-d6717fdfe81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf13039-e29d-483d-92db-d1a1d42255d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908e1ced-9761-4340-a25b-71cb34a0b7ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f63cada-52c3-40e3-b395-31eb32602782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1284bf4-eacd-4ef4-b906-9424569eb8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204dcd02-dae0-4f9a-ab84-1aad47f825bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc16aa4f-e73a-47e8-9d23-6b356d5b7da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c5120-3059-43b7-89e2-6d0951c88b4d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f1c3a-bcbc-4551-90a9-11e13a4327e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33ac5f2-e52c-4dfd-a87f-174fc76f7bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa182c-9440-40df-b62f-a457309988a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b86d41-0d2d-4d5f-9447-e074d3c46e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfb9f90-8559-4dab-af20-b24bc5567cc1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d454839-ac78-4c1f-b9c2-930e9ed74f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e49d76-4821-422f-9260-3f0ed238bc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5b00fd-3833-4d0c-97e8-44f110f44b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a78da73e-ee8d-4a29-8f91-a8e53a39c728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffed68eb-2145-4064-b46b-78466ac4b568",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e41fec-2088-4a9e-af95-337de9c5d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7949d5-7d0a-4932-ae23-6a23e712f25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a646a4ea-7867-474c-8448-da4757fe7f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae918ef1-e108-4342-8a61-d69bde198216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda19694-acdb-4020-a7cd-6191213fe694",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3232fd-fe8c-4198-899f-b450e942f88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b17a976-6f7e-420a-8a2a-3c5b0a3a59e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6242522-c425-4dd7-8988-671a41ee8a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e7b232-ba88-44ac-847c-4b50d3b7ce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8591e5d-896c-49ef-88c6-8417dcaf1891",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1d4b78-68ca-4344-9840-7df7f75722ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492e7f7b-37fb-4c32-ad56-d895d07a33a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f37e385-fa17-42a5-9000-ab04d822a76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6a9d13-1b0a-4ba4-9a75-e804f3b57d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65877dc-0e0b-439f-a2b9-bf082b1c4799",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3abd1d4-d8e3-4218-97e0-17656a3d9560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb1f18-5ad2-4599-8fd2-c18935c8836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89af9e0f-8720-4825-9898-9769b409e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8f1494-4ac0-46d9-ac58-1cb60a366371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b348fa3b-b3a5-4505-9d4f-c3ac1f8b98c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7980d61b-ba62-4f44-8ed4-48be117a817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4bac35-2de7-4495-b5f3-c3c7cd55335c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446ba9e7-381f-417d-88c4-1f25d6324810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0874b483-ab40-4b5e-b018-7674f60f43fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e212b1-a683-46f8-8c6f-578e30462cb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d09927-1b0c-4ae9-9721-ee7e87822aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e4e3c2-fef3-4b3b-9086-464b3ed7b355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d79de8-50df-4341-8b95-6cdfa554dd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80003cb6-d6f6-466b-9956-48fc2b46d1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518040b7-cc67-4c7d-a211-bc7a739e0208",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231d2062-7d41-4601-8c77-0c4e9776d584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd35cc16-71af-43ef-b551-1fb705b30c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd1a39-f68a-4854-97c1-af65f59899c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "556575a2-f527-40a1-b7fa-9f8e3abcad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8ae8f-3692-4f22-9d4a-5353120d8dbc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b64526-d99c-47a6-a053-80d59053b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ca22a9-cca8-440e-b97f-a136e4668ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceff1972-920c-4e74-9f54-aed5e0167f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24625b43-83c1-479b-95f3-e19c6fa87163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303fdbc7-215a-4159-9311-ba807a5922d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a013dc-da85-4580-862b-76249b56ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dae3e0d-91d9-4d14-b009-d703b6a0e5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea4209a-86f4-421c-90f4-bc93c3fd024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2659547-4f2d-40d1-af8e-455f38b51702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1eafed-77f5-4c0b-a64b-1279fc50e5e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e567d5e-aa59-4e3f-968a-bbf9b4242246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5618691a-f97a-4813-8148-223b49c6caee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63994def-b8ee-42b1-94af-feee2d8594de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58072f4b-99cd-4eaf-9d3f-c1f59d79e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e72f87-dc74-44e2-9971-1ff8b2126ae4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093db51a-7ad9-407e-a81c-345b4ce2983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c6046c-3261-433f-809d-376a53a1a29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b68877a-1bb3-4984-b66b-8dc6f0142b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98f5106-9d0d-436e-a574-b7e3426202b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceba9a6-5e9e-43c1-8db6-37d6ff06224e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aec4ec-60ad-4c52-b771-56cf7bd88f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899c02c1-6390-460f-93a2-07bbd48cfd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6eb222-0a18-4869-a76a-29434a0ab10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a16d180b-d38b-4622-abe0-f55a765559d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702a38c3-c9f8-4bc6-bf11-86b1ac987986",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e9d2b8-a48d-43b2-ab8f-abfdee07829c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf010c8-b69b-42d3-b7ad-d03c46cea780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631ffbcf-50a6-4182-ba6b-195bc40c91fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f054a68f-7fa2-481b-8852-51d4bab251c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1614c2-2627-41a9-aa7a-347c033b4ee1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f07fb-fb47-4272-8846-eb0912012e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0b6ffb-d9b5-408e-8283-9bf67208e3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66804b93-5153-434f-b473-e622a3cd4618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ccc6c1-d8d7-495e-9615-8e659f22ad22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ebee04-cd64-4df6-bc85-e468d4b16706",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2853f2b6-2a49-432f-8b23-9b4cd7237b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f6fa6d-a45c-4c81-8bee-3c1571623c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5824c8c2-abd3-460b-bd2e-e3f983345ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29dab8c3-d853-4627-84f4-60804e8dcfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6b0ba8-6434-4ed6-98ed-86aef2cdd697",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12ef6d0-d549-4806-aff5-bd539a2606b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f76cbb-df87-4573-939c-e59cd017e4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44493860-159f-4cd0-9f19-ef90309ceb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6759940-78d2-4761-b671-24857b1c14f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f74493-b41c-4245-bb9d-f3703e118785",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd86f4-0229-4525-a91d-81c2d445646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3c0d21-f359-44c2-85cf-c41e40119b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cf871b-d446-4467-be9b-536d423b3b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1466268b-56a6-47d8-a90e-3ce5ac38328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665491eb-cd5a-457e-93c3-68015119053e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d39ce08-1a9c-44f2-aa46-eb90154a3b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02082a1-a3f1-4bbc-ab59-ba8188766020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750b04f4-4471-4b2b-9a3c-32fa08019f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0533857-d077-408b-8a8c-3b2072b3e40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59980e7f-7248-466d-8112-03d027c5b379",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e22a47-c0c0-4e42-aca2-d36763beb069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d67c61f-7fe3-422f-9143-3e22be5725ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4d8d21-b1f2-42a4-a66a-7f4494f83ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934d0d33-a4f4-4d29-ac19-2ba27d8d1871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee70348-0aba-4f9a-b4b9-e8a252a49984",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306a712c-a97b-41a9-83bd-8975ac2bd24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc81d8de-0929-4ef0-8afa-c17d78e9f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e4e5fe-99c2-415f-8e80-882690dbff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e7e74e-116b-4a94-9633-74377c958a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d0c450-5e46-4419-9981-356e6b4ff589",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c541109-4cbf-4a02-afe7-6a0b4283e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8e7435-d602-49d6-bc89-fd4d51b2ee86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54b8e7f-8764-45df-bd0d-7b16103617e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "760b50c1-1a6f-452d-af73-f9353be131cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d186d2-3d83-4e28-94d8-50d1e2d0c25a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a4a034-2e6c-4273-9059-1d686147047d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ede7a9-28c7-4927-9fa1-b8b01ff4e17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c52b36-021e-431c-9ab8-d3ffa521af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6b7974-4495-49f4-afb0-abf288a62fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2fec1c-8640-477e-9100-e8203afe3afb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c543b942-5919-4e04-9770-fca2e2916766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20e1039-3108-4c5d-8923-3617289e635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc8956-6e27-4d21-965f-6be0ec81d086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84325f4-1bb4-44a6-b74c-7e274061621c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c9c88-44b3-43db-83c9-8c4be2fe8c9c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bef152-cf49-4bbb-b469-a461e5961f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88549fd3-8af4-4a1d-8eb5-00072f79e9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0ecd3f-c7fc-4dae-95e2-b28303490696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b12bd8-2381-4bad-b6d5-c9c004aea9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d088d6-e711-40ac-aca2-f00a536cfde5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a52229f-420f-4f39-9dbc-27641fa78161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c493fcd-b749-4dfd-8ae8-075e24769df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ddcdc9-6f83-4d90-96e0-133cbf3d8e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdcd78f-e282-4456-9af8-0facfc71f4d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eed6bf4d-7977-46a7-a848-8a6610298d95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cf48924-b2c0-405d-a5f7-55998f19fa8f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fee242-e124-49a4-ba90-577f20fb7392",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "720c3a76-67e1-414e-825e-ac5419015f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83afc986-c0a4-4290-b1ac-382685263557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ec2bc6c-56e1-4f90-8536-a43300fda6fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4f04842-17e1-4e89-a3ee-5857032d0005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3369f7da-0cfa-4131-b7aa-993a50c2fc72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "237f10c8-bbe2-49a2-a1bc-3ec3557cd8b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03b1c57c-c25a-4512-b226-d1e32a717ebd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77112ab3-436f-4124-9619-1c31a360548c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5af2a90-3c9b-49a0-ba3a-f9b17ec62cf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81c74507-726d-4ef3-99e9-af1ab7257fe7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8de6c9c8-1d2a-4a71-b936-57cda59c6603"
            }
          }
        ]
      },
      {
        "id": "784d53a0-0f87-4fa1-8297-07b310ade681",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f714a25a-103a-4bf1-af6f-0e68396ed6fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c08c431-fed8-48f3-b406-3d68777d7762",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "293d5450-dda0-45a1-b009-1155a126db14",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf1c7d6-3f46-49b7-bba0-31e5057f4bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0761f13a-058b-4877-8b8e-c989ce6e8bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7e3f3-3d7d-414c-a19f-5f986294f5c8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07917d53-f071-497d-9138-483266839769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b6890f-dea5-4163-a4e3-68803addeb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2a7b63-2a7c-43e7-a72c-825104413657",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4084844-529a-49ea-8a64-e39fa0bb7e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f260af6-4d20-4155-85cc-e4bab6096aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7558b0eb-0188-4443-9911-7e8a3857e955",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b924476e-3d4e-4f00-9fd3-cf64b6d92c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48257be1-2e58-4544-adb4-200ea2e8c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62115c6e-7ef2-46dc-bc48-587817673056",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c865548-b5bc-419b-9127-bc73e9a0244b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2233235f-88f9-4b79-93ab-746f65b70022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd8e8d5-a0b9-4cf9-b393-fe002c63a089",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a92b7ca-1f0a-476c-bbe8-cea57dc7f5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a634c3-93b3-4123-ad59-cf4b10bd30ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc58e47-2ff7-4677-9fc3-a29484703a84",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4bc6c4-3035-425d-a285-a62cae149bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b49d18-c616-4ed1-bc3c-5bcf5e7602ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d8d21c-a9bf-49a0-87d7-fadaf7d073de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28269e48-dd4c-4e86-8f22-28f30fd25857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1db420-4b97-49b5-adc7-02adb72c90f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d547eb-8dcb-4c51-a77a-bc6fe8e8b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d0e67f-b592-4045-a1cc-56af52888560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf91b0f-edfa-49e2-957b-fb7c9dfc4aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276d271e-f519-4117-9f3f-722cce622eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70a701f-4a94-49e4-90f7-db6c8caf6cde",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0bf8ba-7863-406f-8a44-d056dbf1a588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21edb742-5c73-4288-a825-c829b96dab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d8049-9b90-4b09-8ddf-d6d43eb76e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbf52c9-fea9-4b39-9759-514400b18076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ff006-0c47-4331-9874-75e483299792",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7364d59-614e-4f15-ae06-7d8dde7e80d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093e4865-1886-4208-993e-5afc8117db26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b9aa2c-f2f7-4e0a-b920-5908792dc500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd1d4d9-d936-4cb9-aba8-e1224cdb0616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc49541-4cd0-46d6-969e-23e8c93d16e3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35fd8fe-b213-468a-936c-1e94e0721499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf76d15-7b87-4a37-a505-e3747964cc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6593789-7436-464f-94e8-19a8b6f24334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931941d2-7125-41f9-8730-355e054f1670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab050da3-db8f-4194-b2b6-1e7320f646a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6171000-b7aa-4c66-a3fb-6fbcc4098dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c211d1-490e-4449-bbec-b2eb95a1a3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acfb3f8-9e3f-4934-9323-f9e825589700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549d019c-64b8-4888-bbc6-786e8b7def26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4308589-a512-41dd-84d3-2408f90d6281",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7cdcc7-a2af-4f0d-bce2-705dbf5bf009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d24b4c-a040-4602-bf47-041970623c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb152d8b-8ae3-4295-a3a8-a011cce899fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5459a9-6f0f-42d2-bbdc-37fe91ad96f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4a229f-b0ef-4592-9823-6b2a3ca17b33",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d512e9-29a3-421e-a8cc-609cebafb37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88baf3da-3f72-4bf9-a3bb-8d98085116dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03de8c-2d5d-4f6c-8c5a-5d53f5d22cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d254eeb9-828c-47ba-9b8c-0aa841a447b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43ce0a3-260d-484a-a9b6-bbe383e3bff2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87145ad-e60a-4283-b170-e9dc767557f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a758b05-5dd8-41cb-a291-8711a4903a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bd58d1-096d-4e54-a345-9aeb68d1ddbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c51953a-7a30-43c4-b454-dd7eacc1aa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c827dca-6d68-4174-ab9a-d6e429894a4c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca73e1-10c7-4f71-881b-bf9b9ee3a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1ae1f7-554c-416d-b0ea-6fd2d852b0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6af70-12e6-4ad6-9c9e-a5be94c48209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce53f9c-e2ad-4e67-be2d-d41cc51953eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b4f3e-2819-4344-83b4-91014605fc84",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b343190-123e-4d69-b371-d125a5d42853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc15414-a5db-4cc7-8877-0afb35c0bb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94567857-7c26-4c5c-9bef-2277d9a57d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a098259f-1938-4b25-92ff-1a6919dfc999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8ab3df-3258-4335-8255-e53b5eb8fb9e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4526a30-3fc2-4e97-80f1-ab134d967c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004e86b3-a216-482f-9c54-8589c14e36f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d81ce7c-93c0-4d6f-828a-f95255778afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5478c546-1ecf-47fb-8003-5a880ab0e1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c01f72-d16f-4190-a3d3-e6fd3a25c852",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c337b9-a940-4547-a927-2cd9404cc12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66258e17-cc14-4e44-a919-e8d226866a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a565118a-7de4-4e69-a20e-9d38dcc6c80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0407889-88bb-4a29-9b9e-84fb522fd877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383ccb37-9ed0-4a28-9da2-eb46cd532fc0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54fe2a7-67c4-4f70-85b2-90e3c71933eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1691386-1855-4d7d-b24a-ca357c6a8b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2efc87f-b64d-486e-ae61-a155fe78507c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb2adf6-04e9-4b2d-b732-f018ea3d3fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d7449d-77b2-4a44-98fa-c75ed3d263fb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654242a1-c540-4fe8-bf82-eadcaab07c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7996469a-cbae-49f2-a79f-4562e6a1f4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1904b6cc-8e7e-425b-a3d7-d0ab92c741f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b4b13a-08d8-4764-b38b-dcef2b2fb276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a586b8-2d1c-488a-9343-806fac08c46d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b8305b-bebc-41e5-ad4b-a5fad670b291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c039b999-5ad0-409b-8e2e-e84e39b312fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684c515-94fe-4325-995c-3a3bbc40223a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a925f1-fdb0-4d9a-8490-a8685e2c57aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a866440-d4b2-40f8-8086-50cb99ba4659",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aeb261-79e4-4f4b-8a7c-bafca4503689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f4840-0243-4b7c-a990-ba8e8425b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530bd166-cf78-4f3f-9491-c4431d52fcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be623e7-f7b1-4ccb-bd05-e18fce50004f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0829ec6e-4bc8-4001-98bf-20043971d6f9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573c49ed-d1cb-4724-8046-69d119d40d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b188d9aa-b7b8-40e2-81d8-bfa09df7985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657768e3-fbe4-42ed-918d-7bb7836fcc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736b3c54-82bc-4813-9e09-d4172c8b13e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0461fa23-eace-42b4-ac63-ce989758cac7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416f63ae-8ef9-4e14-8fa4-33157c6ce11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd75a7ae-1612-470a-bdbf-99478596936b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e845884-321f-423d-b1b3-ed3963bb607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43933ccd-8547-4424-b83c-d41e3cb959ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ec9bc3-b117-43bf-a024-a7e9f90cb150",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250e594-3467-4818-b883-f621e4cae358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321490b1-c699-4813-8d40-da1832686b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3171129a-c2d8-44cd-8513-7973b602e356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa32f282-2429-4f91-b56e-9fe68a25ffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3d61c6-f0a9-4b1a-ba6a-13794cab4fc8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63efb35-6b1e-456e-8f56-e82c496c1657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8036aa3-3ff4-472e-8a2f-eb4e6c68113b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d471580-c7cf-4ac6-bc8a-d53f5df14b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a352e2-e372-47ac-aa80-18a415fb402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e68a2f-06ca-4ce5-9e2e-1bfb1f106bc4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3846194d-f456-43d6-8dee-508fccda1666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a9d0a6-3bd3-4679-b0f0-55eeee6f7523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aa6f84-2e11-46b6-8ca6-f196ee140375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c16c00a-e7ee-493d-902c-31f5a97ae095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008c32c1-592f-433e-a2b3-01f2d00f3a64",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e1810b-1683-4468-b4f9-f11501ea4a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4bd9380-d760-4e7c-967d-e16e1b02b994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493ea662-5021-4ed9-9344-408957f0e9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa48827-f662-4668-9a6d-4fa8ca27c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b380537-cd37-4393-9ec7-0487c08969b0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b670a86-45ef-4de6-b980-cb013054e388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5c5e84-f514-47a3-b0c6-4037f754e8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74082b1-2feb-4771-8509-e884933a45ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b42e82c-ca74-4155-83f9-53f41f39a91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f5b905-aaed-42bf-bd02-c63c735139a1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94292bad-6bae-4d7e-9282-ae2844b54cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f366b62-bd18-4dfe-b086-f89d6464878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b67f36-7102-41ac-927b-65ce17d21f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa3d656-21bf-4a6f-860d-94898cf85eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9a7573-83b6-4b08-b32e-35f84b2315cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3724e148-12bd-4cec-9b21-71ba12bfcb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15ae50d-223c-4699-ad72-3c058b4741cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ece168-f35b-47f7-a996-1ed041ee8ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11db80a-16e8-4031-9904-4e14c6ac4494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8923061-b293-4a47-8f2c-549ae488ec07",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010defd9-6073-4b84-90a1-a6574589c467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351deb91-99d4-40eb-894d-e6c682a70368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369676ba-642a-4852-8add-4e98752451b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97a0e94-1540-4a0f-8e0a-cf059c11b10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee8895-d4f9-48d6-9384-490bb00eccd6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e43fc6-0d6f-4d67-8bb7-513f68b6f6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7a79ed-62bb-439c-905c-c975c15788c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d6b6d7-1cc5-4904-8aba-fda1de826a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da235bf-42bc-45bb-823b-9511ee068991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922be4a8-beaf-409b-8225-e342c259b292",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582af107-b7ea-4992-aaa8-8101afeb1a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70764aa0-279a-4a0c-849e-2ee8bb5c3048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addc9f7a-2a92-4cc1-a9c9-edc8502c3b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4960866-5aca-45b4-b8ee-177c256325bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2f2f1-1486-4618-8994-ab78a1594bab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106b3d07-28b2-46d0-bdfc-2b8a39155dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aab8deb-18d7-4728-99a2-e5f480812902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf930f5-b95d-4bff-bd93-5d9963cef9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfe09f1-f955-4bad-84ca-d54404d11996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67235f1d-8667-43f8-8d7d-4c2bc5519a2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511534fa-71f4-45a9-986c-bf3bd3cbea13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8fb717-629a-487c-8565-9dc8bc055c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d357d39c-6ae6-4492-a829-242995b706b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81eb1c4f-6efa-4bc6-bba8-2192a169d44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab7ff36-f443-42f7-8f4c-fe913b1a859b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee49572-bf28-4253-bb66-b8166795dd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56665631-992d-420c-9033-4a5500e86067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d943fc20-936c-4b2b-8515-b7882b54a1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3c05b0-271b-42f5-af7d-251d73588a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43db0b44-77b4-44ec-b26d-6be72fd32b04",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db14515c-9a64-489d-b772-632722726786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01836796-a982-4615-806d-09574064ba8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44967dd0-ef3a-4b5e-8332-feee7817aa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad0691-09af-4feb-9512-7743a0fe8bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e04f34-0a72-4217-846f-1f0731bc111a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed31160-083a-4666-9fb6-4b3b9a6e7588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c2c0ae-3649-4da7-a1f8-8c873b34614b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16152c33-8128-4286-839e-b3411d4ac920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac12a89-6cf8-43d9-9401-b875766fb899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9b0431-d48f-4e5a-8ac7-3bbb0f9bf790",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389e6f44-32dc-4296-8240-817581616f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5075be38-f772-4e5e-b467-9a85033c8dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee32738-6892-4f87-8884-96e352003011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab32b13c-be8f-4dec-b5a9-b8616a360a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e38cde-7197-4cf2-8549-d88c0f78db99",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58b3d9e-752a-400b-add3-be48e2ecc6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcd239f-1973-461b-a370-0303b85e73cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eba424-b7ea-424f-99d4-70c07d94b2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67d3e2e-b098-4725-a6c3-ec3cf50b0e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be3bef-bfda-4bc5-a082-57e7126435ad",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfb975f-654b-4b29-a93c-91b0b8fb9767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c6270e-329a-4e7c-a3d3-59445239e92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fddda6-8d4d-4734-9bbe-09847ece5698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61097c7e-fefa-4273-96c8-90a4090dcea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a644c92-3e9a-4dd5-b8b0-32655893b437",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86ad54e-f19e-4bc2-8dfa-ffcb9cf123e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c2ec5d-b7bc-4ebf-b010-349bc44eea30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df588fb2-ff77-49c6-970a-ff5a04e3736f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb288171-8d97-4e6a-95d0-a0364ff71abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e358e9b-1343-48c9-9833-7ddfdd012607",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ec9102-f06c-42cb-ae38-0407f7880a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffef7a1e-0372-4d07-8f2f-777fc5dc85cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376fd57-8ce3-4b8f-96cb-d56c363b5de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac51a62b-8d82-476a-adfc-3c52f6263c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da32bb79-da06-4614-9b91-aa86921b977a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275b0e26-4d74-4e29-a3b7-2326f4d21d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f3c1e-e674-4edb-9f0a-672acab56a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84cb47b-c826-4f92-b252-bcaefc55157b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19673131-49b9-4aeb-b116-613f5986c511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbcf62d-e2c8-4594-8f8e-d592278114a0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e06e2cc-ec37-4818-bc97-079c3750b994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0be6622-dcbd-4338-a332-c502d952e1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ce73de-a23a-4c05-bc2d-3d2d6c0c4264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1258a16-5b02-4601-8876-0066e5e24423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962f5cb-4241-4a88-8948-8a18865e0626",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb413e2-aab8-43d1-9fab-5d81f0340cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4555a7c-9a77-47c8-b378-8846f7376e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d828ec16-9cab-4515-b252-1edd2118757d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ee5838-988e-464a-8a39-b7c29f4457d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56531eaf-11b4-4702-a7a5-0a3a8786edc8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19088f68-f06b-4da1-8cfa-2cabcdccba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33460b91-ed44-4ef9-b142-46f79c7228a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1437957e-2cb1-4c35-9f0e-c563e56e3f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de4cc0e-7e28-4281-bd19-7583884ed036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568a6bf-cb49-4ce7-91bc-ec8ddbd341da",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71de27db-a000-48f3-9a32-be7c94e3faec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b290514-d8ca-45cd-a671-98da779aae3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b5f288-0358-4a09-b1ab-f5186d2149ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf35d7a5-a0fb-45b0-a27f-dc25bd5557b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ed2f4-f4a5-4979-941a-b0b772d5a3b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084424fd-f71b-43d8-b873-e534f426e9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d08ec6-8840-4bd4-a604-82525db8f522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f851b05-1a23-47ef-8baf-c94720a7a133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14bf94f-f6d5-4eaa-bcce-1fef52ee8035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4e609-74cf-47a7-8d55-ccf4e528edc9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74ff146-9d1d-4f99-870e-b169cdf5a3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78432fc7-71a8-45a6-a379-b2256a36e09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80709d8d-d058-423e-95d6-437dba3f16b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2eabc2-257f-42ff-bff3-f2ede80d10e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f297e68-e9f2-4ec2-a40a-ddccc58223fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202eabc3-9f7a-46c5-b75a-c16c5276fff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db00e2c-6e7f-48f5-81ec-3bb79f29b260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197575b4-ec3e-4ccd-88c5-8f1d60cbb83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33657169-2fc3-475d-80e7-59ceeac46707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438ff026-2223-4a6d-9771-3cfe9e642384",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cbad47-0e68-4d64-9aad-fef841edec72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78df892-9ad3-4906-9dd8-a11f3cbc81d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c83e1be-bebe-4392-b5f2-755353f1bd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a3df2c-7218-444b-ba35-be2d37ff6efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12827ed0-2a43-4550-9eed-965a3b3cfc57",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ec727-e641-425f-8fc9-46bb91e474e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dd43c6-0181-4279-a012-c1270dd029c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fe9fce-2a46-44de-bc7f-049d2586a819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe06208-c70e-4a12-b8c2-92e8b80200d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce62501-5435-4f89-abff-151a3f085436",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d86417-3789-44ad-bc55-60eff7fd5414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841662c7-703b-4a44-a5d5-0b906ccb1f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a5208-ae6e-4470-a64d-7d770950e9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62155ecd-542a-4895-8444-14ca38c56504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07985819-aabc-4f0f-afd3-db3715ed705a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40fb7a7-7b00-4c43-ae5b-8120ddd07f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f0a628-ba3f-4d62-ab8f-d0febabef25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a563d32e-73b7-4e8b-b594-ad530b8a2ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424948aa-c06f-47d4-a2dc-afa473080bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f8879-0b70-4ae7-b0cc-91597c9a268a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e023b4b-f699-4232-84a7-494bf52d6e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe100e4-8d25-493a-a18d-79a4f5a4bb26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2ba68a-7fa4-478f-ac21-2a6ecdf99d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb6849f-d19c-4626-962b-8488ade67882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ddc3a1-902e-47e1-914f-432a9d6871c1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae5346-03cb-4f6b-aacf-1081cf82b566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824d31bf-62e2-43c0-aaa3-9e40f917f3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00da35b8-057b-4e94-9829-e93e1e09b286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76028a47-65ad-469b-ae7d-deae55c4319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f072b9-66c1-476b-81e7-0b57edb62f8b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a4cb7e-81c5-4583-bf19-d2d2f15cd5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffbc06e-fe8c-4e3a-bdd7-dab8db49d13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a001a-fda9-4a83-8a9f-937b83c739d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0708addf-00cd-428f-b533-f63956457da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231c4fe4-0ee0-4432-bbd3-d366e3a8a708",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6498ba3f-af0c-48df-b02d-3585f19ac173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9817a94b-c97b-4a04-8da4-9b2d422cf474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f0be8b-7af6-4f67-a3d5-7c608b529e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccc4598-2781-4e1e-8c48-10a25753bb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f28615b-7b18-4492-813c-534e90916e9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97381396-a18a-4ceb-a85c-19035cc372b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b274030-efb6-443a-bc26-0dee848f0652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8354189f-34e2-4a36-a5fc-e85a2e14cc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b8850a-49fd-45a5-80ed-28289263f6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45701804-5888-4228-b577-30d387b0ccba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35143b22-e358-4c13-88ab-d47c20f052a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a21236-5057-47d3-b063-b83c71a9e158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c414760-873e-458c-b1a8-ff7e327fcb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba81282a-0a42-44c0-acf6-b5eca7da4737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713df8af-de98-48e5-bf88-91989a82470d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c22eac9-f083-4a05-8588-6d05331f521a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e4c5d0-d968-4fd7-9c9c-9de246e4559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c077f6fe-ff20-4497-b262-aa86b6257e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bafc83-679d-4c9e-9d17-911dd0ff16c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6434e80-d110-4a9c-bb0f-7d79a3f0ae1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038c68ee-acac-4ad1-a739-0e6ef5381153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1586a1-65a8-44ea-a55a-367ac021c94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd726f2-3871-4502-b3ce-cc63e80f9870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0ecd31-fd48-4340-9d8e-f0e230cb447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cb2cfc-d161-45ca-838b-bb7abe1b53a8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63d0a98-430c-4f4a-a70e-e944991c3702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7953484-7424-4044-a31f-1760b0418b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d49e783-4656-42c5-9e3e-9fdad7ad97ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832b0445-14b1-4411-83d8-076fbc507c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdc994a-9c51-45ee-bc2b-2d873c418c67",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f6d603-2e93-4dd0-a05e-6fe52ee1cfc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6663c4-a9b4-42c0-b7f5-e411155d5ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2658dd-356d-4b42-85e6-3db365e2e071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92796ef2-ade0-4fa4-9c79-5b5a775c6230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5837bb-5314-4b3a-a383-4f3ed3c6c3ee",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d803ed8-1a7d-4e3b-8da7-b2203c2e9fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46a4add-c80a-4953-996a-252e335d591e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc8ecda-011c-47cf-8744-12bd32992758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10612b9c-f567-41e4-8bf7-27b8f2d198f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c33276-0c0d-466f-981f-6bde8fc7ce22",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e229bfc-4bef-4eb6-9808-2ae0941d27b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2358d3a5-adaf-4780-b02d-c940c51f38d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423902e3-69f9-4401-abf6-2e065f22b7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d35a5d2-44b8-45ea-bb1c-9db6c1a8ec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4904959a-4eb8-445a-8d1d-96da87073616",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ad88d2-8eee-4b9e-ae16-0605d9a3331e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233d4f73-bfa6-4440-a598-a5bab0db5466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1611cdf-d8ac-4f63-a945-efdaee530dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c42fa-c74b-49d8-9468-33e4f3fe063d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ea4dd2-f6cb-47fa-8400-502c5a708531",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96306d6d-51bc-4050-92f8-7e754daee60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653ec1c0-0cca-49c8-88fe-decf0a249f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa666a6-be1a-4119-a06d-49291e2b283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed93a09-69ae-408d-bdad-4319b5290318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9983c0a-b8d3-4539-ad7a-f45f1c1e87d9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc43a68b-c1b3-44da-8c89-0464eace2550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31776a80-28fe-4c11-9c2f-eb3aed7bf1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e0b664-3466-43fb-a9de-a5b8a5b3f51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e46893-f585-4fc3-af3e-d7466309c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5fe443-17ad-4de7-9226-5b0cad849919",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d809d0d-b424-4d41-b2e6-c7c8784f4e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844a8374-6879-400f-8dbc-bbe307bc3e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378441a9-ea7d-4f7b-8196-0af4a9774157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3083dca3-1694-4892-bf78-3db885ccc6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4205e780-61d3-4559-98bf-0a8e6943d450",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391072cf-39f4-4464-90c0-ecbef6dcee3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8593c6-c3c9-47f5-a1c8-0d1aed24d8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35eeddc-acc5-4ecf-a14a-45ff438ff1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c85afd-5b3f-44c2-8b33-9e11e262d9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40df94-50c2-46b5-adbe-97f761d95077",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d4436d-1f68-4adb-bbc6-a1a9552a3969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d333a478-9d18-470f-8167-aad1682fd222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e599d752-5cc0-4a5b-a68f-11f514c984f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a94130c-654b-4d9a-80f2-4a07bd5a3873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24312a54-fbd9-4315-a283-93c35a0f4b68",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f6ecd5-6b4b-4861-bc9c-249144721df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154f2b25-79ef-4dec-abcb-0ce3d093f287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d16017-8475-4b82-afe0-79173ead1d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0387be09-b65c-4d03-a66e-64bdb9942ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5a0057-01ac-4b8d-840d-0a19e22abd66",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67f5d6-c48a-4ae2-93a8-4d644d29e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b823b53-547e-47cd-a9a8-4a70a1424125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dc2303-3328-43be-aec0-fef3864bf3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74f9451-c38d-4e89-aaba-b72802883fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62c5576-f25d-4999-ac63-8c765c9ee5ff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450405e-225d-476b-a2fd-b7862d852c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5beea22-8ae5-401b-aade-e8449dcea025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ca2b22-1e41-4931-8bc7-ce1f6118299c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca63e7f9-f880-4663-a6d4-5791a3321675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548fe14d-2427-433c-bb8a-6a96dfa767c5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe94fd2-a40b-4ab7-948c-cb4d7237ea61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac6413e-2ebc-4a5f-b545-37d3dfed08cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42da6d81-763c-4e5e-9571-5f9f60218385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce67b70-78b0-4bdf-9138-1ff7f8c12dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea8d733-0b48-49c8-8351-8d37f8508690",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b548ed-6266-426f-a7c9-4e1f9cdf5b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1636be-6690-465d-b358-4fbfb1ac60be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878afdf1-4b46-4379-8355-1655ea5df5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cdd6c2-e5a4-423f-81a9-357ea78e3d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7810f18a-0567-4fbc-82cc-ed518dd29299",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b254ad9-752a-43ea-9460-da235dcfc1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87acae9-b1a3-45da-9395-641693fdb9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a430e0-a440-4f08-a987-fe4681ad4e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323f05fb-3f61-44c9-a8f7-ff20e92a46d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad041c5-7de6-46f1-ac88-c38e043e1870",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0385681-7f32-4b91-9973-cbefb6053a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79a96fae-0c80-4b0c-b0aa-78dc1a727e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbe6e4-35c4-44e8-81cf-e98475f15331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc84d2f1-cd5e-462c-8594-eff645010c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc7dbb8-2c0b-42fa-bce3-05dbb3da134a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9dac4a-3e16-4a35-a62e-a10ac36ba35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d4ebd2-d1a9-4f49-aa31-197456d98097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baf57e2-11ec-4635-91ed-a555b4a65151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31091c0-006f-47db-943d-23364d098ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf974b5d-542e-4286-9b76-951a203a5f96",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1bcb30-4293-41b8-bfee-c5773c0a97b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93ca86a-df51-447b-b5b4-4552abd70ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559f6511-522a-446d-95d2-4c2ce2ca8560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7a59a0-b275-48c3-88ff-1a1ba82348ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b74c1-18de-4a35-acbc-8416b1458ee2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f92f5b2-4499-4091-a3dc-9bfd380514d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3856a5c-a637-4876-b589-8749efca7fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf893574-6d2f-4d72-8a79-8e72dd8a6799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fa0f1f-aeda-431a-8eba-6f29a02e172f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e935597b-7839-4547-92c8-6636d3b4b10f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adef27e-7394-4019-aa61-51e6997f3ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02eb0b8e-05ac-43f2-936b-768ae2726411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8793ed2b-5228-4e28-907f-4902811e04e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4273c33-97b5-4410-9b26-55f4de6b945f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671e6091-09be-437d-98c9-59ff48afc6ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e768361-8a32-4711-bfcb-20b54dd0cae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95f4ad3-8eb2-4285-a36c-e6700d7975cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcb477f-de87-42cb-8ba0-4d817f324ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb802229-28f9-4b67-94cc-07e1236e5b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd6b54-eda9-44fa-8dcf-bdd80919745c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76b4bda-bd75-48d3-b724-993281ed5377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a105f2c-ad70-4fd9-906a-971bb36025fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555b5e8b-8f75-4987-971d-0d0be353f284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec9e044-f6fc-4abb-901d-e0caac0d114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ec8764-268b-42ac-93e1-1c3363150a52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca5aff-ac53-4108-80a6-149d62767ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5a17a8-6a54-42df-90b0-3894080a2bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cdd211-20b6-4ccd-bc9b-f1f546d414d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e787b41b-46bb-4fe8-8f74-7d4621596541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a61e333-e2c0-4206-b1e0-6328099479e6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6747a6-be1e-4a97-a488-2e2ff516eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4935f49-d3ad-4df1-8f3f-7dd1ae42eb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a716c680-fc1d-4eec-a0b6-e12f119aea2b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da9509c-68b1-4404-86bf-c674f7e45b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad54b5-b764-4f77-8d15-9b6d5e09286e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16e73bc-18cc-4afd-8464-8235347b37b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0adf9694-f502-4f81-b6c7-88726cdbd05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4c87f9-a03f-4488-a178-5591effa8911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b30d3d3-64b0-42c5-8c8d-aeb3d6421478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82325f29-ede8-4d0e-aa87-619f3e105609",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a834a5-2813-4449-9001-fe07f2caea91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70de5f8d-b28c-41f0-b748-58a997822b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5a5308-126c-42cf-a95a-e2b2b7a5b2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7b1271-a270-48a1-bb90-98fef50e8db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4043ee32-5ca7-4ad5-b450-da6abf3bc2a3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8022c544-e672-41fc-9f7a-ac05cbd1fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69b4e4c-fded-4b2f-af8e-7495342619ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ac4b4-3e1d-4c87-9076-bbf8f800f580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75482b04-4242-4397-8dda-2dd4a8d650c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9cedea-5b30-40de-8259-1b7bd048882a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9f5405-4fdd-41cb-8dea-23ac55fa3755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35514523-4152-47f7-b727-86af4406b8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6115abe3-d367-4bba-a087-37f0fc9627a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e6504a-ba37-4c38-a785-4d7e4e6e4077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b350e8-a076-493b-b4c7-953b5c951e12",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637eb7dc-07d1-45e2-a89d-32133bec40a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20dc55f6-36c4-454a-ab24-f09b2507d767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56415fa2-c8e6-4c14-a341-7a33256d05fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aaef4b-e1d4-428d-a2bd-864c0468432f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aded723f-453a-4e69-9d0f-7e02f2c94e0d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b53ccf-ecb1-4841-927f-2f0630317e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f78c653-2173-4d2e-b835-64f656aeaba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18befca1-4b9f-4b03-a056-7c1a1a28ef02",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab70c08-48d4-49d8-8497-4ad3abe3c4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576be129-da70-4153-a379-69d9eb382a99",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e5ad19-b8f9-4965-b3db-37708656df48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1d54eb-6114-4d51-a2e4-a0a85332cbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9d36ed-51b2-48d0-9483-7705b2389037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea78b65-ec08-4630-8acb-c43530cf9ccc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da9d3203-9b4b-4552-a03d-335e3b543551",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71be1790-3aac-49ea-a33b-6a508d893d17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b464239-4cc2-4a75-9594-637e37877495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b58d020f-e464-4655-88d4-1abcf97e4052"
                    }
                  }
                ]
              },
              {
                "id": "b0a80e5c-7427-4f04-b301-3fc5fcca4824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "baa3eae5-1714-4c27-9977-0e46383c0a82",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620d5593-0cbf-4b1c-b6c2-b3b16fb7ce21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bd41f374-dd71-4346-932e-2789d035332c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b465b3aa-cd9f-4171-9ed1-b6a6611dc785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "867fe872-714a-4aba-b7d3-c0a7f568983c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed6a2e32-64cf-4db7-94e5-de7486a3be31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dccf19e-e640-406d-8bed-fa44aede824b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "418cd61e-5230-4a2b-9faa-c370749648ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9757afd-e2dd-4968-a460-bd7470cda834"
                    }
                  }
                ]
              },
              {
                "id": "f7512291-f9fd-48cc-8168-927b025e3409",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52140e64-549a-433b-91a0-dca95da2af71",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf5b92b-af5c-45fc-89aa-b22588c117bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "631a169a-129e-4ec0-869d-211a878d17e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbedebe-dc90-4788-854b-1d19d6a01316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b637f4f0-ba47-42a9-8a0d-9434c9aa95b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6912a9c-806f-47f4-959f-8ff103aad3ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaa801c0-ed41-47bb-9b3c-a0f9da32d2d9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f581bc-8cf3-4752-8caa-4e4027d5f8be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13f75039-d367-4684-97ea-a2f7d5fd4435"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef5813e3-f6bd-41cd-9452-0d31064c8f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8238129-c0f9-422a-ad66-9d6497bc8a78"
                    }
                  }
                ]
              },
              {
                "id": "039c4fe5-bc24-4e0a-9cbe-13abcd1fc810",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5361c6f5-e86f-40e9-be89-a589287b0a8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b737ae80-f978-47a0-8a12-42b4b45db3d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e16168d-4947-4c65-848c-e92aa8c9bcad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45a95ef-4ef5-40b9-8abb-3369a78bf5cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "104053c0-7a93-4650-9792-aee80a12f557",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "89e60b2c-6850-4e31-96fa-1f5ed69d0907"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9682930-3e43-481b-be6a-bd52e9a845ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9619bfe7-0c76-4c4c-ad6f-832201ed0930"
            }
          }
        ]
      },
      {
        "id": "6430ead4-5476-4997-85cf-6ffb5c22a28f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8e0ba571-9b48-4491-9792-3c42e03b810f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5b9f49e-90f8-4cc6-8384-af9b41b0ff81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bafe911d-7a82-41fb-a74c-fe4e3154decf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c1d154-0b81-45cc-be4d-d077d784e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b8778fd5-8d9d-473d-903f-c65e6784f928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66b08df-d848-4a80-bdcc-b3b03bdc6741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66f140fa-dfd3-4943-9509-d0d31c85869a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da5f26d5-af15-449d-9206-4979f9ad820f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51733990-22d7-45f4-8a49-571e96c6392e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cfecf12-9f47-4c9e-ac37-19a396c48d0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc90f15c-af20-459f-a2c4-6e3925baf37e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bbbe62d-75ef-48f5-9396-df531a10e69d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bafaf25a-393f-4c48-b566-8fbaf7ae61d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "757f6a28-1a85-4d2c-9bdd-6c910ea27202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad71479c-aa0e-449b-a10e-b6ca364503de"
            }
          }
        ]
      },
      {
        "id": "f640a129-28b0-49f6-b7c0-7211aa21cb6d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cddb629b-c7f3-4e80-a912-99345e0fdd2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a309a07f-e093-4c15-a0d0-f8efeeec0b99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c0a067b-5efb-4096-90a2-add7c412a64c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107080c9-611b-4aa9-ac8f-6f631e1cf815",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0503983-41c2-4238-aa7f-70e83ab2ae3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0771e90f-67e5-497c-8a12-f16501e775e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e23eeeaa-e654-479a-8a79-c98b6a86cf9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc7c6f6f-f1dc-4bc1-8adb-a0eb520d2b6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c483f752-87be-4571-b49e-16273ab6859a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce37e06-3542-4ebe-9799-b8269009b665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13b2cca3-d81b-43b0-94a0-ad249acd47df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d00a9bc-60bd-40bf-a997-d283804ac310",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82f56413-f15c-48a0-bf5b-dbd6ee507d02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12c869c2-5a21-4297-b57b-5b50ee6ba136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "022263cf-0b38-4b4e-a34a-804eed3311f7"
            }
          }
        ]
      },
      {
        "id": "3c5f62b2-8772-43d3-930e-180f609018e0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "80937686-fc74-46f5-ae1d-f298c39cbde2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84e03f4e-72d2-496b-b625-2bc36c2596f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbd0e681-1ea2-4855-87c2-8b38dfdc901e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96c4701-a7aa-489d-b12b-181c03bd55f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f31f2d-5648-4d7e-abb5-d77f03517eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9792a0-d753-4cce-94d0-39e78cc28565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc0d3926-b5df-4cc7-a1db-69833a4c325a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8781ee3a-03a6-4348-9793-73720003da98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab899594-c382-4d23-a449-d7e91df6e882"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46d1eae4-4b8f-4267-8cac-e7c97af0c889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "868085fe-fdb7-4261-850b-e4e5e060cc2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1203e582-c001-4010-b150-e04e874f7875",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4df5fb5-0129-458d-bfeb-9d1f1780ec0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd67413a-708e-41b7-abca-f1267e704ba3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed6d1020-19ba-4786-802a-e1806ae61f29"
            }
          }
        ]
      },
      {
        "id": "45786d4d-09ee-4460-8168-7697fca22c51",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "662aab02-9203-4221-8123-29a7bc190bc8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1af62f94-0b0c-4ead-b2df-ccc1c7caa4af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d46acd8-8155-4f7d-b4fa-c5eaf3d2ab09",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e0931a-5459-4b55-b9fb-60e8ddf98d52",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ddffaf2-683d-493e-ab53-0e4addaf434f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.12280701754385,
      "responseMin": 6,
      "responseMax": 2743,
      "responseSd": 339.37532243791696,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703291631327,
      "completed": 1703291672784
    },
    "executions": [
      {
        "id": "09a5d81b-acc9-453e-bb39-11555c2017e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "893e6406-7a4e-4a1d-aea9-596ef3e2a956",
          "httpRequestId": "6d900d54-0f16-4173-9d17-7d67b3043ea9"
        },
        "item": {
          "id": "09a5d81b-acc9-453e-bb39-11555c2017e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b74150bb-dfee-403d-8cb0-d7b4181949df",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "1c73447e-20fb-45ac-b116-9de020d206ec",
        "cursor": {
          "ref": "83e2317e-a12f-47b0-a225-886ca0f1862c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b3030180-dbed-4c1b-b24f-d4c824be3a1a"
        },
        "item": {
          "id": "1c73447e-20fb-45ac-b116-9de020d206ec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "32692245-8f12-429f-952a-14286d8b8a62",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ee54b309-7a4d-42b7-94b6-d787bbccc2b1",
        "cursor": {
          "ref": "b21b4adb-7e75-476b-92b0-b587120c060c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bff4dafb-2b14-4951-ae92-e1c3f80142d5"
        },
        "item": {
          "id": "ee54b309-7a4d-42b7-94b6-d787bbccc2b1",
          "name": "did_json"
        },
        "response": {
          "id": "c75a4ee8-afce-44d0-8957-a44c8145bd58",
          "status": "OK",
          "code": 200,
          "responseTime": 770,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baf08c4-b192-4f3a-9823-61e871a20240",
        "cursor": {
          "ref": "1590728f-3a5b-4414-99c3-5f76ba4fe14b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c7bbc36-7ce8-4fa2-9676-6bee61bbf31a"
        },
        "item": {
          "id": "7baf08c4-b192-4f3a-9823-61e871a20240",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e75748c-58ce-4558-bf98-142ed9550900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baf08c4-b192-4f3a-9823-61e871a20240",
        "cursor": {
          "ref": "1590728f-3a5b-4414-99c3-5f76ba4fe14b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c7bbc36-7ce8-4fa2-9676-6bee61bbf31a"
        },
        "item": {
          "id": "7baf08c4-b192-4f3a-9823-61e871a20240",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e75748c-58ce-4558-bf98-142ed9550900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18faa9d5-874b-4d27-91ac-92ce62d98097",
        "cursor": {
          "ref": "23a673a0-b6bb-4e53-b0f6-b06ca0bea67d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "baddfa3e-9196-498a-b996-49cd158603fc"
        },
        "item": {
          "id": "18faa9d5-874b-4d27-91ac-92ce62d98097",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97ce48c9-7130-4c2f-b9d9-84416ee0525c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfe2dd9-d5da-4078-ab01-32a03493a3d8",
        "cursor": {
          "ref": "a29ef89b-2a4a-4bc2-8dd4-18ad4cf00d29",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c58b5f6d-aec4-4f1d-b2cc-fe0ed19ffa74"
        },
        "item": {
          "id": "7dfe2dd9-d5da-4078-ab01-32a03493a3d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "66aeae60-1d61-4b86-8d9b-ac5884cb01c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71abd76-300e-4e93-96b3-2338fa3157a1",
        "cursor": {
          "ref": "2a5029e6-738c-4e8f-86a2-1beb377f161e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b5b83e1-a15b-48b8-bde2-6096dc2d5fa5"
        },
        "item": {
          "id": "b71abd76-300e-4e93-96b3-2338fa3157a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ba99c033-4bb2-4202-943f-7921f4c14b5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68206c5-e897-4bd3-a2b3-df1236e3a0fe",
        "cursor": {
          "ref": "61ea94bf-4fce-4d1e-b6ae-55e918c6829a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b0bd11e-0ad6-47ec-9b0f-3c5535d90941"
        },
        "item": {
          "id": "c68206c5-e897-4bd3-a2b3-df1236e3a0fe",
          "name": "identifiers"
        },
        "response": {
          "id": "7353d80d-a3c4-4811-b5ab-dd9139349155",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f12f082-00ab-40a4-b397-dbfb2a69da79",
        "cursor": {
          "ref": "d269eb95-afb1-43ac-be3f-8d41fd04ef60",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1df557c7-b87f-4d75-a4f3-4b86ce0e0715"
        },
        "item": {
          "id": "8f12f082-00ab-40a4-b397-dbfb2a69da79",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "be70a0ac-dfe4-47d9-9c0d-c5c69e123147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa32e236-1b33-44dc-a669-05212b117586",
        "cursor": {
          "ref": "77434439-6c5c-4674-849d-e7c900660fba",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "af18d310-48ea-4334-a8e1-cb1dc7a1fd2e"
        },
        "item": {
          "id": "fa32e236-1b33-44dc-a669-05212b117586",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a473816-b8cc-4a06-82ae-08610861e7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a145d64-805c-493b-bce0-8e42df36675f",
        "cursor": {
          "ref": "12dafd16-89ca-4666-87ae-b14e80914934",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fc64703-237c-4968-a671-9dca541eb4c4"
        },
        "item": {
          "id": "0a145d64-805c-493b-bce0-8e42df36675f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "246edcb0-16b0-4b29-84cf-f15960549d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a01e65-7d85-45f8-8b0a-77012fa9c762",
        "cursor": {
          "ref": "f4d74eeb-2c71-4808-9a7e-41420ea99c57",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9a119c75-88c1-4e07-a67e-9aedf343d5f2"
        },
        "item": {
          "id": "47a01e65-7d85-45f8-8b0a-77012fa9c762",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5578dd4b-3e1a-4514-a39e-9b71539a9c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682ef7bd-36ff-4019-ac07-abac17abb272",
        "cursor": {
          "ref": "7a566831-5bec-4fb2-a3f4-a7b821975b2c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e9f8c6a3-3be5-4c2e-95a2-338b859b6e69"
        },
        "item": {
          "id": "682ef7bd-36ff-4019-ac07-abac17abb272",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "efc96b45-3cca-44f5-afd9-dfc7d8bedbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80072e71-bbb6-49ce-a0f2-7c116b198939",
        "cursor": {
          "ref": "34d9c55d-062f-44b6-af08-4ee64322d74a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5ee2fcb6-d1c8-41da-beaf-5f72d93f7721"
        },
        "item": {
          "id": "80072e71-bbb6-49ce-a0f2-7c116b198939",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "967a0f0a-f671-4c2c-aeac-2169f6dc4a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dd80c8-12e3-4e19-b5bd-357632b73572",
        "cursor": {
          "ref": "10345e69-8773-49e1-a9cf-07adae626cb0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bf552a53-ae44-41a6-9eb0-469bac7456e4"
        },
        "item": {
          "id": "13dd80c8-12e3-4e19-b5bd-357632b73572",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce122f00-9ce2-4fb9-8def-10d2ddab4d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba296d5-eeb5-4a31-8976-d46ec97f7559",
        "cursor": {
          "ref": "29b0ee40-4d74-4fe2-8ca6-c92042c43f7f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "da3048f0-ff24-460d-a396-6ac75041a99b"
        },
        "item": {
          "id": "1ba296d5-eeb5-4a31-8976-d46ec97f7559",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e9e99cc7-a482-4511-8894-25bc43669e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ba45e1-92c0-463a-80eb-a3457f7fec2e",
        "cursor": {
          "ref": "0c015672-9398-4172-8a04-2f93d08a48ca",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4d44d3e2-90d5-4617-bf2d-9a8e4ef1ba9e"
        },
        "item": {
          "id": "b2ba45e1-92c0-463a-80eb-a3457f7fec2e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a33cd407-4d69-451f-882d-2f57eee079c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112c09a3-b182-495d-97b4-f989fbbfcb91",
        "cursor": {
          "ref": "9129641b-3a61-49fb-ab8b-099b14f98180",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "784d384a-09fc-4d0e-b8ff-ae33d37a9a69"
        },
        "item": {
          "id": "112c09a3-b182-495d-97b4-f989fbbfcb91",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f3a480c2-8b1f-4dcc-b33c-b677079eabe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49694a-a0fc-4c9d-8412-b6cb49024b0b",
        "cursor": {
          "ref": "7b4c0c09-9aa5-49e7-a686-1c1d9ee85b72",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "718d9ef5-0cd7-49ec-932b-20bd4d222eb3"
        },
        "item": {
          "id": "5e49694a-a0fc-4c9d-8412-b6cb49024b0b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72bb42e0-6ec1-455e-ac18-bb87b0be9605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25ac0d-b60d-4c0b-bb7e-e70ce6d47037",
        "cursor": {
          "ref": "92e2d34e-0b95-4697-ac68-361333c747b6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "34ecc1d0-56aa-4af7-af24-09af7f063935"
        },
        "item": {
          "id": "aa25ac0d-b60d-4c0b-bb7e-e70ce6d47037",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "71120f71-66be-4308-b4bd-e80fadd5ba85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422ec115-0964-4874-b14d-9086caf3a6ba",
        "cursor": {
          "ref": "579dc25e-e89b-4861-b17e-3b82ba3e7511",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e0584e6e-ceff-4568-b90f-6959b4f1a9dc"
        },
        "item": {
          "id": "422ec115-0964-4874-b14d-9086caf3a6ba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9e5e0fe5-7d12-4dc5-81d7-09f46a753a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baecfbf-c5d0-4f5a-9677-684fadbe782f",
        "cursor": {
          "ref": "722dc042-83c0-40ab-bf7c-e8e8a1d17626",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "05d428be-9ff1-434b-9e46-2850e6f0b073"
        },
        "item": {
          "id": "4baecfbf-c5d0-4f5a-9677-684fadbe782f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6768b819-9e10-41a9-836a-2b3c1fb0707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701249ce-146e-46b4-8f56-cc153e8ff8b6",
        "cursor": {
          "ref": "30ce54a9-0332-4961-bf5b-62e150e5714f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f5f67c1f-712d-40ea-bf6c-e8e5c42540f4"
        },
        "item": {
          "id": "701249ce-146e-46b4-8f56-cc153e8ff8b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a371c8a-b405-4fa6-a3e0-fedf6231c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a470fc12-bc19-4e4e-ab4d-5690bbea0a14",
        "cursor": {
          "ref": "79a1024e-01f2-4569-a57e-7504219c285e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "74390ad1-abc1-40f9-ad01-bc4e19a72d99"
        },
        "item": {
          "id": "a470fc12-bc19-4e4e-ab4d-5690bbea0a14",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51b3f0bd-5990-492e-bfa5-46aad2b1844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849425ae-9fba-4f5e-9e79-15164b49e544",
        "cursor": {
          "ref": "bbfbfdcc-c16d-4498-b67b-2987ae6c3dc7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d6f8714e-be67-43d1-805c-ff018e57730a"
        },
        "item": {
          "id": "849425ae-9fba-4f5e-9e79-15164b49e544",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "076e6956-cc85-4c78-83ec-c8c874645781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df589586-8e03-4a0b-8595-e4fbc4898365",
        "cursor": {
          "ref": "672c9461-d157-4203-8a44-d0de3cb1b41b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "14271cb1-151e-4859-94cd-9b18019d881f"
        },
        "item": {
          "id": "df589586-8e03-4a0b-8595-e4fbc4898365",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f5359581-b1d1-4e7b-8b88-5d39199f1923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac4b8f-08d2-4cf1-9615-ec2a785061f7",
        "cursor": {
          "ref": "2763c3fd-1aad-4177-8ea1-865fb24d2dae",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58100199-ba55-4f26-8989-5a6eae70c619"
        },
        "item": {
          "id": "a3ac4b8f-08d2-4cf1-9615-ec2a785061f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bf78c4b-183f-40e8-9ff4-d4c6d40fed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f254cd2-ed5a-496c-9966-89c8fecbee06",
        "cursor": {
          "ref": "8cb6e57c-952e-4c68-9633-f34f98b5b953",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9d099e0b-3996-44f5-b5d9-9df346fe8f40"
        },
        "item": {
          "id": "1f254cd2-ed5a-496c-9966-89c8fecbee06",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "98e9eca3-c0b1-43a0-bb5a-4c9a09511e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386c3deb-8e5e-4650-b613-e5399aca30a1",
        "cursor": {
          "ref": "f4c58176-153a-45fb-9a40-11beab485c15",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "01bbf43f-c5b9-4891-b419-962e635c26db"
        },
        "item": {
          "id": "386c3deb-8e5e-4650-b613-e5399aca30a1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8675b2b9-2eaf-43b2-9632-d666c508fb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b408ca7-c912-43a1-bc35-dacf960963dc",
        "cursor": {
          "ref": "85eb7ea2-4c59-4e43-bec8-e321ea667c28",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d5869c5c-8275-4fe0-b014-0d86083aa1ef"
        },
        "item": {
          "id": "9b408ca7-c912-43a1-bc35-dacf960963dc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb519a13-82d1-499f-8033-ae62df19fc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce1c4ee-5227-4c5d-89f9-342cdfc25218",
        "cursor": {
          "ref": "a4e86094-4c8b-4a38-b869-eb2a2ba2bb38",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd09237b-6682-4be4-b94b-5ed2453e8cd3"
        },
        "item": {
          "id": "bce1c4ee-5227-4c5d-89f9-342cdfc25218",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "71a53ff1-e004-421e-a5c6-c5f3ea2fec59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18b7739-9129-409c-8c15-99a459c6c88f",
        "cursor": {
          "ref": "072d0a09-6c2c-4428-afd7-760479d1ef3e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "73eb9517-e127-41e3-8960-1970651e7552"
        },
        "item": {
          "id": "d18b7739-9129-409c-8c15-99a459c6c88f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b584742-7439-402e-a711-52136c2defc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c81bed-e660-4c1f-9cbb-e3f2073342be",
        "cursor": {
          "ref": "d2d715df-d7ed-4e44-8435-6a3ffb0d4d35",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "af3ae819-9c50-4a5a-bb73-7f6681228f53"
        },
        "item": {
          "id": "e5c81bed-e660-4c1f-9cbb-e3f2073342be",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4fdf1343-775d-4ecb-8c09-10641ce4b25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80769c9-10bd-4305-a280-c4690f15164f",
        "cursor": {
          "ref": "59632155-6167-4df0-93d8-2361441879aa",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5455be35-45bf-4240-9d1c-9af7a258d2e8"
        },
        "item": {
          "id": "d80769c9-10bd-4305-a280-c4690f15164f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "df83adc4-15bb-41b8-9339-b4a901ba5b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34867331-ac4e-48ac-962e-2f70d3f8f5f4",
        "cursor": {
          "ref": "ec883863-6cad-47ce-ad75-a54043b541fb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "904dee7b-04dd-4c71-aa1b-1534206f6ef6"
        },
        "item": {
          "id": "34867331-ac4e-48ac-962e-2f70d3f8f5f4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f04242c-be78-4430-a2a1-bf4fcca26658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a73fc-1a2a-4288-8a59-bf6dc23c892f",
        "cursor": {
          "ref": "e943fe30-d9c9-48e4-b49f-a366644d013c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a4512516-db19-4cd4-b286-320a76423542"
        },
        "item": {
          "id": "678a73fc-1a2a-4288-8a59-bf6dc23c892f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0eaacb24-1e73-480d-96af-9e71467cf4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667e9105-4ed2-42ad-8dde-15407a17036b",
        "cursor": {
          "ref": "fc8b1577-be32-4558-8023-57708af83134",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2f5fe7d-221e-49b0-bba5-c4d9cdcf0d57"
        },
        "item": {
          "id": "667e9105-4ed2-42ad-8dde-15407a17036b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1a98a39-41b7-4064-a3fb-b1e6c17adb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5a2db-6cf8-4882-af8c-8af15538e465",
        "cursor": {
          "ref": "b2ccd16b-b8dd-490d-b4a4-80e897cc46a5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3eb69401-e2b9-4de5-ad00-7abe2ad53538"
        },
        "item": {
          "id": "a9d5a2db-6cf8-4882-af8c-8af15538e465",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f4a85029-05e6-41d5-bd0a-681976efc427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f8389-20ba-4459-9bd9-b18803b781cc",
        "cursor": {
          "ref": "f6731540-b979-43f1-b7f5-9bced6c2bc64",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d8a3770-572e-4591-a802-17c1a701206a"
        },
        "item": {
          "id": "254f8389-20ba-4459-9bd9-b18803b781cc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cc7e065a-3ca6-470a-8455-8cdaf3a19228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef21dba-13c2-4a1c-be98-ff589e5cf88b",
        "cursor": {
          "ref": "e0548a11-9b67-4db0-b2c5-01b7b0622be7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3e7d05e3-cba3-48bf-b1e8-fbf8f23c4e41"
        },
        "item": {
          "id": "5ef21dba-13c2-4a1c-be98-ff589e5cf88b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9de09f17-a1a7-4873-b1c8-39e404ae3368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e7ebee-0766-434a-b947-da37de60b59f",
        "cursor": {
          "ref": "0df978d9-847e-45c5-8ca3-b5b0ee7e0702",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f49e6cbe-3352-45cc-8b80-0979c7f2e634"
        },
        "item": {
          "id": "b2e7ebee-0766-434a-b947-da37de60b59f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "21d24458-b2a1-45aa-9026-7eea5765e99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45181536-d4ae-4fe8-8402-cc7c6428a384",
        "cursor": {
          "ref": "e05f6e5b-7426-4f98-b643-e883b3627354",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f57465d0-a731-4cb5-bca7-3abbeaa27cb1"
        },
        "item": {
          "id": "45181536-d4ae-4fe8-8402-cc7c6428a384",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "84e68afd-60a1-4e9a-a2dc-1d9b66d0c1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b924002-fb4b-48ba-8d07-1228f0991aad",
        "cursor": {
          "ref": "2dd1be80-9eba-4666-ad0e-11c8d6f2daf2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf5e49d4-9dc1-466a-b1a7-9829e1b7425e"
        },
        "item": {
          "id": "9b924002-fb4b-48ba-8d07-1228f0991aad",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e2bfcf02-69ac-485f-92ba-86a156a22310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6445b8-cbdf-490e-a2c1-8eb2d33e2408",
        "cursor": {
          "ref": "3b09de94-6f9e-445e-b46b-8a7d69dd11f4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "54474e01-56e4-4fe2-ac5a-608123d0e9d8"
        },
        "item": {
          "id": "7f6445b8-cbdf-490e-a2c1-8eb2d33e2408",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d8d276f7-3926-4157-816b-ce7326ac9217",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 327,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba7caf1-0618-45cc-856d-52e98e474e67",
        "cursor": {
          "ref": "19fa4b12-4494-4670-a21c-660a34b6aeab",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6999b783-aab4-4704-99b6-de454d55138e"
        },
        "item": {
          "id": "9ba7caf1-0618-45cc-856d-52e98e474e67",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "148909a6-e6e2-4a90-944c-82bf7490f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d0435e-49a2-446d-8c74-28c4fbc636b8",
        "cursor": {
          "ref": "bee6d438-4165-4aea-80e7-e843f3ea7c7c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "074f3026-926b-40ec-93e7-0f49bda6a9f1"
        },
        "item": {
          "id": "95d0435e-49a2-446d-8c74-28c4fbc636b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "066b5e11-4f91-40f6-bd9c-d3ee5286fa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db20e73-ef58-469c-8d3d-3aaec31e6ee9",
        "cursor": {
          "ref": "415aa8b0-00e8-46c7-a874-06335c1a6c53",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2c177c7c-bc35-49f6-b5b8-32b875cd1c4e"
        },
        "item": {
          "id": "2db20e73-ef58-469c-8d3d-3aaec31e6ee9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ae7505a7-06bd-432a-b99b-e7f595b50543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8befb67e-e1be-47a6-bdc4-31f4d6094b79",
        "cursor": {
          "ref": "8404f3ae-bb18-436b-b937-62eabd6bf5c4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3bb9d8a3-e786-4734-b35e-6c796dd49bfc"
        },
        "item": {
          "id": "8befb67e-e1be-47a6-bdc4-31f4d6094b79",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "94b89bfb-5f9b-463d-8230-8f666a9cb938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c39916-2125-45f6-8ac2-50a2e7ef00ef",
        "cursor": {
          "ref": "6276bc01-5cae-431e-b3fe-c0244394b3e5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e526c01e-0851-4f90-9911-6e9f2b1e855c"
        },
        "item": {
          "id": "21c39916-2125-45f6-8ac2-50a2e7ef00ef",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a43c3e4-3ffa-4277-bf41-1a874a140db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6851baaf-d66f-4d87-9cb2-052d5b284540",
        "cursor": {
          "ref": "da7e67c3-1430-4e9c-b5de-b23a87a6848e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a2628c1f-fa49-4b81-815d-c4d224747013"
        },
        "item": {
          "id": "6851baaf-d66f-4d87-9cb2-052d5b284540",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "61499a37-2d10-4d84-8ade-6ab664271994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353635e-c639-40dc-b435-aaf8821dd7d0",
        "cursor": {
          "ref": "481d5bcb-6f58-4fb5-a7f6-151edd2faabd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d71b6b94-e333-4a89-9def-89eb233fc992"
        },
        "item": {
          "id": "f353635e-c639-40dc-b435-aaf8821dd7d0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f1fbf84-87db-4c90-a191-9a2cf617c83c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 319,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff2913-1563-4a40-8a8a-71017d2f337b",
        "cursor": {
          "ref": "3d26d018-090d-4c30-9645-eeadafd94a04",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ddc643d9-dcd9-49c4-bcf3-5a5af6b47a96"
        },
        "item": {
          "id": "86ff2913-1563-4a40-8a8a-71017d2f337b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e845b1e3-a9f1-49cc-85eb-c51fb4c337cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec056ec-2ef4-473c-8cf1-27da565d1da7",
        "cursor": {
          "ref": "2b696894-dfa5-444c-a563-d1b21942d6a8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aa2cfa8e-bce4-4b7a-a928-d3e7590a5024"
        },
        "item": {
          "id": "6ec056ec-2ef4-473c-8cf1-27da565d1da7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5c7f071d-1a91-4bb4-8871-4c0494190b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b48f77a-a16d-4e61-806a-094c85b9c7b1",
        "cursor": {
          "ref": "edadfdbe-5db8-4af8-b95e-543185b1d2c1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cf37522b-c0a0-4541-a7c7-1126903e9d49"
        },
        "item": {
          "id": "0b48f77a-a16d-4e61-806a-094c85b9c7b1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b90049e-d065-4f04-8a21-6f9fb7c34fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7707252-2552-45a3-9aa3-3bed743e2b02",
        "cursor": {
          "ref": "2fb35c29-faec-4dd2-9f99-b4b564c90f0b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7203df00-96ab-4b44-863a-0581ced108ba"
        },
        "item": {
          "id": "b7707252-2552-45a3-9aa3-3bed743e2b02",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d72245a9-70f7-4c6a-83d3-d854d60436cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ca268-6400-4eec-a491-a3f0b2c1097c",
        "cursor": {
          "ref": "612b4e49-e913-47c5-8e08-d8bb856552f9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f529eb32-6edd-4c56-95e2-00119af3572c"
        },
        "item": {
          "id": "1f3ca268-6400-4eec-a491-a3f0b2c1097c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "db2490d5-0dd1-41a4-b8a4-0bd7d18f3135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d8299a-015f-42dd-9a0f-80445296f0bc",
        "cursor": {
          "ref": "a370db0d-4e1f-40ce-b722-e8d1e1aa7b71",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a46e1d13-38ff-412d-9f3b-95414291e683"
        },
        "item": {
          "id": "77d8299a-015f-42dd-9a0f-80445296f0bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef82d8b8-9510-45fa-a739-c44a5d857f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb8286-906c-426d-a18b-b6c359d8d4f0",
        "cursor": {
          "ref": "fe147fca-f8e4-4b9f-b46e-d7694a49fb93",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ad2e4c4-79f7-42b9-8398-8f71ac1f612c"
        },
        "item": {
          "id": "dffb8286-906c-426d-a18b-b6c359d8d4f0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a91ce653-4fd9-41cb-a3f8-24c78fe3f16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734fe4b6-8d84-49d3-9eb0-5359459bac96",
        "cursor": {
          "ref": "ef64064c-c7c0-412f-8d77-68dba0973623",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fc56c812-16fb-42fa-8100-22373a37feff"
        },
        "item": {
          "id": "734fe4b6-8d84-49d3-9eb0-5359459bac96",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8f3be49b-0b19-4020-8aeb-68e6135df0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec09892-1405-401a-9dae-53915a280126",
        "cursor": {
          "ref": "30e26f0e-f3c6-4d32-aab3-3ebc74aeddd2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9ffa9167-26d4-4032-a408-24b48f07d4e6"
        },
        "item": {
          "id": "4ec09892-1405-401a-9dae-53915a280126",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ff9f1e66-9bad-4fe9-9c62-975ec753f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c95331-d799-4ff6-b5aa-31bf47b9e2df",
        "cursor": {
          "ref": "4f20526e-53d7-4c62-bbc0-497483222ff6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f0245d00-adf4-4255-8ddd-3a942e0b900e"
        },
        "item": {
          "id": "06c95331-d799-4ff6-b5aa-31bf47b9e2df",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e3e3cac1-4e3e-4914-ae62-9bf7c57cf041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9539f1b9-2b78-47fc-bc2e-9215781c8408",
        "cursor": {
          "ref": "7eb1e74f-55b0-4701-8127-87d7578856bd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e3404ec5-c145-4a77-8442-bacc66e12b8a"
        },
        "item": {
          "id": "9539f1b9-2b78-47fc-bc2e-9215781c8408",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5663e480-e929-4bf6-a52d-4c4b3285042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4212d629-12d6-4b23-9d63-3652484ea81a",
        "cursor": {
          "ref": "1cfb5ecf-d8ff-4ea9-b77f-234478e294fb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "badb6db4-5607-451f-b58c-593fb0a1d39c"
        },
        "item": {
          "id": "4212d629-12d6-4b23-9d63-3652484ea81a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69b1a85c-ce81-4c5c-bb11-40ee955d71c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501fa287-3c83-43af-a45d-253475f1caef",
        "cursor": {
          "ref": "b57c53f6-eafd-4305-be9f-09f4c02b7e97",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b407c10e-e8ec-483c-b2a1-11927fb255cf"
        },
        "item": {
          "id": "501fa287-3c83-43af-a45d-253475f1caef",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bad42dc2-0955-42a4-b33c-eddd91a93e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a823b800-b543-4a83-970a-3ddf313a5f32",
        "cursor": {
          "ref": "900d148a-1618-4120-bad1-88f2d3885a87",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f8450cb1-85de-48d1-8dc0-d1362c268969"
        },
        "item": {
          "id": "a823b800-b543-4a83-970a-3ddf313a5f32",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9fcd8272-ad7a-49e2-8226-a8970e26ce33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2d0000-1bf9-4400-8cdc-cedd5bcaebac",
        "cursor": {
          "ref": "d4308f50-ec85-4995-8a9c-668715be4eb3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d4be0b40-18df-41f8-b3bb-a1789a8fcd73"
        },
        "item": {
          "id": "0e2d0000-1bf9-4400-8cdc-cedd5bcaebac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1a320530-1add-4c83-9054-b1fa8136a0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f24c79d-fb0d-47d6-aa23-00bd2d7f5236",
        "cursor": {
          "ref": "34a35e03-663e-4d4c-afe5-6b2a4744046d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e75da4df-66ec-4733-a5bc-187c3e4c9b2b"
        },
        "item": {
          "id": "4f24c79d-fb0d-47d6-aa23-00bd2d7f5236",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e8fa7257-b51c-4446-b26b-6aeee8596835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86968f43-f4b2-416a-a6a7-a31b76a7c4d7",
        "cursor": {
          "ref": "87050101-ab04-4e8f-82fa-72b52a35e9c0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f3ceefa-52b0-40f4-ac21-e8a42effe382"
        },
        "item": {
          "id": "86968f43-f4b2-416a-a6a7-a31b76a7c4d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "be955088-3a35-4ba8-9019-9081f841893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030b1a76-0aef-409b-b72c-274cf559b1a7",
        "cursor": {
          "ref": "ea8bde6a-fac1-468b-8e43-014cc6f7050d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "18d5487c-7f95-4570-b52c-1fb459549909"
        },
        "item": {
          "id": "030b1a76-0aef-409b-b72c-274cf559b1a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "279c18a9-6678-4a7f-8f0f-eccd7aa0e44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba3f59a-e1db-4339-bab6-30d2988f452c",
        "cursor": {
          "ref": "2d9fba88-1161-48f4-a232-9ac58e97f441",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "16f5e330-72c6-4511-80d1-6f317a5478aa"
        },
        "item": {
          "id": "cba3f59a-e1db-4339-bab6-30d2988f452c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2e42a17d-733d-4aab-a9d5-031814938fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8262fe-5711-4d83-99ff-5b6ea98f397e",
        "cursor": {
          "ref": "72942d74-da5c-4f1b-924e-1fce69c482ed",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52863d09-33cf-46a5-8cc4-59226e44b46f"
        },
        "item": {
          "id": "bf8262fe-5711-4d83-99ff-5b6ea98f397e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "97bdbb63-22d8-4c7c-85f4-6547e4206d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f5aa8b-6241-40d8-9531-9bc45448fa74",
        "cursor": {
          "ref": "52363b0e-aef1-40fe-bb7e-644cf6f5032a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df3f454c-0b43-408c-99a7-d3c2e2c8aabd"
        },
        "item": {
          "id": "e9f5aa8b-6241-40d8-9531-9bc45448fa74",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0b8f8e4a-37a9-4fc7-94fd-20aac48c8c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee2d18-0abe-44cd-9338-48ee14bf739a",
        "cursor": {
          "ref": "8b8c4758-77ef-4352-9c20-7e0c2935d8b6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d5ef4e8-9626-4475-8e96-8991e7d5e14a"
        },
        "item": {
          "id": "78ee2d18-0abe-44cd-9338-48ee14bf739a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "22ac3122-daad-40df-99af-7408ca0bff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ae3db4-c1ab-4c50-a708-3cdaf291017c",
        "cursor": {
          "ref": "01561c8c-eb98-4e68-bf6f-0f1deecb940c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e06cec91-36e9-4711-9caf-8fff7915dda3"
        },
        "item": {
          "id": "d0ae3db4-c1ab-4c50-a708-3cdaf291017c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aaa9f2e5-fb09-4d4e-bdfc-63b23b21cb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9404a0-7708-4f65-8e52-9c2d58c39eb7",
        "cursor": {
          "ref": "6a88f6c0-d7bf-458c-aada-5e7da21cae4d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7598be82-376d-44ea-9939-2e2cbbe2a4a2"
        },
        "item": {
          "id": "8a9404a0-7708-4f65-8e52-9c2d58c39eb7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "95330a20-f63c-44f1-9a7a-10d7879cf1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46f6926-2c87-4c7a-9895-8202c6161b87",
        "cursor": {
          "ref": "423f1868-a8ab-4a01-acbd-eba309b61ae3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2013bd47-32a1-4e7c-8fde-5f6b36c6dec9"
        },
        "item": {
          "id": "f46f6926-2c87-4c7a-9895-8202c6161b87",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fe290288-eae6-4e19-8477-915dfd302af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a535879-ac94-4ea6-8612-dbd50f2facae",
        "cursor": {
          "ref": "38a27a51-4a1a-4001-bc1a-94ff293f4a9b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6df5d881-66aa-448b-8fc3-faff58a7ff08"
        },
        "item": {
          "id": "0a535879-ac94-4ea6-8612-dbd50f2facae",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "86c19813-c275-4efc-a8ff-1ed1bf0d641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79529d1a-4c1b-40ec-a1b5-97909bbe58b8",
        "cursor": {
          "ref": "ca9553c8-8231-4426-9a3e-e2039643b497",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a2cba77-6962-4f8f-b12d-50bd78b20562"
        },
        "item": {
          "id": "79529d1a-4c1b-40ec-a1b5-97909bbe58b8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "60e79b96-6f98-4e65-bbf7-e94acc89c4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9864e559-02ae-4a56-a246-419050fedfd9",
        "cursor": {
          "ref": "7c430a56-3819-4159-89ec-d67bd1d210c2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "77ae62fa-ed90-48e5-b1c1-177a80c29882"
        },
        "item": {
          "id": "9864e559-02ae-4a56-a246-419050fedfd9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "254244c6-7b73-40bd-a0c5-614246567573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917b93ca-05e1-450c-9aa2-a09db8849848",
        "cursor": {
          "ref": "d1c75311-14e3-43e2-9cc4-bf5c62b1036f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e44b426-b767-4545-8b44-2f6211862e8e"
        },
        "item": {
          "id": "917b93ca-05e1-450c-9aa2-a09db8849848",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "67f25fe8-d5a1-4a79-b5cc-aac18e0ddc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec40792-0605-41e8-aa23-c8f76ae630f2",
        "cursor": {
          "ref": "b0c6637a-0875-4cb5-8d01-404994420b7e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "de10cd58-8898-4658-8126-6fb5f7c66bff"
        },
        "item": {
          "id": "aec40792-0605-41e8-aa23-c8f76ae630f2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6630343e-6c76-4b46-98d3-4a8b6a27b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe7d674-a4f3-44c0-b381-d12e6108b3d4",
        "cursor": {
          "ref": "83c5f2c7-4836-4586-92c1-51d28b9bda3a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e74b4524-0a2b-4a58-864f-9ff63d655edb"
        },
        "item": {
          "id": "dbe7d674-a4f3-44c0-b381-d12e6108b3d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98a74230-e7ac-42e9-a6d9-5ee1cd40e0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee8a539-6f8a-4f08-a03c-255bc4e4564c",
        "cursor": {
          "ref": "a8031b41-d55f-42a6-8f31-7ebd66bb2e98",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a551eaf9-dde7-4efd-8123-0c447564be62"
        },
        "item": {
          "id": "6ee8a539-6f8a-4f08-a03c-255bc4e4564c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c39e6fe-4efa-48c1-aded-e5341b1997e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b920e41-8f13-410c-92d6-a63025c85158",
        "cursor": {
          "ref": "115be0a0-1a5f-46f0-a69f-a2a991e44736",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2516605f-a38d-4ae0-a6ca-cf46d045fcd9"
        },
        "item": {
          "id": "3b920e41-8f13-410c-92d6-a63025c85158",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "005816dd-5d5f-4cb7-bbcb-3ef2372e385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d48791-ab3a-4cc6-a002-117b42d36805",
        "cursor": {
          "ref": "32461cc9-097a-4013-b4a6-a26a2d28488a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5e754c5a-8ac3-4029-973c-032797f7b17c"
        },
        "item": {
          "id": "50d48791-ab3a-4cc6-a002-117b42d36805",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "92ac310d-a00e-4481-8507-1ec9a0774d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b948f8-4a0a-4f76-a988-983d39dc34c5",
        "cursor": {
          "ref": "33738ced-7541-488b-afef-ee24c2783b27",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2347884f-3fc3-4c46-859a-3c96dc942829"
        },
        "item": {
          "id": "d5b948f8-4a0a-4f76-a988-983d39dc34c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8101ac7f-bd74-4176-8405-9b18bd41e97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851a0b5d-9bfb-4200-8efe-20f130fa3718",
        "cursor": {
          "ref": "8b7d01f3-367c-44ca-ac0b-0724aaacbcba",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e84d5dc7-dd17-4015-b524-6a926a057e8d"
        },
        "item": {
          "id": "851a0b5d-9bfb-4200-8efe-20f130fa3718",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "08a90893-0014-4650-a176-777107661fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261afb68-99e9-4559-a21a-36345a586a5d",
        "cursor": {
          "ref": "c82b7df0-333a-4e81-a0bd-e7c47b7f62ed",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f9e47bbb-941d-439f-93c4-854645a053df"
        },
        "item": {
          "id": "261afb68-99e9-4559-a21a-36345a586a5d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bae2b500-c6a0-40dc-ab36-436a67173d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683dd367-2c2d-4ed4-8b31-061bb245b5ac",
        "cursor": {
          "ref": "dd1bc504-5204-403c-8aaa-354671f7a7f1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8690181d-f0d0-45ec-be25-e5517ba1cf70"
        },
        "item": {
          "id": "683dd367-2c2d-4ed4-8b31-061bb245b5ac",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c5809d54-1314-495a-a50e-5955797a368a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bd514b-7789-4b44-b6b3-33a506cffec3",
        "cursor": {
          "ref": "dcbf31ef-3686-4f9e-b132-787491a713a9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "67ef0e27-add7-4ebf-be97-b17f350a648c"
        },
        "item": {
          "id": "e0bd514b-7789-4b44-b6b3-33a506cffec3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9907b9f5-1ffc-4ba7-b23b-baf4914cfbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41181bb8-f787-4419-add1-166c88cc798d",
        "cursor": {
          "ref": "c4cf2de0-fe79-45df-bcfc-b7bc32b14e5a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "575de65e-2491-4a3e-8df3-da9e5069c8c9"
        },
        "item": {
          "id": "41181bb8-f787-4419-add1-166c88cc798d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9e3aa775-91d0-4a15-9a22-92b4a1b3fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4654bcc1-bb53-4af2-95fb-05a1f66c85d3",
        "cursor": {
          "ref": "3e9a7637-6279-43b8-bebf-ad74a076706d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21b86774-b67d-4d4f-9bbc-45d40aef80c9"
        },
        "item": {
          "id": "4654bcc1-bb53-4af2-95fb-05a1f66c85d3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a97db1d2-c84a-40a8-a189-d5ce81376e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ba4cd-59ad-4c86-8ea0-de1894c0c0ec",
        "cursor": {
          "ref": "e43da11f-a134-47a6-9d44-c1fc088a6979",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b0b992a0-9af1-4af6-95ee-ca44ba55e402"
        },
        "item": {
          "id": "6b3ba4cd-59ad-4c86-8ea0-de1894c0c0ec",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f7e82b7f-c565-4c6c-8207-37c2c35c2d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6ee383-282b-4951-8e4c-ba0c02f8d1ae",
        "cursor": {
          "ref": "50f86f2c-efba-4dd6-a1da-7e6b400997bf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e3dbb465-0de9-4b41-a0d9-14ae87e579eb"
        },
        "item": {
          "id": "cf6ee383-282b-4951-8e4c-ba0c02f8d1ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c3dac4c-1e5d-4026-89be-d4d58172d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cb0a1f-0b7f-48a5-97ef-1ce22148bd63",
        "cursor": {
          "ref": "c52bc728-d9e7-49d6-a417-faf678670c96",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1dd84e90-6632-4880-aa4d-2269e053672a"
        },
        "item": {
          "id": "c1cb0a1f-0b7f-48a5-97ef-1ce22148bd63",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4daaa234-9288-4e01-9a36-81b9ad97fcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8292976c-fdd3-4795-843b-a2cd6051dc94",
        "cursor": {
          "ref": "178fa39d-bb70-4047-803e-4cbf62172b9a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8c4a95cb-6ca6-4b6b-a464-07206c340a3a"
        },
        "item": {
          "id": "8292976c-fdd3-4795-843b-a2cd6051dc94",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89b25cbb-4fe6-4dbd-8611-3bf5d2d08bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cc23b5-7bc4-47d4-a1fa-ec7a334bbe3a",
        "cursor": {
          "ref": "743ec3ad-6f89-4b2f-a793-a915890244d0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e0d9f25e-ab0d-4c89-ab50-72785eb7c3ce"
        },
        "item": {
          "id": "a7cc23b5-7bc4-47d4-a1fa-ec7a334bbe3a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "69cb9181-be04-479e-a3d2-7a7f09ef1718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac8b320-38c4-4402-b0cf-884d8d1643f8",
        "cursor": {
          "ref": "6991a450-7f1d-4a65-a33a-b8c67496f5ec",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc9f6300-367b-4bcb-80d2-942730fa3c6b"
        },
        "item": {
          "id": "eac8b320-38c4-4402-b0cf-884d8d1643f8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1b931ebd-66f7-4216-b36f-c9edbf59308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7283d70-632f-4ea3-82f1-4b1d80e96b5f",
        "cursor": {
          "ref": "49583d01-2459-4efc-8b22-b06d3564da2d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "417c098d-c3bc-4e4b-af8d-b204e7e5a676"
        },
        "item": {
          "id": "d7283d70-632f-4ea3-82f1-4b1d80e96b5f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "65125231-e34f-4637-93f3-54a5297a4507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7148084a-fe7d-43aa-96e5-8748bc41b141",
        "cursor": {
          "ref": "83c36a5a-358f-4651-b6dd-da7cb5650363",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3a365a02-606a-47bc-9698-1c86ee7c835f"
        },
        "item": {
          "id": "7148084a-fe7d-43aa-96e5-8748bc41b141",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b9ff62c6-14ae-4d59-8747-06af8a13b240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c2c368-f9ca-4084-aeef-c96b487c8cbf",
        "cursor": {
          "ref": "c56efffd-829c-438d-8aa0-5d3cb98730d9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61d2f602-d050-49c9-af98-6b7d5ae0cf23"
        },
        "item": {
          "id": "29c2c368-f9ca-4084-aeef-c96b487c8cbf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a9a98d15-5d99-4de5-bcf8-238f2b5ba75d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6229e05c-4b13-4773-936f-73ab10b32f61",
        "cursor": {
          "ref": "33929494-6f71-4c6f-b11a-58f0ac6e1ee5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "43977974-27ce-47f6-b555-41b326d3b49b"
        },
        "item": {
          "id": "6229e05c-4b13-4773-936f-73ab10b32f61",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "608682bb-39dd-47d2-b1a2-fa948f5f665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8535ed64-004e-4f0d-a622-d2f96e2b91e5",
        "cursor": {
          "ref": "bd72749d-b485-4c6e-9f9a-e6db16f9dd8c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "241cca56-8f5e-448a-9ed6-8a060e69c265"
        },
        "item": {
          "id": "8535ed64-004e-4f0d-a622-d2f96e2b91e5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5cd27853-eb1e-45a3-8070-e0ab63468b03",
          "status": "Created",
          "code": 201,
          "responseTime": 2743,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8867e75-bcda-4d0b-89b6-a4c1b66845e3",
        "cursor": {
          "ref": "965190db-01b3-448d-a680-aa14e9b54425",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ceb6da55-d5b6-4339-a101-88ccea6b0583"
        },
        "item": {
          "id": "b8867e75-bcda-4d0b-89b6-a4c1b66845e3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "60d99131-47a1-4274-8b8f-5ff8a815d7a6",
          "status": "Created",
          "code": 201,
          "responseTime": 2636,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7548e56-093e-499b-ac5f-fee6479de906",
        "cursor": {
          "ref": "afdd7563-4028-49e1-8463-f76d8bec7425",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4353de0a-c336-40ac-b8ad-b8d4832a17bb"
        },
        "item": {
          "id": "b7548e56-093e-499b-ac5f-fee6479de906",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6a55fb9-45ed-440c-a2de-6e1575f6a882",
          "status": "Created",
          "code": 201,
          "responseTime": 2194,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c232264-90ad-48a2-b854-9b20e2888d12",
        "cursor": {
          "ref": "66d4ee83-8626-4683-9149-e2a4371f057d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "06dc73ce-f5c0-47c8-a329-3fe74a270f02"
        },
        "item": {
          "id": "7c232264-90ad-48a2-b854-9b20e2888d12",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3490968b-6b4c-4e4a-8f3c-1ab97c9b18bf",
          "status": "Created",
          "code": 201,
          "responseTime": 2187,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0da9a-0e4c-4b07-a2b3-04a4d7a5b468",
        "cursor": {
          "ref": "0a0ecb9a-65c8-41b2-8e41-82de5f493b9b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a4fc4802-aec8-4b1b-bb48-d14955912ec8"
        },
        "item": {
          "id": "c7e0da9a-0e4c-4b07-a2b3-04a4d7a5b468",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9de8e35a-5eda-434d-bda2-0acfe3b09b43",
          "status": "Created",
          "code": 201,
          "responseTime": 2517,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "084158a9-9b0b-4506-84bd-e60830c9ea05",
        "cursor": {
          "ref": "9ec95104-92d6-4784-9c60-f8902372479f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "36d58201-0da6-46a5-8dda-b608c519d040"
        },
        "item": {
          "id": "084158a9-9b0b-4506-84bd-e60830c9ea05",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd4338f3-96ac-48c4-a9d3-aabbd3d999f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e58e3968-613d-4979-bde5-b430ec6c0cea",
        "cursor": {
          "ref": "a53f28c2-d8c8-46bc-a34d-fe7a906da0df",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "05be8cbb-25b2-4a0a-8c84-be1069aa1342"
        },
        "item": {
          "id": "e58e3968-613d-4979-bde5-b430ec6c0cea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9597e5b4-fac8-4ba2-afbb-54288212d54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59426082-0d78-4c1d-883f-fda9442dfa7c",
        "cursor": {
          "ref": "26aa5c2a-944c-4b20-a822-04879019a62d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f64389d2-5978-4dee-a18d-ed8f4d71c590"
        },
        "item": {
          "id": "59426082-0d78-4c1d-883f-fda9442dfa7c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c6768e1c-00cf-4adb-be1e-a62c8016ede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea26c7-edbf-4c2b-b20f-aacd85c7335a",
        "cursor": {
          "ref": "04493327-f647-4abe-a9cb-7f3244eaadde",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cfd692cf-835f-4863-937d-4f0e418b4f0f"
        },
        "item": {
          "id": "73ea26c7-edbf-4c2b-b20f-aacd85c7335a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "886a8ed7-c9c4-4ebe-abd5-2ce8e407f3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5cd8c8-7e55-44ed-9022-56a6756f4262",
        "cursor": {
          "ref": "e32494ea-d3ee-4618-9ae0-79e3be2ef9ef",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9bb226b6-54a3-44c1-b234-ee90e26a4eda"
        },
        "item": {
          "id": "cf5cd8c8-7e55-44ed-9022-56a6756f4262",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a0b2030-0795-450b-8cf4-d994532c2fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752addf5-8598-425a-9e98-8709fccb5a8d",
        "cursor": {
          "ref": "7e122c54-3f53-4506-846b-187dbf99cd88",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "437608aa-24b0-4f84-b404-f72112131300"
        },
        "item": {
          "id": "752addf5-8598-425a-9e98-8709fccb5a8d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5596fb2b-974d-4e5b-9ed7-3b31587d74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e50b7-1b47-4260-9c7c-ae728a5e8b90",
        "cursor": {
          "ref": "e0dbe393-770c-4dbe-ad3f-69dc61be65e2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7277dbf4-3d0b-435a-b463-b71e8471b66b"
        },
        "item": {
          "id": "409e50b7-1b47-4260-9c7c-ae728a5e8b90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9ac93c1c-ef56-45f9-be9a-f0b7d1d18a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ed0a73-af4e-403f-b723-62daa472cfe5",
        "cursor": {
          "ref": "5cebce8b-eb78-4295-9abe-4a16e99fba77",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "53c0f543-6f5f-46bc-8d25-34880a4fc176"
        },
        "item": {
          "id": "35ed0a73-af4e-403f-b723-62daa472cfe5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6af49caf-a0e9-48fe-b63f-afabc4fe7b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a45266-bae6-437b-90e4-ea3bfb171ddf",
        "cursor": {
          "ref": "52e687b4-1607-4b32-91f3-29e983aec2ed",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bba44f93-29c2-4611-bd61-b703eb3cb31d"
        },
        "item": {
          "id": "95a45266-bae6-437b-90e4-ea3bfb171ddf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9fdb3256-0a82-402e-b47c-4aa6701215fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c425fdcf-d0d2-4dc5-8bb6-9fc1ab169191",
        "cursor": {
          "ref": "1baaa89a-5d1e-46cd-9197-79f2bbc43ff8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f6bf6589-fe1b-4edd-86bb-83eec10c9cfb"
        },
        "item": {
          "id": "c425fdcf-d0d2-4dc5-8bb6-9fc1ab169191",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89874b5e-89ca-42ea-8266-7bc7c247a371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493a2163-bcd3-4f4d-8e85-b49cfe3b330c",
        "cursor": {
          "ref": "58c242b0-8e5a-4d28-9cab-48e0a177b1c8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "399b650c-95c0-46c1-9a70-66467b4e6902"
        },
        "item": {
          "id": "493a2163-bcd3-4f4d-8e85-b49cfe3b330c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c458c8bd-4929-43dc-8507-3066f3b9f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641f5f39-c294-4bba-9a52-0f7a5e52cf06",
        "cursor": {
          "ref": "5b3c36dd-18b2-4989-a0ec-e3112d6cdfb0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4d6148b3-950f-4741-a583-9211e4fff6c0"
        },
        "item": {
          "id": "641f5f39-c294-4bba-9a52-0f7a5e52cf06",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "81a74305-b580-4545-8d8b-308cbb481610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35906797-5575-4eaa-bd99-d5f3479669d9",
        "cursor": {
          "ref": "bf6ac62f-5818-4c17-ad31-1e9392a0ca38",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "506958d7-705e-443d-bdbc-c34866170dd2"
        },
        "item": {
          "id": "35906797-5575-4eaa-bd99-d5f3479669d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aff5da04-25ff-4422-abd3-c73690912fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c367b-92a8-4f97-aa72-fda9eebc7bc6",
        "cursor": {
          "ref": "5dd37f1e-191a-497f-8e7e-e9c0f498daeb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3ed28c10-7cee-4ca4-83e7-dbeb1f0637f1"
        },
        "item": {
          "id": "866c367b-92a8-4f97-aa72-fda9eebc7bc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "87ce67cd-8ba7-4add-a23e-585756e0e874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64ad133-bc83-460f-b61c-811f672db4a6",
        "cursor": {
          "ref": "38bf1104-13f5-4c92-8d3f-b270a908c0b2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eb95190d-5cca-405c-ad41-3bc5bf7607bb"
        },
        "item": {
          "id": "a64ad133-bc83-460f-b61c-811f672db4a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cb80702-ac8c-4d48-abc4-807c1c786d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2acea8-af93-446d-9d27-1a4566f0b838",
        "cursor": {
          "ref": "e4a7e451-b903-43c3-a152-2c221b3c179a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5896763e-0cce-4fdf-be86-f56cb1e3035f"
        },
        "item": {
          "id": "cd2acea8-af93-446d-9d27-1a4566f0b838",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4cba367d-84db-4ffa-b4fa-e771b1a1f5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d5a45c-11a0-424c-9f77-92f2e766e443",
        "cursor": {
          "ref": "763cb867-4baa-4b31-add4-458ff600b6c7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "67640c07-849b-4901-9ff1-4777d408e7e1"
        },
        "item": {
          "id": "b4d5a45c-11a0-424c-9f77-92f2e766e443",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e4faae9-5f96-42d4-8827-167d755f385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b35c86-8fcd-4cd3-a6a5-3f188d2a6c1e",
        "cursor": {
          "ref": "b77d56db-ba63-4e8e-a2c8-d0b07d219929",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c16157a-f703-4c74-88d3-e9004ec66ebb"
        },
        "item": {
          "id": "94b35c86-8fcd-4cd3-a6a5-3f188d2a6c1e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee663869-dda6-48ad-8135-ff80ff3443da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac0917-e488-4889-be04-f3b33bda95aa",
        "cursor": {
          "ref": "f471accc-ab4c-481e-87c2-9f6c5e1f35cd",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a3fd0c8-d4c7-40c3-8547-fc69e2224429"
        },
        "item": {
          "id": "e0ac0917-e488-4889-be04-f3b33bda95aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "52e56ad9-831c-4cb8-b1ee-13d6243eae8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b373d-6faf-4a1d-af56-8d9f1b71ef0c",
        "cursor": {
          "ref": "50bc2647-c1eb-4d78-ab49-44141ccb3384",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e7863c5-84c6-4a95-b2b9-4b9567878f5b"
        },
        "item": {
          "id": "138b373d-6faf-4a1d-af56-8d9f1b71ef0c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2e016a22-e18f-44af-b545-bcc2244d2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad8a43-d3ec-413b-b634-b3fc92486841",
        "cursor": {
          "ref": "83e69d8e-a43f-47ee-a20a-716c30f0de14",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da5b5502-fc49-4760-a80c-703e0cd31724"
        },
        "item": {
          "id": "35ad8a43-d3ec-413b-b634-b3fc92486841",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "363eaa77-e403-47c8-a250-dda877e24062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29156316-8fff-4a8a-a32b-b10b7e8fdbc8",
        "cursor": {
          "ref": "5d035ce8-971b-4e07-a074-2616aa0c1eed",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d10ce144-04cb-41db-8575-5890db869ea8"
        },
        "item": {
          "id": "29156316-8fff-4a8a-a32b-b10b7e8fdbc8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c7a8dfd8-766f-4f86-bdad-be5a95c035df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537894e2-4031-4232-a40b-44637d6192f9",
        "cursor": {
          "ref": "4cf7277d-75ec-4d8a-b7b6-eacfb5e0c904",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "36f2686d-2b46-40d2-a746-a656066629de"
        },
        "item": {
          "id": "537894e2-4031-4232-a40b-44637d6192f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5cee8135-f79c-4dc6-80dd-5de4c9a45507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e8d6b2-df73-4f0c-a80e-0d862af96dc5",
        "cursor": {
          "ref": "cc492e9f-eb36-46ef-9448-2ae39368308d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "96eb704c-3f27-47e3-a3af-38ce47f78b87"
        },
        "item": {
          "id": "11e8d6b2-df73-4f0c-a80e-0d862af96dc5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dfe63467-4bf3-40b6-b1b3-93d68df459c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c52517-4802-45e7-b394-f2cada29b9d6",
        "cursor": {
          "ref": "f344e16e-2969-4b47-a69a-b71be14d9980",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3e8abba-9bb1-4f3a-9a1f-e4b5e37ad77b"
        },
        "item": {
          "id": "b7c52517-4802-45e7-b394-f2cada29b9d6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad280558-04b4-4023-94a6-6ed2b03abab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c8aa6b-59d6-49a3-8ae4-1e15ee5126dc",
        "cursor": {
          "ref": "20c45499-6e4f-4595-91a9-534d5b76490c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d5340b7-c8e2-4947-9618-20a2928b2cf7"
        },
        "item": {
          "id": "a4c8aa6b-59d6-49a3-8ae4-1e15ee5126dc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "32305abc-4a6b-4c16-9b3e-b728dd924811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9a07c1-fb65-49a9-bffb-3cd80fe5d9e7",
        "cursor": {
          "ref": "db32e0d7-c661-42f8-9e11-0dc7148bf794",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "64cba5e7-a954-4d9f-b7d7-dfef5a70cc8e"
        },
        "item": {
          "id": "8e9a07c1-fb65-49a9-bffb-3cd80fe5d9e7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f525340c-a5c5-4f9b-a772-4cb29ce6eb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7bc6ee-95d9-49f7-a701-a6c7bd528cf0",
        "cursor": {
          "ref": "ca85e9f7-4b1b-4264-9c62-d0373ca3fd80",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "99170d31-8e59-4f1c-897f-d89e8b8c8158"
        },
        "item": {
          "id": "fe7bc6ee-95d9-49f7-a701-a6c7bd528cf0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4755089b-98fb-4723-8fa1-8fe4dbb836c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623f55a-77e0-4ccc-9a33-6ca49a954b9f",
        "cursor": {
          "ref": "6146a62c-3cea-4c0d-b292-92a53661cb95",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1797696f-d08a-41da-83db-7d1349def535"
        },
        "item": {
          "id": "3623f55a-77e0-4ccc-9a33-6ca49a954b9f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a1bbf21-1176-4156-baa3-f5ec237425bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b54674f-5e49-450c-8e21-3226ed920168",
        "cursor": {
          "ref": "7c5fc77e-686a-4a62-b0a8-646b07326414",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fc41983e-fd14-450e-b944-e023f2cf67f6"
        },
        "item": {
          "id": "7b54674f-5e49-450c-8e21-3226ed920168",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5d5e47b-fbbf-476f-bd0b-4651344116a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ccc2c2-3dc2-483d-b213-5428c9b1704e",
        "cursor": {
          "ref": "10e59ff4-3461-4ced-a186-ed8e431c0b8f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c27a76a9-454a-4663-b45b-9a252b58cabe"
        },
        "item": {
          "id": "b5ccc2c2-3dc2-483d-b213-5428c9b1704e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da061dee-bd4f-416f-b4be-96d428ce5763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad41834-e559-41f7-9ac3-c16fd137aec7",
        "cursor": {
          "ref": "3fe195aa-54fa-4799-a9ce-35ec6dbea5e3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3c2551c4-3aae-45ee-b874-7eed2cc0502b"
        },
        "item": {
          "id": "1ad41834-e559-41f7-9ac3-c16fd137aec7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "abe1f052-2827-42f2-84fb-82b6baf78251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986aaf8f-c869-4883-9eb5-8d78cec81791",
        "cursor": {
          "ref": "3351e363-4a55-4a48-a0ca-94b36ccd46f2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "43df2eb4-13ef-43b7-8b35-afbdfec54322"
        },
        "item": {
          "id": "986aaf8f-c869-4883-9eb5-8d78cec81791",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "95446f0d-a2f1-4945-bbca-cae0b539ac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1125a29d-5db0-4790-8529-731a76ae8725",
        "cursor": {
          "ref": "4517be12-850b-4ded-94d8-d359252a1e61",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9613d22e-730b-44ac-b6e2-48a30f8309b2"
        },
        "item": {
          "id": "1125a29d-5db0-4790-8529-731a76ae8725",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8aca9d8-5fba-4128-8eef-f77374007ffe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d39d60-78bd-415a-82e3-1109b6f5965a",
        "cursor": {
          "ref": "7b001ed6-750a-49a8-a3f8-1fb6615e7866",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0b1eb5f-fae7-494d-a23e-bd7a4969f5ff"
        },
        "item": {
          "id": "a1d39d60-78bd-415a-82e3-1109b6f5965a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbf6ecba-f656-4565-8a3e-0c5ffaaf6067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645caf20-8c44-4e80-b765-cd36c24a2099",
        "cursor": {
          "ref": "2f2e25b9-244c-4e66-b0ec-253db03bcdd2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e2d015b9-7287-42c7-8ffc-c65a062663c8"
        },
        "item": {
          "id": "645caf20-8c44-4e80-b765-cd36c24a2099",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a8b3ae0-6f0d-4568-b72f-4ca9b4ea8510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897921c6-eb00-4300-906c-d070316bd7fc",
        "cursor": {
          "ref": "f418f63e-d573-4b1b-ae09-e0e520c67f5e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ff4bbb38-069e-4ddf-a8ce-23d1ce2eab32"
        },
        "item": {
          "id": "897921c6-eb00-4300-906c-d070316bd7fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2af8ba16-f0e6-4996-aa46-f8e9cae5253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3af909e-2ccc-400d-a14b-29c066097f6c",
        "cursor": {
          "ref": "15e2959e-8193-4a8f-a6c7-10f2811e3465",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "441ffa28-101c-4b82-b0b7-eb6a2d6beadf"
        },
        "item": {
          "id": "e3af909e-2ccc-400d-a14b-29c066097f6c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c684a755-bb0b-4cf1-8be6-7a1a46a37faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83535244-fc48-4930-9015-fc793a60c62c",
        "cursor": {
          "ref": "343505b7-b634-480d-a8ee-b03673060e0f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "03d00393-ca8e-4ca4-975e-aefb7a726a7a"
        },
        "item": {
          "id": "83535244-fc48-4930-9015-fc793a60c62c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c5e9393-8eb5-43d1-8e57-32e44ec6a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3c0a7-9429-4a62-bbbc-fb3b1cb7303e",
        "cursor": {
          "ref": "3e32278e-f73b-4d3f-99d6-141953b6f6b7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "083621bc-fc27-4fe2-9ead-aac32dc199c1"
        },
        "item": {
          "id": "7fb3c0a7-9429-4a62-bbbc-fb3b1cb7303e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62fb1ead-be62-42b4-87ff-025d3aa183a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b3e73-68b2-4503-8687-6472a2f190e2",
        "cursor": {
          "ref": "3d558ffb-8243-47ca-a2f3-879db5c6fee0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "96a8ed38-b3dc-41b5-806c-03c68febf360"
        },
        "item": {
          "id": "7d8b3e73-68b2-4503-8687-6472a2f190e2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4bda8f17-23f0-4c01-8a81-deee2641c3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23159c94-2181-41b9-93a3-56021d5ba365",
        "cursor": {
          "ref": "9292037e-2a56-424a-8d11-c04a80c09fe4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e71718f3-f7be-47d1-b3bd-2d6b76fdfa56"
        },
        "item": {
          "id": "23159c94-2181-41b9-93a3-56021d5ba365",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e9d89a23-795b-4f7f-918d-082cc9b7b35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f7b3f9-daf8-4a3a-8d90-127c0d95b752",
        "cursor": {
          "ref": "609ad72d-51ea-4836-86c0-13e8a09c800e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5e5211c9-a2cd-48a9-9b01-def89b1c95a1"
        },
        "item": {
          "id": "d5f7b3f9-daf8-4a3a-8d90-127c0d95b752",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7359124c-2544-42a5-b6f4-fdc210ab81c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908e1ced-9761-4340-a25b-71cb34a0b7ab",
        "cursor": {
          "ref": "5a9255d4-e9d1-40b7-bcee-051c5b3732e0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "37072249-6087-4743-9bae-f84b7562b226"
        },
        "item": {
          "id": "908e1ced-9761-4340-a25b-71cb34a0b7ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86d539e5-3352-4785-b082-e86c6b90d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c5120-3059-43b7-89e2-6d0951c88b4d",
        "cursor": {
          "ref": "0191bf0f-74b4-4a51-9654-a885305b4467",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba13ac68-00f3-4072-8932-01b83bb600f7"
        },
        "item": {
          "id": "e11c5120-3059-43b7-89e2-6d0951c88b4d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5a5a4ae3-95bc-4065-a29a-3a19da1d5be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfb9f90-8559-4dab-af20-b24bc5567cc1",
        "cursor": {
          "ref": "b6eb132e-260b-4be2-801a-869ef38b3206",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4ee587cc-a2e9-463b-9962-47e927a48ade"
        },
        "item": {
          "id": "9cfb9f90-8559-4dab-af20-b24bc5567cc1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1f162af2-0b30-4928-8a27-55063a8496fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffed68eb-2145-4064-b46b-78466ac4b568",
        "cursor": {
          "ref": "76dd49bd-050f-4ecf-93d0-5dae67839c5e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a341c004-d0f2-4dfb-90c5-e3d73559ffc1"
        },
        "item": {
          "id": "ffed68eb-2145-4064-b46b-78466ac4b568",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "efdfeaba-1ab2-4557-be87-809ab7357683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda19694-acdb-4020-a7cd-6191213fe694",
        "cursor": {
          "ref": "52927df5-6b70-456d-b2aa-57ee6e303eb7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "688042da-96e9-4081-95ff-660405cb267a"
        },
        "item": {
          "id": "fda19694-acdb-4020-a7cd-6191213fe694",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca14d815-5a73-4a7c-934d-9173c99245f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8591e5d-896c-49ef-88c6-8417dcaf1891",
        "cursor": {
          "ref": "389c19d7-fd24-4118-a811-a502b3ac8248",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "01627737-87fa-4c8e-a3e2-350587c6616f"
        },
        "item": {
          "id": "f8591e5d-896c-49ef-88c6-8417dcaf1891",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ae8e6bf-b94b-41fa-bb85-def0b30eb34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65877dc-0e0b-439f-a2b9-bf082b1c4799",
        "cursor": {
          "ref": "730ade99-0711-4b5d-b4c0-c11d2ca78df3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ccf6ffd0-efa9-4dd0-ad6a-78eb43455092"
        },
        "item": {
          "id": "f65877dc-0e0b-439f-a2b9-bf082b1c4799",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "438ca180-671e-4244-8fce-6177bee28a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b348fa3b-b3a5-4505-9d4f-c3ac1f8b98c9",
        "cursor": {
          "ref": "e0fe9d8b-c6ab-409e-a3df-439c934ab6dc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "80dc4c59-4393-4791-8ff6-3f5659cc000b"
        },
        "item": {
          "id": "b348fa3b-b3a5-4505-9d4f-c3ac1f8b98c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fca61875-1b2c-47d6-b170-4617dc30c2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e212b1-a683-46f8-8c6f-578e30462cb3",
        "cursor": {
          "ref": "83dcbbec-782f-4ca6-b5ba-b0da595f79b2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "08127f71-f385-4b04-800a-0148b07bf45a"
        },
        "item": {
          "id": "e8e212b1-a683-46f8-8c6f-578e30462cb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0cf9c30-e6fd-481f-9944-10b6504bcc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518040b7-cc67-4c7d-a211-bc7a739e0208",
        "cursor": {
          "ref": "f4e8300d-8e96-4255-aa60-6985d372af01",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "28ec528d-40aa-4f82-94fd-691cc51d5f82"
        },
        "item": {
          "id": "518040b7-cc67-4c7d-a211-bc7a739e0208",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5654cc7c-e64d-4f85-ba69-d856c41166de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8ae8f-3692-4f22-9d4a-5353120d8dbc",
        "cursor": {
          "ref": "49445ef8-07b1-4301-8579-6fc98e22959d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "767862de-99e9-4a1f-9f23-0f2bda5f648b"
        },
        "item": {
          "id": "aae8ae8f-3692-4f22-9d4a-5353120d8dbc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a31b11fd-8945-49f6-8caf-81532581a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303fdbc7-215a-4159-9311-ba807a5922d9",
        "cursor": {
          "ref": "42d79d45-6844-4845-ba63-1c54c5a498c1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d50dc6d-7406-4746-81cb-db33ddfb3a1d"
        },
        "item": {
          "id": "303fdbc7-215a-4159-9311-ba807a5922d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5964a1d-731d-47e8-9da0-ecac1e5766b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1eafed-77f5-4c0b-a64b-1279fc50e5e2",
        "cursor": {
          "ref": "910e8d4f-5128-4c3e-ab28-cb535c55f4fb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "560114d5-0be2-4810-9ae7-41a000d7dc61"
        },
        "item": {
          "id": "8e1eafed-77f5-4c0b-a64b-1279fc50e5e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83c308b8-425e-4a09-8ece-238ff1f39199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e72f87-dc74-44e2-9971-1ff8b2126ae4",
        "cursor": {
          "ref": "5b183962-92c5-4624-b5c6-6a70278dbd1b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bfc9a49a-b9ce-4770-a935-7b03bf4c460e"
        },
        "item": {
          "id": "33e72f87-dc74-44e2-9971-1ff8b2126ae4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6913a7a-02b6-4da2-9b6d-1d12dd0fd784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceba9a6-5e9e-43c1-8db6-37d6ff06224e",
        "cursor": {
          "ref": "28d9aa8f-c2f8-4a4d-ba48-484dac7b500d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dea3fa82-95c4-4619-af6e-44c2ed5da33c"
        },
        "item": {
          "id": "7ceba9a6-5e9e-43c1-8db6-37d6ff06224e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "322dfa1d-f0b7-405c-8a00-4a650f79692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702a38c3-c9f8-4bc6-bf11-86b1ac987986",
        "cursor": {
          "ref": "eda12ef2-699a-4656-a68a-e055bfae5529",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2dc23b41-3da9-40eb-94d9-46e0f351b039"
        },
        "item": {
          "id": "702a38c3-c9f8-4bc6-bf11-86b1ac987986",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ae7a574-83e2-4d1d-91a9-66137c2f169b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1614c2-2627-41a9-aa7a-347c033b4ee1",
        "cursor": {
          "ref": "c1ee5611-e5f6-4f70-8437-65f423191ecb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c2e48b11-b022-45ad-b9f3-a023e7e523f7"
        },
        "item": {
          "id": "3d1614c2-2627-41a9-aa7a-347c033b4ee1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df357c2a-af9e-44ca-a9be-13d83b9b0659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ebee04-cd64-4df6-bc85-e468d4b16706",
        "cursor": {
          "ref": "bf99fdd4-f444-4d29-94fd-38375c37fc77",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "68eb98af-65db-4c3c-bf14-d016fc5f0da3"
        },
        "item": {
          "id": "34ebee04-cd64-4df6-bc85-e468d4b16706",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e772f91f-4dae-47fe-8212-371b94997d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6b0ba8-6434-4ed6-98ed-86aef2cdd697",
        "cursor": {
          "ref": "f4a688ec-78f7-43a3-81f3-a7ac051dcd15",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8c34f8f6-8679-4e93-9ac4-c6074fc2ae61"
        },
        "item": {
          "id": "4b6b0ba8-6434-4ed6-98ed-86aef2cdd697",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "381ccdf8-0b17-4f4a-9ca4-6dc76e7687ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f74493-b41c-4245-bb9d-f3703e118785",
        "cursor": {
          "ref": "ca35037f-b2f0-46d8-8463-439ca2e9b72f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c29c08ee-4a57-4fe7-afab-b5523592460c"
        },
        "item": {
          "id": "c2f74493-b41c-4245-bb9d-f3703e118785",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "837bfe9e-bbf9-4c2e-898f-bcc3f248f9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665491eb-cd5a-457e-93c3-68015119053e",
        "cursor": {
          "ref": "77955992-eafe-4abd-92d4-5764db5b6f8e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a8aeb90b-2280-4369-91e6-0357ab713d4c"
        },
        "item": {
          "id": "665491eb-cd5a-457e-93c3-68015119053e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1482b6e1-dbfb-4108-b28c-df5e9d985ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59980e7f-7248-466d-8112-03d027c5b379",
        "cursor": {
          "ref": "76c602ee-d9d9-4d52-819e-e04f54c5a71a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a5b6c088-71bb-42b4-a2c1-2c00bcdd9a92"
        },
        "item": {
          "id": "59980e7f-7248-466d-8112-03d027c5b379",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3e8306dd-992e-4e4b-aa60-e25b59ac5935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee70348-0aba-4f9a-b4b9-e8a252a49984",
        "cursor": {
          "ref": "61579323-1d0a-4293-881b-7c514da7a5b6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4d425c42-de9a-41b2-b506-2f9446b75324"
        },
        "item": {
          "id": "1ee70348-0aba-4f9a-b4b9-e8a252a49984",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "16ad5a43-cea0-4cee-8d8d-c05e1a3dac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d0c450-5e46-4419-9981-356e6b4ff589",
        "cursor": {
          "ref": "29f6376d-f6fe-4a2b-a90c-3e312ddd82a2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6317e3b7-6347-4bfa-aea5-46745c6c0d2c"
        },
        "item": {
          "id": "38d0c450-5e46-4419-9981-356e6b4ff589",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b210e107-c9eb-421a-90fd-6faabd4049e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d186d2-3d83-4e28-94d8-50d1e2d0c25a",
        "cursor": {
          "ref": "020de9b3-e0d8-4c5b-9f98-76d2621ad44a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "25d77563-feec-41b8-afbc-ae39451c69d1"
        },
        "item": {
          "id": "73d186d2-3d83-4e28-94d8-50d1e2d0c25a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1e313963-46dd-4845-aba4-2fa25436c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2fec1c-8640-477e-9100-e8203afe3afb",
        "cursor": {
          "ref": "b1bcc544-49ae-4e6e-8a61-fd2170dff0a8",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "747c83b1-3c96-4bcf-94e5-ba6118d72f05"
        },
        "item": {
          "id": "1e2fec1c-8640-477e-9100-e8203afe3afb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d847c97f-ca05-4cb5-8322-6e2692db25e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c9c88-44b3-43db-83c9-8c4be2fe8c9c",
        "cursor": {
          "ref": "1d549e30-830e-4c72-96dd-981dfc773503",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a558b0f2-00c6-4d9a-8b46-f1f38f20d310"
        },
        "item": {
          "id": "2e7c9c88-44b3-43db-83c9-8c4be2fe8c9c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0064d0f1-2dad-4618-bf09-27f734f65e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d088d6-e711-40ac-aca2-f00a536cfde5",
        "cursor": {
          "ref": "90a3bf37-e9e9-48e6-906f-57780469b040",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "360e5e5d-60a7-4900-9d14-bff3e1920ffe"
        },
        "item": {
          "id": "a3d088d6-e711-40ac-aca2-f00a536cfde5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "06fecbfb-d5d7-474e-9c62-4b694f527631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf48924-b2c0-405d-a5f7-55998f19fa8f",
        "cursor": {
          "ref": "4b27a154-7504-47b4-918b-38bab930fa9c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "268c8f57-fcde-418d-8890-ee385773cef1"
        },
        "item": {
          "id": "6cf48924-b2c0-405d-a5f7-55998f19fa8f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50e87dbf-c65a-4a74-8899-253de1764652",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d5450-dda0-45a1-b009-1155a126db14",
        "cursor": {
          "ref": "ec701e0e-6870-49c9-aad5-3f416c6c45a0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6c21b1aa-5524-4fa1-9b30-d19083cd7583"
        },
        "item": {
          "id": "293d5450-dda0-45a1-b009-1155a126db14",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cededdf9-3e73-4dcc-90e7-657711fd780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7e3f3-3d7d-414c-a19f-5f986294f5c8",
        "cursor": {
          "ref": "02413f27-cc51-47d0-9719-891c81044199",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d65ec77c-cd7e-45f8-93d2-90412fcd4908"
        },
        "item": {
          "id": "d5e7e3f3-3d7d-414c-a19f-5f986294f5c8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "83110c8e-93e2-4805-af18-f0e81394daf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2a7b63-2a7c-43e7-a72c-825104413657",
        "cursor": {
          "ref": "fb7670d9-bc32-485d-80ad-983327ba86f4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8aa17ce9-e6dd-4785-89b6-9e5cbc02c889"
        },
        "item": {
          "id": "7e2a7b63-2a7c-43e7-a72c-825104413657",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a416b73e-dba2-4832-9dcb-a3b44c4f40fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7558b0eb-0188-4443-9911-7e8a3857e955",
        "cursor": {
          "ref": "adefcb6a-ade0-4d0a-af58-16b416eddf9a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e747a9db-6d2e-44e9-b3c9-7524b0d1f3fc"
        },
        "item": {
          "id": "7558b0eb-0188-4443-9911-7e8a3857e955",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "08ef6464-467b-438e-9194-9a9e071e39e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62115c6e-7ef2-46dc-bc48-587817673056",
        "cursor": {
          "ref": "160e17ba-ca47-4533-8738-bbc0d2a49078",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "237417cd-60dd-449b-b0ad-bff80184f948"
        },
        "item": {
          "id": "62115c6e-7ef2-46dc-bc48-587817673056",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3898835c-cb39-4865-a466-ea300c1db826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd8e8d5-a0b9-4cf9-b393-fe002c63a089",
        "cursor": {
          "ref": "5f4e0545-4647-4b10-be08-0ecb9a79f8d8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e0a89b86-a7fe-4cd1-b261-1085339f8f93"
        },
        "item": {
          "id": "abd8e8d5-a0b9-4cf9-b393-fe002c63a089",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6b0473e-1b38-46f8-828d-c44eb825c456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc58e47-2ff7-4677-9fc3-a29484703a84",
        "cursor": {
          "ref": "1a4aa53a-5411-4404-b25c-6591e71f52ed",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "946af7c4-d340-46a8-a253-775c29988c38"
        },
        "item": {
          "id": "4bc58e47-2ff7-4677-9fc3-a29484703a84",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bcb8a439-48de-451b-91f8-4c607ba9263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1db420-4b97-49b5-adc7-02adb72c90f1",
        "cursor": {
          "ref": "1b8e0b88-ea98-41fa-8225-0e1b00a0a33c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a7ddf4f-fec7-4e49-a5d2-b858ed056e8c"
        },
        "item": {
          "id": "ec1db420-4b97-49b5-adc7-02adb72c90f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26f7565e-c73f-47c3-a541-da2f83d7dfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70a701f-4a94-49e4-90f7-db6c8caf6cde",
        "cursor": {
          "ref": "0bca59ca-d095-4745-b30e-34c9ba7c9171",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "84ee9517-a0c8-45b6-bc61-d949471513bd"
        },
        "item": {
          "id": "d70a701f-4a94-49e4-90f7-db6c8caf6cde",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "35940c6d-44b7-4550-8791-26f355a520bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ff006-0c47-4331-9874-75e483299792",
        "cursor": {
          "ref": "c6fb23c0-3f8c-4dbc-8773-0058eeba4a59",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7027a641-97bf-4d45-bca2-62b37c13faf9"
        },
        "item": {
          "id": "840ff006-0c47-4331-9874-75e483299792",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "040d3693-b5df-47a1-b267-1a5cd3294b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc49541-4cd0-46d6-969e-23e8c93d16e3",
        "cursor": {
          "ref": "de7475ac-7684-4b49-89ae-bc470755f266",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d6bd7c8-ef7b-4089-ae01-3ba47de1c5ae"
        },
        "item": {
          "id": "9cc49541-4cd0-46d6-969e-23e8c93d16e3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5bd00404-ef60-402b-b4e6-7c848644c885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab050da3-db8f-4194-b2b6-1e7320f646a9",
        "cursor": {
          "ref": "52a81aae-2488-4c2e-b946-6c2d2e1b09b1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02761049-4f66-4715-bb9b-2e720ad0f6c5"
        },
        "item": {
          "id": "ab050da3-db8f-4194-b2b6-1e7320f646a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "743dd9bc-876b-4ac5-967d-c273b2c1c099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4308589-a512-41dd-84d3-2408f90d6281",
        "cursor": {
          "ref": "a0d1e5e7-9567-4a4c-be2e-a3abd60116da",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f1530c85-8480-46b7-af81-ec28e36d4663"
        },
        "item": {
          "id": "e4308589-a512-41dd-84d3-2408f90d6281",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cb180297-f8a5-4127-beb5-3dd629b443e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4a229f-b0ef-4592-9823-6b2a3ca17b33",
        "cursor": {
          "ref": "b715d5a0-067e-4c0d-bac8-b3cb0bf78746",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "79601914-5910-417d-bef6-55cc60adf916"
        },
        "item": {
          "id": "1b4a229f-b0ef-4592-9823-6b2a3ca17b33",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "134535d2-1fb6-4a71-821f-1c182725eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43ce0a3-260d-484a-a9b6-bbe383e3bff2",
        "cursor": {
          "ref": "b875a681-02dc-4be5-833b-494b45133c0d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5460f152-f5e3-49bd-9392-e562834b7cb1"
        },
        "item": {
          "id": "a43ce0a3-260d-484a-a9b6-bbe383e3bff2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b56d239-7a32-4706-9048-dd6c88c54143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c827dca-6d68-4174-ab9a-d6e429894a4c",
        "cursor": {
          "ref": "1909a2d4-aaa5-4056-b649-771a8d8d36a2",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "539dee54-d7c1-431c-89b4-e97c0c6910a2"
        },
        "item": {
          "id": "5c827dca-6d68-4174-ab9a-d6e429894a4c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "93bd18b7-a0f2-48a3-a9e6-fa06961aeee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b4f3e-2819-4344-83b4-91014605fc84",
        "cursor": {
          "ref": "290c58dd-847d-48b2-835a-fc179785e83d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "81e24053-8102-4ae3-9089-419e38df7186"
        },
        "item": {
          "id": "2e6b4f3e-2819-4344-83b4-91014605fc84",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7475326f-adcc-4299-bbec-fd9a1aa348d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ab3df-3258-4335-8255-e53b5eb8fb9e",
        "cursor": {
          "ref": "b99c7e3d-e783-426e-8c30-0034e0daf903",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4fff5b80-9686-47d6-bbf6-80a1c87bd10b"
        },
        "item": {
          "id": "5a8ab3df-3258-4335-8255-e53b5eb8fb9e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "493d82ab-dddd-472b-9637-486277f29b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c01f72-d16f-4190-a3d3-e6fd3a25c852",
        "cursor": {
          "ref": "9096b446-d354-4cd9-8d79-56bd20ab3985",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "be5aae4f-8959-4877-942a-73f37fd3baee"
        },
        "item": {
          "id": "59c01f72-d16f-4190-a3d3-e6fd3a25c852",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "281b8ce9-49bb-4255-ae22-898097c0a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383ccb37-9ed0-4a28-9da2-eb46cd532fc0",
        "cursor": {
          "ref": "2239275f-0480-47ff-b305-9671ececd761",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad590494-3f78-4837-bc78-d5c810e99a75"
        },
        "item": {
          "id": "383ccb37-9ed0-4a28-9da2-eb46cd532fc0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "62ac419b-eb5c-4849-8916-db83df64ef5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d7449d-77b2-4a44-98fa-c75ed3d263fb",
        "cursor": {
          "ref": "b0062b11-fcc9-4d8c-a4ef-40be00ede285",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e41e4d47-dedc-45cc-b844-8ae96255537e"
        },
        "item": {
          "id": "58d7449d-77b2-4a44-98fa-c75ed3d263fb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa4a3965-e4c6-464b-98f2-da775e2c849f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a586b8-2d1c-488a-9343-806fac08c46d",
        "cursor": {
          "ref": "ad942150-d1e3-4965-aa71-80c0607eb4ff",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec67d58b-f286-4c86-9cb3-b69bbd726402"
        },
        "item": {
          "id": "a3a586b8-2d1c-488a-9343-806fac08c46d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4beeab7b-9c95-43e0-9e72-bd6e0872e48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a866440-d4b2-40f8-8086-50cb99ba4659",
        "cursor": {
          "ref": "d144098c-c048-4d93-9ec6-ea0e8a5657ec",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "18a7b424-9c52-43c8-b072-ab81da06fec8"
        },
        "item": {
          "id": "7a866440-d4b2-40f8-8086-50cb99ba4659",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26cd6c98-fa9d-4b3e-87f6-44ec846ead7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0829ec6e-4bc8-4001-98bf-20043971d6f9",
        "cursor": {
          "ref": "2e032780-3240-49f2-b606-ca11155672aa",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1e67215-3563-44cd-90b3-184c80cb192c"
        },
        "item": {
          "id": "0829ec6e-4bc8-4001-98bf-20043971d6f9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "36ccb61c-dc81-45cc-90e4-2c1ed073a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461fa23-eace-42b4-ac63-ce989758cac7",
        "cursor": {
          "ref": "cc9b0af1-5aa6-4dab-8e2b-e8be4884df0b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "552e815d-43a5-4c86-8092-8aeaaf17f8ad"
        },
        "item": {
          "id": "0461fa23-eace-42b4-ac63-ce989758cac7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ff7db71-3725-4f6d-a504-1e49f7ebb8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ec9bc3-b117-43bf-a024-a7e9f90cb150",
        "cursor": {
          "ref": "c352a0a0-7a8b-46ac-bfa3-28105d199415",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cedd6159-f5f0-4194-8701-d76be66e9641"
        },
        "item": {
          "id": "83ec9bc3-b117-43bf-a024-a7e9f90cb150",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "211fb55d-783e-4b61-b95a-20353f4f0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3d61c6-f0a9-4b1a-ba6a-13794cab4fc8",
        "cursor": {
          "ref": "21984209-d21c-4bc9-8a56-3ec5c56aece4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "033fe072-a030-4d1b-be7e-5b2dba0d12e9"
        },
        "item": {
          "id": "6a3d61c6-f0a9-4b1a-ba6a-13794cab4fc8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "164237c0-42f2-4d72-a2de-bce342579af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e68a2f-06ca-4ce5-9e2e-1bfb1f106bc4",
        "cursor": {
          "ref": "f76c05e7-c62c-4d7e-b978-bb7d09b1671f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0855415e-1b8a-48bc-a868-d3d5fe8d3cb9"
        },
        "item": {
          "id": "f6e68a2f-06ca-4ce5-9e2e-1bfb1f106bc4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a6b2731-208b-4581-903d-72da771548c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008c32c1-592f-433e-a2b3-01f2d00f3a64",
        "cursor": {
          "ref": "96ea2678-dc8f-43d4-980f-bc1c1633160e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ee246f5-c49c-4503-a9e5-128a6f33e293"
        },
        "item": {
          "id": "008c32c1-592f-433e-a2b3-01f2d00f3a64",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "91644d81-6c98-4f73-91cc-9850c60da535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b380537-cd37-4393-9ec7-0487c08969b0",
        "cursor": {
          "ref": "ffc186c0-ba80-49d8-8b68-91c858fa32f8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "29ee6bde-e2b9-463c-b3d7-a38566e04316"
        },
        "item": {
          "id": "4b380537-cd37-4393-9ec7-0487c08969b0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82b5fe3e-fa6d-47dc-b596-fc9195219466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f5b905-aaed-42bf-bd02-c63c735139a1",
        "cursor": {
          "ref": "296f1d31-920f-44c3-a30d-7d96f208d3c5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4a602286-67f6-4e9b-a368-e43e3bcb4f14"
        },
        "item": {
          "id": "71f5b905-aaed-42bf-bd02-c63c735139a1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "288cbde6-45bd-46e8-bd80-5501adf50dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9a7573-83b6-4b08-b32e-35f84b2315cd",
        "cursor": {
          "ref": "56566304-6a13-42d3-97ce-74ebc7dd740e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00f15afb-5664-4e57-a72a-9e017d7d951b"
        },
        "item": {
          "id": "5d9a7573-83b6-4b08-b32e-35f84b2315cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9816af76-d274-4e32-9fdd-a75498c916b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8923061-b293-4a47-8f2c-549ae488ec07",
        "cursor": {
          "ref": "a6477c3c-5f28-4268-9ad0-baeec82c55d4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ccd738c1-c30a-428d-aead-c1c3b54fc4b6"
        },
        "item": {
          "id": "c8923061-b293-4a47-8f2c-549ae488ec07",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "809aa0eb-39cd-4b8a-b56d-e1646439bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee8895-d4f9-48d6-9384-490bb00eccd6",
        "cursor": {
          "ref": "b90ddd3b-f6f8-4cd1-adda-5d7ff1363e99",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4e7da633-1679-4a79-b99d-61aed7200c04"
        },
        "item": {
          "id": "3bee8895-d4f9-48d6-9384-490bb00eccd6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3c9b0367-1d2a-4f1b-9dac-aaa57144b3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922be4a8-beaf-409b-8225-e342c259b292",
        "cursor": {
          "ref": "a8aabadc-b2e5-4e95-b1ed-231f68b34ce2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b9b53cc3-9464-4f05-ab89-d5708a9fb81a"
        },
        "item": {
          "id": "922be4a8-beaf-409b-8225-e342c259b292",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd66a8d8-a969-4020-a216-104e9a1cbe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2f2f1-1486-4618-8994-ab78a1594bab",
        "cursor": {
          "ref": "bcd788af-f1e9-4c66-8a4d-cb39977e08e7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42f4ef49-54c2-4c2d-be88-751a732efae5"
        },
        "item": {
          "id": "83c2f2f1-1486-4618-8994-ab78a1594bab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d5785939-aa75-4539-8688-4876aff54124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67235f1d-8667-43f8-8d7d-4c2bc5519a2a",
        "cursor": {
          "ref": "a10c21f8-11ab-4752-b3f7-05cf7ce00abf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "070a1808-01f2-47fc-b46a-21a11e5f9abd"
        },
        "item": {
          "id": "67235f1d-8667-43f8-8d7d-4c2bc5519a2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "18882f40-0ccc-4564-bc8f-d10576cf2e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab7ff36-f443-42f7-8f4c-fe913b1a859b",
        "cursor": {
          "ref": "044befdb-5f5a-40d9-b7df-816146c3b56f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b53c0405-d99d-4c3d-973a-f8a9f77f9f8c"
        },
        "item": {
          "id": "0ab7ff36-f443-42f7-8f4c-fe913b1a859b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca29d997-71b4-4c2f-b52f-a8e814b9b0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43db0b44-77b4-44ec-b26d-6be72fd32b04",
        "cursor": {
          "ref": "90493bae-487a-499c-8f4b-405e7342c159",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e412e0ad-1f7b-4726-89a0-4aa7c72d4b16"
        },
        "item": {
          "id": "43db0b44-77b4-44ec-b26d-6be72fd32b04",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7d03a93f-04a6-469c-95d4-7c059d88a299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e04f34-0a72-4217-846f-1f0731bc111a",
        "cursor": {
          "ref": "d548069a-bd89-4217-8c10-02bb4ab031c1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a84cd660-04b0-4cc7-bafa-6bae5654e65b"
        },
        "item": {
          "id": "b3e04f34-0a72-4217-846f-1f0731bc111a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5404c0db-075f-4f93-a750-bd00bb398b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9b0431-d48f-4e5a-8ac7-3bbb0f9bf790",
        "cursor": {
          "ref": "73e116c5-1a6d-41fb-82ec-86c02956b54e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e0b6f969-0dbe-4d05-aeca-158e96e2dbfc"
        },
        "item": {
          "id": "1d9b0431-d48f-4e5a-8ac7-3bbb0f9bf790",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8d09d80-1f98-485a-a49a-b2f327205408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e38cde-7197-4cf2-8549-d88c0f78db99",
        "cursor": {
          "ref": "dfd7f428-a594-4732-afbf-92f0f8856dc7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b8a35b87-23d4-4c75-82e5-a078920f6916"
        },
        "item": {
          "id": "98e38cde-7197-4cf2-8549-d88c0f78db99",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f569d4da-91aa-4488-b6aa-5db82ddcebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be3bef-bfda-4bc5-a082-57e7126435ad",
        "cursor": {
          "ref": "d3b7f1b0-f5f4-43d2-91fb-7c6b7bac4c93",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9da386b0-062f-429a-89b1-ac8b6d1c5e1a"
        },
        "item": {
          "id": "49be3bef-bfda-4bc5-a082-57e7126435ad",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2fd6acfd-be2a-4a0d-aca5-edf4db75c6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a644c92-3e9a-4dd5-b8b0-32655893b437",
        "cursor": {
          "ref": "41bba474-4c7b-4c91-840c-14b132e5c4fb",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "66591493-34cf-4331-9a52-9a66ae391de9"
        },
        "item": {
          "id": "1a644c92-3e9a-4dd5-b8b0-32655893b437",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "40366b2c-6cb6-4085-8655-82437904add3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e358e9b-1343-48c9-9833-7ddfdd012607",
        "cursor": {
          "ref": "e66272b4-5202-4e36-9b01-ec2a51a3bac7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2b695f5b-cf97-4bde-8a81-a41546000f1b"
        },
        "item": {
          "id": "6e358e9b-1343-48c9-9833-7ddfdd012607",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dd771e43-6122-410f-9e90-7ad20f3df3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da32bb79-da06-4614-9b91-aa86921b977a",
        "cursor": {
          "ref": "d8fcf024-31e2-48c1-aa6f-1b4d5cdc43e6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "472c59a9-b6e0-4301-9bc9-ad2d5d41ba6c"
        },
        "item": {
          "id": "da32bb79-da06-4614-9b91-aa86921b977a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4efad7aa-bbaf-4418-877f-87791ec05888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbcf62d-e2c8-4594-8f8e-d592278114a0",
        "cursor": {
          "ref": "305b7cd8-dd7b-4734-8a91-6b1fdaff83a0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b2233e9e-af22-42c6-a71a-73ed540e2129"
        },
        "item": {
          "id": "ffbcf62d-e2c8-4594-8f8e-d592278114a0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de9d687b-18f7-4ade-9ee2-8a40ee597ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962f5cb-4241-4a88-8948-8a18865e0626",
        "cursor": {
          "ref": "ebad6d36-5f4b-4190-a9c4-cca1dc07db58",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dca189d9-dca0-49c4-9dc1-9323f60965c6"
        },
        "item": {
          "id": "2962f5cb-4241-4a88-8948-8a18865e0626",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9f91af55-04ae-4ce5-8be7-873ffd258299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56531eaf-11b4-4702-a7a5-0a3a8786edc8",
        "cursor": {
          "ref": "6da716a9-c204-4ee1-9399-e8c985a7134b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f22e0a5-6c3e-491d-8933-3b430ad98fd4"
        },
        "item": {
          "id": "56531eaf-11b4-4702-a7a5-0a3a8786edc8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1162d2d1-47e2-4317-8c8b-c2185a82ca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568a6bf-cb49-4ce7-91bc-ec8ddbd341da",
        "cursor": {
          "ref": "cf559037-b1a1-42ad-b260-9c6ea6498590",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4ef735a-266a-44f0-a65b-767ec24ba1ce"
        },
        "item": {
          "id": "1568a6bf-cb49-4ce7-91bc-ec8ddbd341da",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "de2c5f56-3507-4ad3-bff7-addab19f6a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ed2f4-f4a5-4979-941a-b0b772d5a3b2",
        "cursor": {
          "ref": "5591be7d-19a7-4845-a5cd-6b3a7f6afca8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "afbc796f-18ca-4f6e-a062-0d5cdcb28289"
        },
        "item": {
          "id": "4e0ed2f4-f4a5-4979-941a-b0b772d5a3b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "29a8a9c7-b8b1-484f-ad54-dfa9306bcc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4e609-74cf-47a7-8d55-ccf4e528edc9",
        "cursor": {
          "ref": "c55ab5ca-64cc-4931-8640-debbbd57d152",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b438a709-7264-4b4d-a8a5-c21f4bcc014b"
        },
        "item": {
          "id": "faf4e609-74cf-47a7-8d55-ccf4e528edc9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "94a6991e-1883-4db5-b35e-3e06a3f7f333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f297e68-e9f2-4ec2-a40a-ddccc58223fa",
        "cursor": {
          "ref": "97770248-363f-4e47-8248-c5ad7d6a096e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d16092dc-f2af-47a2-bd39-fed7cae5cfa8"
        },
        "item": {
          "id": "8f297e68-e9f2-4ec2-a40a-ddccc58223fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4401db4b-cd10-43b3-9e43-8a41ed98704f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438ff026-2223-4a6d-9771-3cfe9e642384",
        "cursor": {
          "ref": "38856bab-bf80-4ba9-b700-56dbd9525ad9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f702f801-ddfd-4105-be9a-c5858e20e07d"
        },
        "item": {
          "id": "438ff026-2223-4a6d-9771-3cfe9e642384",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c681ad2-b7b9-4d74-8cd5-4dd4d75b9129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12827ed0-2a43-4550-9eed-965a3b3cfc57",
        "cursor": {
          "ref": "2d0c6fa3-a3e2-4480-8ae4-408abb4a6cae",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2181cfc6-0e23-4d30-80d6-65279ce977cb"
        },
        "item": {
          "id": "12827ed0-2a43-4550-9eed-965a3b3cfc57",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e97dd618-f958-43ab-9300-7f33061a5014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce62501-5435-4f89-abff-151a3f085436",
        "cursor": {
          "ref": "372e5b89-7d98-4dd3-b759-0765269fa924",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc413dc4-1059-4b3b-a7e5-8ccb8aa6ec50"
        },
        "item": {
          "id": "1ce62501-5435-4f89-abff-151a3f085436",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "062c5210-e150-4011-b260-39023e025a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07985819-aabc-4f0f-afd3-db3715ed705a",
        "cursor": {
          "ref": "6c3c23db-5571-4737-9f7c-4a003f3a8637",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f9e13629-4363-4910-b7bc-2ed74ee60d12"
        },
        "item": {
          "id": "07985819-aabc-4f0f-afd3-db3715ed705a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b4782a32-097c-41d5-9d81-6d33baf367e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f8879-0b70-4ae7-b0cc-91597c9a268a",
        "cursor": {
          "ref": "8e4ffb68-2544-4b55-8fa9-cbbc5599919d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a29d8890-4909-4414-aa6b-f36f581ba07d"
        },
        "item": {
          "id": "a13f8879-0b70-4ae7-b0cc-91597c9a268a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "077e8fdd-6b07-4813-af1a-aa0da47b5109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ddc3a1-902e-47e1-914f-432a9d6871c1",
        "cursor": {
          "ref": "b7a81e95-e99d-4b8e-9022-54482f19b970",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "01640002-0fc8-4fb1-9b92-3c42987e2923"
        },
        "item": {
          "id": "11ddc3a1-902e-47e1-914f-432a9d6871c1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a6a8cee4-5a24-45aa-8b97-49e9c438563d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f072b9-66c1-476b-81e7-0b57edb62f8b",
        "cursor": {
          "ref": "d12669f4-df56-4371-9471-1ac470239dee",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "79ae9100-72ec-453a-a572-fdb162177b32"
        },
        "item": {
          "id": "a2f072b9-66c1-476b-81e7-0b57edb62f8b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "def42ce5-f86f-42d7-86b6-606b5010cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231c4fe4-0ee0-4432-bbd3-d366e3a8a708",
        "cursor": {
          "ref": "41cd99f4-a9de-4279-b085-34a9c93f9256",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3d30947-d546-4090-bc3c-45f80085b1e3"
        },
        "item": {
          "id": "231c4fe4-0ee0-4432-bbd3-d366e3a8a708",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "410fb6b4-6c24-4272-b695-1f45ea41cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f28615b-7b18-4492-813c-534e90916e9c",
        "cursor": {
          "ref": "18c7c238-8454-490d-9899-d72d8b70ee26",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e8004509-b0ca-4a6e-8889-17cea6c675a1"
        },
        "item": {
          "id": "0f28615b-7b18-4492-813c-534e90916e9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "66f1b6fd-7989-4b1a-92d2-fb2d0545b9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45701804-5888-4228-b577-30d387b0ccba",
        "cursor": {
          "ref": "5f95f9e4-1ede-49cf-810f-146c36dcefe9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33ad22d9-f2ef-4919-b90a-dcc8398a177a"
        },
        "item": {
          "id": "45701804-5888-4228-b577-30d387b0ccba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "886f3f23-905c-41b0-ac6c-fbab8105a6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713df8af-de98-48e5-bf88-91989a82470d",
        "cursor": {
          "ref": "687939b5-420e-4028-a36a-7b62a9ee7691",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e8aaea9a-4075-4339-8afe-eb9aa43d53af"
        },
        "item": {
          "id": "713df8af-de98-48e5-bf88-91989a82470d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "599256ce-62f4-4dae-a8fc-5154ea52a1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6434e80-d110-4a9c-bb0f-7d79a3f0ae1f",
        "cursor": {
          "ref": "32b2e9d0-f330-4e57-b57d-d7b0452f7882",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8f1c07cd-5afb-40f0-a5da-39a1c3be5c55"
        },
        "item": {
          "id": "e6434e80-d110-4a9c-bb0f-7d79a3f0ae1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7c4de330-0441-4b26-a99f-0e2c1a99cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cb2cfc-d161-45ca-838b-bb7abe1b53a8",
        "cursor": {
          "ref": "3f761e3b-a779-4eeb-b117-f4b122bfa004",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "555c65a9-10dc-4464-8656-9a5efe69c7f5"
        },
        "item": {
          "id": "48cb2cfc-d161-45ca-838b-bb7abe1b53a8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bf80da5a-c0f9-4bc5-a4ba-40b73b7e6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdc994a-9c51-45ee-bc2b-2d873c418c67",
        "cursor": {
          "ref": "4125c0cf-68a1-46e6-b0f0-badc9b974afe",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa96fbbd-c7a6-480e-95bc-f067d356d1dd"
        },
        "item": {
          "id": "0fdc994a-9c51-45ee-bc2b-2d873c418c67",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c6def1b-1ec5-41a5-b2d5-202b924ec617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5837bb-5314-4b3a-a383-4f3ed3c6c3ee",
        "cursor": {
          "ref": "d8d7687f-0839-4f6c-b4bc-fa4be8af0b83",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3fd7e141-8620-47be-8598-e225cb350e2f"
        },
        "item": {
          "id": "ce5837bb-5314-4b3a-a383-4f3ed3c6c3ee",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "24cb936d-f61e-4fb0-9a7f-2033ef06dd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c33276-0c0d-466f-981f-6bde8fc7ce22",
        "cursor": {
          "ref": "443f7ab4-2dd9-4e7f-86ab-233bcda02f90",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dad10a7-a811-45c2-8d94-e7685c163cb5"
        },
        "item": {
          "id": "a9c33276-0c0d-466f-981f-6bde8fc7ce22",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "70ae026b-e021-4c0b-80c1-79cd0f22d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4904959a-4eb8-445a-8d1d-96da87073616",
        "cursor": {
          "ref": "d8f203c3-c1f7-48c9-9f7f-db4dbdec6500",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0688d6c-9cc4-4b5c-ad76-f7cedbc18aaf"
        },
        "item": {
          "id": "4904959a-4eb8-445a-8d1d-96da87073616",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9a00c7c8-c461-42d4-9a52-5a2ee7a59063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea4dd2-f6cb-47fa-8400-502c5a708531",
        "cursor": {
          "ref": "61781641-4d7d-40cb-97d0-4067b91fac17",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "deb2790a-1c9f-47d1-b61a-2b654ec78e31"
        },
        "item": {
          "id": "a3ea4dd2-f6cb-47fa-8400-502c5a708531",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8aca432f-1123-4eaf-82a1-29d3f324870a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9983c0a-b8d3-4539-ad7a-f45f1c1e87d9",
        "cursor": {
          "ref": "14065ffc-326a-4a9b-984f-a6bccfc14891",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3ecbb8d7-b44c-48a7-a00f-f535cefa9f61"
        },
        "item": {
          "id": "e9983c0a-b8d3-4539-ad7a-f45f1c1e87d9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "337f5d1f-8306-4938-95e5-b9c68cc946da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5fe443-17ad-4de7-9226-5b0cad849919",
        "cursor": {
          "ref": "9f7f4548-8cc8-43e9-ac09-1b14f79c3faf",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "28a456a2-6566-452e-8952-c24908d73920"
        },
        "item": {
          "id": "ad5fe443-17ad-4de7-9226-5b0cad849919",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "831cebce-015f-4910-a13b-639e6a433434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4205e780-61d3-4559-98bf-0a8e6943d450",
        "cursor": {
          "ref": "6d3d8447-46df-4d5f-8cea-d26e1ebd6030",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6246286f-6d1e-485c-8b71-805181e6b139"
        },
        "item": {
          "id": "4205e780-61d3-4559-98bf-0a8e6943d450",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2dcccd72-6ec6-4413-b843-46e400ede8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40df94-50c2-46b5-adbe-97f761d95077",
        "cursor": {
          "ref": "8445e529-a73e-420f-a77a-e236b92edc91",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "338c106e-28c8-473b-8289-c40368e9771a"
        },
        "item": {
          "id": "2f40df94-50c2-46b5-adbe-97f761d95077",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3a1696c8-650e-4e2d-b3e1-0d9598b9e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24312a54-fbd9-4315-a283-93c35a0f4b68",
        "cursor": {
          "ref": "3cac78c6-2d39-4faf-8698-23db1187b893",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0daa0025-1d97-412d-baa7-a887c1c62746"
        },
        "item": {
          "id": "24312a54-fbd9-4315-a283-93c35a0f4b68",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ea033541-3f45-4b9f-a040-b997047470cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a0057-01ac-4b8d-840d-0a19e22abd66",
        "cursor": {
          "ref": "5c842c99-c6f6-405a-b9b2-c0640015017c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4720681c-2452-4459-987f-f9f14de3c04a"
        },
        "item": {
          "id": "1f5a0057-01ac-4b8d-840d-0a19e22abd66",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ecec93e-86e1-4eed-a52c-1b9d067fa38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62c5576-f25d-4999-ac63-8c765c9ee5ff",
        "cursor": {
          "ref": "d64c38ab-2ca3-4670-9992-fbc356614feb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7142bbfc-406f-4b16-828d-adc376e0ceb8"
        },
        "item": {
          "id": "f62c5576-f25d-4999-ac63-8c765c9ee5ff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e294e33f-4a11-48aa-b9ca-32ec84f7a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548fe14d-2427-433c-bb8a-6a96dfa767c5",
        "cursor": {
          "ref": "c73f134a-cb15-4237-b04c-28e27d071258",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dddecbdb-f14e-455e-a2a0-01a5ef0b26ce"
        },
        "item": {
          "id": "548fe14d-2427-433c-bb8a-6a96dfa767c5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8c7a1186-2529-434c-9158-a20da04066fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea8d733-0b48-49c8-8351-8d37f8508690",
        "cursor": {
          "ref": "68fe5b4a-decc-4d14-8742-a92c948f1053",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "14c166d1-8081-4703-b3f4-6ae6f254dd2b"
        },
        "item": {
          "id": "8ea8d733-0b48-49c8-8351-8d37f8508690",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b3cf70d5-d142-41d5-843f-252889f746be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7810f18a-0567-4fbc-82cc-ed518dd29299",
        "cursor": {
          "ref": "14a98f0c-e6b6-46c6-b3b7-68e4e32484e5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7c376a68-260e-45d3-89ba-bcac13761415"
        },
        "item": {
          "id": "7810f18a-0567-4fbc-82cc-ed518dd29299",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fa0ec76e-8682-4ed8-b55b-ba8e0e3e6940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad041c5-7de6-46f1-ac88-c38e043e1870",
        "cursor": {
          "ref": "e2fb8340-3fcb-4923-9ee4-2574fe48798a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4ccfc701-a72e-40ef-a1d5-e323ead2c79c"
        },
        "item": {
          "id": "5ad041c5-7de6-46f1-ac88-c38e043e1870",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2b1b1112-2c99-4b26-8084-1101a31d5530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc7dbb8-2c0b-42fa-bce3-05dbb3da134a",
        "cursor": {
          "ref": "ef8f17ea-7ccf-415a-9f19-051f4eee4755",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4047d514-1570-4a5d-8f8b-fa6e4cba7c1c"
        },
        "item": {
          "id": "bdc7dbb8-2c0b-42fa-bce3-05dbb3da134a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "23639425-bb25-4706-b026-752adb131981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf974b5d-542e-4286-9b76-951a203a5f96",
        "cursor": {
          "ref": "e406587d-4484-4017-a3dd-d1b3d601a939",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a0ef857a-7308-4a6b-a106-1274554eaf8c"
        },
        "item": {
          "id": "cf974b5d-542e-4286-9b76-951a203a5f96",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "48750952-0402-4a8a-bd42-8b158ede248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b74c1-18de-4a35-acbc-8416b1458ee2",
        "cursor": {
          "ref": "ae909418-452a-42b1-84bb-02d1d49d35e4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9721301e-1c0c-47ea-bf08-cb95b45224d9"
        },
        "item": {
          "id": "4b1b74c1-18de-4a35-acbc-8416b1458ee2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "521956b1-07fa-464e-9bf4-45486c10dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935597b-7839-4547-92c8-6636d3b4b10f",
        "cursor": {
          "ref": "263cb7d8-05f6-47a0-b9ac-7b1d94cef25d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7991d519-7dba-4e8f-bc11-17a0517fef74"
        },
        "item": {
          "id": "e935597b-7839-4547-92c8-6636d3b4b10f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1e36139e-49e9-424f-a0c4-3326f5f86124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e6091-09be-437d-98c9-59ff48afc6ba",
        "cursor": {
          "ref": "c163d464-10c5-4eb0-acd9-f60b4781ff84",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b16540c3-48b8-4d76-a7ce-b0bad15dd34a"
        },
        "item": {
          "id": "671e6091-09be-437d-98c9-59ff48afc6ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "185fca65-50f6-4916-b28b-7c52690c68f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd6b54-eda9-44fa-8dcf-bdd80919745c",
        "cursor": {
          "ref": "d7795f13-b7c8-48bb-a6c1-7534591ebfee",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4549d131-918d-47f3-9348-290dcbb37f2e"
        },
        "item": {
          "id": "0ebd6b54-eda9-44fa-8dcf-bdd80919745c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b4e68104-c692-4e06-ba03-ddbac49fae76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ec8764-268b-42ac-93e1-1c3363150a52",
        "cursor": {
          "ref": "fa624184-e82d-4188-9ba2-654660a49d33",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fd37100e-5e16-4cee-83b5-1fad593ea630"
        },
        "item": {
          "id": "c2ec8764-268b-42ac-93e1-1c3363150a52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3bed13fe-59a5-4b62-9df0-3219186e3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a61e333-e2c0-4206-b1e0-6328099479e6",
        "cursor": {
          "ref": "dc1ebaf1-3146-459e-8e08-42c8310ded6c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c6f81bc2-8d11-4075-b059-ee00d0eb62c7"
        },
        "item": {
          "id": "3a61e333-e2c0-4206-b1e0-6328099479e6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "58399e11-bc18-43d9-837e-8853d474d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad54b5-b764-4f77-8d15-9b6d5e09286e",
        "cursor": {
          "ref": "aedff958-8927-4892-995a-0a2210b82caa",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "325e1195-dfb4-47f0-bca4-f6738d63b162"
        },
        "item": {
          "id": "f1ad54b5-b764-4f77-8d15-9b6d5e09286e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "771905e2-e9e2-4b2f-aace-a7aa60160039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82325f29-ede8-4d0e-aa87-619f3e105609",
        "cursor": {
          "ref": "935e0eb9-af04-447b-ba5f-3383d0aff0e8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "111ce091-8fdd-4fa5-97dc-79bd9922751f"
        },
        "item": {
          "id": "82325f29-ede8-4d0e-aa87-619f3e105609",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "72f90e7b-f566-487c-8989-13983db2fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4043ee32-5ca7-4ad5-b450-da6abf3bc2a3",
        "cursor": {
          "ref": "e6e24cce-e8c3-4711-9d98-bfbadaffe20c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "22d4519c-c0a6-4457-8568-a243f028d576"
        },
        "item": {
          "id": "4043ee32-5ca7-4ad5-b450-da6abf3bc2a3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9e696170-9147-4cc9-8b84-ee19c293b24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9cedea-5b30-40de-8259-1b7bd048882a",
        "cursor": {
          "ref": "4b9287de-0a57-4744-a979-104acebfed42",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "06e71eaa-f0d4-4aae-b95b-c84e9cc8eb09"
        },
        "item": {
          "id": "fe9cedea-5b30-40de-8259-1b7bd048882a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "952ea90e-d81f-418e-8607-be5527691a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b350e8-a076-493b-b4c7-953b5c951e12",
        "cursor": {
          "ref": "a01d046b-6144-4d2f-8031-22c838fdb716",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "01b408e1-444c-4884-97d4-1bd13257cfcd"
        },
        "item": {
          "id": "15b350e8-a076-493b-b4c7-953b5c951e12",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "832f7e6a-dd0d-483c-94dd-e37875995fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aded723f-453a-4e69-9d0f-7e02f2c94e0d",
        "cursor": {
          "ref": "fa8ef36a-e716-4967-89bc-e91e59a2e763",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bb163f82-c74b-479a-92dc-cd1072e384a9"
        },
        "item": {
          "id": "aded723f-453a-4e69-9d0f-7e02f2c94e0d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fc41a6a0-0324-414d-b416-1196eda42a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576be129-da70-4153-a379-69d9eb382a99",
        "cursor": {
          "ref": "1a218364-4538-4a1d-be01-d692b5fa9ee5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f749afdd-2412-41a9-bb82-c3170c41de44"
        },
        "item": {
          "id": "576be129-da70-4153-a379-69d9eb382a99",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d319b5d5-1ac7-4991-bba3-bff7d1ea0a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa3eae5-1714-4c27-9977-0e46383c0a82",
        "cursor": {
          "ref": "c96a3972-2c3a-492e-ba26-6c8920b74606",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "44982c8f-e9c4-4b78-86b5-780a78aa749c"
        },
        "item": {
          "id": "baa3eae5-1714-4c27-9977-0e46383c0a82",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7b80dcd-3676-431b-9bc7-80e4cafad8ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52140e64-549a-433b-91a0-dca95da2af71",
        "cursor": {
          "ref": "69d8c0fd-0c7a-48cc-88d3-f972ea5ef0ab",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9897b82b-829d-4cfd-a551-5d4e0629881f"
        },
        "item": {
          "id": "52140e64-549a-433b-91a0-dca95da2af71",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "365084e9-76e2-431e-b003-280eae6eac88",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa801c0-ed41-47bb-9b3c-a0f9da32d2d9",
        "cursor": {
          "ref": "d3738d3e-2f5e-4797-8e1e-c508a32f34d0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "23ede9c1-6464-41c0-b13f-6718ee42d0c1"
        },
        "item": {
          "id": "eaa801c0-ed41-47bb-9b3c-a0f9da32d2d9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "49dfde18-952e-45be-9419-c1469542b20b",
          "status": "OK",
          "code": 200,
          "responseTime": 1440,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "039c4fe5-bc24-4e0a-9cbe-13abcd1fc810",
        "cursor": {
          "ref": "5327a28a-1b75-479d-b50c-73294019f11e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "356b384d-49dc-4202-bd99-2562eda3d16e"
        },
        "item": {
          "id": "039c4fe5-bc24-4e0a-9cbe-13abcd1fc810",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f12f1124-4fc7-486c-ad1f-dac34a50aa88",
          "status": "OK",
          "code": 200,
          "responseTime": 1381,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe911d-7a82-41fb-a74c-fe4e3154decf",
        "cursor": {
          "ref": "5f933395-8d21-4980-b178-fa3716955a0f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b4fa41d8-479f-4c56-8044-b529e09e14a1"
        },
        "item": {
          "id": "bafe911d-7a82-41fb-a74c-fe4e3154decf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8d3af161-46a7-4901-8ed0-194d0c6e722a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe911d-7a82-41fb-a74c-fe4e3154decf",
        "cursor": {
          "ref": "5f933395-8d21-4980-b178-fa3716955a0f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b4fa41d8-479f-4c56-8044-b529e09e14a1"
        },
        "item": {
          "id": "bafe911d-7a82-41fb-a74c-fe4e3154decf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8d3af161-46a7-4901-8ed0-194d0c6e722a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0a067b-5efb-4096-90a2-add7c412a64c",
        "cursor": {
          "ref": "537a62cf-6498-442c-9629-41ce1835fc5d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f5c33000-0bc3-4808-a0d6-10d6fa522b7a"
        },
        "item": {
          "id": "1c0a067b-5efb-4096-90a2-add7c412a64c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a2a0a340-a75d-41b1-9d05-68068011f612",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd0e681-1ea2-4855-87c2-8b38dfdc901e",
        "cursor": {
          "ref": "899d32f6-9ceb-49ec-a80b-bec40231e264",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ecb73594-3b2a-4c6a-ade4-78699dd4c807"
        },
        "item": {
          "id": "cbd0e681-1ea2-4855-87c2-8b38dfdc901e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "50e3f4d8-2806-4937-b4a5-f757f9e21690",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}