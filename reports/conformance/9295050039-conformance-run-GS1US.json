{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "109b0c4d-b644-4871-b91f-5d3b7a92c06e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f0f2018-32a8-4cdf-955e-85faa028d1bd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "373595da-6cf7-44fa-a133-cb27ddaed26a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5843a66e-544b-45dc-b31c-fb803a9c51fe"
                }
              }
            ]
          },
          {
            "id": "8ac251fc-ca9d-4e56-8c4c-22ec2d8c6a8d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aebe8da2-6d3c-4cc0-b733-9beeef92a975",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "48e25a97-7d0b-4982-a314-afc76cb33cd2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7c2b0699-912e-470a-83ff-68089a8c5ec8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "083d3118-9d36-4923-a84b-c3188a1eff08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6dfc303c-5caa-4b9c-a60f-d9154d3da76a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2439233e-445b-4576-9722-0acbdf77807c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1010708d-c22a-4c16-80f4-a9e28d6adfa6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5393b0ae-04f1-417f-958e-35fa8caf2210",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e99cc6b8-d873-4759-adca-240f02bd4ca4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6324bbd8-d698-453a-8d40-5159dfa50c17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f45e7f0a-2683-4105-a379-e9b77ebbd9f9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50a7a773-b3a4-4a00-b5a3-2cd1978db5c6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "33255e77-41f7-48c4-92d1-60014bb30a5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed8184e2-801a-424d-ad23-1c4c3e434c8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7bd2c6e-b3c4-48f6-afd4-d73a65a1cafe"
            }
          }
        ]
      },
      {
        "id": "f2399f22-68de-4fdb-989c-e59485f0bfbb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f90d81c8-edbf-4719-878b-a9c30a8dabfd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb17bb3f-dedc-4eb2-b953-fa0daa8df2fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec30e819-2874-4c65-800c-4b89c33ac425",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57f6617-14bf-4ea2-a48a-b645b83bcf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3298ffae-21bb-4cb7-9e2c-e36ddce3a241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3f0e65-6e9d-48e2-a6f5-911dc1cffc33",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9384f37f-2d7e-4399-8551-056b3ed09ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf5ed6a9-9587-41a8-bc0c-5ad3a0d3d571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfe171b-d8c9-4085-94c8-875436d272dd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa91c6d-16f4-48ec-a389-25cbf4d65ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf1284ff-f06b-42c0-b526-2d6e8f09c998"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7d40b85-2328-49e3-9122-dc76e73c0687",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e0577fe-d0be-4ed8-b2ea-500ded12c14c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77691a4c-a295-43e2-8e9e-18257bd5c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c532c912-f6e3-4b18-bd2a-a7dc82c3dd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f22615e-fd1c-48a6-b755-60e607aa7610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f929941e-d716-4c4f-9319-74b2676c30ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07b8c26d-7fe4-448f-9623-6b48902c97e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31b6ab9d-9f8e-409e-a005-966d8365cd32",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "249b48a1-8f93-4cc3-97de-2b6f9e76b013",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "747450cd-a659-4a3c-a24c-d337247ddc7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "407f261b-c7f5-40ec-af7a-f3ab0a03aaa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e5a6324a-5a65-4169-b1e4-e51f91c6f550"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91997d78-a9a1-4dbe-9e85-137c4112aed9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4dd6364-a84d-424f-8aa5-c4ccd6d2e2b8"
            }
          }
        ]
      },
      {
        "id": "da5f6fd2-a51f-4e87-9461-4fb23c7a1903",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74544d2c-85cf-492b-803d-417fd9691904",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6effac15-c34e-41fe-aa80-89e845355bc0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e6fbfd19-317b-4e4d-bf85-5e2c9ddca5b5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c748ed2-d40e-451b-84b1-c87b672fd81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878c783a-2877-4461-8dd6-e742de9b45d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63a920f-be37-46e5-b24b-3f783120b4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "031a0623-e293-4608-aaee-c950a802f3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a08a64-c2d5-4e1b-ab6f-cd5ff1a2f557",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66630ec1-6414-43e7-b1a0-f6faaec570b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ae73db-eddf-436e-8636-96eb2520cc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5ab71-4dd7-4fe8-a5cf-7bce6c6475e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cddc584c-2765-456e-9e5e-758b88b805ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17ca61-a870-4c25-b2f0-574b081ba32a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2668c383-98da-4190-a1ae-63c1358b1e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced887fa-06fb-4890-9aab-24056d2c7b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86aa4ab-d798-476e-8afe-0f42c9f4498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95468000-04fe-4df0-a357-3b1ca7b1cbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9404646-d6a4-4ab8-99ee-ca7bffa1de96",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d62fe0-3ff1-41f9-8e5b-37c271a629b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ca6a50-8a20-444f-a427-bfe116da624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1949ba37-0e3c-4f4b-a628-154e637b66f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523b9cf5-c10b-47df-b470-116bd04f70ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909b1ac-8bc7-4c6d-8f85-0f87a005d49a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67fec4-5813-4bd8-a0be-aa88597404f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdfabe7-8fa9-4720-9dd1-13a94b26d5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998f4369-25bd-46d1-ad02-b2c066c3c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a01e9536-36bd-466e-8204-0e63a517d8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a8cbbb-7254-41d4-8aa5-f9589fe92ed4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b0bf67-3723-4bef-9b71-e78cb556eebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24e4397-2cf6-4f62-a9b1-d926dd7790d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a3361-48fd-443c-9cb3-8bfb835cf730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e71cd5-2faa-471f-a779-efd326bcc1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd146f-1401-416b-9535-b9b05ca096b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7337350f-0ec4-4a3a-b355-4ae223192d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a81db60-b27d-42f6-9d81-4a8a61cd3dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac77865-8b21-4bfc-be52-fc982c7b4205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98a1bdc0-6f2e-44d0-8b2c-98ab7be56db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf12042-a786-451c-bf80-8295dd921fef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9610297-3c40-45e1-b1df-8b9577c79c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292f7636-80e8-450b-995a-28be9e514787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ed7803-66ca-4a32-8760-aaf2c731505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30005003-cb06-41f3-965b-ab60243f5b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770bf41e-f053-4b57-94f2-43ae2200e28f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97f3e94-c6dc-4360-88c5-5d86a49e6cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78d6fb2-0204-4e08-b2d1-6de308ac0091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c93e90-374f-4dc5-99c4-9cbf8c608087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d30eba-50fe-4ca2-bcf0-6bb58aebb37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f61aed-1826-40aa-880e-df0168a02244",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5e40b2-1c34-4fcb-aa96-2aa061135508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fb98cf-96d0-4c59-a4a4-b4139b6823a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27021ab8-1e02-4fd6-a260-18fb2a12e84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e55282-0fdd-47c4-89a0-700e3869d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f10b5d-ff51-45f1-9a7f-fa7c925e9c42",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cfc2eb-f118-4499-9e94-9122a003bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4631161-d8e0-4d82-8e14-7f2e94a9355b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199c312f-3386-45b4-aa3e-b95b2c627bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf088ee9-82ed-4dff-89d1-f6ee34850ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44001df2-3a18-476d-88ad-74b4b4b7b8b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e6fbd7-7a1d-47a9-9941-e6dd3eb07d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c865c-adc7-4d8d-acb3-933b07c6e979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a49a55b-ae80-4cec-8e87-9e4f74ce2dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99549aca-b71a-45a2-85c4-d5c2767f6f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38944f54-acd4-4965-ba18-bf6026cab61f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee94fa1-1ea2-48d7-b3fd-bc33196a7b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d83136-3bf0-444c-81c1-7d2e531c6505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368ac996-b9e9-4bb5-bbcc-0663cfd461ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9598589-74bb-4f0f-9f81-f283f625d373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42902bab-081d-476a-ba81-3dc09358caf5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7af788-831b-4881-8e21-bdb0b7e9f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d603b2b1-2471-425a-b350-cb6917310ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37135ef-04bc-419b-a661-1041c773c396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077e79ab-47fe-4ad4-b2fb-92c4aaa2e0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3229f228-eb34-4d09-a72e-f1855dbb6841",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9379b220-6e9f-40f3-a341-4efa777f150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c5f61f-9db8-49ab-bdff-110baf2ae489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05321353-9bcd-4886-b2a5-d2587e2a0d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b09c3b4-f361-4b91-b097-a1dc4fe91aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f101f3c-388e-4068-aeaa-67873736ff47",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f0de0e-873c-4b36-8e71-441197dbbc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3834ba-100a-4249-b6de-2247f4d855c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f38701a-4850-4008-bc52-4a39cc615d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e99dc705-87da-47c1-a491-770ecd401e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656fec7a-fc75-4ef6-a2fc-72788f365a2b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225f6b23-94cc-4a04-91b7-a8d33fe3593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4990dbec-72d9-47e3-9795-48a410a8720e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cc976c-2cb5-4676-b99e-36c0852d2ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb36b4a3-25d3-471a-a775-d53151d10832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428dd48d-003b-4c55-8992-436fc039d35d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16acde18-e20e-4060-9a39-c38d15fd1652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4779c5cd-241c-4afa-a8a9-0ec5a10488d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88abd5ae-2f08-4a10-b4c9-0272f47fef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75278f92-dcb1-40d9-9c2d-d24d6279a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc8254a-84e7-4e44-a4b4-c27e702a2726",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685a1910-994e-4c31-b506-89884ddb02f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079aea8e-a2fc-4c6b-b603-9ec7f5597fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5912694b-1826-4541-bcca-006b3f9d3b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ae1384-cd79-4fb7-bd99-414316c73417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6a4f71-5db7-44a5-9068-b78e378d1d44",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae802232-0782-44c5-9abb-fd45958ddd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd9941e-2a4f-47de-a733-7bad12337400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252af97a-1be7-4bb9-8ac9-11964d51c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e538bf-6cc6-4087-b285-48c8d4e7c168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a84e1dd-808f-4686-a8a9-1df4f6de63f2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a851fd-47fa-44f8-a0de-3a7accbcd6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c9229f-98f8-47a7-8180-ffcdfd5918b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13309651-77ff-4411-9622-5173343284c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bc2b78-70e6-4dae-a4d6-417d1c105d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521107b9-5825-418a-8b9c-41229c15fd34",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96360c29-7216-4151-b82c-2fb1b5b1113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a05a3f-8842-4991-abe2-3efc46f39827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b8203-82d4-4d72-a91c-743efa753c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6250517-d8ec-4031-aa68-716940a824c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe81002-590b-4aa1-999a-d69b1bdd1a13",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ce7505-667c-495d-b341-8577b715b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f786d8e-f7a4-4547-ac43-6aad6197aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521f4c85-2c0d-4eb3-b353-9cd88b4bb27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1274a163-b479-4566-95b2-2f69e82e67d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6d5f78-5c16-4693-9407-84ce2115d3d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128e6106-465c-4581-8e49-285501859e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9cc4c1-3d9a-4d2e-a026-abcae4dfbfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c44a2d5-350e-4fd8-890c-0e6c211e30e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdf89b7-f75e-40cc-ad47-6117ad85631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a0f914-d97f-4b24-b2e9-554514b184ae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be7268-acb8-4689-9569-80f97d92957f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65b5514-b4f2-4d21-a4f1-cea8be7fcbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247625a9-c1cb-45fe-8c7b-357d1b7a9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20bbe223-d3bf-474c-8006-218c10c3c855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b91252-dc09-4004-b984-c8aa95c6a0aa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b018aff0-18d9-49c5-aeb9-473fb55ac13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05442092-36af-4135-8057-c46a15713e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7942a-bfa8-4115-9303-db0ca2673bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "354b7973-a8e0-468d-819a-155563568f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edafb02-368b-493b-8dc6-4801234d6afc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4377e279-be52-4dfc-a078-d584a9264418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3743462e-b8a4-45b1-af45-d4f606753e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd33cc36-4f46-4867-99ac-af1dc680e0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec563dc-c081-4f1f-a4f2-14f8f8a07959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462945df-b14c-4355-b1ea-27492fe4fb9c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d94be9c-11fb-4af1-8419-778147e7044d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06cce7b-f07c-4460-8982-adac7e150bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477839ae-c44d-48e0-addf-7d8289e5eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09d0c7e-7aeb-4b3e-8cff-b11ed8c0be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48be74a-d35c-44d7-a96f-705c645e71ff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aec8886-2369-452d-868d-ccea2c10c08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5ec813-875f-4dd2-bb90-928d923b1ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0393a8cc-61a5-4728-a02d-028489a0d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fcbde8-b0c5-4842-a5cb-cfa2f7fd7c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4848aa-25dd-4f15-9618-8c65e76d82b8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fa0ee2-9438-44a3-9899-323e3d874631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990ca903-d5d0-4589-bc39-e9e7031901a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205c6c3e-8c46-42c4-87f1-4d68167982de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e849d3-54c7-40b3-a68f-250c32553726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d0eb7-2c79-45a1-bc85-d374c283df0b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf179e6-cb6b-4939-841c-ef5380c69402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259eaafb-2c65-4665-869d-daf7b65ee962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad9288e-7db5-4874-ac73-008f65a160d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e9ba1e-4185-4a5e-8e81-da42f8064352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55886791-b6d7-4f50-85d3-f9497270cdef",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bd0486-d9d4-45f6-924c-4116e0cec825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4863baa6-4294-4eab-ba07-d1b7bc5a06fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946d6a02-6614-417a-a426-007e8f5e8548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b535ed70-6ab1-4940-a0db-7ff5b41f4b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a926be5-8749-448f-ac9a-56ae0c1d5026",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099ffc1-edeb-4b05-af42-6dc46c510179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347d7035-bb04-4ab5-ba7b-301fdccd08f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7bd2bd-8fd8-4a53-a391-1bdcfb5033d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bacddd0-139e-40bb-89c7-212b36c475ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20da0d-dba7-4bdd-9c37-680fa57b37fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b01ea7-3624-442b-ad19-a4e2c3277f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c4bfff-485a-4985-9ab4-9afe4ec6f152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916220d1-8b0f-4e0d-93c1-f7b89a8b868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f153519-eb9a-4a7e-8dde-9f3909fd6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321a6e22-a8c3-4d56-9918-6d5ca7def517",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c879ef58-369a-4289-a254-170c686c687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a313efca-c19f-4622-af78-299f365742a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189a05ab-7d4f-4d01-bb9f-59d7a28067bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "aff3ba91-77f2-4614-a139-be419a40a8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ea03fe-871d-4d7d-8893-18574ed841f8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adf4d80-5245-49ad-b24d-b6be850ab656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf1b1c8d-5629-4645-b453-9aa874f155b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce3c054-68a1-4f94-bddc-7747f87b4dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16d14d73-2cda-47c3-b54d-3e23cdbac16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6ca709-740b-44f3-b282-3184bcf8be7a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c015d4-21eb-416f-90af-8126be16e868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c8448d-126c-4a95-bf4f-386017c17968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f6181-fdbb-4465-bfd1-713199625855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f79c22-1661-4839-bd3e-3f646110f8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e7dfa9-c575-4c60-ac6d-423e64761094",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca454a-181c-4751-a86a-aba8c90904fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcff90b-b466-479f-9196-68fe5cdbbf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28479a33-fd8d-4550-8e07-d6cec6388569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e61981-0526-453a-9f88-11cfff6d2788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19e4b49-c862-4dd3-bdc3-d603a658ed54",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ba3cb-83ac-4f80-9e4d-e60e97410631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5a92de-38c7-41c4-9aef-f614e4115b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771bf5a0-57c4-43c6-8504-f33abf20416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4453f3b-ca85-4363-b8cf-fdd83598872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd04cc-5654-4516-9129-0bdcd8a9a9f7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd4d8b7-a8a1-4509-8f9c-572976475f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2834230e-c878-4385-96ba-d39e2c6b40c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b308349-1f99-4da8-af75-4ea9f8704b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "601df9f1-b6ee-4fea-ac9b-42deb18c8dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c924d-071a-4091-a948-0e8e56b6f29f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8106f26f-ee17-4fa8-a77d-d2325d73f9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e653639-a5d7-49d3-a489-46ad06ed4801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6ade6d-7196-45f9-bea5-de813f7591e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "661c637f-a172-4ecb-9cee-70c25a5716cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc73f6-bca5-4004-93e0-078209098541",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d88913c-fde2-4fe8-83c8-1b92299dae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc02626f-57f7-4646-99e4-520ef04f4d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e27b0-29f6-4bd1-ac46-13f282c6dcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03e12259-7ee2-483e-89d6-70a35667f71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfefa649-24dc-47a8-962f-aa44356aa74d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a92c3f-902b-4363-b7f1-f9fa93ae01ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a02edfb-7a5e-4dee-a502-83a7338d526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2570f1-9176-4ce4-abc2-35d4c31f0e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90ed2d5f-6580-4046-b20b-1594d546078c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc96a4a-fe08-44c1-b7e0-14dabd298569",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57daf5d1-3f24-4841-b70a-f6ed9b8f4d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0990a838-9fb6-4532-b390-29cbdb15a721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b303118-5a5f-4e67-9d7b-cc0fd1841bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e9bc2c-88e5-4f87-95ea-7335608965c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9bb304-4c39-42dc-af51-06635feca4fe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97403107-2415-41db-bdb8-4f5d5e4984a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7943113-8ad5-4f2f-a4ee-9cbab23d7e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56085bba-d649-4cd1-b7e0-89b3df2238ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "073036ba-b298-41ea-a37c-e345e8d17d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21563357-c568-4a75-83f1-d3203b270c0b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a5be0-e966-48c2-aaa1-bd6ac05dd77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19331e4a-77b6-466d-8e52-bdc71559552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0e8643-9516-42a1-b5f6-2dad43e7f10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d828421-572e-4012-97eb-b5ae95fb04db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8808e1e-44c3-4f72-a653-056d70bd5533",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de94ec7-86d8-4c38-b9b1-0634f5220bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ce2d1c-65b8-4712-ad4c-3baf058a30c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29987b1-689b-4698-83bb-2636daace3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2983c4a2-8afa-4fca-8016-5557dc634c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e28d09-1ed9-4a00-9ec6-329b98361f4b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa2400-34e0-41a0-9a9c-2a1673a70ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e787243-7f27-4401-93f2-0f1b469aab2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b2ffc-ec8e-47c7-8045-5cf60d709386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42df3555-e7b5-4d31-acdb-7fb97bc95ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d898872-3702-4514-864e-07cdbc29e60f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a161b4c-995a-4762-8595-74d03c44ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3073cc2e-c540-4173-8230-fbfb56e0a5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c3a75-df45-4e9d-abe8-d6e2c018bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9de3eab6-f63a-4310-8798-1d66a1549741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6694d4-8078-4057-a727-cdf0382c9b76",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae0922d-4392-4b3d-a193-1f92276299fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f098ad51-4a4f-4a20-b2d4-3821948d24d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ec87a5-e99d-4d8b-926f-d72217aaf3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c4a9c9-2dc8-4317-a254-60ca69fd0c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47c6f38-1327-4d77-a6d9-2b8c90a312bc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c41c527-1d06-462c-bdf5-460638d1f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490ab10a-9934-4db9-afd3-08545ee7c513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2107a0e6-5858-47bc-92b7-3bbf8a43ea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a27558e-913c-4645-8569-3d185ea4be3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f350cdb-0b2d-4f52-95cc-388ac8145cf3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1181b8e9-c42c-4fe7-9e28-e886625ad245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2affe4-9c1f-4f47-9bb5-8be29871008b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab0267-64eb-493c-8ef8-6045b32f5c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ff718e-7a3e-4a8d-a738-aeae2d3ba995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08adb15a-d745-4ac5-ba7b-7052515a9ac7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c1f9d4-198f-49df-934d-39d4a3ce0956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f0b1c-f7c4-4c85-b9d5-a8c79c75a43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b32b5-4a8b-40e7-82f3-8106654aa93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2e82f1-aa17-42b2-8ad5-76b3c8f1a5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aa4939-553f-4f3c-b812-3ca9827b1bc6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea6106-e5d0-4049-bf90-9b944ae6e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffffa1c-fc75-45da-8c68-5139dd5879e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c954aee7-ad93-44a3-aa46-cb008e63d031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6209339e-85e5-49f1-8f33-b108c2e060d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324b566d-b8a9-4e97-a39d-c1aa6b056392",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ec270f-52f5-43de-bac2-36d4f5b1d613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f784f7-5fec-46cf-acc0-070133ad4cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd114b24-8052-48fb-9531-56172dccb095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50e0620-54cf-410e-9464-9092b1a1cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc43a56-719c-4731-9c84-b5b247750c6d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4019d4-5227-4ed2-80cd-6e0a0c7be828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7fc719-a9fe-488b-bb83-82fef98c91b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de489db8-c750-45e3-8587-46a22a1d5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "98ca1d5a-700e-468c-8a98-a6cec4828e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d91e3e-156d-48a0-8e77-cc2ee507d631",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3281b939-ac39-4a19-9a3b-3c326d261899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695b6897-82c6-4bde-98e5-4d645c1e7bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097a6a20-8cc6-486e-b876-0f96aedcf51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ab366a-a11e-4dc3-9f95-531f24fa900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e497ea-14f8-47c8-aff2-446faeb6467a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57286941-efdf-4516-a468-a55488456f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a44c7d4-aa00-4d51-8359-73d6e640d163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9be6d15-a251-4688-a49f-7929e4acc799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2afa0d-434a-4d6b-b0df-6f8386367582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfc1bf8-3a49-45f0-9605-597d38e37d0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb354a83-4bfb-4b82-88de-8d2451b2bb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d2ee3b-ef5b-460d-bfa8-2d09c75f32e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85884598-3d6e-45a3-9000-f6a1553cb703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "41665134-4c40-4f79-bf45-bd2dfdd4a55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf22447-842a-4832-9301-1bbb62f897c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7fb930-f8b8-459d-afe9-c51b65c8231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2c0bad-ba5b-433e-b89c-3aa9d8e8a99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a9b3a-7e6c-43ef-a56d-153a99e44d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b76290-d775-477e-9076-f96e88850d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f19503-37c1-4433-b83b-8274cace40f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3134dc14-0513-4f59-9025-b4a4b4699601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c04f22-5382-47ab-b31d-2e3a577d9ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce2f175-d159-4c2e-be42-838b2f618f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37391e68-c071-4f83-b110-9e2f11f0d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0657121b-77e3-4254-8d62-47a0b793a1dd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171645c-e8dc-4209-85c7-8791f999937f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb67a27f-76db-4240-988a-178cdf2eaf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166f928c-1889-4210-be1e-006a62115f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "968e2f20-552f-4303-940b-c1bc3ce150f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8143244-46db-4d04-9978-b40ae9816558",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121a8d2c-5c6e-4e46-b5ac-416a529fd233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a99ee5-58fc-4e60-acad-e026f9509280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f967b4-90f8-4335-b943-a265510fb582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4746d7a5-deed-400b-b6a9-2e6910f2b112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc508c8f-3755-4f2b-9180-195e9244c610",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cabe816-5162-43ad-89de-f3a8959718d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845abd53-1fc4-4556-80cd-458c82fd9cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a5ffc2-7604-45ea-862b-1ecdd2932176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "620316ac-dae1-4586-9e8e-936cd2bb8e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b440d6e-41ba-4c55-87f7-fdde6b58f77e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294535f3-0eba-4a39-840e-471ffbbc48b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351ee652-1dd6-4e87-ba9d-d9e45a2b48be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fcf860-4b56-4caa-a545-f7fe4f14ee25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cb1b80-e5f7-4e9a-9969-c8beeb7b5612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddd4d9b-d6e6-4586-9053-f8cf231c97b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7dd835-708f-4de9-bac0-85a064b4ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6885fdf0-60b2-4ae8-bb60-5d4879b47144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5682f909-eb5f-4cc8-b3a8-c187b3d21247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a23d8a-9eef-4bcf-a41a-b00328221b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185e374-b5d7-45b0-a526-6c0e0a70aa84",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c01de4-ccc0-41b2-bb97-065354012127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6164dc-c770-42a7-9b3c-9409f138a97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7860c894-8ff5-45cd-aeb3-ba7064482379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "970dfebb-afca-4051-b0b1-e7a5dd15c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c513744-8b4b-448c-b6ce-05c5853d732d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9718a61-2f47-4e50-8f35-4fe768139a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780bcfd0-abfb-45d4-a61e-8d73e2ed12c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7ffbfb-7955-4858-b9d7-9707d50864d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d111d4c-7570-4ad0-b102-4598a8dd9332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b55474c-f51b-46de-ae54-9cfc834b7a19",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10293e06-0605-4031-87ea-a3a4d08a0212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d244e2-d8f6-43f9-81c0-481bda4abce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5f12fa-a4cd-432d-b083-d8ab41d671d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "916d41cf-38f5-4f80-bd6d-f8dfd46bc026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0effb684-2693-42d2-b935-d7ca52f41bfd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13a1045-8c69-47e0-a7d9-1e8e8a4e52e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6009af52-1c39-4f69-a595-7235162a425e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10921048-0c97-4041-b3cf-982c5fa2aa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc662c23-1f6a-442a-9dcf-83bfcddb0ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a282f308-244d-4b6e-a895-ee167ae85a83",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff785d46-972f-4c54-b728-a728e3794bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebdb021-5864-4864-9ac6-954d86755602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43f20b7-66fd-4a4f-ad43-ed400738490d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54499561-b7ed-4511-b06b-20405c3b75b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17661cee-ce69-4a23-8b90-1f58798e0d66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc950e2-5b8d-447c-9488-19662265b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2027e7e4-02b5-490c-b482-c3e21c675607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8072fb15-965e-4107-bc05-eb9729ca5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5eb916-fcf6-4421-bd2e-d30c3b3f1f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943584fc-6537-485f-8487-3bb91ab823bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae11cfb-5b03-4537-aff0-61d66d48c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22ac4bc-bef2-4da4-9efc-7e4f03e8d971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e8c23a-d03b-404c-8f37-562292ee3231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d8d679-ecb2-4cef-99d6-cfdd5c6eedb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a030c322-a062-4ffe-83db-073b30b6e8f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85894564-6d63-459e-a1a5-51150d56db0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ff0bb7-50b0-4d11-8163-44ae1562294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6927be66-012f-4ca7-b76f-374b1f82f739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86a8134f-3d19-4ccd-9b2a-3122dc6fdc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d030b56-405c-449a-b6d9-3e4b4d3acc7d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de90e08-9054-42b9-942b-70dfa8172997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501a950e-2e34-4231-8284-e7f5745cc028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941163c1-c362-4f7d-be53-9ff515df62eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e2d0fb-2556-4dc7-9ab7-ec9c098ad646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d730d08f-9949-404d-8744-1529f09fbaa6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dd3285-ec07-46f8-b4e5-c01ced2b5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4600e391-22f5-464c-8677-879792a9f5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea0f425-10a8-40ad-89d5-15d34d8a9b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd9308b-0a85-4f16-9047-76deee484752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b880bf2-a563-42b3-a014-7cc7e7c60305",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b254d46-9a8b-4a90-84cc-319ab56dd348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70df9b88-93b6-4652-8ab1-9a56877842c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0af73b-b2a4-4430-a693-f0ad15755b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e925337-ff24-4f61-bd0e-cc23fc968695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c408286-2043-4a96-9f85-5759bc29206f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682f1fc8-215e-4658-a1b9-1f2e2de53205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6b86d9-de1e-401a-93f7-7060575eb053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a10dd2-7fad-4fb9-b6a0-94324bbcbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e072c8f1-f837-40a1-b8f5-99874b158e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8ff498-6bab-4f6f-8e25-64f3a62590c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1eaa5-8b1c-45b0-bd5a-cb5291b508db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562818da-8761-47a1-accf-6bcd89ba8ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce5d614-fb30-4eae-bdbf-31ea117b70c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03bcee85-a391-47fb-970a-a82459161f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea768017-24ef-4605-ba27-8971cf9117ec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa5f553-fe8a-4dc0-bf8c-b571521b0492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd9f609-a58d-41f3-811e-6ee56184db30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a47bdd4-d532-446e-a2d4-33aee682d3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bc00fc-0a16-4a88-89f5-2fb20487f03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c402d5-8ce4-42c0-a4c6-bf70d7e071fa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe2658-d635-4f65-89cb-2834e7b637d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af699da1-7cec-44d6-ac2b-cd5edd4c3316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0859f5b9-e1ea-406c-86f9-17a4859524c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f581af96-e4bb-4d08-9384-a81e30263540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f80c0c-e9e0-4b69-a2c2-b4b459db467b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5925db4-2c2e-4b38-a6eb-1ee8f678b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0097dc30-9a1b-4ebf-b69e-9a262aa29cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b51a153-6c19-41f4-900e-4644eaef6f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb1e851-01be-45e3-a29b-03fa2ff61cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0608dfe-0532-4818-8ef8-f814e4d5bd79",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee2fd6b-e27a-4db5-8de9-c6c5c20936f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7722ef0-a122-47ed-bb66-5756be8dd3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fdecaa-73ac-4ef3-84f6-2a93f54fce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc289ce-7fde-406d-9047-8eabac329128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400d567-9bcc-4ba5-9a4e-89aade8c387c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e9e28f-44d0-4ed5-adb4-90f461c09ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a10d32c-265e-4497-8b86-4da4c325e7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7484a27d-01a9-4854-8ccf-c0f7e938f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40337b96-8b04-42a6-9425-c09431c62f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3246ac-0be0-4aa2-8e4d-cb0de00fbd03",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c42d8-b2c8-4e52-8041-9e198d4509a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9a4230-2b84-4d4d-ad18-8d797fa19bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a413e7-f5d4-481b-bf69-635d82bb27d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60293fed-703f-4028-af8c-bc4336a7dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f45277-2ec6-49a8-94ad-6e148f515b46",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee5aa5-ce17-4a42-8a15-fd1ed60d9cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26241c80-6651-4c12-b02e-e809ca4a8d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98a0070-268d-47d2-b2a1-faaba1756284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0808ad1a-93c6-410a-a182-ffaffbf1e8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f150844-47af-4b13-8c22-aa380d62796f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f9e703-047b-46a5-a79e-af5c11d05d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4fe206-da4e-40c2-bde3-b59b3312142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384991dc-27b4-4ecd-a3a2-6b797df537b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a54ed93-ffa2-493b-9dc4-5b2f1397cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f27b7e3-e2b0-44c5-ab06-560d8b905229",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b42f41-23da-4c04-9bef-6c5233025f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47d606a-b085-4962-b5e0-2cb66ac03b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d295036-9e36-430d-b056-118079d23d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8590bf-b5e7-444b-8dbc-7f07f999f504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69d6a4a-1e17-4390-a52e-a9c2dcf17b1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70de4c8f-a698-4f08-a76b-8e6ebf417d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f990425f-1747-431f-99fe-5e7b9f1089db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd967d2d-c34c-412c-a9af-3ff0fa85ff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "009c01c0-6011-4947-ba18-a1b44974a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4c5b0d-b154-4122-bc8c-75d9bf1eb2ad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b71109f-625a-4730-8cc4-bfaa9a97d13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce32b2a-6ab1-4382-b57e-64ebeb3fab12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64409c91-def9-4cdd-ba43-c11b18bec9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78465e96-7295-46a4-b898-977da38314d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbf2c79-0457-4507-95e0-1fa62f7c6cbd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b878d0-551f-46b8-8a3e-ab37bc90e4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9b0025-6114-43a8-9de6-728deb521fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650e837d-47d1-42b7-ba11-bca308c89376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "922b2f49-2a67-470f-b311-07090aa71078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6484cae4-99fb-450d-8cf3-6ac3bbcd6733",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29c2b03-d978-45d8-89a3-370db7959745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cb65bf13-5371-4a93-a626-8b08ada2cd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efe693d-68eb-4b40-9e05-c707f7b38b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d06f6777-637d-485d-a86a-be0aa01a8165"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96554299-8b23-4548-abbb-29291ba70755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f174338-6ab2-454c-bb2f-e897b869f2e3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bd1ee1-b2be-4952-a31b-d7d6196bfd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17986746-00f6-4ec5-83b2-997a2a09b76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a70e56-1aa3-4f9e-a7b4-a2b6e24cadf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05b3d09b-74a1-4aa0-add2-fdb768ea5997"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68753b99-2a87-4252-9e48-c3e258013973",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9895b0e-c610-4161-bd6d-4d29d9ab8346"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5423ec13-9bf1-4a25-b8f5-97cbb2060b90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25079c22-2668-41e1-b88e-3eced8c9c573"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a48cbf76-406f-4783-8588-ad7c4c97b172",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88757f4f-70ba-4d6e-9635-d01571db0682"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4a25560-ff6d-421c-80d7-e8b3858d4888",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "069fdb45-4684-458b-9422-15bc90b6a738"
                }
              }
            ]
          },
          {
            "id": "4fb1becf-eddb-452b-9abb-3899b12d84b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f55ac722-2802-4dc3-be9d-f7afdf8a39f7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9cec0227-f211-4eb6-864b-3d8bc2ea1ca8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494047a5-8e12-4500-b369-4efea82276fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "852f5e97-6828-49f5-9555-2d5f6a3b224d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08baa562-485c-4df7-a59e-d2e76bb92a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b991a17-71d6-4ef2-b5f8-02650506a64f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "532ea22c-a951-448d-a1f4-5ebe5a59f86a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73055912-8be5-41d2-94a8-0fbd2d9fbc9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "606ddf1d-12cc-4851-b1c8-b27a908c3f02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54f1298f-23e9-48f8-80dd-0c4a5bf367c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba7395dc-f621-4a3e-959d-22a9a18fd0e6"
                    }
                  }
                ]
              },
              {
                "id": "824056ee-bae7-4b3f-b6f9-f3677de68bb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf674670-89f4-404d-aa4c-9f85c6aa3447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a26c6688-469e-4e4f-8e4d-67ac02db9709"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db46f4f-2a84-4f50-be89-4d9533d4413a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7e8848b-4eb1-432a-a187-f1b4052f24c5"
                    }
                  }
                ]
              },
              {
                "id": "af3fa6ce-6ffb-47bb-9cda-2bf988c499ec",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61ef436e-1453-4289-be1b-8f18d5a74713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59543b2e-cb44-4d71-b9c2-b15349339d51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db6a06ed-8ee4-4462-b6fa-c9f440940a72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5509713-f256-4e1b-9255-0d4d5315d5ee"
                    }
                  }
                ]
              },
              {
                "id": "f24119f4-b98c-44bd-845c-1c6743207bb8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2204d5c-f99e-4f85-8358-0ffa3a805f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8ed6b14-bd89-4ff4-a658-95598a23eb66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5e31241-4564-42c6-afe5-23a2741818c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f76c58d8-45dc-4770-90c0-cd35896d90f3"
                    }
                  }
                ]
              },
              {
                "id": "90c5eba0-5906-4d5b-a353-0b80a4fccee6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a9fe57e-21b1-4ef0-b1c4-138b21bab3aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "881b903e-f101-4e0c-9b91-9fa87b6476fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28d4c2cd-a8e4-47a5-b927-c271d7f2dc0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0dbe0d1-20d7-42f4-8491-33bcb59f363d"
                    }
                  }
                ]
              },
              {
                "id": "76e9fff6-dca1-4338-ba98-c5a8d6fd992d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2727b6cc-83df-43bb-a67d-f6f26d854fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e5c0807-91d7-434a-906a-d33bb02fd62b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71b24da5-e659-4d39-9527-09c2d6ec0a4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62a0bc59-e06a-407a-9f8f-a37e7a190f98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fa785a9-ba8a-49c8-9c1b-aacbcade443e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86d849bc-b4b9-4738-9ea3-2eee27667252"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1610d0eb-2d92-4e5f-a63a-874c85d3b4a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1df47af-216a-4dc8-8f8e-efac7152baf9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc8ca7ff-ee3b-4331-bdff-74f90013adf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fb6d3646-5628-430a-87e2-46a59d0a7650"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c2fce51-3b6d-4d75-a18e-fa43ab14c7fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef221dec-4e16-4938-ba44-ab8e2a823326"
            }
          }
        ]
      },
      {
        "id": "8b31d7e7-248a-4d34-a518-c09d874f897c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d6f37511-8dfe-4de8-b0d9-83f8d067f90d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a676160f-2fad-44a0-b25e-aeed7f0f800a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bac6c701-f188-4e58-8542-38168cd989b4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458a404-255b-43de-8a97-04f77a760339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eee5b6b-247f-451d-a866-cd539b14fbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8457e214-348b-4b06-ae69-e8846aee730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba5d0c5-1d51-4506-be11-a1eed5cff232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d74ff4-57aa-4cb2-acc4-5399b84fb348",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5a057d-ac1f-4760-a263-c202ae6d6539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7162cd7b-e573-4d7a-b37e-ae5a7abe2b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775525b-c9e1-484e-8f49-1964929a5ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe586ca1-5e1b-4903-9ebf-ca50333419bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbbfb8f-b16b-4970-83b7-72c7467d90dc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed62d7-5c2d-4a0d-84ae-1f56582755a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472b41d0-3c97-404f-82a1-400bcfc27d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5d4768-519f-4d0a-9229-be36d133dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed0ba32-8bae-4120-b1af-8d16a95b8797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c39e9b-ace4-4bcf-83f1-cbd01a340db9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d5e005-4683-4174-95e1-749eb63bef4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c289ceed-c2d0-4ada-b23f-44db90d08430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ebae69-eb23-411f-8339-9fe623fb9e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73381158-e33e-4d07-bf1f-c786f2283700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d37106-e712-42ec-a89f-d155d0cf185f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4e8275-b3a0-4c9f-ae25-1fffda2f2351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d220915-411b-41ee-988d-50c68f073083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7184bd-b4f4-42fb-9230-2998fe2c7c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9d25d1-0af3-4a26-a28f-e674a30ba09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff7083-6eb7-4023-b791-db0023c650e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fe5162-1f1b-4f32-98ce-4910704c80a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d2700b-9ace-4dec-bbc1-0bd7e8fb6f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd23c54-cccb-41bc-aad9-7ac51acd909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad63d7d-35d4-41c7-8dcb-c2912177a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f925db-92ae-4590-b315-2a4336471831",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2437b4-c1bc-4df6-9335-e5015332528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd08e91-49c0-4312-b19d-02512fdc72ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfac62f1-dfa8-4d95-859c-53b13680559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a3829c-5441-433a-9077-0b3ad48c5b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40557106-4e01-4ef9-af04-b76032b5742b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f808a88-2e86-401b-bc4c-7b375e8157bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece2a821-f3ce-43cb-a6fe-ca6dce4fbe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be516fb9-afe7-448f-b9e2-e5500e20b699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2244da72-17cc-4369-8320-0c19e3d319c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd08f6a-e6bf-4680-9fd2-b7a5a85a754a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f97170-ff04-4b68-bbbd-e8416c3fdf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa15afd-ccf4-4c42-93ef-3cca94883b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcd2021-4532-41c5-bee8-a228ae4cb853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc9384d-a03d-4211-9665-2bf0dadeeb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8481120c-23c0-4ab1-aac5-f0f47605383d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be96637a-5dfd-4fd9-8a26-2817d689b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8e8ae3-0744-4fc9-bb8a-ebd87569c51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe6de8c-0075-431c-a895-5f4b02e54b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28db665-c773-42f2-8f12-72edfa5e414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce5bf3-4289-4b68-822a-e654ffd1b1be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b24137-59a1-4107-b809-4d13cfeff2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d32329-09ca-4076-b87e-3a99ec394007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f87d0a-7157-4ce3-b349-ba90d8e67491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "edfaa25c-f03f-4635-be9c-2cf337de7377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca4675b-ee9a-4c17-a432-6a08f6facaef",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df13639-36fb-4dd3-9ba4-394ca6c01a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f4139f-a687-4cd2-b165-4a412ef6ba0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126acd01-37aa-44d6-938c-f252c6c63ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a96a55f5-b367-4109-a5f9-c2232b38fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a16b8a-3796-4d64-9af1-f8561fc7727d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604e548b-e347-4af1-80d3-1c4cfa8ea0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae58236c-4435-4f10-82d1-6ddb89eb506c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1244e019-a6d4-4c93-8e42-e95d0f920441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c51c7a-5bf4-4f74-9ddd-18f72cea30a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8994a555-fcbf-47a8-a63a-54686a11fffa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816d442b-958b-412b-9794-005ec61b2ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928fc83c-7ae0-4a66-8c01-04955bc2cfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c38c61d-9d88-49c8-8af0-e9f5cac2bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f5e964-62a1-4ab3-a035-869c11e72146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8a27ef-bf2d-4d51-97a2-f80d5544e487",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fda6d7b-307e-4351-b71c-d2bc30420d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a2de03-e9ff-4280-a0ad-0484d77daad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d67852-4591-4d5a-91ce-ae021429361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c92c3f-2e28-4ec2-aa52-7663d81b45b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422aa56-4875-4347-8814-00c362e9c0fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197e7976-7c91-4e34-93cf-6de3ab2d42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5550426-694f-4954-8e47-ba1fa47fe6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7ed789-917b-4c8f-92b6-598af65eecda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2404ae02-393c-401e-bffd-7cd016430a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75118fb6-29fe-4e66-93e5-cd7887d70386",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b21290-c248-42d2-a941-1c16ecd9b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342b6b63-8140-416c-b102-49b4d0ede74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622eedfd-b87c-46df-adb7-512a55077b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f1e3c6-c1f3-4f55-b5e4-52ec3d4458e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1cff17-af25-4ef2-b789-0e8aa5925929",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf78ce54-fb99-4a20-8d10-c71745ddc1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c8ecbf-f83c-4be5-9224-c497b62ea031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb55578-3578-46d1-aede-47a7b537e684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8eafbd9-8ed4-4a2d-9bd4-4178fa1a69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad1db3e-75f8-4b7f-beb4-a50ab4227b9e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dbcfa1-fb27-44a7-a30e-7b3ff2e92f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d66d06f-eff6-44a7-b2c4-8cbe02928097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9bea54-a296-48c2-8c5f-139ca0cf277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b13735-2f09-4da3-beb2-e8f653c8092b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b404b50a-31d3-4386-95fa-6c7cd5f0d990",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e34e3b1-da90-43a0-ab23-dedcfc089a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0e212e-a57e-4364-bef2-08a2c55d9af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62fd1b8-65a4-4fb3-8b1b-c3cd73030bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0841c1-3c92-42ed-9fe7-b26d426b90c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4b9c82-80be-471c-b4f3-a084342f0b7c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61144cf4-bda9-4a09-a80e-a49a6e0247aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c73eef0-d7bc-49a0-b0cc-8e57558173bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e71cb71-e60b-4edb-a3ee-5e59fee6193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf069b8b-3376-4a14-af7a-9bf3dcdd0299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ea3e2a-079c-48f3-9c0a-47f806dd704a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a526f90f-bcd2-4cad-890f-5c77b862c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066d8192-733a-4ce8-9885-1d08b27968de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a2ad28-db10-4e65-bf3f-813f6423982d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a284da7-5909-4322-9b80-1b0e7a684281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95c789-6b1a-4a38-80e9-64500a6fd462",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe971bc-a4c8-46e0-92f6-d15e66a1bb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7633e05a-e408-4ae3-97db-28d2a441eed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f6f8f8-a80f-4e7c-b120-e8285520a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74415666-8672-442c-a134-698993b5012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6508f99a-52d0-4b0c-80e2-3e73ac0622c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934a7ddc-ceec-479b-8f39-bcd1bb70135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b425c-7451-420b-8c88-e3ddff952c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21e3a3d-34e2-4226-a808-4a22d50700ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2a0c23-cb13-404c-89bb-d542b2f2ec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46d3289-b5f8-4a65-827e-75bd5f43defc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e7cda-52a1-4cca-9781-8c1314b0a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af506c3f-3115-44e3-a693-6cf2817c4f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecd2f71-b84b-4bd1-80f3-00199fa491cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bca6d86-e5f4-4fc6-aaef-6a4a080fbea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8fa05f-d191-4f78-a7a9-090d3434c0fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19827baf-304d-4ef8-898e-b1795f219fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36484c7-90cf-4e2a-83c9-2682f1e22770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470eb77e-ebc2-4d6e-b4e3-3a5e1482cf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620ee7fe-d9f4-4c62-b727-55e4309f0a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f0da7e-d6a1-4b62-bd53-7e7c972e42b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b9229-6ed7-42aa-abe1-d3d588209c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcce830-b11c-4808-8065-0f8ee085bdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c4d618-3e7d-465d-b14b-eac0c58d656a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc35a58-9817-44af-b846-ebed14a7aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ba19a8-1ec1-48c9-99fc-3ecc0f906a07",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5c011c-247b-49ac-be19-45e0bb0be6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a82c5f-c8a8-475d-9057-85d0e7ee2ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53711aa8-e19c-49f9-9ebf-7b25571e6bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29194595-19d3-4dfd-b220-406b6ad62fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b419a580-51c1-4729-89b8-bcb4984b9eb4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd53d836-1a6e-40c5-b502-a449051911ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc28f5cf-158a-4f7c-8107-428a39d5be5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b5792-8841-47ec-b1c2-967add3bd8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1e2438-5458-457b-b6d1-f66c01540a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9934dc5e-77c4-4f1f-8526-a56e92e794dc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2b35f-b0b0-4d38-af67-d3266d067a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4932fde-6113-4a9c-8f30-d0296a058b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933ceeaf-c176-4722-b38a-72d5547ccb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c4f4d1-ff6e-47d0-b05d-6ee0cc6808fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c81ba3-fdca-4ffa-a155-79813ca1b9cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd0bfff-cbe6-403f-ae2e-1b2bd73d8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805f3249-eaa1-4b69-9ad5-db20155bf97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f240f8-311b-4690-8df4-56cd18fa82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b996c1df-c737-4a0b-8a67-befce9f261a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6668f3c-b8a4-4e4d-8d96-8a673c856ecc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54916ddc-9460-46e1-b720-13c5b74c2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84370bc-39eb-4597-a130-1121429684a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c0f375-1630-4635-9fd7-7d5bbb9c02ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c47a43f-85a0-4142-abce-da7c10c11496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcfef7e-0c67-48b1-84b7-68170d3152b8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89facd5-53f1-4d5a-951a-1ce7a70a91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b5c02a-6156-4eef-899c-b608ddc0aba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c38671-db06-46dd-9f37-e54e1071b15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff51f47-5c7c-424f-8473-4de02ae6891d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c988f-5734-45b1-be0d-ffe54d60cea9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d5986-ebca-430c-92b4-dca41060d47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f138e3f6-622a-4d85-b809-ebe6d3e75d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2851b3d1-b54d-4b37-b9a8-eed444fda7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5427737-f7f6-4728-8541-4c94245fb5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b797eed-c058-49f1-886a-83247ef4aea9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96649d5-bf83-451f-bbc2-315b1d6b201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f113b4-3e0a-4003-870b-433578144c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56580ec0-7d13-4da2-8ea2-72108cf79ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004801e9-f66b-4cf9-b7f9-728d7c813476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6855e1-8f45-4f35-8919-addbdadd7a53",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e0975-6d15-4b27-8cd6-7a816456828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f3f9c8-71d0-4fc8-837d-be9af9739c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754092c5-7e24-42d8-850a-2b413df38aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8db521-c297-49af-95d6-c552298cb25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115b376-eff8-43af-afea-dd2e66c8cd7e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d0568a-7e46-4177-ad24-42c11379199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57eec23-cfff-4554-b2ea-3d5cf3b2fcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bece3b3-0cac-4020-93d2-2b4d6087107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9f42a5-ac1d-4755-a306-0183da371c0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de55cdd0-9ad8-4c65-bc70-dce67825d392",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ddd6765-de9e-4887-89e9-193f5c19400f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a399937b-96ad-4300-8a09-5ae74008ac37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f9f225-a4a6-4cdc-aa13-6cd1e829ed76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66a9ee4-1895-4f58-b6b0-f5648f5ce3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bc57330-4350-41ae-adf0-5decf9fd815e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6047b48c-4966-47f3-9ea5-4c2750f81771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b8f39f-6399-420a-851f-fd13ba86b5c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cecb186-5134-4355-9e30-57890bc8b12c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d41d23-1265-4698-a17f-ea6ae31cafdf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5db5ea85-6cf5-4472-b6ce-c0fdb9fd6afa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02fbe453-bc5b-4217-b43d-ae99430a177c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccbcb26b-8a82-4442-8a77-84b831f8d379",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d833ca0-7ffe-44e4-b18c-c4f797cc5c89"
            }
          }
        ]
      },
      {
        "id": "7be3cc1a-b17f-4e44-846a-fc76369613c8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84e323e2-7f45-4f58-836a-a724f180af59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d62b9ab9-25d1-4a15-b4e9-6d72e2991ea5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5cc9d2b-14ee-461a-b01c-a44ed5ae7265",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062eb210-2c40-475d-90f9-141e24ebfdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7570a662-42a4-4b13-92a1-bd33e05865a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e73c30b-a95e-42b5-bf1a-8d79f80f92b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4401a3f-89ad-4eb8-8785-18cda810cfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e678a5-d14c-4fc9-b9c9-334e2f088425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47894032-17a3-4bd6-88e2-45092c86dfef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dcbc8a-575a-4eeb-a506-40d81711993f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63ef592-e8fd-4f24-b386-49eefb0e8de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a1aeea-fd58-46fa-9d0d-fae22208052a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5a9d7-eeb4-4235-bfc0-9c074f121335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22961c2c-5f55-4b2c-a064-186795492b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921cc379-aee8-45c3-8965-d1f19f56e69e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5335e94c-4c3f-47d7-9a87-052d346b5a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ceacf4-92c5-4995-9dba-2efcff98a305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f826b367-647a-4871-9efd-e790910f91c1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294762a1-9af8-4908-bda6-8c97ea265bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57602079-afe9-4308-85b5-67bebf056b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2021054c-1336-4ec7-bdce-5623d52b5848",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b691ed4e-a302-4e71-acd3-6aad36217920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1657abc-8980-4a06-aac9-71223ea77b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12bc2a2-6b7d-412a-8f94-330861ce4198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d5e711-ca20-4448-a208-9eceae05e209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0495c96-a9b9-402a-bbb6-d2622bfdf159",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a00580-d459-4eec-9b3c-a24ed7419196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114a6330-5f91-412f-ac5e-cfbbe8a756de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386023e4-1de0-419c-8266-80f3cf98a62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6d2df5-0b5e-469a-b117-102ceeda2995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba482e-ed30-481c-b756-3d9889be061c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fc06d3-3eaf-46ac-b47a-54eb1331a378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd136ec-c1b8-490d-9b8d-593819e738c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a4bb10-700f-4ea7-b5a5-7c7d5928da7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bca4387-3f21-454e-9f01-dd9ea3ebaac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8237226e-27a4-4023-af04-cf343d8cc54d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e55b40-e345-4c90-9318-22564e13765f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0fea06-88af-41d0-828b-f758d8ac6088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62199c1b-e32a-4842-bbe2-d69e3106700b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a380cd8c-3038-4689-91e0-599fb24f62c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678fb95a-2983-4a81-ba7e-c36eb2041170",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9b812c-b825-49a3-8500-838ee8d9afd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81055030-0ba3-4dcd-b5f3-7803ba9b218f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147f1a6-e68a-47b2-a25f-4dfd83cd74f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d449004e-790c-4d3e-affa-40e4e85354dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e6af0b-e3bc-4c51-8c11-5a68d9ca0984",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdffffe4-cbd5-47ea-960b-def089546420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699ef11e-560e-42c8-9d58-cc6060048310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9449ba62-36c3-4758-b56d-23adb55e6a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5164ba05-48dc-481d-8177-15724aa38fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e401e50b-5405-4840-9d9f-f9dbc81f0485",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcfd17b-156e-464b-8f89-bff23973f9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa856b3-8e97-447b-99b3-3951d4290ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05b8363-4e5e-4062-99fa-c22d273e3296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493a8de1-c44c-4583-8d6f-3da6486aac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d496e-aba0-4735-a21d-f28f8373e327",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102828fb-3e1e-4354-a36d-3d3a55b24840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1be103-9a9e-4f36-81a7-6a9aa1de09b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0485a82-7e46-4b1e-97c1-06019113ca14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c36e7ff-3767-4f6e-96e7-186b634e7149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c71d7ec-834f-4144-a9b9-9b666469b616",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdadebf-2022-4e09-b3dd-d09ebf77506f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002f1462-0910-4e07-9e66-9706f35a2597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790d0f3d-67e8-42f2-85d9-a5d070d78783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2916c92-7e8e-486d-b68a-4905007ab3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db029d-8dc5-4111-bb03-01fe7a9d3cb0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45514c1c-10b0-4680-b0c1-0ae373c1d99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcac817e-2a6b-4725-9bd9-e4445c2009af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aa53d6-fc2a-4241-b5b9-dec3e4ce2f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f767af-585a-4dfd-96fc-582256a59f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9a1cba-ec22-4a8e-8f33-9700a2c7ec42",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9623740d-cdd6-4370-99a4-fb234723cb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4682bea7-7d6b-4804-b078-bc9c772d1f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4914a6d6-5ea9-46d9-a374-e0a41a7dffb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dc5dc3-e062-4cb7-a8ea-84b9926c3a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ddb829-3607-483c-a6f6-8bc1691ddc06",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322c62d-a6df-46bd-a30f-fca432fb02dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5111d5-fba0-4198-b044-840ccb17a23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265e5764-540c-4858-9f3f-d5e785588f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893050ea-61c6-4635-8f30-821eb60b7fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01440a2-f9f2-484b-9ee1-2a89534d8acf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c6a56-1209-4c54-ae8a-23c31317e0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ebf98c-3695-45e7-8afc-6bce82ac8911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533dd964-c566-434b-aa91-0328374198c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e484052b-a035-479f-9ae9-087ce50f0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd8c38-19e5-4360-bc74-4ecb9b2c68c7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe303f5b-141a-408b-8cd5-8ab5d49e808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31f2945-7f52-4879-ad60-8aaaa366e01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eccd929-6982-4b84-bf2e-fb5e5bdfad71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5f7095-2f9c-4e3d-9507-a68f92a8ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad263a81-4e63-4a8e-bd81-c77ae4dddfed",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c790e0-f9e3-4940-9f13-9027d11b42cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb01f4-9ad6-4d02-8987-b66c08876509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4db1c1-6ca9-4436-ac0c-3c70d577cd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861c0fcb-1609-4611-be75-a1caacb04b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40297f9-fad1-402c-9b8c-baa27ca04a20",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8297a4c7-38e4-4006-be16-f6d4c7bf830e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7709dd2e-4d80-4af5-a577-3d3bc4561532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4c9938-2af5-402f-a5c2-9881a239f1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cebd6f6-087c-4364-9b12-cf80610aec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe8822-d600-421e-aa21-1d2925ce46c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd96423e-de1b-4400-807c-aefd53b9d69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adc5196-ed47-40f1-a7f7-ac6e24f4b8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f460dc9-656a-4b89-b2b3-7dde39543d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1435d506-e30b-4cdb-82ed-2b34f814cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead2597d-44b3-4f0d-a112-5cec5c63b9fb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e52e763-502f-4532-bd8b-8fc472d26f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970715d3-e09e-4c41-96ae-df8d95c37132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5536e3-d080-43af-942d-93e9ebb2c2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdd4880-ba6e-4f93-9571-59dd6e300582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37931dd0-c9e9-4000-a607-138857b83a8e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5b9da5-c572-4831-8ed2-041469ab7456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df982378-f77a-4430-bc78-c760a7083ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4591039-9665-4391-a28c-b0de1273f5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c569a648-f1d9-4523-9673-9ed4e5deabbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b6e53-eb99-4d8e-8f1a-52a1f1ef7a3e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bab218-abc5-4b39-9d56-ff5f979d37f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539abbdc-2cc8-4e40-bed9-ee5e24fca295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86feffcd-b19f-485e-9692-09970223d573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53be7808-c8a6-4703-bfd3-154f85dab78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9eb574-f890-4c65-9866-1f11aebc4e39",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d6cbd-cef0-4ad1-8e6d-ce32441f2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf050f1-f08d-4816-9b6d-c62c577fbe62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a1ef68-60d6-4f02-ada4-b97dcf7bc949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ce3a1-5eee-413f-b832-d40f3e9cde9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c986f7-0507-4e8e-9005-f608e389461f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda087f2-36bf-4d13-a525-ed5028507933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf41918b-8884-44d5-b0ac-90fa40320445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70300e1-93f6-4f56-ab43-456cdf95d8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b93ccd9-c81e-4055-b2e8-b4610efeb0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade645f-6cb2-49be-8c54-93fcc32cdcc6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc1286f-7989-4731-96cd-d38d1f620de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3740bb33-798d-4c05-9ac9-d84fccff75aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce64eab-37a7-44f4-b961-c4f5b2fe43b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59c166f-f42f-47f8-96cc-bbb7f704d9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2dd704-17ce-4976-bf6c-3dd81f2f6160",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945440c7-1fe0-4466-8620-47b5d6846865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150365dc-3c14-4b3c-8e8b-e577b609941e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286d13ca-0a57-4e8d-9cf2-94c78a3852b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a797ff74-797e-49e5-9441-841149f4318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aede0f-87df-456d-b2ae-bb014bbe5dbd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0ae1cb-250e-499e-92d0-19a4628d2a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e59205e-f631-42ac-8830-6c8e6da315e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495382a1-4849-48ec-bd19-b78729e6cd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ed9976-dc7e-4618-98ec-75103567d4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8904fd9-42ca-47ac-a901-e4ab97d45c0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c793f7a-ac5b-47b6-9153-163d56d65e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ba87b8-e30e-4dcd-8822-3238bc101a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a86b14e-a697-46f2-8e0c-359613a69c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac6b555-e1d3-4209-8490-763c5e58e1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fc86cc-d5f6-4795-a25f-11b5f7ba6cbe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ea413e-7ebf-4d5d-8b54-dc7d35aaf992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327922c6-e285-447a-aef3-67838cd4cb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7133b5a4-023a-4815-8ee8-8468d06e2b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29f9543-dd18-4e1c-aae3-2c73dac21e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f73725-f5f1-4935-a05b-a357a86a1788",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76eacc-7b2a-4eec-a0d4-5f4ac23e25e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42497347-235f-416d-aedd-9e4e09162c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4072435b-bc52-486b-ae3d-9aabb983c063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa49390-72c2-4eaa-a9e7-54b6dada44bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256cca93-2940-4f9f-8fa5-34f95966f1f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782cb169-0034-4df4-8131-2605ed367915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99eb5ee8-e1ad-40a4-9c86-f2f4963f96dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3439a2ff-47e7-481b-a4bc-08d1009fa9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc93a36e-bd64-4334-94e0-38ae723d9ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599c36d4-b622-4131-b131-33a19abe7552",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf51096-a890-4fd7-8f3a-6bec19800405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c46e72-f4e2-4228-a955-4276c32c2649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3447c7d1-0a16-4d6c-977d-e1113337992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dbaf3a-e86c-46fa-83d0-da419b42aed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd3b747-19e6-4105-803b-61ac61039ee9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579335e7-6bfb-431c-b776-591d07084164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c91804-9686-458b-89b6-f79b57d57fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9057cd-3428-4e86-b3e4-58f51ce9fcbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648b75bd-c633-483e-a526-e1049abbe66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d23e86-0c3f-44be-8a7f-d2f775a21aba",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8995a4-05e3-464c-933b-bceca298ebd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eaa4ae-4654-499a-8963-cbc64d8561cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb4e8e9-4b42-440e-ba7d-d98445ccce70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e987d8ae-fcfa-49f5-8a7c-21941a045e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3d425a-17f5-4ecd-8293-546e465c3bc2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f3a45c-deda-45c0-95d3-f4ebb1d2fed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c5c11d-1b82-4d54-aa27-a80593a3acae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c23e35e-1823-4041-96ac-c44f56627f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e31ec1-c46c-4acb-a778-b946a880275f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1b7005-9023-4c6f-b436-676c1d43db58",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ec5f36-c263-4c7a-b9c8-d08d2df45ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bd7b7f-928f-45ea-a9e4-9abdf1934f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4304443d-fe0c-4d47-baab-8f7184b36cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13372ca4-bc7f-4713-867e-e3426fce4573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877f6a49-8131-44af-94ad-375c72fe6031",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ad0910-c0bd-4741-899a-d5aac1f42b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ee17ff-db79-4240-8f9e-a8ab1810df5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a98a28d-1527-435e-9eca-3eafedffcc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a025b108-dff3-4061-97fa-404de04c9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131f9649-618e-4f74-8387-1329b6ae9eaa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5668da1-c616-4bdb-b26d-2ca8afad4108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c778776-e686-4d9d-a64a-190ebcf9ba41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47736a6c-3357-46a7-93d1-eb4e14e8d56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f8a923-7af6-424e-9aa4-9304719aebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de52589d-8e70-427b-9c79-0de3f90c1af7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4805e86-a965-42e7-9c83-26e370dc5f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7d4024-490d-47fd-9cff-970a1833ed19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59879b3-57c9-4ab0-99ff-f1563696d7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd594a1-df21-4684-9fa3-bc63ea0b6ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e9e5c-9095-4085-b63e-da0aa0668e33",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132cb1ce-e7e0-46d7-a5d4-aa87cb32f647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824793c5-758c-43cb-8118-034545550947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b94ac0-e7bf-4e3a-9770-5fca2b03c260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271c44ce-a4be-4b68-ab6c-dbc711ddddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e379d1af-69be-41df-99ae-c0f2c9bdda31",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a90ace-98e3-4f8c-a670-a352e3c8839f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d4582a-b6f5-4c86-a667-8bfbc9346156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1440dff8-c9de-465f-94ce-f18fb09ae69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7952fab0-0255-448d-8906-c789243574c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46531e3f-d6b2-4d3d-8431-140fc1e905ad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb752c0-b7f4-4975-b39d-48736447c1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b042a6e6-d1fd-467f-b8db-854112ef3b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a67960-72de-41d3-90c0-d94186ea4369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8451deb-5aab-4643-8ada-9271c14b123c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166e0144-5903-4736-b49b-f049d128bfbf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7145c50-bd5c-4826-a30e-2ed5de91f598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853b5781-b3e1-4cbc-a49d-cce5ff25233a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922e8eda-4d53-4b06-869c-331c77223595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b14b03-03cc-45dd-b661-0f56fa638886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2407de-e3c8-4ede-bbf4-cecaf5169b11",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6ae5fb-5e04-4d26-8b72-ededeb4c8684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14031d6f-257f-46fd-9d6f-0ac451ff3428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212892ef-92c6-4913-98b6-a272fb9bfec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9151f4-2b9a-4336-a0d5-f25af09ba544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a2db51-c303-4d83-a6b8-28e48d744914",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bcb150-5b7c-44e5-9ff0-00e100383e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5039a388-352e-4a4c-a92a-5bce2260d469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb055b9a-b28c-4430-9527-3259c048d19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb0aeaf-2e32-4cfd-b5a7-396ec6217aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79977049-5273-41bb-a72d-275833b66db9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9c359d-bc00-4348-94d4-03d03d820104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac63c28a-808d-4101-84bd-73e6ee72fce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32575ee0-3b29-4644-9c62-377a4cf5dcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdf3a4b-799b-4c9e-bcb3-356bbd36aafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805754a8-207f-4b1b-91b4-d8d16b147769",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d4dce2-1ea4-4cd1-b9da-f2b0dbf042da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78921997-4ef4-4c6c-822c-ab0114fd02be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb2d937-ad10-45c9-9210-a668508d4e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d11e00-8507-4186-a214-8d343b839386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9b63d8-6e7e-4a63-aa56-74d56ee2aa34",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce926f-8ea0-4f59-a1c5-8aae1ecb7eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6ef443-3e34-4f5f-95b0-3f419c670860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7c7588-1413-405c-ab76-870075b4196c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686ebf7d-09a3-40d4-b2c1-24dfe5c750f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f083e3-9254-43bc-854e-153c75f8500b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edceea31-f4db-48da-b450-99708d835280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae42d91-9597-4301-81ed-79f53ad0ae25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf38a55-935a-47f2-9871-823a3f001aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6349d8-57a7-487c-ba41-e6e05aaf17cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489d2f3-407e-4978-8f65-f9c4751430c8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445d39e4-b01d-4836-8160-88bbb900962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06a362a-95b9-496c-8d3f-93c31774cc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54439040-8709-4128-b620-1b8dcfd113ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77eb6bc-554b-46b9-807d-d2c5cecf70bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce788040-8db0-4c87-bb21-3d7d175bd575",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d09014c-93ce-4e46-b929-3a77701d2919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121fb0df-bc1e-4584-b7c0-b935d54b914c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34710367-ac65-453c-98f2-2465346693a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da35d050-bd92-47a2-96df-1160bd7e1324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed13d8a-638f-48f9-80d7-3dcb63089489",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a80562a-6c6d-4daa-b6d4-77a09993a1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d231ef-1817-4068-b724-5bc89c148f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd623e-354b-4598-bbb0-1fe074c3f8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa55458-10d8-49b8-acd0-d6006abc40ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51336743-6c84-4be2-a67f-d9bd986b12ac",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf49806-a522-4231-b969-a6a85dd2b63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeeeeaa-5a62-4957-814e-856e44a8ff41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8a86d-9f4a-4d86-a98e-1058aac271ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717a628c-06ff-42e3-9fe3-5e3e0bc5e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fabcab8-dce6-42f5-a5ea-5d19105f263a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e057e-c060-4ca4-941e-8fb2b740aa73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d120b960-e358-453d-ac60-ce099c5ed902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd21af1c-7b68-44eb-9f86-a8501423c7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8f7a5c-2ffb-41a3-a803-c8ff80607aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b2763-5f77-439f-b18f-b696e745030a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff454a2-0f5b-4aeb-ab1b-77477e59b9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5b7011-964a-4bac-8800-601834763d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4363f7a4-1c8c-48d1-8301-3fbb195b0d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25d41b7-0b87-4a1e-8320-5fb6014b476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3529bfb9-c15c-4d6a-9711-c6c8854f94c4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91987b5d-af8f-4133-b272-1990180502f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4b3996-d92c-4d17-aaf1-48069ffcf4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca40e684-a428-4843-a6b7-da21a0571c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148814a8-ddb0-4aa4-b978-7b87439556ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca2927c-2804-417c-a1d2-98ee5089f422",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e628565b-308a-4b75-8a69-19a06beb6e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cb37b4-8401-4be3-844f-f0a649b9ba2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df238f7a-d7ef-4be5-9e4a-e064f5b24c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0487fe-2708-4885-a54b-9eedda944277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2081751a-e985-4943-81c1-cb3cfb59fbc6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd1d6f2-7569-43f7-bcd4-9c451aa78f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c149909-1f17-46df-99bb-2232946f6dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4cbbf2-7886-43c3-a385-f9e5834b9874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30143588-24af-43c0-b0d0-07ae24abdf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8841690b-9cb6-42c3-b36b-c5b0d724cfbc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641230ab-2b72-40d6-b705-3fe71186b490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30078c57-5bd2-47a7-a41a-a2993f63652d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3e7982-c8da-49c4-841f-905033b680be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f0bb3c-46d5-4b74-a9d1-3c8e149131d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8399de8d-d71b-4bd2-9d06-0a4a760660a9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b93c45-d962-4a6b-a67d-e042cebb5c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe9998a-8aa9-4229-8c55-5c4e9d70e201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a211aa-5e94-4c55-9f68-eb0cbcca03ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38222030-b73d-4e49-9b61-cd4b47e6fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10df69a-e849-4dee-ae2a-b9884fc8cbc0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb09ef9-a1b3-486c-9aa2-00f6eb6efbb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4360c70d-a615-4209-95c7-7c811aab6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d85982-80fe-4066-9a3c-dd23e1a2eb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d8fa9f-0c64-45d1-80f9-d45d862c30ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87cc84e-543c-43e9-8491-f49c99602ff5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb75680-4d6e-406d-8e56-af4be23c68ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b9cab1-5617-48d9-85e1-aff951fa9d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f81e66-d2e2-4ecf-83f3-1d748f044c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1270beb8-8074-4725-af54-e107f14a33b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e039c9bd-34ae-4e35-afe2-6ded42fa6348",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36dd02c-5091-4e11-90f1-528d5eeac9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698744ac-e19a-4afa-a543-5a054fb10e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f7bc6a-0f96-4633-ac05-16aa0bc4b604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaed1d8-041e-4398-9055-5e4f617d9673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b191aca4-aafc-4299-a244-521185149de6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05161cb4-ef60-4534-94f6-d92d70faf17f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb9a8371-0c54-4d61-8ecb-b0c88aaf5434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae2911f-5e1e-4bc3-94ae-3bc5875794ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91dd28f-4c8b-47cc-ae9b-530723d0537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671e9825-e1b3-45b0-b769-805f5e34c7a5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bce39a6-3dc5-471a-a900-999f21b51b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b9ab5d-47d9-45d4-ae4f-df855a53368f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a8668c-1f0b-468e-bfad-1a56d2c80376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf775ca-744b-473e-bbb3-997eb454d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa64229-e9b8-48f7-92d3-a8947300d788",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6655e10-6b7d-4856-bc75-8a4c04e9260f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c53ba1-2ab0-4c48-841b-1beb3a4a2d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbf456f-5fff-4874-8ee2-c2e74a146680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93594e35-224f-44d2-8442-6fff92cb52d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b818f-1109-4d08-aeb6-def2a6352357",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd00b244-bd03-41a7-bb70-28befaf44427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef74b56-97fd-4661-a348-86a5328559f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad349f53-b865-4bc8-9f63-72b1bc54e6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33dbef5-06b4-4db8-947b-2a167d4a1a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f225dd26-8edd-4c44-9218-7703e7cef7bf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8724f10-5a52-4004-90fb-e682a485b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecdba4f-130f-421c-adc1-3eb622a0cbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e086a00-6556-40c6-ae88-86c80ba8691a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cae3ba-31c3-4f09-bc8b-564f2d466517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ce5089-d315-46a4-9752-d1260fc40258",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f75b94f-b304-4bde-b680-b105570d0716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cff3f6-3511-4fa7-9776-71dd7f6a728e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965ebca7-5bae-4b0e-9866-f5e311ec7502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a2516b-82b1-40f4-a728-5b0cd94a1d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71514ba-daa1-4c44-acc8-ec8e67c93d1d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63018e84-30b4-4679-926a-baab27007844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60b81c5-8e51-48a2-8cba-09d95d5b3523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6e472-8860-49d4-a9cd-4b64d6437734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e324a1ca-62b6-4db2-9a18-11e0eec1a6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e6f0b9-2bc2-446c-8bdb-ea8d7b00a1de",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac315fc1-f974-42bc-8ba4-5a931ee25f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290f8c42-cac7-4ec9-ba8e-ec40c8d893e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405c5cf6-2be8-4e2a-ab0f-b1cef56b914d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f57fc43-f560-493a-ab36-2d7189aa707c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d78839e-1206-4965-8f9d-ee86091498ce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb53f9-0875-4cb3-bad3-940bcfe55532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e3566c-331b-43a3-bcd8-a715225cc863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df84819c-dde5-47b7-b17f-c2de48a77155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8e3bf9-5e24-4af2-8368-564aaca17586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c5ce1-d2bf-4b04-9701-64aa26293e71",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebbd46e-b9ef-4aac-99a4-6d94ee443e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43417cb6-997a-4f31-b7fc-45edca67b970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbd8502-a68d-4dcc-b52f-0099cd51570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520386df-a62c-485c-874b-e2caa966df70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8f81b8-f4d7-4687-b71c-f804158c5b90",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02300c7c-a92c-406a-bfec-ac5b3dab146d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4d52a3-7f50-416e-8b1f-07fec2c5bf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd72fd6-b295-4c38-8b36-3810250e2660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340664ff-f8e4-47d2-b59a-e8e6939baefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803b676a-4efb-4a58-9e3e-23e4e77c5512",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eae163-ce6b-432d-9148-6150087fe68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a586bcf0-a4f2-4af9-a97b-3233e4a52b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbc7698-6a87-4ebd-8499-b5de3a8cf21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b94b892-de7c-4633-b145-9d29b465a178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096315d2-5456-419c-a263-1995bf97fe83",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6abd92b-55bb-4a8a-8fcb-11e75c3bde97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4796e39-41af-466f-a49c-9467bcd012a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8f13d9-dbd3-4ac2-aae7-1388a261ca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2452fc0c-ca09-4c9d-9f31-e6bac85b3bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddc929-984c-4857-b0bc-d1a3276e4f4f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a03278-58aa-4943-aba7-3e9019a92270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b6fd8f-4477-4c6f-af7e-f2827b3d3b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efda9d9-96ab-4b04-9768-8716455a0709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f246ef94-675a-4917-9a04-04a591a06353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70692f7a-be65-4671-b21e-8bb0673c6139",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0c7b1f-355f-44ae-b214-b6caceef82cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30213001-b912-4aa8-86fb-6c4271316977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488c235b-b88f-4142-bffc-3151bcb89bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4f4df4-1799-41e5-abba-9f57cd1e8fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f15659-ea37-44a3-89de-22aa00dc9099",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a63b33-2f82-4076-b2df-47d0e4020872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef81d406-5508-4381-807c-992dfc9ca39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4f12b4-8309-40a2-9f1c-b251f320b454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430e6adf-2440-4227-ad58-12b25129ed2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c682d10-9f9b-495a-b403-ab310c7baba1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8094505-0b18-4c2d-bd9b-30eea1846e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb7426b-e109-46d1-9873-c56e7471c334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e751c52f-3271-4946-898b-87374131b41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc724fc4-f52e-486d-a1a2-7519f0e5c52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eab773-416c-4bca-afcc-b413c949c357",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ab6e2a-28db-46ca-b34e-8ccd32530ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722bc916-339c-42a5-9468-9ed9212951b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9e734d-1255-4b87-b0dc-aa1972e1b4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360c9f4c-28cd-4456-8e60-2aa618f8d4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0578fc32-85e0-448e-b26e-204cc696adc1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e8b156-a2a7-4281-bb33-17e2edaa6d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cae5d48-3694-4bb7-84ad-bc3e63f65067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41d125f-dd88-4abc-9c0d-67db960968ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd78444-af25-42a2-b811-c1b1b3542a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6044d7f5-257f-44bb-aea4-ceb0e455ff78",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aa5abc-1d78-4fd0-b53f-45a21e4937a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf2b54d-ec87-4112-864f-a727d1770172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4edf3b-2c4f-46fa-87b0-bd673932eca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a30663-2002-474f-911d-ef577d3ffc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dde065e-d469-422c-8e29-5cec39089ab1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c596d-0c3d-47ac-b6ea-a9dfe0af26fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35ea98f9-39e7-4070-8212-74964a19e8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac9ea02-b1a1-447e-9d03-bae15f016208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfff6d0-f129-4fbc-b326-bf20b21fa80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5f5436-b4f6-4360-a2ab-3f422d0f6307",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9ab1ea-eb6e-458e-941c-1b1e238eedae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9050e735-d3ac-4100-a559-d4012074911f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d92bb2-32fe-457c-85a6-969485945a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293f0b9e-bf66-465f-aaa3-70019b4530a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997dfd3-af99-40d0-9ef8-9a362019c33d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac217c3c-f6ea-4cc7-960c-840b3ad91290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515f503f-d358-48e5-a15e-e4d58cc43af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82443367-62c6-4d5c-a058-e17cbbf1e17a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41d7751-4709-498d-9ee3-b3b1729f04a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae58bd2-b193-447f-be9d-9488b5fa35ed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef275412-9444-4fcd-b28f-c9bd81074947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d15aa03-ce15-4e0f-9eef-7db42db7d3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff51b6a-3036-466d-84c8-addf39bae186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ea0d8a-dc1a-4cf2-9d5a-a35044635166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0609f4b-bab3-4962-afc5-284bb843bd65",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ee60c-8e67-4392-a762-86362e4b21b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291cd4e6-632a-485f-939f-96c6e492a6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b52bf36-e23d-4607-8fd2-6e11b6a74d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840ef85a-4bc1-400f-b05e-be5bfed45d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba0eb67-e727-446e-8279-fe66f834a81b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781de169-6ad0-4544-bf12-6ed28526a06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8089af18-12ed-419e-9e40-4286d9a896d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288d023-2dce-4af8-8294-63820b035112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d035473-c909-40bf-8d8a-97e5fb7086db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c9bc4-e704-4904-a7e1-2e37abc98445",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fb048c-3a95-462a-a5e8-d5f41f2f4039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e096b18-c0a1-4f8c-88c5-98639f52bc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3880064-ffc3-4349-852d-5874b1a622a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b5db79-f0c3-4ceb-ae55-3203e7cf5567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec6ae25-2037-45c2-b604-bc1d05f2fe47",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65e9651-ffce-42fd-a746-746b2d573222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d80dabb-1032-4b83-9757-68c09363f124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244530e1-9020-4eeb-bcb4-26e775628881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad4c0ff-1b91-491a-b491-5b2e91496bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aa1e2d-29b0-450d-8cd6-78bee3190020",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9105398f-1c5c-472c-a5a0-6d5856319a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f41e060-4334-48cf-a4f7-fde91b0e2136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4ce31f-464f-4a51-b713-d249e0ac5165",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74899da3-b7b5-48cd-bcb8-fba34d7c122a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460afff7-5d80-4b13-9298-814092985cb3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5975dc2e-0a37-43cd-bbb3-7982e4d131f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de47988-1ad3-48d7-b9db-28c8e67b78a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9bb4a-ae5d-4985-b2a1-e1e9129a8b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd23599d-0b93-42b4-a81d-54aadb570fd0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9edee86-475b-453e-9cfc-4371334c80b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d29881a4-b121-4d6f-b475-c97b1bf8f776"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40b5c039-19c3-4fb1-848c-af0dcc3732c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f98b703-ec3f-48f6-a372-24b3b7120c17"
                    }
                  }
                ]
              },
              {
                "id": "4a2cee1a-0091-4a27-b749-01e43eb92903",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56578f3b-a792-420e-bd8c-ffd21f6cbe2d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7f576b-66f4-4b3f-934b-f0a1dc2ae07f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ff88918a-1a83-43dc-bc4a-63ceb9e5d7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f518d573-f815-496d-ab92-9724405e73ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8df9bdd8-aae6-438a-8aa9-40eb3ea3fe32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cc0166f-b1c6-4cb5-82b3-b562b7022ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a50609a4-afeb-4ee7-ab78-761e15de084a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81e98f66-2854-4025-8fad-99f0f4d41cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0bfccf5-83ca-4eb5-b9ef-1e1e4e201014"
                    }
                  }
                ]
              },
              {
                "id": "ab141b91-acd9-4811-8208-d618601c50e9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f952b04-d6da-444d-99dc-eb41e5f55e9d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe5c94c-70c4-47df-99f3-68c07656a003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b6752ae-e2bd-4af0-9d6b-3af213f019d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3751f325-20e9-4b0d-9bf3-e5e6545ffefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954c5eb7-8956-4456-875f-7c2f2bbc58b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "876f8c84-7854-4a48-a353-045d72f0cde6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd0e0c59-dc91-42af-be48-5a4be9f42d2f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78fd3a11-007a-41ae-98ff-2e1921db2236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58aaf92a-8717-49c7-9afb-061bc68f36b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87e36d70-6d7a-4907-8f8b-0321047ab88a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4358f2e8-01f5-45ac-a4af-600b69e3dcf3"
                    }
                  }
                ]
              },
              {
                "id": "0bf4c9eb-795e-4a41-b532-62f44b57248c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d970cb35-abc6-451f-85db-4e7df33f9ca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "efe1e84d-1a03-4d4b-898d-f432bede485d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f673274-d2cd-4c5b-995e-adfbe291ec9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2883c640-42d3-476a-af6b-f94264637d83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e67d5f9-df4b-4460-b420-2e377b2a2be9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cd727b19-a41a-4b98-9586-38fd74b29c8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6450161b-e3dd-4460-b9c4-9e6b302092f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1935d7fe-866a-4074-97c3-f25d07c1fcb6"
            }
          }
        ]
      },
      {
        "id": "81e228e4-8434-49c4-bce7-9e8906464353",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eae868de-31f9-4a16-98c9-8d3490b6619f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54c84223-5f54-420c-8e48-b1ba45ac6364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e44261ff-bd0a-4682-92ce-bad40c8d35df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c70a47d-2b54-4403-9676-5beca7865bab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b9b6cb90-b78c-448c-baf9-b22eb58c9747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36910a1-d996-4f96-b698-71c3a9ad4255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6572408d-4f08-4c12-821b-281631cff11d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d10e1b59-3166-4162-b9fb-ff17c8567cac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbaca034-8a15-4fe0-a190-0140da9ec72f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fad7681-bb6a-4c6b-b3d4-2d25974192de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5871e7b1-367b-49b5-8175-6ed026c968e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c07da40-97e0-46e4-b666-278e3dfeda32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7712c94-5937-4754-9f92-9047c37dd4b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1775063d-f792-4a2a-bd5b-14f5a1eeb827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b5963f3-0058-4888-b971-2d3a31bd7a70"
            }
          }
        ]
      },
      {
        "id": "7c6e85ed-8301-4254-80a4-84f0dbca1023",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ee87138d-9056-489c-a8ea-21685dd5741a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8f01cac-49d9-47eb-b7e9-2600033f627f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec88ea84-797c-42a8-beb8-fb3e6c285cc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3a0f8b-6bb9-417f-8c42-03ba932cad2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3436234-7c28-4126-9b3f-8125b00529d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1034ae2d-2fda-4799-8846-8243522dac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "400acc3b-214f-4792-9617-8342ec3ac64b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a61ee38-04b3-4a7c-95fd-1d8365bd794d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1d53eec-e603-4d45-a78b-11d787ef5eae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4362f795-4a7a-4949-8c4e-289d075ca5f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "364d7ded-fce7-4b79-96ef-58be927a49ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e032456-9ea2-47d4-b2d3-f3c02a7a631a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09152867-a2f4-4d7a-9c77-034752d75752"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02fc9f9e-e292-4c36-b4d8-05338fee3263",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ffba2d-5ecd-4a0a-8cc0-13da67655b8f"
            }
          }
        ]
      },
      {
        "id": "8a56c20c-64cd-42f4-9deb-50ae4462899d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd9fea57-9d83-4eaa-b3ec-89c3693dd24c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fe34348-2e7a-477e-a8ed-58471000b361",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fbcd078-39e9-418a-ac3b-4b9aee98480f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c8ef20-1437-4dac-bdb4-6db23c2be17d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c5b556-d866-42a8-8dcc-09a8791e80a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba369d1-d7e0-4d69-85fe-50989cb02a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b273023-d241-4e41-9b6e-ecaa0537311c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdfe6b43-1fc7-4335-84d6-e6e95ccaa02a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55967f37-a10c-48fb-81c7-b0b833ca01d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a727ef-fec2-442c-a895-b965ff32a506",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "920822fa-e118-4131-85d7-6c81843c6622"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b97d7637-5fa8-497e-a1ed-338222a2e543",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "874f8b52-7650-4b99-bd53-c410b9baf520"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb89894-9634-4a5f-94ba-0cde114bbf56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90b6d7c0-e60c-4ad5-85f4-f2efa75a356a"
            }
          }
        ]
      },
      {
        "id": "eeef81a2-3040-455a-91f3-bca954488477",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e82e5a2c-4333-49fd-8b49-f3d5d6323822",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21ca35df-6c31-4cb8-884c-95575806a4e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f57ce588-a0ba-4401-9c21-5607bf004a04",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab42a7b9-65d0-4add-a381-24dadd3f3709",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94dff05c-b266-4870-8771-aa0ac9d39235",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 174.30158730158726,
      "responseMin": 6,
      "responseMax": 12989,
      "responseSd": 905.4989352525555,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717029446769,
      "completed": 1717029498977
    },
    "executions": [
      {
        "id": "0f0f2018-32a8-4cdf-955e-85faa028d1bd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2224b70f-5622-4faa-9005-3b2219979321",
          "httpRequestId": "f8912b7e-3a74-4bde-9e0c-6944349947ca"
        },
        "item": {
          "id": "0f0f2018-32a8-4cdf-955e-85faa028d1bd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a05b7e4-02da-4dc7-9ccb-596c3dcca8ee",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "8ac251fc-ca9d-4e56-8c4c-22ec2d8c6a8d",
        "cursor": {
          "ref": "7533fce1-5c3c-4835-b0a1-d0e0b3d5d429",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d17a9459-18d3-47b1-9cfc-480b46351bb0"
        },
        "item": {
          "id": "8ac251fc-ca9d-4e56-8c4c-22ec2d8c6a8d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e21e4a04-2427-41ab-bf37-463ff22545ed",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "6dfc303c-5caa-4b9c-a60f-d9154d3da76a",
        "cursor": {
          "ref": "06400c81-b717-4f14-b875-f4125ab4c3d4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6476f707-e108-4fb3-a61d-de5577995bfa"
        },
        "item": {
          "id": "6dfc303c-5caa-4b9c-a60f-d9154d3da76a",
          "name": "did_json"
        },
        "response": {
          "id": "1ea29f2a-7a4b-4723-92f2-449abb10bb6f",
          "status": "OK",
          "code": 200,
          "responseTime": 277,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec30e819-2874-4c65-800c-4b89c33ac425",
        "cursor": {
          "ref": "021bbaba-08d7-4e41-86d7-4be0d90977bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a16a1d89-e355-4ac9-b62a-2ab08dc3a818"
        },
        "item": {
          "id": "ec30e819-2874-4c65-800c-4b89c33ac425",
          "name": "did:invalid"
        },
        "response": {
          "id": "27dd4f53-4285-4c3b-9cde-880b43b344e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2784,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec30e819-2874-4c65-800c-4b89c33ac425",
        "cursor": {
          "ref": "021bbaba-08d7-4e41-86d7-4be0d90977bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a16a1d89-e355-4ac9-b62a-2ab08dc3a818"
        },
        "item": {
          "id": "ec30e819-2874-4c65-800c-4b89c33ac425",
          "name": "did:invalid"
        },
        "response": {
          "id": "27dd4f53-4285-4c3b-9cde-880b43b344e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2784,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3f0e65-6e9d-48e2-a6f5-911dc1cffc33",
        "cursor": {
          "ref": "9e41209c-de5e-4866-bc39-c3feec1d6550",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ea5bafbe-03a2-4458-9011-22a80ebc4a56"
        },
        "item": {
          "id": "5a3f0e65-6e9d-48e2-a6f5-911dc1cffc33",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2628d3b8-670e-4405-8c39-8a0ea1bc84e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe171b-d8c9-4085-94c8-875436d272dd",
        "cursor": {
          "ref": "ff2dcd3f-abb6-4073-86dc-712868453078",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d37c9d47-f485-4e10-8214-75bf23efdfc2"
        },
        "item": {
          "id": "9bfe171b-d8c9-4085-94c8-875436d272dd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "024b59e9-da86-4606-975b-3b7a51e8abdf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0577fe-d0be-4ed8-b2ea-500ded12c14c",
        "cursor": {
          "ref": "8e4957d7-42ca-484c-b33e-3f6fea6c660c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aeb670fe-9a7d-41f2-9854-99949264bfcc"
        },
        "item": {
          "id": "1e0577fe-d0be-4ed8-b2ea-500ded12c14c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "17cd87ad-7488-43b7-be85-0b9573079bd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b6ab9d-9f8e-409e-a005-966d8365cd32",
        "cursor": {
          "ref": "40315fe4-ef21-4df9-80ff-0de3a5102ca0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2d743f27-45f0-4b61-a5f9-22a2147dbd97"
        },
        "item": {
          "id": "31b6ab9d-9f8e-409e-a005-966d8365cd32",
          "name": "identifiers"
        },
        "response": {
          "id": "040a160d-7d14-45d2-8379-5637877bd187",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fbfd19-317b-4e4d-bf85-5e2c9ddca5b5",
        "cursor": {
          "ref": "0a263194-a2b2-4e75-aafe-ca85c9ad31bb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "87321afc-e300-4932-a252-73c264cb1f68"
        },
        "item": {
          "id": "e6fbfd19-317b-4e4d-bf85-5e2c9ddca5b5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7931ccb7-df40-49fc-80dc-51f16410db2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a08a64-c2d5-4e1b-ab6f-cd5ff1a2f557",
        "cursor": {
          "ref": "25c874d0-1895-4b67-89be-76fad6c9cdd9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86a79e39-adfb-4356-8b07-b998016eb617"
        },
        "item": {
          "id": "67a08a64-c2d5-4e1b-ab6f-cd5ff1a2f557",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c9c31e8-e137-42e0-bd60-081465899b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17ca61-a870-4c25-b2f0-574b081ba32a",
        "cursor": {
          "ref": "f2f0956d-ccc3-46da-b6c2-3e9286e98e34",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "29aa5a53-6a92-47a9-82aa-599b70207b75"
        },
        "item": {
          "id": "fa17ca61-a870-4c25-b2f0-574b081ba32a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "44f2cb25-e56e-4652-814b-d394d511f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9404646-d6a4-4ab8-99ee-ca7bffa1de96",
        "cursor": {
          "ref": "a01bae66-b1e4-47f0-a762-7c472f4d058d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2834f8ae-26f5-44ba-888c-92b02e4c5d96"
        },
        "item": {
          "id": "e9404646-d6a4-4ab8-99ee-ca7bffa1de96",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43a89432-bd0d-4ab7-a973-e55ac977fb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909b1ac-8bc7-4c6d-8f85-0f87a005d49a",
        "cursor": {
          "ref": "a13c3064-0d9b-40ce-957e-e1bad99275d7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "643986b1-1b8d-4dfe-aa07-1543473f045b"
        },
        "item": {
          "id": "c909b1ac-8bc7-4c6d-8f85-0f87a005d49a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dcf48c1f-f976-4b8b-9b6d-e9a5ab375e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a8cbbb-7254-41d4-8aa5-f9589fe92ed4",
        "cursor": {
          "ref": "b5ea1470-f2f1-4873-9baf-36e55c57d073",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "167891b2-c4e9-451d-8be2-244fb67d8293"
        },
        "item": {
          "id": "84a8cbbb-7254-41d4-8aa5-f9589fe92ed4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9bac2eb-9d52-4bbd-bef3-8971589ea4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd146f-1401-416b-9535-b9b05ca096b1",
        "cursor": {
          "ref": "6cbb533f-dee4-434f-9e0d-9bd299836108",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3c180f05-cbbd-4f92-b01d-9aaee3d11100"
        },
        "item": {
          "id": "98dd146f-1401-416b-9535-b9b05ca096b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d13f006-f145-412c-9000-c71e9cf67d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf12042-a786-451c-bf80-8295dd921fef",
        "cursor": {
          "ref": "d63aab02-289e-48bd-b783-3d24a9221cd9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "367bf021-61b4-40fe-a080-65b95f6ad65b"
        },
        "item": {
          "id": "ddf12042-a786-451c-bf80-8295dd921fef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bc02dd5e-4a67-4f83-9921-5d62482ed4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770bf41e-f053-4b57-94f2-43ae2200e28f",
        "cursor": {
          "ref": "7281c025-ffd1-4e00-8327-2029802ec342",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "371db4de-e167-4557-a99b-bfd38ed768bd"
        },
        "item": {
          "id": "770bf41e-f053-4b57-94f2-43ae2200e28f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f7621d9f-2df8-4a41-a3f7-308ccf34ed15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f61aed-1826-40aa-880e-df0168a02244",
        "cursor": {
          "ref": "a2942f5a-84f2-4b6e-9d13-7df5b7999fe3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "959b7e67-eb5c-48f8-86c8-2c27b3c5255b"
        },
        "item": {
          "id": "56f61aed-1826-40aa-880e-df0168a02244",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9947bc88-e161-4889-ab2b-7a27bd6b052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f10b5d-ff51-45f1-9a7f-fa7c925e9c42",
        "cursor": {
          "ref": "8c3fb9d0-065d-4cd5-93b7-b0467250cd66",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "88a5da55-d169-4fe2-bd0d-d583f09ed0de"
        },
        "item": {
          "id": "d2f10b5d-ff51-45f1-9a7f-fa7c925e9c42",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fcd2730b-61f8-4010-b9eb-f6a07bd4f358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44001df2-3a18-476d-88ad-74b4b4b7b8b5",
        "cursor": {
          "ref": "0ff060bd-d129-47da-942e-41873089573c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7f3dfb16-881d-4143-9236-85e69fe5ce60"
        },
        "item": {
          "id": "44001df2-3a18-476d-88ad-74b4b4b7b8b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "64a11257-6c17-474b-89fc-3845f591d705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38944f54-acd4-4965-ba18-bf6026cab61f",
        "cursor": {
          "ref": "710e9029-ba11-4dfd-8240-fed9916591bb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9919267-ecb3-4f75-96d4-a1137c0cd90c"
        },
        "item": {
          "id": "38944f54-acd4-4965-ba18-bf6026cab61f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "405e570b-2af7-4168-866d-03798f7d520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42902bab-081d-476a-ba81-3dc09358caf5",
        "cursor": {
          "ref": "6d58c315-2343-4072-87d1-950f738aaf21",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ed71967-1ab8-4c6f-9f04-21d5c5983c77"
        },
        "item": {
          "id": "42902bab-081d-476a-ba81-3dc09358caf5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0af25158-bec5-4239-bad8-242f3f37dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3229f228-eb34-4d09-a72e-f1855dbb6841",
        "cursor": {
          "ref": "e47498cd-a395-4ee4-b819-e47b54bedb4b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c2bc35b-4387-46af-bf1b-ed27a3417d58"
        },
        "item": {
          "id": "3229f228-eb34-4d09-a72e-f1855dbb6841",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "945c8920-917c-41b5-a04a-97e7814aed66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f101f3c-388e-4068-aeaa-67873736ff47",
        "cursor": {
          "ref": "806d89fc-a4dd-434c-a7bb-913b969b08d9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "13ea0d26-9721-46bf-ade5-0fe1d7d4deb1"
        },
        "item": {
          "id": "2f101f3c-388e-4068-aeaa-67873736ff47",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03b16687-e533-42dc-868b-0cf6be9cae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656fec7a-fc75-4ef6-a2fc-72788f365a2b",
        "cursor": {
          "ref": "50613b19-99fa-4c16-a069-dacf082475c7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ec6f2176-4204-45d3-bf83-889dc429162c"
        },
        "item": {
          "id": "656fec7a-fc75-4ef6-a2fc-72788f365a2b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9e991cb7-5e3d-428f-ab5b-414100dd3ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428dd48d-003b-4c55-8992-436fc039d35d",
        "cursor": {
          "ref": "dde32059-4384-4500-bce5-196fcf862632",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bc03b908-9063-4ade-9a4f-ed3a18111c7e"
        },
        "item": {
          "id": "428dd48d-003b-4c55-8992-436fc039d35d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "61ce1e6a-6910-49ee-ac39-c895e3f86c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc8254a-84e7-4e44-a4b4-c27e702a2726",
        "cursor": {
          "ref": "45ebfa31-c364-485b-b08a-937abfe4492f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "decd5eca-a482-493f-8add-392464f55ed9"
        },
        "item": {
          "id": "4dc8254a-84e7-4e44-a4b4-c27e702a2726",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8d83f58-7b9f-48e6-b544-9b631d73d13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6a4f71-5db7-44a5-9068-b78e378d1d44",
        "cursor": {
          "ref": "010c351f-7b9f-48f3-ac9e-52dbcc3db41c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4ff0754-feef-4079-9bf0-ae64f2571bdf"
        },
        "item": {
          "id": "7e6a4f71-5db7-44a5-9068-b78e378d1d44",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f95d43cb-b4dc-490b-a073-9ac0c8d2c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a84e1dd-808f-4686-a8a9-1df4f6de63f2",
        "cursor": {
          "ref": "c712ca11-beee-446d-8c0d-a2a473e4e297",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5260a71b-5f4c-4c18-92e4-23e51085ee4b"
        },
        "item": {
          "id": "6a84e1dd-808f-4686-a8a9-1df4f6de63f2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d0e94f25-c321-490b-8ff2-f2af0f62724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521107b9-5825-418a-8b9c-41229c15fd34",
        "cursor": {
          "ref": "9a36bba0-cee1-4f1e-a72b-bf40d4663d1c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8dfe6ea6-5a4b-4822-ac6c-8e91b12ce872"
        },
        "item": {
          "id": "521107b9-5825-418a-8b9c-41229c15fd34",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "53ca40b0-6844-4d3d-b2c8-52105b799bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe81002-590b-4aa1-999a-d69b1bdd1a13",
        "cursor": {
          "ref": "558766aa-20fb-46d3-9305-e13e0be0960e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "04dfb509-d6a6-4e79-9303-072d806d0290"
        },
        "item": {
          "id": "ffe81002-590b-4aa1-999a-d69b1bdd1a13",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f4a577f3-a77f-449a-8381-86cf091a4ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6d5f78-5c16-4693-9407-84ce2115d3d0",
        "cursor": {
          "ref": "fada9aee-6e44-4a03-a8b0-6d8d04862f71",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dfd8945c-75b5-4024-9dcb-bd72e9a796a5"
        },
        "item": {
          "id": "bc6d5f78-5c16-4693-9407-84ce2115d3d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "40f37154-0cc8-4dd9-af68-d50a720dcb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a0f914-d97f-4b24-b2e9-554514b184ae",
        "cursor": {
          "ref": "dc6ebb5d-1170-43a3-b611-b7f0c1ba9cb2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5a163704-8424-4e55-87a8-12fdc490b584"
        },
        "item": {
          "id": "66a0f914-d97f-4b24-b2e9-554514b184ae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "734acd40-f0d0-4691-91d5-6261361abb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b91252-dc09-4004-b984-c8aa95c6a0aa",
        "cursor": {
          "ref": "cdf6eef5-954a-4906-9590-0c1e2803bf74",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7769995d-0a57-48bc-a36c-926494c7ba0b"
        },
        "item": {
          "id": "71b91252-dc09-4004-b984-c8aa95c6a0aa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "74a96861-4276-4cc0-a458-d8aae5a098c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edafb02-368b-493b-8dc6-4801234d6afc",
        "cursor": {
          "ref": "60564b20-009e-487e-80be-87ec868e29e1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d1976ddf-bafe-4d55-bc81-f0dbc074d9fa"
        },
        "item": {
          "id": "4edafb02-368b-493b-8dc6-4801234d6afc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "18c13cb3-0f3f-4646-9e14-44f0173bbc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462945df-b14c-4355-b1ea-27492fe4fb9c",
        "cursor": {
          "ref": "0b2ff572-4ebc-4d3d-9215-aeb3158bfebc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0c468fec-4e1f-4483-9f44-5e81e1ff6936"
        },
        "item": {
          "id": "462945df-b14c-4355-b1ea-27492fe4fb9c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "65bad742-5456-41f9-9c51-4d508989d127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48be74a-d35c-44d7-a96f-705c645e71ff",
        "cursor": {
          "ref": "d0a1cb67-6d84-418f-aad8-08908c87e293",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1bbf7cc2-5197-4e61-bd4a-87014887931f"
        },
        "item": {
          "id": "d48be74a-d35c-44d7-a96f-705c645e71ff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e8985ef2-6268-4c59-9912-e948f8713ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4848aa-25dd-4f15-9618-8c65e76d82b8",
        "cursor": {
          "ref": "8d58330c-4416-4d2f-a3db-56ebda9ea10c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3e88b6e4-63f1-499b-993e-bddb746c5da7"
        },
        "item": {
          "id": "bf4848aa-25dd-4f15-9618-8c65e76d82b8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2a85a853-6558-4207-a880-18b9d8cc07f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d0eb7-2c79-45a1-bc85-d374c283df0b",
        "cursor": {
          "ref": "19aa79dd-c3f6-47d2-9a2d-6775fb332b1b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2e5f91b4-8e4b-437c-a6bb-d506a5f6cf61"
        },
        "item": {
          "id": "585d0eb7-2c79-45a1-bc85-d374c283df0b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6e078108-70c7-481d-8924-2235961434de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55886791-b6d7-4f50-85d3-f9497270cdef",
        "cursor": {
          "ref": "6d7184f2-7e3b-4ba0-8ee7-6c554055b2b7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "01d01f58-c8dd-48f5-938b-286d853d6dbf"
        },
        "item": {
          "id": "55886791-b6d7-4f50-85d3-f9497270cdef",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "77ddabbc-95cb-4394-9b8a-90d3e4f5a1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a926be5-8749-448f-ac9a-56ae0c1d5026",
        "cursor": {
          "ref": "219a6d78-ac11-4730-8d6a-4095094e3382",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "257b1277-49cb-4121-b75c-d1a146e6b281"
        },
        "item": {
          "id": "9a926be5-8749-448f-ac9a-56ae0c1d5026",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b612a8d9-7f8d-47e2-bb7f-1db27aa67d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20da0d-dba7-4bdd-9c37-680fa57b37fd",
        "cursor": {
          "ref": "9f11035d-3527-4c84-88a3-ece207c176c0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "205d35f0-740c-4fc0-b887-ba02d2d99663"
        },
        "item": {
          "id": "1f20da0d-dba7-4bdd-9c37-680fa57b37fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16a5b404-507c-4300-a41a-d44dce958fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321a6e22-a8c3-4d56-9918-6d5ca7def517",
        "cursor": {
          "ref": "19f3df3a-17cb-4915-ad40-1fe57e8c8c42",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cf702e8b-87a7-49b5-8128-24071e728d45"
        },
        "item": {
          "id": "321a6e22-a8c3-4d56-9918-6d5ca7def517",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b8006320-6fd8-4a84-8e46-ace26e2bacb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ea03fe-871d-4d7d-8893-18574ed841f8",
        "cursor": {
          "ref": "c90dc173-3685-4c1c-969a-b86f81bcc028",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0a3957e9-e2d9-45dc-929e-c6d7c084ea69"
        },
        "item": {
          "id": "b5ea03fe-871d-4d7d-8893-18574ed841f8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5183ba71-b13e-4a6f-a7d4-6d7e4a5b8a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6ca709-740b-44f3-b282-3184bcf8be7a",
        "cursor": {
          "ref": "6c8ab806-6cc2-4a9d-ae34-4166b8f2bd21",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e55930c2-8526-479d-9aca-efe82dd98fd2"
        },
        "item": {
          "id": "fc6ca709-740b-44f3-b282-3184bcf8be7a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e175bf83-4811-44df-9337-8bf0f35265b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e7dfa9-c575-4c60-ac6d-423e64761094",
        "cursor": {
          "ref": "89ab4396-980e-445a-a103-b438079d7faa",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2ff4eafb-96db-4328-a17d-f32f70d469dc"
        },
        "item": {
          "id": "99e7dfa9-c575-4c60-ac6d-423e64761094",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6c806f29-e04d-4a6b-aa6b-c57ceb2a1ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19e4b49-c862-4dd3-bdc3-d603a658ed54",
        "cursor": {
          "ref": "1dc79c06-0935-486c-86a4-588c2880b889",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bccaeb11-53a8-43d0-9205-9c8f989a0dd4"
        },
        "item": {
          "id": "d19e4b49-c862-4dd3-bdc3-d603a658ed54",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f5fbe2a-847b-4ae6-b198-522c658f0aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd04cc-5654-4516-9129-0bdcd8a9a9f7",
        "cursor": {
          "ref": "74fa4ac8-56a8-4805-9abf-1ca2169c8fe3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9442ce50-49a7-49c5-acac-e587cc8d2de2"
        },
        "item": {
          "id": "debd04cc-5654-4516-9129-0bdcd8a9a9f7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "37950e77-f401-4aa5-b3f5-1633f3c35575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c924d-071a-4091-a948-0e8e56b6f29f",
        "cursor": {
          "ref": "840f7356-f80d-4b85-a034-40af95181d5f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c7466f0-07b4-4d48-8e86-3431056a9a73"
        },
        "item": {
          "id": "3a7c924d-071a-4091-a948-0e8e56b6f29f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a33cacaf-5cc0-4768-966d-60e789a1f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc73f6-bca5-4004-93e0-078209098541",
        "cursor": {
          "ref": "3d1d1ad4-ddca-4332-8ef7-16977164b2c0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "705a9f26-4491-4fd9-ae22-4b995216be05"
        },
        "item": {
          "id": "d9cc73f6-bca5-4004-93e0-078209098541",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "71d2263d-a1fd-4e3b-aa54-0460fd93f5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfefa649-24dc-47a8-962f-aa44356aa74d",
        "cursor": {
          "ref": "7d71d370-6731-4177-9f33-fcced3f4f642",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52199937-456a-495c-9604-65dfb69522cb"
        },
        "item": {
          "id": "bfefa649-24dc-47a8-962f-aa44356aa74d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "67b0c4f8-83e5-40b8-a48a-7f67ac5bb1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc96a4a-fe08-44c1-b7e0-14dabd298569",
        "cursor": {
          "ref": "d19790d0-9111-466d-b603-09325e04aab9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "508b6458-e7cd-447d-b1f3-c4c3a54271b2"
        },
        "item": {
          "id": "8dc96a4a-fe08-44c1-b7e0-14dabd298569",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "baa106ba-fa03-4bce-b0e6-f16d8d8c32e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9bb304-4c39-42dc-af51-06635feca4fe",
        "cursor": {
          "ref": "0a3c1065-2ec1-4e6c-b98f-73f7cabb447d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cebb6b1a-9cf0-407c-9dbb-8906b9d03ea1"
        },
        "item": {
          "id": "dd9bb304-4c39-42dc-af51-06635feca4fe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5c79ec20-2023-4879-ac4c-4b8a0a784ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21563357-c568-4a75-83f1-d3203b270c0b",
        "cursor": {
          "ref": "78b7b8c5-e9a4-43d5-9aa4-a4c2eb88a02b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a45e04fb-e578-4453-a469-376a8941b33e"
        },
        "item": {
          "id": "21563357-c568-4a75-83f1-d3203b270c0b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e1eedf8d-f199-42bc-8e38-cddf0fc8278e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8808e1e-44c3-4f72-a653-056d70bd5533",
        "cursor": {
          "ref": "3f93ae80-75d9-4f59-bac9-b8bef05dde1f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b70226ac-2874-4e54-bbcc-356c4dd1dcfd"
        },
        "item": {
          "id": "a8808e1e-44c3-4f72-a653-056d70bd5533",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a657a43f-d444-45db-aefa-62e893410d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e28d09-1ed9-4a00-9ec6-329b98361f4b",
        "cursor": {
          "ref": "36453163-e9f3-4e8f-af38-d70aa722cf4c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f8942b38-879b-4938-b31f-da70bd2e00bf"
        },
        "item": {
          "id": "e4e28d09-1ed9-4a00-9ec6-329b98361f4b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "21861e40-418b-4fbf-b842-b26eb3a14024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d898872-3702-4514-864e-07cdbc29e60f",
        "cursor": {
          "ref": "527c87c6-ef7e-4a05-ab76-a1ff8b3c3461",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "82fcf906-62b2-46ec-9373-2034cde0e652"
        },
        "item": {
          "id": "0d898872-3702-4514-864e-07cdbc29e60f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bf0c23e0-1bc7-4b4c-a779-6fc0d3ec5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6694d4-8078-4057-a727-cdf0382c9b76",
        "cursor": {
          "ref": "1a106387-b3bc-4614-b01e-14f763fe0d27",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b4796d4a-ea2e-4d32-8d9c-3c1da6b56ee2"
        },
        "item": {
          "id": "7d6694d4-8078-4057-a727-cdf0382c9b76",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "511caa9b-4918-4a1d-97e3-bcc33d66c310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47c6f38-1327-4d77-a6d9-2b8c90a312bc",
        "cursor": {
          "ref": "d8512c85-db1a-4391-9994-46727ffb299b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eea9af31-1248-41b6-b3db-6ee9c017c695"
        },
        "item": {
          "id": "a47c6f38-1327-4d77-a6d9-2b8c90a312bc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "026e2c74-6949-4a0b-938c-8a0a5ed3ac25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f350cdb-0b2d-4f52-95cc-388ac8145cf3",
        "cursor": {
          "ref": "7abd43de-6b29-4a81-b062-008f2248966a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6726c21a-9c57-4ff0-999e-d4d73fbc8df6"
        },
        "item": {
          "id": "1f350cdb-0b2d-4f52-95cc-388ac8145cf3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2fa33ae2-a314-4be5-86ff-9f0d0b3d7439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08adb15a-d745-4ac5-ba7b-7052515a9ac7",
        "cursor": {
          "ref": "48dfb918-62eb-4038-96e9-70c71a7d161d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5b3289d3-e1ef-49e6-82eb-ae98de12e938"
        },
        "item": {
          "id": "08adb15a-d745-4ac5-ba7b-7052515a9ac7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "881ab7e8-cbdd-4e3d-8a73-e243e8856f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aa4939-553f-4f3c-b812-3ca9827b1bc6",
        "cursor": {
          "ref": "9aecafdd-b54e-43de-8485-f408d34b0d6f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3d2f6e56-0e6b-42e4-a4d4-5734d3ce03b5"
        },
        "item": {
          "id": "05aa4939-553f-4f3c-b812-3ca9827b1bc6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "027dd560-d240-4243-b8b7-96457358b601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324b566d-b8a9-4e97-a39d-c1aa6b056392",
        "cursor": {
          "ref": "6cdf51b4-8516-429b-86e4-6aef4b54b16f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6c3b5a0-9978-48a2-bbc1-1bfb9a8e2d79"
        },
        "item": {
          "id": "324b566d-b8a9-4e97-a39d-c1aa6b056392",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6f0328b4-a42c-49f7-8da5-a3f4761df035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc43a56-719c-4731-9c84-b5b247750c6d",
        "cursor": {
          "ref": "5d18d58d-19b3-4d7b-9d7e-c2da1a512630",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4b1173d2-5588-4b25-95d9-757fc15386fa"
        },
        "item": {
          "id": "9bc43a56-719c-4731-9c84-b5b247750c6d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "963e7010-24e9-4801-8fc2-a1ae55698f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d91e3e-156d-48a0-8e77-cc2ee507d631",
        "cursor": {
          "ref": "12832957-78c9-4cb6-a2ae-31b05e48b6c8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e1306c6e-8add-4f22-8854-2b09e8a85440"
        },
        "item": {
          "id": "20d91e3e-156d-48a0-8e77-cc2ee507d631",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6adb107e-d037-4991-af7d-3d1ceb4a4ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e497ea-14f8-47c8-aff2-446faeb6467a",
        "cursor": {
          "ref": "2163e16a-09de-4ceb-951d-562d2bc689e8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5b2ecb5c-31a1-4d12-985f-298e5fa9ed79"
        },
        "item": {
          "id": "96e497ea-14f8-47c8-aff2-446faeb6467a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8682fa20-2fd1-4089-92f3-fab7ead355be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfc1bf8-3a49-45f0-9605-597d38e37d0f",
        "cursor": {
          "ref": "8fb66a63-0531-4483-9e81-700ec0d620d6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c9cfeb8b-42b6-4f2f-917c-67e1dfd1dfce"
        },
        "item": {
          "id": "fdfc1bf8-3a49-45f0-9605-597d38e37d0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d5d4d061-f19d-468c-a51c-2bdeb7411cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf22447-842a-4832-9301-1bbb62f897c9",
        "cursor": {
          "ref": "cd7f8300-f60d-4a47-9d40-2d7476437f21",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "21a292db-729d-4a2e-a75e-ac78455c62ec"
        },
        "item": {
          "id": "fcf22447-842a-4832-9301-1bbb62f897c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6bd21bfa-2835-4064-8c36-7f0430167a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f19503-37c1-4433-b83b-8274cace40f7",
        "cursor": {
          "ref": "45cd0d94-f4c5-43cb-bb7e-509921bd7c8a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c880e0d-3037-4cd4-bcfd-63c0ccb04d43"
        },
        "item": {
          "id": "f7f19503-37c1-4433-b83b-8274cace40f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b8651a8-0834-4675-898f-679b58031c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0657121b-77e3-4254-8d62-47a0b793a1dd",
        "cursor": {
          "ref": "d861e2b9-6edf-423c-ae71-9d8a804630f4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cda8a7a3-5143-4ce0-bc2b-28a71a646034"
        },
        "item": {
          "id": "0657121b-77e3-4254-8d62-47a0b793a1dd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5e25b901-2884-473e-bf67-85aab2b9c7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8143244-46db-4d04-9978-b40ae9816558",
        "cursor": {
          "ref": "c8672fe2-4d55-4985-b5e8-f19785212b1e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f2715be-4a74-452b-8782-43662a8bfc86"
        },
        "item": {
          "id": "b8143244-46db-4d04-9978-b40ae9816558",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ba442fbc-6648-46c0-8824-521db5819e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc508c8f-3755-4f2b-9180-195e9244c610",
        "cursor": {
          "ref": "2390ad17-8e89-49f5-99ef-22f5a2489775",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "afe4f514-63e1-4cd1-8459-5e92a2a90260"
        },
        "item": {
          "id": "cc508c8f-3755-4f2b-9180-195e9244c610",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b1959b01-2280-4600-bc5f-8f8fe5c14b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b440d6e-41ba-4c55-87f7-fdde6b58f77e",
        "cursor": {
          "ref": "9a6547b2-654c-455a-8a1d-e5bf9bd168c1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a179d3b-cf80-4690-bcbf-8044cb9506fa"
        },
        "item": {
          "id": "7b440d6e-41ba-4c55-87f7-fdde6b58f77e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b97df063-d7b5-4633-b4b8-2a48e0f13fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddd4d9b-d6e6-4586-9053-f8cf231c97b4",
        "cursor": {
          "ref": "0c45b107-2215-486c-a83d-9931cf056c44",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "25d238de-4863-43cc-b255-5361c93f3358"
        },
        "item": {
          "id": "cddd4d9b-d6e6-4586-9053-f8cf231c97b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6fd8f79e-0b66-4f0f-b412-0ca4fb0e52b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185e374-b5d7-45b0-a526-6c0e0a70aa84",
        "cursor": {
          "ref": "126b7a19-6d51-4ebb-88af-8cc3860c9ab1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4631f0f-228e-41da-b089-26821841c57d"
        },
        "item": {
          "id": "f185e374-b5d7-45b0-a526-6c0e0a70aa84",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3a3a0960-e84e-4e69-b04b-560b51ed3ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c513744-8b4b-448c-b6ce-05c5853d732d",
        "cursor": {
          "ref": "53845211-6e97-455f-9e40-e04647772380",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4d9d0f25-43c2-48d7-ad69-dd8b0fb63578"
        },
        "item": {
          "id": "8c513744-8b4b-448c-b6ce-05c5853d732d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3364a2d1-6cd6-4a22-9bf1-9b61cd107100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b55474c-f51b-46de-ae54-9cfc834b7a19",
        "cursor": {
          "ref": "3d4125b4-6550-4353-a874-bfef45261afb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0bfc8152-1f91-4006-bd33-e32dbbea3e6f"
        },
        "item": {
          "id": "9b55474c-f51b-46de-ae54-9cfc834b7a19",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c089ecdc-f44f-430a-81be-6d20f8caab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0effb684-2693-42d2-b935-d7ca52f41bfd",
        "cursor": {
          "ref": "d478f24b-a47b-435d-a4ce-9d45d3d9efdb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "505269f3-f2f9-424c-925a-51ad067ae0cb"
        },
        "item": {
          "id": "0effb684-2693-42d2-b935-d7ca52f41bfd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "573eb6ec-4687-41fd-9ab5-a8902c0f859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a282f308-244d-4b6e-a895-ee167ae85a83",
        "cursor": {
          "ref": "1eecb27a-a237-4aa1-a44e-3ab28688b8f8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3d660b7c-4194-4713-a496-dade057a458d"
        },
        "item": {
          "id": "a282f308-244d-4b6e-a895-ee167ae85a83",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "30d95d4d-26d1-4edc-a83b-cbf02874dd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17661cee-ce69-4a23-8b90-1f58798e0d66",
        "cursor": {
          "ref": "f5578a02-9f41-457a-a01d-e05121b8df8c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0a1fa9a8-57b1-40c0-a3cd-0e3265e3636c"
        },
        "item": {
          "id": "17661cee-ce69-4a23-8b90-1f58798e0d66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "057c3265-ebde-4af2-ab0e-e21487d0711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943584fc-6537-485f-8487-3bb91ab823bd",
        "cursor": {
          "ref": "8a85af0c-c8b5-4e2b-acc8-e9b9b9d4c23d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cc640a66-5a89-44fe-bb3e-a44b0575e485"
        },
        "item": {
          "id": "943584fc-6537-485f-8487-3bb91ab823bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "408c2226-57ef-434f-a148-9f6dcf071051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a030c322-a062-4ffe-83db-073b30b6e8f2",
        "cursor": {
          "ref": "18cbed15-491b-4a6d-aab2-bd16142bd3da",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7645d0cd-2ce3-4acd-98fe-ff52104c940b"
        },
        "item": {
          "id": "a030c322-a062-4ffe-83db-073b30b6e8f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "31362931-271b-4fa5-8550-38d79bfd8efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d030b56-405c-449a-b6d9-3e4b4d3acc7d",
        "cursor": {
          "ref": "da23cbd6-72a1-4cd2-97c6-376a9463632f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "75f4f575-cb19-4644-8890-cf88c61770a8"
        },
        "item": {
          "id": "4d030b56-405c-449a-b6d9-3e4b4d3acc7d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6d9b3e6-e459-4d9e-9c06-1b1990d4f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d730d08f-9949-404d-8744-1529f09fbaa6",
        "cursor": {
          "ref": "ae2f72ec-3c86-4c64-99fe-c8503ad7fd7e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e3341f57-d98d-4970-9dbe-15d74cc3c4d2"
        },
        "item": {
          "id": "d730d08f-9949-404d-8744-1529f09fbaa6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9dddfa67-b289-4090-8fac-d47aac2e57e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b880bf2-a563-42b3-a014-7cc7e7c60305",
        "cursor": {
          "ref": "0796e322-6379-49cd-92d6-20d6dfc1685d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "eef90c44-e9ec-4ffc-b6bb-4b78f4d3292e"
        },
        "item": {
          "id": "6b880bf2-a563-42b3-a014-7cc7e7c60305",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "600e5dd3-8dd8-4434-9f3b-39756ddec65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c408286-2043-4a96-9f85-5759bc29206f",
        "cursor": {
          "ref": "1a2d91da-e857-4049-b73e-0c3fa24b1f9f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1d2587af-fc9e-44d3-9604-2e58b5c01f67"
        },
        "item": {
          "id": "2c408286-2043-4a96-9f85-5759bc29206f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "153dee25-fdb6-4969-a9ce-beae105304b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ff498-6bab-4f6f-8e25-64f3a62590c7",
        "cursor": {
          "ref": "634f12cd-762f-4929-b441-955852df8f26",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38533103-e731-43c6-99ed-56e660fa30e4"
        },
        "item": {
          "id": "5f8ff498-6bab-4f6f-8e25-64f3a62590c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "65169048-2455-4324-88a2-06c828b71f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea768017-24ef-4605-ba27-8971cf9117ec",
        "cursor": {
          "ref": "135ccecc-b109-410a-8be8-501c6cb401fa",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d1c2508-fe9d-4847-9ad1-40a1f6a618d5"
        },
        "item": {
          "id": "ea768017-24ef-4605-ba27-8971cf9117ec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0f515da2-1f81-4f82-8705-76fc611029ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c402d5-8ce4-42c0-a4c6-bf70d7e071fa",
        "cursor": {
          "ref": "6f05447b-d25c-43e0-b9d3-fe2b6031dc24",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e55a134e-1188-4390-88c5-b1a33430d78a"
        },
        "item": {
          "id": "22c402d5-8ce4-42c0-a4c6-bf70d7e071fa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81a57d31-9af7-4982-86cd-2a4669cd9461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f80c0c-e9e0-4b69-a2c2-b4b459db467b",
        "cursor": {
          "ref": "437c73e9-1f89-4b12-ba6b-5289354a512b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "edceea74-b1d9-4fa2-b6ed-29b2ec2b996d"
        },
        "item": {
          "id": "02f80c0c-e9e0-4b69-a2c2-b4b459db467b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6c07bc6-5506-45e6-9c56-7fb0512ca128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0608dfe-0532-4818-8ef8-f814e4d5bd79",
        "cursor": {
          "ref": "198ff8ae-22d4-4734-b2d8-47c3f6099d15",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "457fb134-624b-4517-b0c8-8c3c2f5af09e"
        },
        "item": {
          "id": "f0608dfe-0532-4818-8ef8-f814e4d5bd79",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2774c4d0-8ce5-445a-adca-b7d9c44298de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400d567-9bcc-4ba5-9a4e-89aade8c387c",
        "cursor": {
          "ref": "a2800ee3-cd8f-4601-bcc8-a393f7a1ddb7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "678c4fe3-91f0-43db-8e00-2aed431e6347"
        },
        "item": {
          "id": "7400d567-9bcc-4ba5-9a4e-89aade8c387c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "37ac5b65-4f9d-4272-a92c-cc5bd90eebc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3246ac-0be0-4aa2-8e4d-cb0de00fbd03",
        "cursor": {
          "ref": "bbcc93b9-1023-4493-8a07-81f10270a23b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5a7de8bc-2e29-4715-b8b9-536d783e405a"
        },
        "item": {
          "id": "fd3246ac-0be0-4aa2-8e4d-cb0de00fbd03",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e811804-179f-44a5-a7d4-02e93c67b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f45277-2ec6-49a8-94ad-6e148f515b46",
        "cursor": {
          "ref": "bf3ead80-d951-4a5b-9895-6fc054c4efb1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8d1889df-2d7b-41c4-b770-7cda3c3306db"
        },
        "item": {
          "id": "59f45277-2ec6-49a8-94ad-6e148f515b46",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1af60141-43f7-415e-ba7c-ff10f0ef8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f150844-47af-4b13-8c22-aa380d62796f",
        "cursor": {
          "ref": "58a73c74-94d3-4d42-95bf-fee9a3a3499b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ecc758b7-8046-45e9-ac0c-b2da63045116"
        },
        "item": {
          "id": "9f150844-47af-4b13-8c22-aa380d62796f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4d4551f3-1c77-4b4f-9c62-e7e5d183728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f27b7e3-e2b0-44c5-ab06-560d8b905229",
        "cursor": {
          "ref": "810be286-1afa-4b52-a60a-8c812fe0877b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "71b655b3-d110-4fd0-8640-0512b10b6ef7"
        },
        "item": {
          "id": "8f27b7e3-e2b0-44c5-ab06-560d8b905229",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "00d2b018-4bee-4e1e-8c75-48e53da3068b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69d6a4a-1e17-4390-a52e-a9c2dcf17b1b",
        "cursor": {
          "ref": "22fc99d5-9e83-46cc-b319-99b93938766d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6caed724-9e8f-4cdd-b35b-fb1b7a091dcb"
        },
        "item": {
          "id": "c69d6a4a-1e17-4390-a52e-a9c2dcf17b1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d3f730e-69ad-4d24-acd3-8dc2c4f9b076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4c5b0d-b154-4122-bc8c-75d9bf1eb2ad",
        "cursor": {
          "ref": "3f1a35d0-dfc6-4eaf-8cef-894fb57f7b0d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ff25350d-44b8-43bd-ae5d-d86d9a9d26aa"
        },
        "item": {
          "id": "8a4c5b0d-b154-4122-bc8c-75d9bf1eb2ad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bb07730e-0913-4581-92e2-dec9660c5e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbf2c79-0457-4507-95e0-1fa62f7c6cbd",
        "cursor": {
          "ref": "286b625c-92e6-49ce-a423-45e560981f21",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3e6fb060-9024-4921-bb64-c478d744ae50"
        },
        "item": {
          "id": "3fbf2c79-0457-4507-95e0-1fa62f7c6cbd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95cd0040-2f2b-46b8-b317-01fb73a99b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6484cae4-99fb-450d-8cf3-6ac3bbcd6733",
        "cursor": {
          "ref": "3279f12d-deb0-4ce4-bb9a-05f881f1c5dd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c3cda1c2-0af4-4796-be74-e0df6408569c"
        },
        "item": {
          "id": "6484cae4-99fb-450d-8cf3-6ac3bbcd6733",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0f6b4d93-440e-4641-b063-459653587bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f174338-6ab2-454c-bb2f-e897b869f2e3",
        "cursor": {
          "ref": "76a07873-1a32-4feb-9897-1ef8f228b4d4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fc10c264-4b68-41c4-be5d-3017f70ccf46"
        },
        "item": {
          "id": "2f174338-6ab2-454c-bb2f-e897b869f2e3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "86a54c93-d574-4bea-a6a2-421145384894",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cec0227-f211-4eb6-864b-3d8bc2ea1ca8",
        "cursor": {
          "ref": "cd5f3679-e11b-4a9e-923e-e705ebef1159",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5358b0fc-dd8b-4bff-9628-09cab6e79886"
        },
        "item": {
          "id": "9cec0227-f211-4eb6-864b-3d8bc2ea1ca8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b2372e99-add1-42f6-9a86-fe6bb54af60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "532ea22c-a951-448d-a1f4-5ebe5a59f86a",
        "cursor": {
          "ref": "c4709859-36d9-433d-a83b-0547ab84129f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3a411f4a-366e-407f-85a3-ece7cf28e550"
        },
        "item": {
          "id": "532ea22c-a951-448d-a1f4-5ebe5a59f86a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b9ee6d66-c1e7-4100-8ecd-735327e90426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "824056ee-bae7-4b3f-b6f9-f3677de68bb3",
        "cursor": {
          "ref": "46d04c79-afbf-4130-b459-49ce027e0d8a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "21056b25-3635-467a-a942-77c1e0cd7d3e"
        },
        "item": {
          "id": "824056ee-bae7-4b3f-b6f9-f3677de68bb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "627e6be5-d7e7-4d01-8c42-2f4330cd0717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "af3fa6ce-6ffb-47bb-9cda-2bf988c499ec",
        "cursor": {
          "ref": "f3ebe378-2e85-47fc-9e6c-786dd31596e1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d51fc480-c1b1-4148-803a-ed61b8644277"
        },
        "item": {
          "id": "af3fa6ce-6ffb-47bb-9cda-2bf988c499ec",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a6f4eada-01a6-48a3-8e1a-1b24c6c0da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f24119f4-b98c-44bd-845c-1c6743207bb8",
        "cursor": {
          "ref": "5e5ae925-af18-4598-bb44-4eba2bacf1f3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e88e9647-72e9-49ab-a2fa-5404a6a51146"
        },
        "item": {
          "id": "f24119f4-b98c-44bd-845c-1c6743207bb8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a6f5d1fe-e230-4e1f-a710-97f77143f56d",
          "status": "Created",
          "code": 201,
          "responseTime": 12989,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c5eba0-5906-4d5b-a353-0b80a4fccee6",
        "cursor": {
          "ref": "d81fe937-8771-4968-9427-8a1601374b85",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fec7eab3-d013-4c51-9593-9686241a07be"
        },
        "item": {
          "id": "90c5eba0-5906-4d5b-a353-0b80a4fccee6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e0e2c6a6-a05d-4814-8b6b-d980c1c2fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "76e9fff6-dca1-4338-ba98-c5a8d6fd992d",
        "cursor": {
          "ref": "c82a524f-37ea-4772-8505-9bf266b268db",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "edd19ed6-babd-453d-8168-ca51e399a2e7"
        },
        "item": {
          "id": "76e9fff6-dca1-4338-ba98-c5a8d6fd992d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aa8568e4-ed36-45aa-bd5e-e3892dd5e1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bac6c701-f188-4e58-8542-38168cd989b4",
        "cursor": {
          "ref": "fb6597bd-43b0-40e2-9998-3f3a6bae383c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "541adfe7-eed4-43ce-8100-361e0c34c024"
        },
        "item": {
          "id": "bac6c701-f188-4e58-8542-38168cd989b4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "18ea571e-a877-4b0d-a67a-c032c3fa4d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d74ff4-57aa-4cb2-acc4-5399b84fb348",
        "cursor": {
          "ref": "79c96264-271c-485e-8536-b0cfd56ac6c9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4391973b-98ea-4eb1-8ad3-7e7a4fa741e6"
        },
        "item": {
          "id": "73d74ff4-57aa-4cb2-acc4-5399b84fb348",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9588ccc2-bb62-4108-b662-7d424bf653e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbbfb8f-b16b-4970-83b7-72c7467d90dc",
        "cursor": {
          "ref": "956aef2f-5f68-4d3d-beb2-956aec2add64",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d21fd274-cbd1-4e8e-a436-a8bbff4adaae"
        },
        "item": {
          "id": "cfbbfb8f-b16b-4970-83b7-72c7467d90dc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8e86812-548f-47d6-99b6-bbded9264370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c39e9b-ace4-4bcf-83f1-cbd01a340db9",
        "cursor": {
          "ref": "6785d1f9-101d-4ff1-9ef5-699fdc6d82f6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ad033b7b-fdad-4a61-8365-a9681e5aa069"
        },
        "item": {
          "id": "28c39e9b-ace4-4bcf-83f1-cbd01a340db9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "286c1d78-6fac-4037-bc83-de428ada28f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d37106-e712-42ec-a89f-d155d0cf185f",
        "cursor": {
          "ref": "4c591559-64cb-4cc4-885a-f039392043bc",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2e838b57-9c72-4af0-bd54-9c305da84c75"
        },
        "item": {
          "id": "d0d37106-e712-42ec-a89f-d155d0cf185f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c5486b21-0f60-4bd3-a05d-3426d3c96029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff7083-6eb7-4023-b791-db0023c650e8",
        "cursor": {
          "ref": "5ae684e7-15b6-4934-81b1-62c53d0c9129",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74455713-2aaa-41cd-beb0-1b8efcbba7a1"
        },
        "item": {
          "id": "f7ff7083-6eb7-4023-b791-db0023c650e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44b1bb4e-dd05-445b-bf0d-574e07d599e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f925db-92ae-4590-b315-2a4336471831",
        "cursor": {
          "ref": "62e02c02-5181-46e2-982e-bcf9eb06e816",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2dfc47e1-fd30-489f-b6a3-42adbedab06f"
        },
        "item": {
          "id": "a3f925db-92ae-4590-b315-2a4336471831",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8cb204e0-761b-427d-963b-a69bcbcb3a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40557106-4e01-4ef9-af04-b76032b5742b",
        "cursor": {
          "ref": "ff298379-96f4-4b77-bbfd-bc5712aeeba8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fe052b55-ba82-4bfb-853e-d58614f08eb8"
        },
        "item": {
          "id": "40557106-4e01-4ef9-af04-b76032b5742b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e017e6df-e8d9-40f9-8bc8-f5b6044648fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd08f6a-e6bf-4680-9fd2-b7a5a85a754a",
        "cursor": {
          "ref": "e6166607-8861-4084-b1b2-2c86204ee45c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5e5764b6-ceb0-4f29-9853-fe6ee71b75ea"
        },
        "item": {
          "id": "5bd08f6a-e6bf-4680-9fd2-b7a5a85a754a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "18cd2908-d6f6-4772-8826-41c6f9e12c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8481120c-23c0-4ab1-aac5-f0f47605383d",
        "cursor": {
          "ref": "318071e1-6701-475c-b3d7-4fb76ed7305c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "703a18e9-8504-4132-a21b-2523f9276529"
        },
        "item": {
          "id": "8481120c-23c0-4ab1-aac5-f0f47605383d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61391b08-6a6b-440e-91ac-08b2e46abd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce5bf3-4289-4b68-822a-e654ffd1b1be",
        "cursor": {
          "ref": "1ee6845e-7cbb-4664-a25d-fdebf005e44a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1abee474-6cad-43b9-aac9-b7fbdb05fe9e"
        },
        "item": {
          "id": "03ce5bf3-4289-4b68-822a-e654ffd1b1be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6154ccd9-925b-4202-88e9-88ba875a9676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca4675b-ee9a-4c17-a432-6a08f6facaef",
        "cursor": {
          "ref": "b989cdab-07e7-4a46-9ec0-1691acbbf311",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d4397a94-84bd-4963-a8d6-c54ab6e118af"
        },
        "item": {
          "id": "8ca4675b-ee9a-4c17-a432-6a08f6facaef",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c36da30-f54a-432c-a76b-769b2dddb1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a16b8a-3796-4d64-9af1-f8561fc7727d",
        "cursor": {
          "ref": "8dd721bb-91ad-40eb-9cc5-dbd13a6aa95b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8f59158-c7e7-45a7-81a5-017813b2bee9"
        },
        "item": {
          "id": "f8a16b8a-3796-4d64-9af1-f8561fc7727d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7675aae0-8f78-4189-bc6d-17a97035d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8994a555-fcbf-47a8-a63a-54686a11fffa",
        "cursor": {
          "ref": "8e92bad9-e64f-449d-a053-0e25eeab7c72",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f4a18bb2-1961-44b4-a473-0760011109ec"
        },
        "item": {
          "id": "8994a555-fcbf-47a8-a63a-54686a11fffa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "89b0f30b-b10f-47e0-b32b-3955079059d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8a27ef-bf2d-4d51-97a2-f80d5544e487",
        "cursor": {
          "ref": "fba226c9-9501-4f58-9769-2d038a99399f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e8b3849e-9d0c-41a0-9ef1-e0cf1943df0f"
        },
        "item": {
          "id": "2c8a27ef-bf2d-4d51-97a2-f80d5544e487",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ca58f44-5a81-4d25-b2b5-7f732768aed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422aa56-4875-4347-8814-00c362e9c0fe",
        "cursor": {
          "ref": "9bff4c09-8a90-4104-a21e-22d0c76ffc1b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aede335b-ede7-441f-abbc-f4454d91a8ca"
        },
        "item": {
          "id": "2422aa56-4875-4347-8814-00c362e9c0fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "183de427-3e24-4eea-9c15-9c5d9e41c77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75118fb6-29fe-4e66-93e5-cd7887d70386",
        "cursor": {
          "ref": "2ee19943-8eef-4e79-8eb1-cc87c08f3251",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "15d1bca4-8256-4fcc-addf-2bf89e363026"
        },
        "item": {
          "id": "75118fb6-29fe-4e66-93e5-cd7887d70386",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a511457-6be0-47f6-b5c7-f2415892e6e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 134,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3e1cff17-af25-4ef2-b789-0e8aa5925929",
        "cursor": {
          "ref": "4949d7b1-dec5-4618-aa64-bceedce69682",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71b33aed-782b-4597-95bb-2c2625824259"
        },
        "item": {
          "id": "3e1cff17-af25-4ef2-b789-0e8aa5925929",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "814b95b6-b925-477b-91af-7fd19bf014b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad1db3e-75f8-4b7f-beb4-a50ab4227b9e",
        "cursor": {
          "ref": "26ea8e3c-f62c-4ff5-a420-1fa1e101f16a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a77e1028-dbef-45b9-9ef1-043f97864c52"
        },
        "item": {
          "id": "3ad1db3e-75f8-4b7f-beb4-a50ab4227b9e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "17928536-ccd6-490f-aa30-ab33bd61712f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b404b50a-31d3-4386-95fa-6c7cd5f0d990",
        "cursor": {
          "ref": "e2ec1ec0-274f-4a34-acdd-942a2b658edc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "829d84e9-9c0e-4a95-8924-a600104ea485"
        },
        "item": {
          "id": "b404b50a-31d3-4386-95fa-6c7cd5f0d990",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f033a919-3806-4991-952a-694e6b1f0461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4b9c82-80be-471c-b4f3-a084342f0b7c",
        "cursor": {
          "ref": "82d09985-4955-4687-b6ea-e4aa3071c329",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c1287dc9-6aec-4e6e-90a3-626bab1f03b3"
        },
        "item": {
          "id": "af4b9c82-80be-471c-b4f3-a084342f0b7c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f55dacd-4be3-435e-90bc-6fde84f8fd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ea3e2a-079c-48f3-9c0a-47f806dd704a",
        "cursor": {
          "ref": "562411d1-c8ca-4c2a-afdd-2df6cdcb29ca",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6971e86f-2478-412f-bb64-ae2994771c1d"
        },
        "item": {
          "id": "41ea3e2a-079c-48f3-9c0a-47f806dd704a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb79a119-8367-42f7-a8a1-dd0a747192fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95c789-6b1a-4a38-80e9-64500a6fd462",
        "cursor": {
          "ref": "cae79c32-67a9-43dd-9662-c0576349ed40",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b9ad5aa5-2413-494f-ae92-1593598ae208"
        },
        "item": {
          "id": "ea95c789-6b1a-4a38-80e9-64500a6fd462",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1ef45838-9806-47df-95c7-cd1c65b15538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6508f99a-52d0-4b0c-80e2-3e73ac0622c6",
        "cursor": {
          "ref": "52c2163e-72ea-466d-80c6-dc2e5a62f42c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1632c84a-7786-430f-811f-36525f883106"
        },
        "item": {
          "id": "6508f99a-52d0-4b0c-80e2-3e73ac0622c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fba91f6e-1807-4b53-9573-88d1d9ff80d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46d3289-b5f8-4a65-827e-75bd5f43defc",
        "cursor": {
          "ref": "3a6ae276-3f30-408c-baa1-95601f1ba1b5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8f71c54b-a4a3-44ca-9f6d-3ac7137c9614"
        },
        "item": {
          "id": "a46d3289-b5f8-4a65-827e-75bd5f43defc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "608e81dd-c11a-46f4-a8b6-0d40c89a6726",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "fe8fa05f-d191-4f78-a7a9-090d3434c0fb",
        "cursor": {
          "ref": "2f27065a-0712-46f3-9e7d-a014f2218f98",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72d8accb-ea7e-4b41-9ec8-7d260392f8b5"
        },
        "item": {
          "id": "fe8fa05f-d191-4f78-a7a9-090d3434c0fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "89c864f2-2fe8-4556-ac94-37831ea9c504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f0da7e-d6a1-4b62-bd53-7e7c972e42b2",
        "cursor": {
          "ref": "55a2e252-40f8-4c2b-9f7e-be855f805aef",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "776f1f3a-ae58-4c16-880e-fe3ba1f1d33c"
        },
        "item": {
          "id": "b9f0da7e-d6a1-4b62-bd53-7e7c972e42b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a67dd49d-6498-4893-bac7-0adec22a7dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ba19a8-1ec1-48c9-99fc-3ecc0f906a07",
        "cursor": {
          "ref": "523f94ac-0be1-4c5c-87cc-562ec2549d7e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c41d5a5-ef87-4851-9bb3-8ad19f125990"
        },
        "item": {
          "id": "a1ba19a8-1ec1-48c9-99fc-3ecc0f906a07",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ec83835-58c3-4082-9e69-6ba855d68905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b419a580-51c1-4729-89b8-bcb4984b9eb4",
        "cursor": {
          "ref": "5d87704b-f5da-42ee-a3c4-3dd53c87e004",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62022970-5f92-4959-b953-c9a26fb98314"
        },
        "item": {
          "id": "b419a580-51c1-4729-89b8-bcb4984b9eb4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6d68e7d3-30dd-4c4e-8c06-01da5b56249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9934dc5e-77c4-4f1f-8526-a56e92e794dc",
        "cursor": {
          "ref": "6445dc0c-1c41-46ce-866d-ee1dd37c1efe",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dac8f3a1-732a-472a-ad62-b717b7a3563a"
        },
        "item": {
          "id": "9934dc5e-77c4-4f1f-8526-a56e92e794dc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47c5d054-bf3b-4c05-933a-db9a346c243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c81ba3-fdca-4ffa-a155-79813ca1b9cd",
        "cursor": {
          "ref": "6ef74450-79a9-4c0e-b136-d0ceb2b5c40b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "33a764e7-0e87-43e1-adad-34ddfbd0e887"
        },
        "item": {
          "id": "38c81ba3-fdca-4ffa-a155-79813ca1b9cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b98c07a7-be69-4b44-91bd-40064c7fc7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6668f3c-b8a4-4e4d-8d96-8a673c856ecc",
        "cursor": {
          "ref": "ed7b0632-4c8d-43c6-b77a-0be8938c78cc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "16f3ee98-16c0-43b7-a4aa-2c4738682542"
        },
        "item": {
          "id": "d6668f3c-b8a4-4e4d-8d96-8a673c856ecc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b29e6dfa-fc1e-41ab-9c8f-ce79f22d367e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9bcfef7e-0c67-48b1-84b7-68170d3152b8",
        "cursor": {
          "ref": "3bf05747-3341-442c-9210-3b332e114ef0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a5aeadd8-56bd-4410-8ca1-f3b8c3702f67"
        },
        "item": {
          "id": "9bcfef7e-0c67-48b1-84b7-68170d3152b8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "666c5fb7-9343-4891-b3de-b696bbc4a9a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "8b4c988f-5734-45b1-be0d-ffe54d60cea9",
        "cursor": {
          "ref": "cdf163c0-3007-4dc0-9e2d-0daf313a960c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3898af1b-9e9d-4ac2-a9fc-f3796978721f"
        },
        "item": {
          "id": "8b4c988f-5734-45b1-be0d-ffe54d60cea9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "44d01791-9420-4608-a174-a5c81a45343b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "4b797eed-c058-49f1-886a-83247ef4aea9",
        "cursor": {
          "ref": "1d398e7b-8177-42e3-832c-0c66961b45ff",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e38ec5d3-9085-4217-9e97-98ee065fc5e8"
        },
        "item": {
          "id": "4b797eed-c058-49f1-886a-83247ef4aea9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7babb5b0-c3b8-40e7-803e-bebfb66f3819",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4c6855e1-8f45-4f35-8919-addbdadd7a53",
        "cursor": {
          "ref": "c2d4ba81-d8b2-4de5-805c-5fd7eac22ddd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "763b2bea-1997-4b9e-9afd-f44e96beef61"
        },
        "item": {
          "id": "4c6855e1-8f45-4f35-8919-addbdadd7a53",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a28d2a85-ddd7-49e5-a63e-877f71e9f1e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9115b376-eff8-43af-afea-dd2e66c8cd7e",
        "cursor": {
          "ref": "a97c1c63-c10f-4c7b-ac19-0ea3c4e4d181",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b2e54d44-f492-40b2-b525-3fb995ba8638"
        },
        "item": {
          "id": "9115b376-eff8-43af-afea-dd2e66c8cd7e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d06a6424-d4a9-4f78-ac30-83e6b2fc7ebf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0ddd6765-de9e-4887-89e9-193f5c19400f",
        "cursor": {
          "ref": "c0d1af9d-d121-4ba5-8c43-0a6d45c5098e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d5549dfa-fcce-4658-a997-c3979469b49a"
        },
        "item": {
          "id": "0ddd6765-de9e-4887-89e9-193f5c19400f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15857f4d-3ff1-4275-a086-86cee87f5a23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cc9d2b-14ee-461a-b01c-a44ed5ae7265",
        "cursor": {
          "ref": "27b01e90-b3ef-4da8-9acc-095ecba72b68",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "218ad600-1f84-4963-9c20-0c7d264ed8e4"
        },
        "item": {
          "id": "c5cc9d2b-14ee-461a-b01c-a44ed5ae7265",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3dc74619-5744-4cc5-856d-b1af2fa61bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e73c30b-a95e-42b5-bf1a-8d79f80f92b3",
        "cursor": {
          "ref": "14918b42-0b6d-4d54-81c6-e8206e7bf6cf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8bb3bf79-bb92-4e5f-88bc-cba44fdafe45"
        },
        "item": {
          "id": "0e73c30b-a95e-42b5-bf1a-8d79f80f92b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd4ccd77-37bc-40f2-9b47-dca78bb4dacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47894032-17a3-4bd6-88e2-45092c86dfef",
        "cursor": {
          "ref": "3d940994-b07b-4ecf-8409-c6eb0f10cf71",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a96c2d5d-0e3e-46b4-b861-de2a48ab4b44"
        },
        "item": {
          "id": "47894032-17a3-4bd6-88e2-45092c86dfef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "810964cc-0bcb-43b9-881a-13baf4b023f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a1aeea-fd58-46fa-9d0d-fae22208052a",
        "cursor": {
          "ref": "687b5f14-709d-4ff8-9e66-1b3e90bb8f2d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9a224d0e-dccb-421f-a4fe-1c0bb5cb7f29"
        },
        "item": {
          "id": "d4a1aeea-fd58-46fa-9d0d-fae22208052a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "72878882-66c3-462d-8be8-5e330a11b3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921cc379-aee8-45c3-8965-d1f19f56e69e",
        "cursor": {
          "ref": "be2bcf33-dea3-4122-a3bf-9bc414043b9c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e13b9d27-5875-4cdc-83b7-984e905d59e4"
        },
        "item": {
          "id": "921cc379-aee8-45c3-8965-d1f19f56e69e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "352b4a71-de9a-4bea-8a8f-480a574db60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f826b367-647a-4871-9efd-e790910f91c1",
        "cursor": {
          "ref": "05867735-38d9-462b-aef2-99771fb7f636",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "43631db1-4a7f-41a1-b908-9f38d87e5b0b"
        },
        "item": {
          "id": "f826b367-647a-4871-9efd-e790910f91c1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ae15b463-fddf-4aed-b3ee-781e6d8ff079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2021054c-1336-4ec7-bdce-5623d52b5848",
        "cursor": {
          "ref": "5c357a13-9fcf-4e9d-a6f7-acf9ed25a537",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55beebf8-0023-4b6c-9743-d3141c963791"
        },
        "item": {
          "id": "2021054c-1336-4ec7-bdce-5623d52b5848",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fdd0c29b-a7d5-429a-bcdf-d8529d667378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0495c96-a9b9-402a-bbb6-d2622bfdf159",
        "cursor": {
          "ref": "bc891db6-5f45-4288-a83c-3df43002b0ae",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3de95c3-a50b-411e-91a3-726ccb805408"
        },
        "item": {
          "id": "a0495c96-a9b9-402a-bbb6-d2622bfdf159",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0c1d6797-6ab2-434d-925f-014cd03d7eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba482e-ed30-481c-b756-3d9889be061c",
        "cursor": {
          "ref": "b6ad1919-40e9-4296-83c3-1625ffc30c3f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cf9bc17c-a183-4870-954a-78eccc8f633b"
        },
        "item": {
          "id": "ecba482e-ed30-481c-b756-3d9889be061c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "abcbb66f-fb19-490f-bd86-1eb38f2bc1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8237226e-27a4-4023-af04-cf343d8cc54d",
        "cursor": {
          "ref": "5419a7f5-fecf-459f-a1a1-6fd20a5e7a1f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c22f9adf-81b9-4b72-93ab-9281b68dd517"
        },
        "item": {
          "id": "8237226e-27a4-4023-af04-cf343d8cc54d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0a565d55-d3ae-414c-a23e-76dfbdc8eb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678fb95a-2983-4a81-ba7e-c36eb2041170",
        "cursor": {
          "ref": "6c969841-eed1-4222-8994-21eff64dfa31",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "be7576b2-4a02-4a08-96da-a6dc238e77fb"
        },
        "item": {
          "id": "678fb95a-2983-4a81-ba7e-c36eb2041170",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a07e0bbe-a290-4d65-9bcb-4d5b4c7b0952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e6af0b-e3bc-4c51-8c11-5a68d9ca0984",
        "cursor": {
          "ref": "978631d5-05fd-48ad-8b0c-c4daf7f012d1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a2a6e97a-220e-4da1-8205-62a3bf056b2d"
        },
        "item": {
          "id": "c8e6af0b-e3bc-4c51-8c11-5a68d9ca0984",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0fb75cef-a193-48dd-ab80-0a2a6d0c97e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e401e50b-5405-4840-9d9f-f9dbc81f0485",
        "cursor": {
          "ref": "937ed402-f640-4248-b61f-fd5301694da0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "651d56bc-4efa-4bab-b4f0-6fd3569958a0"
        },
        "item": {
          "id": "e401e50b-5405-4840-9d9f-f9dbc81f0485",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8f8d3bcf-0859-447d-96e0-e39d55add44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d496e-aba0-4735-a21d-f28f8373e327",
        "cursor": {
          "ref": "531cb9af-5a26-4716-99d6-60df296aad92",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18617713-bf5f-47a9-90f3-ae86834b055b"
        },
        "item": {
          "id": "c13d496e-aba0-4735-a21d-f28f8373e327",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f0f994e1-6586-4d8c-8e42-357e5efff7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c71d7ec-834f-4144-a9b9-9b666469b616",
        "cursor": {
          "ref": "e44d73ff-8cc1-4484-956b-b624365788ff",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "08381c30-af64-46bf-aa93-3c6cbb7b829c"
        },
        "item": {
          "id": "1c71d7ec-834f-4144-a9b9-9b666469b616",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "287a2285-cdc5-47ee-9754-dcfe0c7f30bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db029d-8dc5-4111-bb03-01fe7a9d3cb0",
        "cursor": {
          "ref": "5b28e01c-a77c-4eba-bb12-7f65ec18b542",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "35f29f6e-cb25-4aa6-8ec6-aeecbe3fdac4"
        },
        "item": {
          "id": "d0db029d-8dc5-4111-bb03-01fe7a9d3cb0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "122c090a-23e5-41c3-a83b-a63907050f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9a1cba-ec22-4a8e-8f33-9700a2c7ec42",
        "cursor": {
          "ref": "29110f78-bc34-4dc0-82ed-d8fcaab86801",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "feb75a7e-e550-41d1-95f1-c9e3218ddd6c"
        },
        "item": {
          "id": "bc9a1cba-ec22-4a8e-8f33-9700a2c7ec42",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1933e9d9-5490-443a-bd05-240b47073803",
          "status": "OK",
          "code": 200,
          "responseTime": 375,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "39ddb829-3607-483c-a6f6-8bc1691ddc06",
        "cursor": {
          "ref": "e6213cf7-3a71-4207-81f0-ae45bed24c34",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "694c41e6-e704-4b37-b64b-8fc80b63c9ab"
        },
        "item": {
          "id": "39ddb829-3607-483c-a6f6-8bc1691ddc06",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "597ad5b4-786a-4344-a93a-ad6cab6797ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01440a2-f9f2-484b-9ee1-2a89534d8acf",
        "cursor": {
          "ref": "1efcf6c4-f680-4af0-9882-6a42f5e16ada",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61cbbdd9-5b27-4edc-ab86-2427b8ddf7fa"
        },
        "item": {
          "id": "b01440a2-f9f2-484b-9ee1-2a89534d8acf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "461babb8-1105-4587-b193-a130d81d315a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd8c38-19e5-4360-bc74-4ecb9b2c68c7",
        "cursor": {
          "ref": "e7839727-1fef-4dd7-af2b-eccbe151b1d3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fd0abfee-a41e-4ebb-aedc-4f1e9ff6dd19"
        },
        "item": {
          "id": "84bd8c38-19e5-4360-bc74-4ecb9b2c68c7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f18d76db-74b7-4dfb-a92c-7c1fe1a2983f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad263a81-4e63-4a8e-bd81-c77ae4dddfed",
        "cursor": {
          "ref": "876c825e-dd00-40f7-b687-0c2192992a51",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e11a1047-c7eb-444c-8308-f220229c8471"
        },
        "item": {
          "id": "ad263a81-4e63-4a8e-bd81-c77ae4dddfed",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d799968f-64de-4701-adba-d36f31e4154e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40297f9-fad1-402c-9b8c-baa27ca04a20",
        "cursor": {
          "ref": "d7090978-8ea9-4f4c-9f3b-df802965250b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61b989c6-c5ec-465e-8fca-0835b4c6eb1d"
        },
        "item": {
          "id": "c40297f9-fad1-402c-9b8c-baa27ca04a20",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "da0d9a89-9b4e-4328-a824-5babc9278942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe8822-d600-421e-aa21-1d2925ce46c5",
        "cursor": {
          "ref": "d8b58289-88bb-4aa2-8b7d-aff220be7e7e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f9663d8e-7607-4656-912a-25210e13a883"
        },
        "item": {
          "id": "25fe8822-d600-421e-aa21-1d2925ce46c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0c5df167-7a88-498c-995b-c8f546d57017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead2597d-44b3-4f0d-a112-5cec5c63b9fb",
        "cursor": {
          "ref": "c0d3d5d6-4875-4881-8436-b75de8427da5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dd939182-f381-4ad9-a9d1-1ca889e69471"
        },
        "item": {
          "id": "ead2597d-44b3-4f0d-a112-5cec5c63b9fb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eba69cb0-0fcd-4114-82f3-764c1da841bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37931dd0-c9e9-4000-a607-138857b83a8e",
        "cursor": {
          "ref": "280abe5f-a5f8-46df-9fa8-9139ec742a38",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a63b3b0-35f6-4373-bb80-371dc1ff0632"
        },
        "item": {
          "id": "37931dd0-c9e9-4000-a607-138857b83a8e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ff448c3d-62ea-47f2-8a07-33e9c0c8fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b6e53-eb99-4d8e-8f1a-52a1f1ef7a3e",
        "cursor": {
          "ref": "f3ef824c-21a6-4289-92c5-bc52f667c589",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "90f068b5-a314-4313-88d1-1ff7de6c3cd9"
        },
        "item": {
          "id": "867b6e53-eb99-4d8e-8f1a-52a1f1ef7a3e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba8ff8db-0732-49ba-804a-92ff4ce470b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9eb574-f890-4c65-9866-1f11aebc4e39",
        "cursor": {
          "ref": "86155e7d-93b2-4ff7-8621-f2143dbb37c5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "14508065-8bf6-4d45-b5a6-c84088cf35f0"
        },
        "item": {
          "id": "ff9eb574-f890-4c65-9866-1f11aebc4e39",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4fd4bba3-bb7d-4d62-a00d-45dc427f33e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c986f7-0507-4e8e-9005-f608e389461f",
        "cursor": {
          "ref": "f5b7342c-8808-4074-9f75-eeb376bd2a53",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1c625cc7-27e2-4141-8d8e-c95eb2150689"
        },
        "item": {
          "id": "35c986f7-0507-4e8e-9005-f608e389461f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d0feeb56-19d8-4f35-b2a9-0824539886e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade645f-6cb2-49be-8c54-93fcc32cdcc6",
        "cursor": {
          "ref": "8c0054f5-8abb-4bbe-a64a-ee0f44e054b5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a006244-89da-476d-8b85-179b9c36a78d"
        },
        "item": {
          "id": "4ade645f-6cb2-49be-8c54-93fcc32cdcc6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d9052cf0-f714-4fce-83b2-5928ab3fca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2dd704-17ce-4976-bf6c-3dd81f2f6160",
        "cursor": {
          "ref": "7a0cf9c1-52a6-4212-9f49-a26518280f24",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1dc78a40-7194-4ac6-9db2-319b5c62c044"
        },
        "item": {
          "id": "8e2dd704-17ce-4976-bf6c-3dd81f2f6160",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab79234e-a14d-4c3f-bb3a-40864141aa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aede0f-87df-456d-b2ae-bb014bbe5dbd",
        "cursor": {
          "ref": "7ee351c5-968a-41ca-a59a-8610c0ca7118",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f11b101e-47f5-455a-bddf-b6857040afeb"
        },
        "item": {
          "id": "27aede0f-87df-456d-b2ae-bb014bbe5dbd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a532dcc0-0f87-434e-a3d0-7e32fbc8922c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8904fd9-42ca-47ac-a901-e4ab97d45c0d",
        "cursor": {
          "ref": "297d42c7-9a11-4616-bcb6-7867c0fbd9bf",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "74078730-2031-4553-8c4a-d5d355c91783"
        },
        "item": {
          "id": "f8904fd9-42ca-47ac-a901-e4ab97d45c0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d303d5ee-4311-4e1d-b157-dae2d8087f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fc86cc-d5f6-4795-a25f-11b5f7ba6cbe",
        "cursor": {
          "ref": "4de32df0-39a8-495d-9bec-f2c1af909d1e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "41110d07-6840-49cc-9517-cf779baed024"
        },
        "item": {
          "id": "c6fc86cc-d5f6-4795-a25f-11b5f7ba6cbe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "522e21c2-cc92-4444-95d5-0684b68ef3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f73725-f5f1-4935-a05b-a357a86a1788",
        "cursor": {
          "ref": "7a96f502-f342-49d1-b437-6553e7418dfa",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b1435952-f1d7-453c-9389-0bc205884a13"
        },
        "item": {
          "id": "86f73725-f5f1-4935-a05b-a357a86a1788",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d0130fd-214b-4799-aec1-6f5fddff0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256cca93-2940-4f9f-8fa5-34f95966f1f8",
        "cursor": {
          "ref": "8b870e36-3d36-4641-b537-c9970b3ddc3f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "588426f3-4427-4333-bfd1-23ed6d4e1ba8"
        },
        "item": {
          "id": "256cca93-2940-4f9f-8fa5-34f95966f1f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66753d38-5a01-4a4a-9cef-23eb17047be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599c36d4-b622-4131-b131-33a19abe7552",
        "cursor": {
          "ref": "bb804062-1d78-4fc5-8cc0-1b47381b8a31",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6dc64a61-c995-41d2-ad82-01dca452e3fe"
        },
        "item": {
          "id": "599c36d4-b622-4131-b131-33a19abe7552",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6da61144-fec4-432b-84e1-7e2c70af5d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd3b747-19e6-4105-803b-61ac61039ee9",
        "cursor": {
          "ref": "844b4e72-07c4-40d3-b071-7e184f09a327",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ce5af5b-aa9e-4f3e-a14d-d6476408e499"
        },
        "item": {
          "id": "ffd3b747-19e6-4105-803b-61ac61039ee9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "387ef3f6-a823-4fc6-9ad3-e671c58d1d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d23e86-0c3f-44be-8a7f-d2f775a21aba",
        "cursor": {
          "ref": "5725a4d1-6c72-40fb-8ff1-4f0aecfdc4a7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5bb18977-3637-446f-8836-4726267e87b4"
        },
        "item": {
          "id": "47d23e86-0c3f-44be-8a7f-d2f775a21aba",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2bcebd05-e006-481b-b02e-717a583ada6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3d425a-17f5-4ecd-8293-546e465c3bc2",
        "cursor": {
          "ref": "4bc42d18-16ee-4d97-ba19-8bd6fcd9a604",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dfa2e09d-3447-4056-a4a6-59e8c29f17c3"
        },
        "item": {
          "id": "cf3d425a-17f5-4ecd-8293-546e465c3bc2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "30ae2e6e-79d3-44bd-8e22-eef00eeac116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1b7005-9023-4c6f-b436-676c1d43db58",
        "cursor": {
          "ref": "7571b77c-e48f-4409-b416-7562c43f1ad0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "27b3072e-6ead-4b7c-8fba-057ba183e69a"
        },
        "item": {
          "id": "6b1b7005-9023-4c6f-b436-676c1d43db58",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f16e6970-81ec-46a4-9062-89713f3ee6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877f6a49-8131-44af-94ad-375c72fe6031",
        "cursor": {
          "ref": "6656ef63-cb97-4d34-907d-cf862a04d018",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "454d5999-36eb-4a53-b92d-4387c27bb75d"
        },
        "item": {
          "id": "877f6a49-8131-44af-94ad-375c72fe6031",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20d0e497-af1f-4e99-9c9f-d46e8e4f19e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131f9649-618e-4f74-8387-1329b6ae9eaa",
        "cursor": {
          "ref": "8e80de01-5980-4665-8887-225ecf93fcbd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6cfc163d-e32f-4510-95ec-1df3bd69e09a"
        },
        "item": {
          "id": "131f9649-618e-4f74-8387-1329b6ae9eaa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "78c984d4-7999-42b6-bc08-ca8e7410d592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de52589d-8e70-427b-9c79-0de3f90c1af7",
        "cursor": {
          "ref": "e417cf11-6377-4079-8aba-7d0810f0af66",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b1160e2-9818-4eae-94e6-e4f3d68d1c04"
        },
        "item": {
          "id": "de52589d-8e70-427b-9c79-0de3f90c1af7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6dea53c4-fe1c-4cad-af61-d0b3f30f65cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e9e5c-9095-4085-b63e-da0aa0668e33",
        "cursor": {
          "ref": "6232e6eb-b206-462d-9c00-b326971988da",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e2c4fa3f-8078-475f-bfe4-96cd257393bb"
        },
        "item": {
          "id": "dd2e9e5c-9095-4085-b63e-da0aa0668e33",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c7006d82-4216-4383-a248-ad2ad64c60c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e379d1af-69be-41df-99ae-c0f2c9bdda31",
        "cursor": {
          "ref": "04de47ca-db5e-4b30-a327-dafe475ebe0b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4ed8d44b-74da-4bc5-aec1-df0676f21079"
        },
        "item": {
          "id": "e379d1af-69be-41df-99ae-c0f2c9bdda31",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c0fcbd36-28a4-468a-9c86-a8c8d189bfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46531e3f-d6b2-4d3d-8431-140fc1e905ad",
        "cursor": {
          "ref": "841555be-537b-4760-b84b-c01f5e8c4f08",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "db6116d8-0b19-4644-8bd5-0ed21d867834"
        },
        "item": {
          "id": "46531e3f-d6b2-4d3d-8431-140fc1e905ad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "efd4ea4f-7856-4b87-a5a2-f4a4a5ccf68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166e0144-5903-4736-b49b-f049d128bfbf",
        "cursor": {
          "ref": "01060cd7-26bc-4dad-92df-0970c534a828",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5da03996-43b6-4bfa-aa79-357497f9a9ea"
        },
        "item": {
          "id": "166e0144-5903-4736-b49b-f049d128bfbf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "58be528a-7243-4796-93a0-52456ed2f25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2407de-e3c8-4ede-bbf4-cecaf5169b11",
        "cursor": {
          "ref": "bfd60d06-4e9b-4e62-9dad-b9ca03300da7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "83f70fd0-6de0-4a33-9cb2-b25c5e83b7e7"
        },
        "item": {
          "id": "1b2407de-e3c8-4ede-bbf4-cecaf5169b11",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "91f18172-5423-4ffc-b0da-3eb047a2b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a2db51-c303-4d83-a6b8-28e48d744914",
        "cursor": {
          "ref": "2cd90674-c85b-478a-8569-84d7a33c60a6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35e3c814-c283-4017-aed8-e58a3b26b63e"
        },
        "item": {
          "id": "37a2db51-c303-4d83-a6b8-28e48d744914",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e29b531-a972-4519-b047-b557339c82de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79977049-5273-41bb-a72d-275833b66db9",
        "cursor": {
          "ref": "d625a982-7374-4a36-898f-99a7a3a4f571",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1f223580-6593-4a87-9f52-cead908aab12"
        },
        "item": {
          "id": "79977049-5273-41bb-a72d-275833b66db9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "13fb22ab-da66-4927-89db-d5a9ac270392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805754a8-207f-4b1b-91b4-d8d16b147769",
        "cursor": {
          "ref": "4718f7b2-5d37-4356-b7ee-a115af24d685",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1680fe0-00da-425b-aa38-6a77de79e33e"
        },
        "item": {
          "id": "805754a8-207f-4b1b-91b4-d8d16b147769",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6290c5dd-3307-47ad-8848-0a86333ba6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b63d8-6e7e-4a63-aa56-74d56ee2aa34",
        "cursor": {
          "ref": "af3ab730-0521-4bd7-9d72-f7dcfde03545",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "93ae446e-7798-427e-8b1f-957496b0c304"
        },
        "item": {
          "id": "4c9b63d8-6e7e-4a63-aa56-74d56ee2aa34",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0cb81002-1e34-497a-8785-33223ac08e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f083e3-9254-43bc-854e-153c75f8500b",
        "cursor": {
          "ref": "5b73d4f4-54aa-4fc2-82ba-c20ad1f37695",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2c023a9e-12e7-4bdb-aba9-9495462ba637"
        },
        "item": {
          "id": "e7f083e3-9254-43bc-854e-153c75f8500b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "029d5c7b-df5f-4bf0-82a2-d8e544169409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489d2f3-407e-4978-8f65-f9c4751430c8",
        "cursor": {
          "ref": "1067b788-0b11-4e7c-adca-8c62af3014f6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "821c3256-84da-4c27-b61b-10a208377183"
        },
        "item": {
          "id": "e489d2f3-407e-4978-8f65-f9c4751430c8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "73799fed-f864-467d-abf7-75b274207e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce788040-8db0-4c87-bb21-3d7d175bd575",
        "cursor": {
          "ref": "b403c735-a30b-4881-9e3e-1fc922a1f1bf",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "17d88ecf-fd94-4ffa-aeb8-c24b2affa512"
        },
        "item": {
          "id": "ce788040-8db0-4c87-bb21-3d7d175bd575",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "98ba48d5-a603-4f79-a978-1c6983c27814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed13d8a-638f-48f9-80d7-3dcb63089489",
        "cursor": {
          "ref": "2b18405b-e184-45c3-9e98-e9d51a75991c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a1d2e0f-7516-4ffe-8787-23179f30b9c1"
        },
        "item": {
          "id": "7ed13d8a-638f-48f9-80d7-3dcb63089489",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "71ca6a3c-884e-48f6-a95e-acd5a390a360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51336743-6c84-4be2-a67f-d9bd986b12ac",
        "cursor": {
          "ref": "ec02829f-e230-4466-9bf1-3fa12fdbeb75",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f91aa467-e712-48d3-b0a0-e94f5d346829"
        },
        "item": {
          "id": "51336743-6c84-4be2-a67f-d9bd986b12ac",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "363ab3c5-341c-4f41-a59d-ab83b1b815bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fabcab8-dce6-42f5-a5ea-5d19105f263a",
        "cursor": {
          "ref": "8c511e24-ac0b-41f2-a473-037868fdeaf1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "56b75bfe-cd22-4d13-9fc6-8d9b184cb883"
        },
        "item": {
          "id": "5fabcab8-dce6-42f5-a5ea-5d19105f263a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60eba3bd-185b-4ce0-a127-a8ee3ff8778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b2763-5f77-439f-b18f-b696e745030a",
        "cursor": {
          "ref": "8e1c81f4-1cb5-4467-b3c4-fb670ecde7b4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b3c0bbe1-b4ad-4122-a987-ee4f9d7b8df5"
        },
        "item": {
          "id": "2b7b2763-5f77-439f-b18f-b696e745030a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b688eeff-5468-40c4-97ec-804a33631e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3529bfb9-c15c-4d6a-9711-c6c8854f94c4",
        "cursor": {
          "ref": "18cb9ff7-6c61-4038-accd-c0b8148e8d52",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5d50a022-c17a-4dfe-b857-5f0558781e24"
        },
        "item": {
          "id": "3529bfb9-c15c-4d6a-9711-c6c8854f94c4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5ff46302-eb4c-4dc0-961b-c6a5379f9c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca2927c-2804-417c-a1d2-98ee5089f422",
        "cursor": {
          "ref": "4ac758f8-39f9-48e5-bb63-7af5374c4b2a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f13311bf-d7ed-4b13-bbcc-6ecf90ae231d"
        },
        "item": {
          "id": "bca2927c-2804-417c-a1d2-98ee5089f422",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2f8e05a-9555-4558-8672-4a987dab597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2081751a-e985-4943-81c1-cb3cfb59fbc6",
        "cursor": {
          "ref": "5150da18-168e-4363-a875-20a54397f0b4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "52df47b0-3f37-4bb5-b88f-9fd169438673"
        },
        "item": {
          "id": "2081751a-e985-4943-81c1-cb3cfb59fbc6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "43c09d89-5e90-4874-83b6-4bb21534b5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8841690b-9cb6-42c3-b36b-c5b0d724cfbc",
        "cursor": {
          "ref": "d08117ff-8e95-4af9-9370-46428f63a959",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0d9ec1c0-9d10-475b-8a71-d0eaed73eeb3"
        },
        "item": {
          "id": "8841690b-9cb6-42c3-b36b-c5b0d724cfbc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "35bf9d80-23fd-44dc-b7d1-2c3bc2bea461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8399de8d-d71b-4bd2-9d06-0a4a760660a9",
        "cursor": {
          "ref": "1c53d7e5-18aa-4b3a-b742-7deeeea301b2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dfdb30ac-47b5-4821-9133-9455f57cd930"
        },
        "item": {
          "id": "8399de8d-d71b-4bd2-9d06-0a4a760660a9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b81e9f19-062d-4db9-9f8c-1057f6601eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10df69a-e849-4dee-ae2a-b9884fc8cbc0",
        "cursor": {
          "ref": "d0439533-1911-401e-94e1-ea6b93762714",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b53734b8-af52-4797-a216-dc56b94788f5"
        },
        "item": {
          "id": "d10df69a-e849-4dee-ae2a-b9884fc8cbc0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7c5b0da-d22e-449e-9ed1-b68d92bdcc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87cc84e-543c-43e9-8491-f49c99602ff5",
        "cursor": {
          "ref": "d5c08468-68da-4737-8a17-ec90ccc5b4cf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0047ef07-b616-4b44-ac04-04e0c8c255f7"
        },
        "item": {
          "id": "b87cc84e-543c-43e9-8491-f49c99602ff5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "052e2fdb-0d18-4892-9873-3805766580f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e039c9bd-34ae-4e35-afe2-6ded42fa6348",
        "cursor": {
          "ref": "4feb9430-78c0-45c7-9047-73794978029a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3480ce34-d583-4345-b5ed-63dada29660d"
        },
        "item": {
          "id": "e039c9bd-34ae-4e35-afe2-6ded42fa6348",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78608040-ca6a-4e9a-8bf9-243b42882efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b191aca4-aafc-4299-a244-521185149de6",
        "cursor": {
          "ref": "268975fc-738f-4bf8-9e2d-3005ab4b0d0e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dcaaa6dd-4224-467e-9d39-afff713cdc6d"
        },
        "item": {
          "id": "b191aca4-aafc-4299-a244-521185149de6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fbf85bcc-e7dd-4bd1-b309-3aed3bd40da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e9825-e1b3-45b0-b769-805f5e34c7a5",
        "cursor": {
          "ref": "9af92098-a9ee-404e-a343-b5ffc0e53a10",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cf946927-2674-49c4-b138-fe4f0b46ae50"
        },
        "item": {
          "id": "671e9825-e1b3-45b0-b769-805f5e34c7a5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4e903c72-93b5-48b1-aa63-655996ce022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa64229-e9b8-48f7-92d3-a8947300d788",
        "cursor": {
          "ref": "7d16e713-7a94-4850-9839-b23858665369",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "63c1009b-46e8-4eb0-8fa3-ebea982ad166"
        },
        "item": {
          "id": "6fa64229-e9b8-48f7-92d3-a8947300d788",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d7582c89-adb5-4973-9ed4-042a5f4950fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b818f-1109-4d08-aeb6-def2a6352357",
        "cursor": {
          "ref": "3a0088ac-d699-40eb-8f90-2f77c280ca6d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aff33fef-2103-410f-a203-32e20412a436"
        },
        "item": {
          "id": "ad2b818f-1109-4d08-aeb6-def2a6352357",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a1e7aef7-7894-4e09-a9bf-36ea82246d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f225dd26-8edd-4c44-9218-7703e7cef7bf",
        "cursor": {
          "ref": "97e8b49f-93c6-4f98-8b15-22b46e82c3d9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bcd787e7-57a4-4689-989a-e0e675f1b9c5"
        },
        "item": {
          "id": "f225dd26-8edd-4c44-9218-7703e7cef7bf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "70f8cf2b-198f-4317-8fac-7b5ad0c22a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ce5089-d315-46a4-9752-d1260fc40258",
        "cursor": {
          "ref": "db5c841d-9540-4e32-863c-879da9382880",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b6d1e67c-d47e-4ea0-836e-6d003481972e"
        },
        "item": {
          "id": "e9ce5089-d315-46a4-9752-d1260fc40258",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "778705b6-6458-4cf8-a127-85d68996b7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71514ba-daa1-4c44-acc8-ec8e67c93d1d",
        "cursor": {
          "ref": "6c88cb10-a2de-4926-a139-03a9a68884c4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9820ebf8-9b9c-4bec-9778-1b6399abf624"
        },
        "item": {
          "id": "a71514ba-daa1-4c44-acc8-ec8e67c93d1d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7a468d31-5161-4092-9112-1e0148c2e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e6f0b9-2bc2-446c-8bdb-ea8d7b00a1de",
        "cursor": {
          "ref": "8821bbcd-4683-4795-a0cc-1cbbe6e7ce5c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9bbdd7f2-b767-4d35-8992-57fcc8729c46"
        },
        "item": {
          "id": "e3e6f0b9-2bc2-446c-8bdb-ea8d7b00a1de",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "736ad2b3-1450-4aff-ac06-939043f4ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d78839e-1206-4965-8f9d-ee86091498ce",
        "cursor": {
          "ref": "d60d1cd6-c7b0-453d-8a90-f1a46eab5439",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "266e951f-afa8-4eed-9e8c-bbdcf4329661"
        },
        "item": {
          "id": "7d78839e-1206-4965-8f9d-ee86091498ce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "51061aad-a441-46cb-8e9b-5221361a6915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c5ce1-d2bf-4b04-9701-64aa26293e71",
        "cursor": {
          "ref": "1cbbacb3-dafb-47c3-8a5d-a9eadec82b4a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b5a0f05-89c7-4245-a40c-49fe458d4f9f"
        },
        "item": {
          "id": "9c0c5ce1-d2bf-4b04-9701-64aa26293e71",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b65148be-d6ad-4e24-88e0-5919713aabda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f81b8-f4d7-4687-b71c-f804158c5b90",
        "cursor": {
          "ref": "6226a82b-1d90-44e0-a52c-f70330a4ed72",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0b6e9551-2dd2-49e2-9831-84512814078b"
        },
        "item": {
          "id": "ab8f81b8-f4d7-4687-b71c-f804158c5b90",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d9cd7805-0103-41aa-b6ca-bd87e8be0095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803b676a-4efb-4a58-9e3e-23e4e77c5512",
        "cursor": {
          "ref": "9a182c75-0ac7-4af7-a850-46f3fd695b8b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6988cd30-ff1e-42a3-a801-2a601fb68c10"
        },
        "item": {
          "id": "803b676a-4efb-4a58-9e3e-23e4e77c5512",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "12dcf9c2-1342-4a32-912d-78c261b49710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096315d2-5456-419c-a263-1995bf97fe83",
        "cursor": {
          "ref": "b5ff6eac-6a1d-466e-b92c-06b8c605b420",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9e7cb838-c915-4d9b-add7-b0aecb9457a6"
        },
        "item": {
          "id": "096315d2-5456-419c-a263-1995bf97fe83",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5c1e1db4-f0c5-4687-990c-8959f227cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddc929-984c-4857-b0bc-d1a3276e4f4f",
        "cursor": {
          "ref": "4a68722a-9776-4f93-b1dd-66190b76b5d2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "580451c2-43fb-4ede-8ad3-fcaabe9c9126"
        },
        "item": {
          "id": "abddc929-984c-4857-b0bc-d1a3276e4f4f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d25395e0-77ad-4d74-9554-25ce0568360c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70692f7a-be65-4671-b21e-8bb0673c6139",
        "cursor": {
          "ref": "775e3fe2-edf3-41a5-819e-d151d3fa459f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fb4b4f06-500b-48f4-b9b6-027ab7b14f61"
        },
        "item": {
          "id": "70692f7a-be65-4671-b21e-8bb0673c6139",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3d656895-74ae-4281-b9fb-98cfbc998935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f15659-ea37-44a3-89de-22aa00dc9099",
        "cursor": {
          "ref": "12a5a290-bf98-4a38-91b7-0e1186b8b984",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b6fe64ca-ae6e-49b2-b5c0-38d56336ccf6"
        },
        "item": {
          "id": "11f15659-ea37-44a3-89de-22aa00dc9099",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "77b3b15a-2fae-418b-9964-f660e48edfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c682d10-9f9b-495a-b403-ab310c7baba1",
        "cursor": {
          "ref": "75ace3a0-236c-477e-b762-87afa4380a6b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "abeded05-37a7-4045-92df-5f96332814cd"
        },
        "item": {
          "id": "3c682d10-9f9b-495a-b403-ab310c7baba1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "018a330a-106e-4919-9b38-ce7d65525ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eab773-416c-4bca-afcc-b413c949c357",
        "cursor": {
          "ref": "fb9999c0-e8f4-464c-8492-38167051a83c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "54239a8a-31b3-490e-bd38-faf6a3b4b8ca"
        },
        "item": {
          "id": "02eab773-416c-4bca-afcc-b413c949c357",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "72467acb-9901-42b9-9e6e-3da87c6604c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0578fc32-85e0-448e-b26e-204cc696adc1",
        "cursor": {
          "ref": "ac618d27-3203-4415-8cf8-cd626bf4eb86",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e7ab11f-23eb-43e8-b807-f27b48f27632"
        },
        "item": {
          "id": "0578fc32-85e0-448e-b26e-204cc696adc1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1faf4948-8b56-404a-9459-69a73ac915bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6044d7f5-257f-44bb-aea4-ceb0e455ff78",
        "cursor": {
          "ref": "cc11e1bf-f44c-4953-bf96-b400537f944f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2614bdfd-9e2a-4fad-a4b6-6ce0cdf41405"
        },
        "item": {
          "id": "6044d7f5-257f-44bb-aea4-ceb0e455ff78",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "974264fe-0aa3-4a11-8bb7-1d8abdc0523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dde065e-d469-422c-8e29-5cec39089ab1",
        "cursor": {
          "ref": "a1a8e5fe-c220-4169-a4b8-c53b47d76d94",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1edca1e4-e219-4bdb-8838-e2b101744801"
        },
        "item": {
          "id": "7dde065e-d469-422c-8e29-5cec39089ab1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b11eed4c-5a55-4115-8e14-6b25bbbd3285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5f5436-b4f6-4360-a2ab-3f422d0f6307",
        "cursor": {
          "ref": "8a186031-1da9-4805-addc-94c2d92c0d6a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4de120f6-1c08-444d-9300-1ae0c2ac54b8"
        },
        "item": {
          "id": "be5f5436-b4f6-4360-a2ab-3f422d0f6307",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef891735-416d-4d68-b697-69ac8d9b7ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7997dfd3-af99-40d0-9ef8-9a362019c33d",
        "cursor": {
          "ref": "c547a099-d179-4f52-a0e8-bafc9356a12a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ca9dcba0-9a6f-4c32-b9e6-170a7ff992d8"
        },
        "item": {
          "id": "7997dfd3-af99-40d0-9ef8-9a362019c33d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6d7f4684-c0a1-44ec-8a30-a33ceedd5de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae58bd2-b193-447f-be9d-9488b5fa35ed",
        "cursor": {
          "ref": "c42a0e2d-e256-4180-bfe9-010a1016cbb6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64a72474-9d5c-4355-9049-6e4e482a8001"
        },
        "item": {
          "id": "1ae58bd2-b193-447f-be9d-9488b5fa35ed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "85a4d195-6ea2-4102-9be6-3c7e3b9eccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0609f4b-bab3-4962-afc5-284bb843bd65",
        "cursor": {
          "ref": "997b9cb8-9a7a-431f-8af9-b69c4dffb363",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "241621bb-8ad0-4f97-97d0-44b1bf8050d6"
        },
        "item": {
          "id": "b0609f4b-bab3-4962-afc5-284bb843bd65",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "17acf943-ddf6-4c2b-ba16-12a4a8ca47dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba0eb67-e727-446e-8279-fe66f834a81b",
        "cursor": {
          "ref": "325cc83a-318f-4d74-91dd-93cb3bd10823",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eae269a5-0a74-47e4-8f61-8e8807795054"
        },
        "item": {
          "id": "3ba0eb67-e727-446e-8279-fe66f834a81b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "142a0405-1bc9-4029-a3bc-465e0f35f2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c9bc4-e704-4904-a7e1-2e37abc98445",
        "cursor": {
          "ref": "ab8989e5-4aa3-40b9-8c76-3d27d2991eaa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98185cd4-a64a-4adb-879b-6a9c082b765b"
        },
        "item": {
          "id": "262c9bc4-e704-4904-a7e1-2e37abc98445",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d58ba89a-f4cf-4f20-b8b4-4334a3186734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec6ae25-2037-45c2-b604-bc1d05f2fe47",
        "cursor": {
          "ref": "f24359bc-4840-4eeb-a343-69c31d1a40be",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6fd21dea-b2f0-4d8c-830c-1fb2754fa701"
        },
        "item": {
          "id": "0ec6ae25-2037-45c2-b604-bc1d05f2fe47",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a54fe39d-143b-4d0d-990c-0a35433893e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa1e2d-29b0-450d-8cd6-78bee3190020",
        "cursor": {
          "ref": "dafc3af1-b994-4ed5-9af9-b24a4f3df899",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "62aeaa50-1853-48e8-85f0-45ae82be5680"
        },
        "item": {
          "id": "78aa1e2d-29b0-450d-8cd6-78bee3190020",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6adf70a0-a6f9-409d-a340-40a93c05bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460afff7-5d80-4b13-9298-814092985cb3",
        "cursor": {
          "ref": "fe4f480f-7d45-4277-b170-6a5aa9743a4d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "172c7e9b-b823-44b4-86d7-2c1056d16fdd"
        },
        "item": {
          "id": "460afff7-5d80-4b13-9298-814092985cb3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a16f5001-cfd7-4596-8e9b-25779bcf2263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56578f3b-a792-420e-bd8c-ffd21f6cbe2d",
        "cursor": {
          "ref": "884b3114-b720-4075-b9a6-2d5812373b77",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "69760bae-2b2d-4006-a310-e46118a655bf"
        },
        "item": {
          "id": "56578f3b-a792-420e-bd8c-ffd21f6cbe2d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e2c0ccbd-5a8c-4174-8b64-26e376af0211",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f952b04-d6da-444d-99dc-eb41e5f55e9d",
        "cursor": {
          "ref": "e51fa4ae-8e94-47ea-9d1c-99f80ed91b2f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fe63fd0c-59ce-4bbf-ba16-81f1b3003808"
        },
        "item": {
          "id": "3f952b04-d6da-444d-99dc-eb41e5f55e9d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5cc1cee7-83f3-4ef9-858b-eec538566504",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e0c59-dc91-42af-be48-5a4be9f42d2f",
        "cursor": {
          "ref": "0b57df75-5d89-40d0-afd0-49ffda1e4364",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "446aad6d-5c47-47ff-b958-05db906b1fda"
        },
        "item": {
          "id": "bd0e0c59-dc91-42af-be48-5a4be9f42d2f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d4a2e14d-a4c6-4a85-b883-a23e866939e5",
          "status": "OK",
          "code": 200,
          "responseTime": 3849,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4c9eb-795e-4a41-b532-62f44b57248c",
        "cursor": {
          "ref": "7fec304f-8df7-4775-8972-39dce624d6bb",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "55ba93c1-5953-4827-b2b5-176679c14d74"
        },
        "item": {
          "id": "0bf4c9eb-795e-4a41-b532-62f44b57248c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6af0450d-1a61-47a3-8f6e-071f164e8fef",
          "status": "OK",
          "code": 200,
          "responseTime": 2457,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44261ff-bd0a-4682-92ce-bad40c8d35df",
        "cursor": {
          "ref": "0f8d941d-673f-4d04-babc-ad5c68e128ea",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6cde5e8b-64a4-4ce8-a746-6c1585e6580c"
        },
        "item": {
          "id": "e44261ff-bd0a-4682-92ce-bad40c8d35df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b1d76da-a33a-480e-a383-c2886f86119d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44261ff-bd0a-4682-92ce-bad40c8d35df",
        "cursor": {
          "ref": "0f8d941d-673f-4d04-babc-ad5c68e128ea",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6cde5e8b-64a4-4ce8-a746-6c1585e6580c"
        },
        "item": {
          "id": "e44261ff-bd0a-4682-92ce-bad40c8d35df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b1d76da-a33a-480e-a383-c2886f86119d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec88ea84-797c-42a8-beb8-fb3e6c285cc0",
        "cursor": {
          "ref": "9d09c49d-bb6a-40e4-ac2b-37c50e3914e8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "226591d6-50a7-4e8a-b344-a26ad2b730e4"
        },
        "item": {
          "id": "ec88ea84-797c-42a8-beb8-fb3e6c285cc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c38c793-1787-4d0f-b83b-1f27575e8c43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbcd078-39e9-418a-ac3b-4b9aee98480f",
        "cursor": {
          "ref": "5dce4d70-74be-4956-aec4-458b64cc4d18",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e044183-4f35-4cb5-8002-22e2e97ffefe"
        },
        "item": {
          "id": "5fbcd078-39e9-418a-ac3b-4b9aee98480f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28b386cc-690e-407b-ba4b-eada758aaa1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}