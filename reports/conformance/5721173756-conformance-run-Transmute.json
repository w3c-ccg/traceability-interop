{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "77e0f99e-dce8-41d1-93dd-119d18d6dde8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d956a3d3-9a6e-4a03-86ab-6bec45f9ce22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "585091ff-d782-49f7-bcad-ca87a4451842",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f35c49a6-48f3-49c3-9f95-213230c6d4d0"
                }
              }
            ]
          },
          {
            "id": "42c47e84-947f-49f5-a63c-ed12498319fc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "873defb9-80b0-40cc-a569-b18e7b33fb0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35e571d6-efd2-4772-9b15-e7268d080268"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "468eef41-99c0-46a7-8f65-e2157f1fe68e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cc889bb8-8d93-4cc8-a0f5-a9c766bba17b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fea191b-8ecd-42bd-be42-6c50599704b5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cee9aae-243a-4b67-970d-3b90fb46d17f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c81bd957-b319-4505-9a30-8a5bdbe7fca4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1391a2e-19fb-4ea3-96d1-727cf00819cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0094474-43f6-4418-8683-1e9e2f40d5cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "235af191-d17c-4538-bc7f-09785dd95aa9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a734b20-026f-4cf0-adaa-8d8b8eb997e9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36f5be5c-5aae-4a78-af3b-1583f52d85d2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2b172523-4162-4a37-9902-d8724092a768"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ed26258-486a-472d-bbe1-2fb0092d8509",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9edb576c-cf2f-4cee-80d1-016abe8e9c99"
            }
          }
        ]
      },
      {
        "id": "caf31553-3fbb-4e66-9cb1-6ed39f6b57ac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0067d4b8-5adb-485d-b16b-1968660a4fe5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d260f91-c25a-4444-bdb7-050bbdc21945",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bfb903c-a463-4829-bbb2-b65bcf6a5af3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7189891-c669-43cd-800f-759e92dc9e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca2f7bf-36ec-4057-9e5f-926436b7d0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745c0d1-abad-489d-abdd-020aab97a610",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b74987-19f7-4376-9214-be0c3915a3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15667c96-b421-4acb-9d55-b855d5e6c382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88e3682-2666-48af-a1ce-ea02cbf2e9c6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7fc28b-b53d-4f8d-98c9-67d164297321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b1d5df3-3e48-4bbe-9656-ffd2ab07bf8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "494f2aa3-0b7c-40e0-aaa3-92eb4b20e565",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba21cacf-0153-4b7a-b0fe-3a7964c51652",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a14542-339f-46b4-86c1-01e98e28d61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f3cbe2e-0d74-4605-b591-f4811ebfe6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f29e52-6401-48a4-aae3-d8b862f856a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414ef0d8-7f5a-49fb-b00a-f101983e2ed2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d015c383-69a2-439e-afb9-df0a43d70865",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b614c9b-2acc-48cd-8bd9-fcc97e1f9152",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "521618f9-e244-4024-9ac4-a2cb87d248da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "77a5757c-83e7-460b-b992-8bb96cad1d11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c49ad82-cf4c-427a-acfc-81b616db84f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6351919f-0f50-4e74-8528-94dfdc4e5a0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eab92ba3-8e64-4698-b189-4b7a5392b16f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4b94496-c77d-4537-b7bf-fdbd35c8311b"
            }
          }
        ]
      },
      {
        "id": "a38659a8-4432-41a3-97f9-937b441ff479",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2463b875-e130-4d31-a68d-a566a572e012",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5581567-d6cd-4ec7-99e4-9cc8560431f4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f480b794-8e71-47cf-825a-c5553e4a8526",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7c9251-f728-4dc5-93c8-b373db00248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6591c2ea-cf98-40aa-bfa3-d04ddaa5c4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1dfb4-4ef4-410f-99d3-dba358abb363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3782b66f-c07e-4f28-b549-adf5829f408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede809d3-099f-4714-b179-86d120c2959d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb9c2d4-6e8e-4a38-87ea-9ca96f6fc698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e00a7c2-7401-4a97-bd46-d5dc4f98c7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a828c1-ba57-4128-b252-326524922fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f678feb1-b2b9-4879-8d53-68d8c56e3b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5843352-a3c6-46bc-91f4-9c736368cd2c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0f8753-d612-44bd-8ad1-70533b40389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e67aba-ce3c-407d-8a91-17e08cae9cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1500e50-0e1e-469a-8e3a-7bddf7bd49fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3b3945-1967-4c54-8425-dc7ef374af83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e62243-2b37-4224-808e-f78029139ffd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a199cb30-1f44-4428-a482-7ae2ef773d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f84a2b2-9cd7-402d-a46c-4382c5b71072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e0c638-e5d7-482d-b641-d186111dafa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa99724-d50a-4943-89b7-a6d292f6637b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f1ea4b-914f-428f-a59d-0b0df3951ef3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d4410-2808-4ec6-ac6e-d80802e61279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0746d9-c010-47ae-9ffc-b7e73c620cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943572bc-2f0c-4d5d-88d3-8a0743124d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3446ae4-fb15-4ed1-a188-b733758237ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91bd734-a0d3-4ef5-b374-e28e0e70266d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa45d00d-ea03-4d26-b73e-5497a7be91f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98da93ab-911f-4857-8ea7-37fad35f14ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b4b280-e276-4013-b86d-8af4db2f5922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ee28946-b3ce-4293-8b42-7ff745f31c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8c5a87-5ec2-45cf-a19d-4f9e36d923ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c644f569-dc72-430d-b884-9a1a3d9ac1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bad17d-5c8d-4f3d-a3e8-4a1d3df7581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178b489b-eec9-4312-ab0c-0b0022e91e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83562bbd-42b4-4a93-a0b2-708537765b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db69cc-7f83-4a6b-ac52-f948b0767664",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b296a46-d0f6-4d73-9747-4f67aca58fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3430c3b4-c7e9-4997-b42d-58703d33eee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159e3b46-dc6c-4bda-b333-2496c3250e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b44e8c5f-1ca1-4fc5-87d4-5a482296a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa13843-63a0-4d81-9fb0-ff89485e5446",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581163d0-cd0b-4d50-98c3-dd373ad5f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef018fc8-2b45-485d-95ce-f1967a141166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4527205-3a5f-4769-a197-7ee64cf334f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6780c8b8-1092-4bd2-9645-e6a805741fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfdf6fa-0391-4728-b917-baf6632c26d3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04dca28-a242-4ce1-a31a-83216556c0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47889b8-43ff-4cd3-99ec-fa34dbbc8377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf41ab99-d184-49c0-9f29-595e420be88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6360f8-ced8-42b9-af50-d998c982a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eacb081-19b6-4e9b-8077-a9eac6544773",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402c1256-5721-462f-a69c-828da676be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90bef3a-1c3a-4f40-a895-c90f2cd1a89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113031ff-c545-47b3-b02a-3f87142d2796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83330897-faf4-4f95-8711-c1268c68594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1880fe1c-7fcc-4655-afad-6a244cfc5c3d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d962a391-3118-455a-9da0-7a866c5606b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ccca20-f3ac-4b66-87c6-f298540a6ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64100cd-6e6b-441b-9bdd-3335f13375f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47945330-4408-4838-a9a3-e951dd8cc51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c134ddb4-7f27-4bcc-9279-4c321b6b3fa3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebf9ae0-32a9-441b-b713-ec0e7cd77e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb27e3ed-a1f1-48d0-b82e-f9f69af121f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a64a4b-25b2-4569-a458-2f663e0d3e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676e0577-3fd8-4829-90ba-0cf160144f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1c73a0-a116-4bb7-81df-f875efeac2ee",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e2dc1d-15f6-406a-8faf-31b2f5401348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bb5226-7b10-4619-96c0-6acd6a4cfc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0304bf06-6e9b-4875-8f6c-da736353ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e4cf72-ce85-42bd-97d4-a89eb981ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2af0c8-6bd9-44b5-9cc8-85495705cda7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbe26cf-b9e0-494e-947f-8e3fae6d5c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28281f8b-c433-48fa-a263-60aa31f9e7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc077e57-1a6c-48a7-aff2-6e82bb6ca545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67a949d4-ce26-40db-a60b-5025ef221d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7058fd-5d88-46da-81eb-4722628c7558",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abef4d-1778-4e6a-b028-4d4b1067115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49d3ddf-c390-4a75-8654-a7c927da92fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a98498-77f8-45e8-bbe5-4db149af51a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0091a11-c8ba-4e81-ae70-06880f33700d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7738c65b-9ab8-457d-9727-26fab25a6345",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ce43a6-4e62-49f2-aaf0-1dd5c145659b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88484b73-97e3-414d-890c-99752129624f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43174f7-f068-4d21-b8c0-0a7d934bd2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c27ca09-a06a-4505-81a8-c656fecee3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44096bc1-4022-4d26-a251-e0feea201d5d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a28a7de-c445-45c3-a86a-4578a007a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f380ca-a8c5-4d7b-a25c-4aa31a3c5d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cafa55-ca4f-4b8f-9ed5-a6ded362d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "409813ef-1f92-4ebf-873f-2ede3afcb1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a292a6-da79-4499-bb9f-caa563d49f48",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e22dd4-a349-4a22-888b-f2ca8f60a0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baefbf01-f642-4964-8f20-c81ab38d2ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d201f818-c938-40c4-9203-1ac590634f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6e4240-9956-4ec9-b60c-a3dd2c39e498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ee0381-4a0c-403b-8be5-ac61bdc577b8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d1c9d6-0a8e-4eda-b5d2-7ba174025de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395909f4-7660-4270-89c3-56c9fd40aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7db6a43-c1f2-472b-ad80-4d93fda3757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9d0650-0875-406a-adfd-92bea7281d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ae6f1-8c38-4c0b-bd78-61171dcdf782",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0bc77-6c36-4251-86bf-b289bde023ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cada4b1-9e8f-44e4-868c-5ec3dd354932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0436455e-0812-47a1-90e1-77a60a86e061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29221f0-de6e-4907-86da-0584428356cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a3e686-5da6-4f9e-973c-706486cf2109",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dd2e6c-72e7-4673-8b4e-d012556e4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bea1818-6e1b-47ca-9840-a5421675b613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fca336-005d-47a8-a2af-e3235f7bded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "063b1e2b-2323-494f-9a63-e512facafcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e389731d-974a-44be-8e5d-3797c9353fab",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef9af5f-7d7a-4d45-9283-24581bcad52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32fdcfb-aa94-44ef-b65a-0fb4163e9e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51789b8-35d4-4e40-ab5a-616d1abcdbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "563015e2-f915-4dfb-ad5b-bfa146756f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287283f2-472e-4013-89e7-5bb8fe7935aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a0506e-45d7-4e8d-83cd-8562860e46d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fed9d6-0723-40a2-95a5-5a52c159c7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f2e2bb-100c-4289-97d3-d1b66111568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "530cd99c-c92b-4bcf-a292-31f3a8a72292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45476287-d6af-4c40-966b-c8d4bc5bb58b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da31dae3-ee50-4b97-b500-486fd481832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01307bde-99de-4952-af49-a6e5feb607d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f33f517-8f90-41d0-8499-6c3d9e761d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3569a7-eaab-4c00-9728-6d984c6910c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41566787-dcad-463e-8f9f-5fb3d92a126c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8e0729-3881-4610-9075-b4d52bfc360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e10816-1505-4807-93dc-5d81023dabdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356c5b3-64af-4bd3-84cf-8283a4ae4907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd876f4a-1cd9-44d2-a09d-999490d72e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774fe89c-29e1-44d7-b136-463b8ea06da1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabccfe6-e5d5-4341-abdf-fb459851d5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681e8644-346d-42a3-b936-9195142c8ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3a3927-7546-4a5b-9855-5c6a4f7672ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbe6627-f242-4f38-aa40-2552107b9e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5971281-afd3-42f2-9b0f-09325d97ee8d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c640a5b-d41b-4dda-83da-4ee493eedbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fcc3f3-d3ef-4b07-9e65-bf42cdbadc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcc7388-1b83-41ee-888d-ce7bbf852e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b8eeb5-7940-4fb9-8e46-92a69c28a080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ce51b0-dd2c-4830-8b4b-2b75f37a6ab0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a6e7a-fad5-49d1-bff0-84e6299215be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff6a916-4c6a-4086-acd9-59bcce8dc7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43444189-983b-481a-be52-5f0c75a0495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14650c6e-5dfc-4f1b-99ff-35a60c90f638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1baffd-60f8-4807-9699-6002134dd457",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5892e8-e331-47bd-80c8-a960f452e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb563f8-d995-4158-aa3c-ce81c31b9a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cb7fd0-0348-44ac-ae31-2ada960fe0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2086afc-6933-47ce-a8ee-0776c5473614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c95071e-bb47-4bcc-ac76-f90534d5daf1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81793fb-2769-4873-8741-0b6d5aa28070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a16f2b-7a4d-4d32-b219-674cad58e0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4958b8-a196-4937-b167-dbe1f0ac972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "813faa94-5a62-4d63-872c-03e6f75b294c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829d5bd-4c31-4f40-ab1c-b5a2abe21854",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3b185b-2531-4bd2-a1ad-fb1cce3841df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf3ca88-53ed-40ea-8c2e-838843f4a220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be45d7d0-7df9-432f-a5cd-aa6f6d41a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1cf9a6-aff9-4279-8aac-4a80c3b4469b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6b58f9-5b5a-45df-874e-fc03ecebc5ab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d677cd7b-74aa-4f2a-9f29-042f49d6e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868bb2d2-6103-45cf-946a-880c3816a0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787abb05-005a-4262-bb65-67c45e778f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de239b1-a50c-4f07-bc9e-f12b21318a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f0ee8b-9cf2-4aa0-bfc6-70b236a14284",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eeb2b2-da7b-40aa-88cc-252b7d7c9043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134149a0-c928-44cb-9ad5-c6300f487181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d55c3c3-4b61-43d1-b02b-e37749569140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22bd2ec-fa86-487a-ac06-374dedd04274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1f7bbd-8a34-47af-9670-3f253ce4d26f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff5e377-2b57-4614-af84-f920cdc1485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f445aa28-e0ed-4abf-b372-edb572e85c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73074c84-ea3a-44b2-9c92-26bd2a824354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "65f5dd3a-16a3-4e04-8ac7-fef6bf123372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6681b68-2302-4838-bb84-9ad6d04b1806",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72f5f79-e750-4f90-986a-9dd3aac8ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b65bec38-8902-41b2-9f04-1dd53bd17fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5c48e6-8a56-48c7-9355-0d34c83a95dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "876b00da-94ed-47d3-a58f-401b3a032ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa2c44-071a-4a97-b485-24f8f5b265d7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c78c4d-36c1-4bde-a9ae-0282e2f00057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9f1bc3-bf11-45c8-894b-62deb430ed70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1157845-0679-46eb-be0e-b0a8e863d63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "889ccf96-f372-4d5b-b51e-08c30c372465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcf0a4e-fa79-485d-bff0-bba0079f5d81",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da25d4c-76be-4849-b17d-c45ca81dec67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f89a215-3d81-4537-8311-b31d0f2744fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a509c6-0518-4ce4-8a53-1df1b19dcd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "393c8721-5c9a-4e0c-a0cd-6d55405ecd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1f71c8-a244-4372-b34c-afad9e27b582",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47616587-98e2-4de2-af77-bb3e33d9e3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2038d620-9be8-433c-b61a-a28dbe5ccd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effc7cbb-f281-40b1-b5b2-18f3c55bc1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd38c5de-0853-4ae3-b967-6fc7f675ff6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688c6c4a-b0e1-40af-bda9-a132e97e1f9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf1d4f9-6d4b-469e-bfd0-7d289b5e02b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020ca587-8912-4ac4-9da7-16acd419f4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e09ad36-d5f0-4467-9872-cb036f1f4968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "955d69c6-993b-432f-95be-92f45a36867f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a8d517-798a-4399-9659-7376df1e61d1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e79087-c0d9-4f8b-a262-9a9052868b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84a4d1c-409e-4771-875a-fa6155b86e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c8f931-559c-44c6-96d2-f9dd41aa7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e9f3f7-0833-4ec4-ad9a-53b41768fd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088e7231-932c-485b-a6a4-73f1dab3c177",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea4bac6-50bc-466c-ba99-73c395bfceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b94a64-3e1c-4f0d-8058-012337d80c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0778e359-3ab4-4a1a-b417-63a73d9851d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b8260cad-5540-43b7-a09d-e881a859ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ee3ba-a11e-4025-8dc2-56e55de13ba9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43b1127-b930-4a8c-a706-89500078c3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e501918f-e756-416c-846d-f59483879441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07069a0-b655-4dc9-a71c-3030a21536fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "968e91c5-255f-4845-9aef-55ac442b6d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc758929-e15f-4360-9101-e6c5393e415c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93146414-acc6-4c66-8145-0fd54f1da7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ecceba-6de0-4d2d-ba9e-a658f8ab5d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb44337-601c-465d-a4d0-383285230fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fd0bff-7c6b-490a-ba7b-0ae5682a11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94f56e3-56e2-4941-90c0-6730ce993dc1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62728016-763a-463e-9329-03d8f3b841ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802dd56d-c039-49b1-acad-e3e6b5dca504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2003f3ea-019d-480e-b2ed-9ff9da76196f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97109b5-36c5-4791-855a-1fb89a915abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19ddf2d-6b65-4507-8c98-7bf9c96bc629",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38495aa9-9030-4425-8dd8-b6169460c82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2d607c-554f-45c7-975f-68a8d41578cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0795d53-d782-44f4-b5f1-595605a76352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "663d6bb6-67c4-4fc7-8ab3-d81f8e61da79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968a7274-be48-4971-b15d-8f269fa98aff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc542fe8-6b69-4171-a586-38aca50d649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac742c99-41a6-40a2-bf90-b8b89dfe0e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b71e7e-a2b1-4b5c-b57e-9d8edee3e803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53130ce-b96b-407e-b5d8-8bd63d2ea8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7c2d47-5aad-400c-92aa-d0a26b76d335",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d165b2-df5d-4182-9106-cd7ed1f76cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea167b5-887f-4d50-a94a-e6c22de75692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dca711-26c6-4e31-91a7-956b01f9f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b106ed6-a9ed-46db-b635-7f5a279ada62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef59b91-8c95-4bee-9c4d-35dec072f8aa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f61619-f63a-40ad-a3cb-8a14863ac785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00431a5-480d-403e-8aca-303647e79105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a652a-3f74-448f-bb95-cb85dff03a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d743c6-0873-4261-9c2b-fc28a5ff4819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf7d6c-44e3-4a7a-85de-ae3e243847ea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d803d945-d1f1-476d-90b2-94b1b74a1f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a6e6da-534e-46ad-93bc-9b7d68e80739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973aa46a-5f4e-4c44-85d2-5debfc1430e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4db10fd4-b55b-42ec-919a-8f25e5b2bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badf40c4-f0c4-4419-ac02-05f585651afa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed39963-1e9b-4482-833d-495241e4c027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae8857e-8fa7-4b5d-aa4d-f8813c35a554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4173b93f-1060-47c6-a246-905ed845743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "81322b6b-bce5-4483-860b-fb24b46e9bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ca002-9f2f-46ba-931a-6accaa43dd99",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249020f1-35ce-4ee6-a662-74fe31288e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5427c2ce-c621-4136-a397-767dc7501956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0a5586-6196-496c-90f1-4cf4944bd36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c01cad-71a3-49ac-92e0-daf47970b759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f9372-21e9-4094-8884-b8dcd0e22a94",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49ef175-ff40-4404-963e-aa59c09e7e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29ffb91-6ed0-45ef-959a-c3471600965c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bcd2d2-932c-411e-b0d6-e59fe1bfa69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "988b3432-483e-4b16-8a8c-0cd5d989d73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4122650-08db-4aa2-ad7f-ddbe5a5df689",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf343b9-9f98-4d70-8ddb-123862ec6eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953ce8f1-27d3-440a-a227-8e9961616867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91399191-5efb-4613-881e-90c87b8cc7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43949493-9c9a-4e89-9edd-6772a8e85369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6d935d-2f9f-48ef-93b0-7349e64d3ba6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfddf813-a8b5-4012-9f42-d6f394642636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee80b19e-6c92-437c-b098-abb2ac8d1459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e46663d-fa49-4ebd-8fa6-62064452294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3401d10b-10d4-452a-8a30-8500f63e2415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e04ff3-6871-44ee-ae8d-804c9dc5ce75",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503cbc34-dfc4-4d46-84af-7104226cb40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba6f21-6f11-48b4-b0ac-96be8a3e6559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67456dd9-4867-4e82-985e-09a000401e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "357f6769-04ef-4a0e-9d02-408df5cc769a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f702e2-6780-4404-94f3-edd60cee955a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc0d1e2-2c62-4135-b1c4-31385cd08198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a9f851-5c2b-4a17-90d6-35e2e708bdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618d2622-2d66-400a-a5da-660d711f42aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d248ac32-4aab-469d-b73d-8ed2440152e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eef06a-0b73-4c57-9d89-d41d01d8f508",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eb64e6-d77f-492e-83a9-68ebb7a5b62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7417a0f-fce3-40ae-a1f3-41f37e717cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad476a1-be8e-437a-9f44-6930cab55388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c02197c2-a314-422e-9de4-962591065fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f5ee5d-f087-44a1-b3c5-2a1890a72822",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b697e9-9ca4-4ac9-b4a6-cb7059cb3d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c874a896-beea-434e-8c27-6c3f8ef3e4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa258978-b9ca-4750-bd1a-92e5acad0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "108dc5cf-46ea-4cd0-ac35-dcd9e64b8a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ee58f-e697-4e9f-90bc-aeb1cce99273",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfef283-8e5d-4a1d-975c-49309bf8d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621b454e-2267-4a53-8443-14fa34af0ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b0143-83a2-4f77-ae73-7d5a8ebdb950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3004975-279f-4a82-bd00-7c6d3f7c80e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a51d9d6-e867-4c1d-9788-c3d051546294",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d63c9-a500-4532-9c7e-5062462bd48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fc41df-db89-4616-9594-d81c7829a677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c54e05d-c1c4-4830-a67d-5f91425e585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36537ef-f5b7-4472-986e-b15231f27490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706eb3f4-efe1-453d-892b-65f8c400b71d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4f161-a76b-42d4-9809-d04130466987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e538d347-4807-4eda-ac1a-41bbd41b2039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e0bfce-423a-4c29-92fa-8140b2a98b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5881941e-860a-4c8f-b54a-333e26efa08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1a3b64-7845-43b9-992c-d66811a73bda",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f08101-8bb4-4a12-9b06-2394ca79cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cc0a42-87c2-4255-ad21-e8a1862060b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181fc42e-7280-4879-b538-e273cc1c4b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "104a89c7-cad6-4b23-96c9-f4754312fd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0b9d8-b864-4bc0-86d8-05e4e022f333",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1590632-9cb7-40e6-af38-7c12b9766bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131481df-1381-4f95-9a86-801a8607bc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ac147c-ba66-4208-a21e-c2d4a86a1bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cce18a3-f259-4cdf-a39b-5cb59ed9e214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb518146-6c87-446b-b8d7-26c794ce58fe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15641426-4461-4923-ab31-2e6f822e96d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48739c23-9c29-4155-9779-83431193457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1a336f-d5c8-4a64-b0bd-3a9ba3cc2a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ee2c26-e965-4d5f-8abd-b15733a958db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9277616b-751c-4177-8a1b-eb992ff46752",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36479f92-c88e-4ca0-af8d-5d7c05a7604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746116fa-dc73-456f-80ed-74cebc77719d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea944676-b64e-48fd-a2a2-555bfaf529fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "033700ce-e026-4757-bade-9890cac4ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c07998-b723-4afb-994d-478d3d22db6a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328bd2f5-6628-4236-83bd-82c73ec4f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07b806c-e3d2-45d7-996b-1357bbe24891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332f6084-302f-48cd-a28f-36cc7774f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44a27d68-f85b-4ab3-8af2-1ab73ef593a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93c0a6a-9805-46a7-a334-8714b56d6b40",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334977e1-8d6b-424a-844b-4537069e306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28ea2a8-1837-446d-a18a-d453ff28236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f174c6d5-b024-4332-93b7-ed8fcadbc4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "57633b11-ea8c-4749-9b20-cd179063d074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31944ce2-4ed7-45e2-94e2-d7555f82ca91",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5775a677-5f17-4367-ba1d-518ba12824a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508b3139-9dec-4a6b-aa6b-e8607dcf5f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eac52d1-021e-4cf5-a7ef-9001758df47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6402dbd-0118-4b35-9705-f4e1d03b1959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb28152-6be7-430b-9932-31d73b1870b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fda54b-1b8a-458e-ba8f-35729aadf5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26205d4f-180a-41af-ae56-d9eeafdd69b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d119864a-4338-4339-893f-4796e27f9b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c423895a-f679-4a6d-a9bc-6dba497439c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e31e86-bb21-4963-be52-a1ec8024ed3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f900b5c-25d6-4307-9b97-4dc8d9bad17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d63e55-0a0a-4f21-b250-6518e962db95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f64e01d-9e25-44d8-b8e9-ed919b463059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4d5000-187b-4fc2-99aa-fe29fe9716a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b73e912-754f-4a43-b04b-11ba15d56ddb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0214e68-d5ce-4708-a8c4-ae1eab7fd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cf0db6-2229-456a-bfa2-09865f15d689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c766e-1c63-42bf-91d6-d07f08a963d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ac3492-da39-4eb1-b799-bbd69f763757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5224d7d-329a-49c7-9f4b-507b21265505",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a2a9cb-22fd-4afa-b264-b88641ac80fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74c1474-e1af-4aa2-a1d0-7ef3489bd0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32195a35-bc14-47e1-81fe-7e67c7d0affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d894aaf-f571-4983-a4ad-ce57e3e6d558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df37d3e-cd86-4593-be10-c9342541869d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406be752-7f73-4baf-be13-e757c897462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1c6d53-869f-4c81-b1d6-57b3673ea4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c63dfb-b5b0-4062-a3c1-56f4e1604344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b1e974-7772-4126-9aaa-ad522dbd0b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6b1aba-3f67-4041-8309-a8a12133dd43",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383d02c6-6b59-437c-b9ae-b70c9bc984cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1405a3db-d585-4309-aaa1-31447772061b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb13a8d3-1c9c-465b-af25-79380036e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b48a8915-1373-47a6-8bbd-3e7a8f1717a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73fddf4-c05e-4306-9079-c67ad88cd742",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b6c2cf-400f-44cd-98cc-6f640bcd1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171c32cb-acc8-4033-9b03-221a009e202a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60661d2-ecf2-47b9-abc3-836c93acc229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a199b57-670e-4aa7-954c-31e2d771fd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab66f64d-a3b8-4fe9-805c-27d5f5793f8d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a816d656-6fe7-4d70-be8d-8d1e0b39d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691d6135-4586-46e8-bd3a-b4bd97a7f4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99792c00-f1f2-4811-a082-ca9204dada69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c036d61-a3fa-4af1-a429-b827d98d4646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a2cbd9-f866-4526-a525-9cdbcf6d6fa1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7301a21-9d84-46a0-81eb-cdeb416ef1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02c088c-304a-4a63-b8d2-2e4ff0f15f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba175475-72d8-4d85-bb0b-c9fa9fb66ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b09f03f-1861-41e1-81ad-5c5f8e1c5f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6f968c-d90b-4092-8234-c593f0e3209f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7a65b7-c3cd-4461-a5ed-62a7756ff282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e669084b-4f65-4c4d-bbc6-f0d60d1a9008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c4be05-2271-4a45-80ab-9271b6abccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af99597c-86c0-48f1-addf-988b9f346812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be5a44-fb5c-408f-8280-2e1c9ba79b9b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844d1154-0de9-4555-bdff-39699670974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e46d6e-18e6-43c4-ae72-131835b8a333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf381ae-f823-4be5-89b0-16f91afb7328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9880161a-f4ae-4270-9d34-ae2ae83e0d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c4b1a0-a3bb-43c7-8280-3d7598872c9a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff551bbf-a653-4d12-b59e-138cb3d477e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e8b845-964b-40c6-9151-b81553e891d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d81fe43-2961-4b81-a3dc-286a13c6e82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9615cc35-4a89-48ca-95b4-6fe943e01f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145f0a78-38e8-412a-ab31-4ca1e1abf2e1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0da7ba-dbf3-455d-82a4-49bda08d9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3289e883-a021-478b-8749-289ce4452908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e678e1b-4136-4b20-8380-5bdcdebdab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8a8eeb-7e18-4576-8552-c6de2fb5ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca8afc3-c43f-4245-bbb1-e65fd7997c85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb4c6bf-ddbc-48b8-808c-89b18c90be0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7db685-2917-4259-99e6-59e7bd3a674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d93c8-c8e6-48bb-8df3-2295ef29fd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5704bf-d76a-4f37-8a88-1fee99c59465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc44421-d7b8-470e-a077-fab491432b3a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c913936c-bae4-4df2-accc-a8c72e878e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14602b8-c4ba-4f9d-981a-9355fbfa90c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082db8e2-cf8e-44fc-bec0-2acec473163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d77c51c-ae1a-4cff-b8b9-4e043f00f6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb409679-bbdd-4f52-9f89-3c61a06dec56",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c0a14-72d2-4ef2-9f2e-04cc610f426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e490b404-8cbe-4a4f-a33e-7c8105183416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3009c449-d34d-47a2-8591-ef4e52d7c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd29541-6852-46d6-bd27-70d5bd1033ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a02d0-b0df-4de1-b32a-5a00aadc9a72",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b5c113-9f5b-4bf8-b27d-6154abd591a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54769d3f-6052-4d9e-8113-89176f483a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeb0d43-3a53-44c3-a3e6-a3b5e4fca454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51357490-6399-4e79-94a8-66d134e86f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7632492d-bfea-498d-82a0-134adf1a6738",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1dc943-ed07-4627-a3fb-91d3c111f093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987d5b43-e271-4a96-ae32-be473d550865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20554e1c-a72b-4f75-9083-ba23da816a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6797a9df-93ac-4f93-850a-cecb6041e831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc412b-cb01-4672-bc0e-b8e1eb4cde18",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c868a7-eb39-4b84-9cad-ba128d079ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9058daf-1f9d-48d8-845a-cf6407175864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e22a5-6da7-4591-8aa1-165d29ec52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e558f5-d891-443c-b6d7-bf2d718be7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bcc2a9-cdc5-4720-a8ab-698f72d237f0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f76a68-bfbd-4178-bb82-417cf550069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f680ba-d381-4104-af7a-113f2be6504e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196cc6d6-0bbd-420d-92cc-09b6ef7e6b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfba20a-b252-46a5-9979-d9fb2001096c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f67dfba-5afc-4cd1-90f1-44d7f7b4f57b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5add565b-1b4d-4a03-b636-a84c562c71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2fc9a1-3001-4bed-8d8f-7847330cbf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a76808c-d340-458e-aea9-132a53319cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13970488-1d3a-4633-86fe-355ad71ddf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbb9527-779a-41ef-a518-056f1faa6f77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f9a35f-62d3-4faa-ad5e-975983cd8018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46c9ee3-4550-45a2-b44c-a45ad79a4f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3977174c-ea50-493b-9d47-e1de211f915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10552538-846a-4f71-8c29-fd3758d1ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e31b84-c39e-407a-b022-f378b575bb77",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b352a8e-f8f5-432e-9276-ca979a73b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c1730f0d-cb69-48e1-a1ad-7dcd1dc8f385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba643b5-c4c1-4e2c-8a37-ee2e6cb940b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bbd6af-967f-44d3-8185-7708c9d39ae4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9e87a7b-f7bd-4286-9698-b9042430cdf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a556f3c-ecb8-4a35-a19a-960f8d93c949",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f085081-6553-4dba-ba9a-ac566c304016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78377083-61cb-43ab-a16a-2e6bfb48783a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3c2ac6-7bdf-4498-84a4-7a47673be4b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23810054-30a4-469e-b908-297aed1fabbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "981b1911-d7de-45eb-860d-041849efa69d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a058d97-0ad2-49c2-8c52-3d6461b61827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0778f927-8cd9-4879-ae62-bee4e4e8fb6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "767b7d62-3a64-4108-9997-dc0773e749d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcbaefd6-33ca-485e-b322-6a319faff135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9a7ed08-e133-4753-ac36-e5e7841ba088"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d45f4f7a-f4d2-46b8-a0e1-6f53fa81f9e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8317bae5-7f95-48e3-8f08-3b9efd0e6541"
                }
              }
            ]
          },
          {
            "id": "c6a3be2a-dbf1-4a3e-b9d8-bde0585673ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a490df3b-624d-4279-84e5-1a0493efc0ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d46e2dd-3d7d-459f-93f1-69a6eaf715be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f58d389e-2ef9-470b-89cc-288f416a969a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f079a72-4ede-4ab7-84c3-639f42ec286b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ebc6d63-2c03-4506-8cb2-078c5a0c8fc4"
                    }
                  }
                ]
              },
              {
                "id": "9bdd1d35-f8fd-4e75-b5f1-cefa5a907fd3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "926b6f04-825d-44f1-9478-10f74106829a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1788ac9-fc5c-4ff7-8305-046ccee133f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aba9508-40e9-4dcc-9c27-785c9b05a92d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a570a030-17c2-4827-a661-b32090570a4c"
                    }
                  }
                ]
              },
              {
                "id": "700b04fb-f01d-4454-aac2-b5c36d12f05b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66069b71-3b2a-4303-aab9-ff5eb7c2a6d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "199d247a-94e2-4a64-9361-02996c268181"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9f848d6-f40a-4bc0-98d4-7a14c4396c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2206c240-7bbe-42e0-a4f1-b993d54ed08a"
                    }
                  }
                ]
              },
              {
                "id": "2f046cd8-d592-431b-920d-c23c84a66609",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee4dead0-dde1-4b33-916e-d019b5b4300a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfcecb22-e402-4d6c-9745-a92d7e92162a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f77905-7dad-4162-8134-2bffc90fb2a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "36eee38e-87ed-466c-89cf-f68668e38b95"
                    }
                  }
                ]
              },
              {
                "id": "af80eb2e-1844-4c7d-8a32-a95070bc5a6f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f6a7ee3-3086-4e68-bc5f-c142783d9462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e33b378-d221-4a92-be77-9750f50920cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4302241-40b2-425c-863a-0b29e50ae51e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "223738e0-f293-4ae5-9715-940807f74a46"
                    }
                  }
                ]
              },
              {
                "id": "364010c3-7cf0-45b2-8c52-00242d14a69f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39f4cac8-d248-4650-bf4a-b4b14fc470d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e79180aa-81da-4781-a1c8-a844aeb26508"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "651d2c7d-f6db-4b45-aeab-412672eb5a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ec00acb-2fa2-41c4-ad61-f18edd167499"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1bf8b52-ac88-4467-83ee-eb980476ec0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b093c981-a1ec-4828-b69c-805fbdd5293e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86fad393-15f6-476e-8d20-fe2938fcfc89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7de23232-3f71-4716-9870-9389ac178fee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "419da970-8576-4246-8bd6-d5640d92c51e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3769afcf-2f08-445b-8a54-fcff4564ff14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93732758-e282-4a25-85f6-de832200b06b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c24c1e8e-2877-4fdc-bd85-bdf42f1292b2"
            }
          }
        ]
      },
      {
        "id": "4786de98-9347-41d4-81b3-e6ef2da24db3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c1560bd7-90bb-4dd1-88fc-3056bc3fdb95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd287447-a4d2-42db-92f8-9adaa58b43e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "252116b9-0c26-41ae-8f09-3c4ba667c206",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf96bc2f-2f94-49be-843f-15548ed9cb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e82c892-8cf5-4fed-b809-6f097bcfda31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7845ceb8-e39d-42d7-add1-112c7fd7c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "feae871d-0f60-4a57-9a76-87ad8d85e75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ad097-4584-456d-b421-3f66d43c7b82",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8b679d-283c-43c8-995f-373bcf3db4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b97028-7dad-406b-bedd-28d99b5844ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d637b20-3947-429a-bad8-9abe1a473f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc07e57-5f46-4fca-9c47-e848addeb540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd90b03-6181-4b52-b531-a15151f64b84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa14f3a-7061-4241-b622-e94936ef52c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71139597-0cba-4fe9-b5ae-338a75ab2323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5f8a70-5e82-4ded-9be7-eb9733d0fa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27197ac1-b812-4934-967d-fa003aceea95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a983a5-5562-4f9e-b4c3-7f1168dab628",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3df8eea-4a65-4e51-98fd-b25c63c74564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235d284a-b6ce-479b-9276-bb5330e93729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd56e89-fb00-424b-92d5-adc6c58f5ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabf1be6-c5cf-4c44-a755-73083a6fcc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e0cd6-a9f7-47e1-813b-95092bd3b4e2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50972cb3-977b-434c-84fd-26db0407dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f284635b-5061-4f88-bf1c-db5e884c8999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761c915e-4386-4702-8486-bc9475e6aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcca7aab-07cb-4772-a6a2-885e17f9190f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f006646-e3ee-441d-8401-b82b427e95a7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb0e235-69ba-45e2-814d-779346313b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90894d4-2607-42a8-8731-c5435a041a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e32b8c1-ffbc-4bac-acc4-805858b2a39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "819fd227-82da-4175-863d-42f64d6e08cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d099bb5f-0470-47a2-89a4-70f25415301a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1660fbc5-f0c2-4b4b-b104-16ef5f7259d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfa9789-0456-41af-9592-bc9b6f65d8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb8b67f-19f4-4c4f-aa24-071d95bb566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba01fd5-e674-49b3-a75b-cbb2a94354dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54f463c-2e21-46de-b24a-c2ce5b548662",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03cda38-079a-4d30-9ad9-e0e6ec44e8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c653f8-01cd-419b-9981-732fb3882ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d2d77-b3b2-4f40-85de-5e936a12a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9439b964-455d-482c-9d85-c61bf81dab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a104b840-545a-478b-8b63-c1d75fd44ebe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709068e-3ddb-4fab-ab83-dd83834e58e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2331d7-f860-4abc-8978-789ac984d014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f902ff4-f8af-4465-be19-9405f2beb465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c3a481-1270-4d45-b04b-30ff44036f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f1414f-0314-4ae9-8fbf-cb6cda84ac44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c824d926-07aa-4e07-bfe3-3739d4fb005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82e3fc5-e39f-4c48-a37b-e199b23255cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6d1199-5b06-4135-addd-75ab5ac8c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16abc7f-f14e-4854-8db5-cf00dd28d901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336cf9c9-7076-45ba-ad28-7ab54a7585a5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a89ddd-5535-4b66-8266-117e6547cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051a1d4c-a8ed-48fd-a7de-c013dcd0d1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df018ba8-d9d9-42a7-9119-431e056db52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb22c7fa-3a49-4488-9f16-658cf67d4cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4592db7c-79f0-4450-9d04-8fe1e9151351",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aca4e8a-a66b-480c-8ede-887450efd17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1803c260-80e3-4bf9-a19c-bda8b4c04862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0244a51d-dbc9-4906-9c95-cac5459fb61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f122b438-3d2a-4f27-8957-3e11a5d7b9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb66f3-6ad6-4756-8e41-9313ef907e04",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0672ba95-6cbf-40d8-a3ee-44585035024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bcbad8-1fc4-4716-a20d-1eae5c1f18f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3587aa7e-be3c-4c9a-82c0-cb0da9aa4356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97cca67-428c-4a3b-b38c-ca25c0cae97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaa228e-e6fd-4dac-9243-78c6bdb4941a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85552002-3330-474e-88bd-aafc71340971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde8956f-61e4-4192-b7e1-1a442454cc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fef569-37f3-4f28-bf1f-bb4c594b3eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcff85b-6fea-4d93-bfc1-2006d5e04cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f549a1-099d-45f4-b66c-3cae04b237d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c27892-2fb6-4352-a66c-a6b70357e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1431040b-5aa1-4713-8c8e-ce82c0d6f7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2637210d-c84e-48e1-a3ad-5be193d8e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06dadd6e-2c53-4789-857c-07b063c526e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb3167a-23f0-4624-b138-0032795f138a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b7cef7-b842-474f-a4f0-1a1435b04be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b753bf2a-21bb-4250-befb-595a0006d0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6151a58-2477-472d-b3be-166515ad0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2fc951-2916-4873-bd72-aade7021e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0647a9-0038-4509-a610-74e220c52519",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9abcda-c137-400f-89d0-10c6e2428d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd8fa64-db12-4894-b0b1-dde793015f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467f90f2-5231-4345-838f-b7d278a9d427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70db933-fd47-4f3d-a0f6-f56c058c7c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c95d23-9ca3-47a5-b197-53dc8ce0d188",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8670bfb4-94c8-4192-899c-aedb099c482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31138cad-2178-4fea-8f31-22be004cb0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da431b4-67a8-4827-8fe8-88ce69cee6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a5a832-f671-4a89-a347-f23f7d9ffd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4889f892-7a0f-4216-a03c-1b770c082fd1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e75aa36-c87e-4813-bffd-f34bf8c872ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7096d3f3-90e6-499d-a4c8-3016ffa707b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa62283f-8c3b-4ac0-9ed3-0ecb539811ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c90c2dc-790f-4ffa-ae4d-3f3de76d54a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ec5293-9d4a-4ad2-9d7c-708f64a3a060",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5956f3-5ce4-42cb-871f-007b4ff33cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36caa2e-ad1c-442d-a50f-e8a6b904f9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdaf848-644f-4314-91a2-004c809e37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8483df92-045b-4450-913d-cca2f423299e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50519dde-f3f1-4344-82ac-376d48da60b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0f8a7b-3889-4179-888d-38f219062903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69298256-9ee0-4f35-9466-e97720a76fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a1c99-0e69-4e5b-a51c-8c96a55aa005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ec8cfe-6a39-4aa8-946b-016912f1c489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc9561b-be60-4844-8907-545e5f471572",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58214c83-ee2b-4f41-b1eb-ba8006275cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318b62ad-46d6-4b14-a621-d8284d0aea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1f18ae-e926-4a0c-a968-d6b11632c9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ca65fd-32ac-40aa-b176-3e6a575c7a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183ed90a-8082-4817-9380-53bf74569a3b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4f90f3-20f7-44f4-8546-fac5725409e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eda356-2dd4-4a74-a501-cb64066d47fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5ef03-c3c2-42ea-b313-7759af6a74b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "763eff24-2936-42cb-b7c1-2aaa12bcc54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da044d8f-9d78-42ca-adf3-fab854ff92ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535d2e79-6dc2-47f8-a30c-12ac22d6b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1640934a-e434-4cf8-a5c4-176b7dc6eca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171a4c80-288c-49a0-9f0c-2134b917a9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de59ff51-ca34-422d-9926-037024ba81f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f965bd8-5d00-4701-b104-67312532d05e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4a9d61-d05c-42b5-91ab-92c39dfd95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5255f678-be16-435a-a544-5b8b678757fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aff5b5-a62d-4fe9-aee4-d2ad309bb4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e2de9b-c411-45af-8573-5adfc391dc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf94cb-02a8-46fa-9ae1-f6e5fdaaeaf2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c5c60e-4c30-4d90-9773-ed8f079573fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2a2b8-76d7-42ba-8e13-29c6274fb7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd18afb-10b7-4ce6-96bb-5df77a15a99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f992a403-5284-45e0-a892-0eec68c0d809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24805da4-666d-4b71-ae93-903ebf55c4b4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dd8860-8ac7-4ce3-a887-5b448c9ca583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4689cfef-cec8-4b34-a8c9-6caf8838d315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99a9985-1712-47cc-9eaa-63e8d414a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca287893-5005-41e9-acc6-0c47ee9ad6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0a11f2-ddb0-46aa-b57a-0dd3d2dcdcc2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aca3c09-88a4-48c4-bad4-9518c24192a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2d46cd-9814-44b6-a1ae-bb20861d1e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05651cc-2fa9-48dd-8701-2f2bbc5cb7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d902a6b4-fa3c-48fb-aa1e-da55963cefc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da4b80d-4999-44ff-813b-436ceba2d3a6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbb0ca9-7bb8-488d-ba8e-c9a73d010a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c00f2f1-b853-445e-a5bb-263e3b9b1f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36fefd6-df82-4d45-a466-9ee7ade9e1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee53a0ca-98c2-4497-af43-0adcce07dca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd84003b-dcd1-4ed6-ba9f-ac04d6adbd80",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8911b57-4ce6-4ec6-a616-b0e26ca51fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed80af7-c91a-483c-8814-48ab64c474f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2367b3a4-d3cf-441d-888e-a01d92a61e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695ef54e-235b-4acf-9113-312b09522fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab5b8c0-aea5-49c2-860d-5b2603cfa392",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ea1223-4135-467c-af9a-81eef8ecab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d4138a-05d5-4489-ba40-4c49e8178d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2365e620-dcab-4b79-a6be-3ca0452ccfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ebee5f-5ca4-4cea-964c-6ffe5c7fb6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170df5f7-14d0-4ea9-b884-34ff98ab8e03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26dd9d3-39b8-4a00-9c28-3a46b044fd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f2881b-dab4-49be-ad6b-d315687b0720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efe7de1-d88b-426d-a20e-23f1db8c6ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c12567d-1cde-4a34-8e93-00dbacd51dbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e611f6e0-7b0f-4936-8988-6db73c8d1c45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0316a9c8-4257-47b1-b9b9-d19edbf57a4f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04da1e39-c559-4014-b530-db00376bec25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "767a91ef-444d-4e9e-881d-19c7d08abcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd17cbd9-6054-496e-ae73-4cf6abb871e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd6e084c-ccaf-4c79-b459-ca8cf481ec40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a69400-68d2-406c-bcaf-c5ee0ab1def2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "175b0ac1-a23b-4839-b044-e34c911e56c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4fd8f9a-e55c-4876-b07c-551339075542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a319541-bcb6-4be8-8d1a-ea6a42fb7680"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff0abafb-f3f6-4086-889e-fc58e4991f66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c97793dd-1dc4-4555-b449-b2d248511b98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cb3106b-e6d9-407b-8671-0607667da0de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e956b72c-09af-44f8-9594-bc24a043c276"
            }
          }
        ]
      },
      {
        "id": "d211ccb8-f23c-4214-bf56-dd0392765aa6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "733db2be-991e-4707-bb95-b6b244462289",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e9bb03c-aa3c-4f63-b3bb-9595a4acab29",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8382a087-00c1-4cad-a2f3-c2bff988e352",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3f8cf2-0d01-44dd-b416-70c2ee801196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4969f3-b0ac-4b5b-9b78-486ae51a9840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40db148-fff8-4857-aadf-cd5f29a6d3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c214ae-c013-48ef-b872-529c239f8b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd79b3c1-a1f5-401d-8243-5789bacf9c14",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abcc55b-d6b6-4a19-ab51-142b73fcce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025f20cf-824c-4aec-922c-6cfa9d52b8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a12b05-2164-4866-b0cd-8130a580a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8873e1-0f88-4af1-9f7e-5746b42bd23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97980b2b-724e-4f00-bfd4-45d7c14aeb9e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5d0f1b-cd91-4957-8e1f-1bb01a1e170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196e5725-e658-4256-b166-94d41d6dd0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926171dd-6048-4e97-b950-afb45fd7bf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc816d78-07dc-4953-913a-9b02ef3725ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d483803-ca43-462e-aa44-cc5e7407ba41",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c0614d-5cf3-4555-baaf-ea70b6ca9899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea96156-6b1e-4a5a-95f0-bd2340223771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f45ed3f-61bf-423d-85fa-63d4f0f12278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f215cd-fd70-423c-baee-00f7535cc884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65360558-6adb-4313-a8c9-cb476edbb781",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272f8fd5-b46a-4754-872f-b45e23067432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23a3f09-fc3f-4031-9918-bf4accb29166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657fbc01-2255-43d3-ab59-bbbe5f00ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae330ea-072a-4cb0-877c-b2afb796f7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414207c9-4812-4e98-a56c-653451f48f2c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5105622a-0274-44ee-8cb5-0c742f298ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f3ac39-26ff-45d8-8cc0-33e9b241de6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef031f3-dc74-4fba-adb9-72503b762a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a5fb41-e2de-4a1c-8cee-a50dfcc0345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7490ae0e-73c7-460f-96a0-9f73625ba1ab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d77091-5925-4945-a0ba-76dd456e0ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9c71b9-a2c7-4a2f-bd3e-0056a30b0ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e864253e-25d6-493c-875b-7b6c22431eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc06c3d-91e9-4e27-a113-17eb3164a0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2d745e-d8a1-4efd-bd30-f3c7ed85179b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf17328-3eb2-4a95-bf3a-8c9ca23835e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5304f5d8-2d4e-4c76-8c0a-3033e0d7219d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35bd4e1-7351-4ce2-af9d-620b5b9ee435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82aa1ea-6c15-4984-8ebd-c83cec310d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe5d628-4cda-49c6-a374-7af580679aac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1be180-e757-4611-a47e-3b819d255651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0be8c0-0d60-4ba7-9ac7-30316edf0ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf3d90b-62f0-4b1a-bf94-91739e49e503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da40a003-e705-45da-87cc-0897ef3d9d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b7c9e6-8aeb-469d-89a5-2d0e340a73a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13057a4-a4fe-4d9f-81f1-cdee75e2dd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe7f538-26cb-4e60-920a-207366b1a86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d96c93-3cd6-4f26-8281-624d6ad7dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bee6073-b6d5-43d5-b65d-9aa1292c3f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a80f3b8-9052-46aa-8a7e-427837541d6b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c611a4-81dd-438e-aa1e-49a9ab9c4baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c29e02-744f-454e-95a8-326900ab97dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada13ecc-1011-49d6-87b0-d0e978215612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10948312-7379-41cf-b261-9113cd52b46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8710ac9-1f21-4599-a5f4-1c414d6e3c11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13860e54-3db9-44c9-8dae-a6ceeb858249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95cdd9a-0e51-4de9-b50a-52dd55391dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d34f6df-be5e-4bc9-a766-c7aef98aaaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "896cd9b1-067d-4d83-a959-5bb459883379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50e684-2cc0-4cbe-baf7-d932cee9488a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18789817-fff2-4be2-b430-1f2ed9b0a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334a59e9-393b-49e7-851c-b6028ccbbac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0716ffa0-6fcf-4362-b785-8b01517a18e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9281c4e0-d9ce-4376-8d2c-26d7a316a9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61e7ae5-9641-436d-8929-066d81e990b1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b85ea7-75c3-4ff9-ba3f-47ee20bf329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8210b918-1955-4a83-8374-e14ed63dd8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc41824d-d8f6-4f38-aaa4-096acb800f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f4bf8e-6536-4eb7-bf81-fbe373526e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31da9a7-61d9-4e01-8f9a-11be1a8e2b89",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ad9db3-58ba-49c5-9be5-15a49914e964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46daf47-195a-4b49-baee-d2f953a3f04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe5f617-4d43-4ca1-8980-1781d50c2729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "391f0001-27d2-4f82-9c55-a7ae24dba29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc701d9-b438-4ded-8c97-5852867d89f4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d52528-c856-4eda-b6ec-4ad630494b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02d7a7c-3373-4bca-8bba-334200ca1607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15433922-5e0d-4753-b326-0659f5563859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac94602-d181-459f-a3a4-41c5bb73e7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f35cd9c-71aa-4997-a7be-77442b7f6bbf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a7c64e-4edd-4a33-9b26-8064e6c40734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0cec8a-3b39-4786-ae77-b7b75b965159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e58dda-eee0-49a3-8600-58479fdb54cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a33a836-f51c-40c5-9978-e46e9f89f9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a599077-13eb-4538-bd10-b62c4cb54962",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a31eea-8e66-4e8b-9973-8e2a05f599bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2af9ae4-8dc7-4d4a-8ad9-bb5ff752fd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443758c6-4ffb-4597-a505-e63bb87bee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a7b04d-7caf-4480-b594-b9ed0e501234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c068ce3-5c4a-48f2-b6c3-cf9b3a0bbe75",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce890fc8-9229-4535-820f-4fcd530e6778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d0e354-4df2-48b9-940d-d3bfea78868c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e4ac7-9d19-4d6a-8750-6764144e81a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf3b2e3-1f4c-43b4-bb8c-bd75247fc2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4151073-404e-4084-8c1d-ea6e6bbb4552",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbb3f5b-ea10-489b-ba5f-3bd6ad076bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0aac71-d1ab-42ae-9f6a-bb7436acf06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53619e05-1b4f-46f9-81e6-1faadc25acb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d635e61b-7e8d-4fd7-bdee-99274e1746ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b992c61f-aad6-4858-b7df-a6d26a286c1c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a3e6a-d31a-4046-a194-51fcfe7c0b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b2b6b8-b6ba-43eb-bcba-abcbb4968be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee5043-b655-4762-ba6d-c756bda098ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6dee3c-5a5e-4963-87ba-a50e98a92078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39ebfe3-b076-4f19-b39b-c73a7a50749b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96583a0d-a1d5-4261-94ba-bbf1638a6158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48743c7c-6886-452c-ba9c-a53d034cb2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130c6af6-3563-462f-8881-b0ef70da949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9475d0c-ebf2-4aee-8175-54ebbe2267fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f43f25-995c-444a-bdf1-75fe04406537",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69aa55e-5d9f-4a0d-a71f-7f7939cdf444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0dc5e3-dc88-4d54-817a-8fe28bd74304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91da0e7f-8229-4dde-9589-e8e249ec4313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c28627-5cf5-4f56-ba3c-5b93000a5db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972a487f-b8c0-46c2-8f85-c68ee79a8bc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f638a08-adc8-45c9-a977-3e50a9b3e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e6dd69-e6aa-4bdc-bc4a-d257a5f08f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58dbabd-c348-4523-a6c8-5b1fec8c7870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01111c0-114c-4e23-84d0-fcd32e6b12a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab53464-9fc2-4d1e-a156-00ed1a5f05d4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b108d46a-3a43-4f61-9b65-bc675a52604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5419a3fa-b52f-4187-a1b1-218dcdc65f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c3509-1c39-473d-81ed-7492122573c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda3074e-f0b6-45c9-a1d4-268b9f60bf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7737ee4-419c-49b6-aa77-85052f60731b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0866d1-8b03-4cbf-acdb-1e82a78742fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6607af61-781e-460d-b849-a7c8be012cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4720f47-ac7f-4b0a-adc4-a7a86457092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "101f829d-6f17-4df6-a7f8-a88f3dc9d017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce11d3f8-c2dc-478a-b544-7538caf2a997",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f47887-f56d-4285-996e-892c4f0ef6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bacde0-7ce2-4b3b-82cc-f87c19310ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b70970-eb68-4674-bd83-1341bbe07b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8bedc6-8fd5-4444-b93f-027ba3c271b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5c2c2a-3e89-4665-ae76-b3da0c95b913",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a13fba2-c681-4e03-8a13-ff21a0723fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac9e76f-2990-4a2e-98a8-ea0ff52ed01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ef2f74-a550-4924-8f7d-0a41dddfed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89367dfc-b4ec-41fa-baf6-02c4ac756df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51097e-b5f4-4191-a6a9-ecdc74ca5f85",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92b5837-d4f7-4b42-b435-c98a3bbd476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c319544-57c4-4fad-bf7f-c6fe118800e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e3fe9-9e30-43d2-ad02-1bc9e8ce61ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca97539-4c65-4832-a839-1e22593c0e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356e2964-475f-42d6-b7ab-de00f9cda659",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f8b152-6bd9-4f37-a0a6-e4c757efd990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4381d1-1c39-4598-a549-d1f26b843578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea30b9-16a1-4077-9115-18b3530557d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801743ae-7d66-4e87-950c-79f404f5772c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aebd364-f067-4e2c-bf2c-0f415bbc9859",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b4dd75-f0dc-4cb2-b711-11989e5ba53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56891562-76cf-4cd6-ae81-358b855ee845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a217729c-299a-4d42-a5b5-292f10147cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97dc1b9f-5b72-437f-931a-956a60c4c4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea60e2a8-8766-495e-9a5c-672cec94aab5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8425442-c5e7-4b26-9960-73aa84f4a8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed28632-1cdf-4c84-aa14-69e260284653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c292a64-f8ac-4519-9bc7-b3c5bcf3cb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb7e4ba-6043-49a1-85b7-8c194f690fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898acdc2-82b2-4fcb-b51f-0987f0dc020c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc0a86-560e-4b18-a0c1-57aabb23a46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74cab38-2af8-467f-ad32-2321720fcc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97db47e5-4e29-4040-bf5e-036be35aba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9b9684-649f-4156-8949-971109fec468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed1e4a5-02c4-40ad-8360-912d000b2f0b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9837dbea-902c-43b7-b29e-b8207268cd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc4452a-c7d0-480b-a818-38ce9ad3ce53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc726b6-73ca-490c-9a93-93466f374b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c515d8-a494-4972-bee9-e3e154ea2b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba32368-d1c5-41ef-bf5e-1d00dd6d39c7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2ad81-a839-4f5b-b943-661f81c91ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98249e9e-0b6a-46cd-b348-cce208b3d3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc38759-dd4c-4710-91f1-de93090b0bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc07724b-6eba-4e96-a799-6faf7a4040b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf05414-7357-4226-8300-6c730c233e07",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e992df30-e32f-4b5d-9f22-3492934ef0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494bdf5b-8bcb-4599-925a-b724217f06b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86849735-5560-4ef7-b54c-ba11a4305732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dcf2f3-5180-4e60-a4a3-d704ab530598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cb644d-b76a-4fa2-9a38-61548f91157f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eefd55e-324a-48e8-9959-a9d7cc7c1e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066952d2-a036-4b9f-a367-504759d6554d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775ea5d5-bd2e-4d0f-b0e9-93802a45f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7242ea93-46e1-46d0-989d-9c585ddc3df5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91657f66-c1e1-455c-9fa9-d7b21e126090",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "153e94e7-4f45-4635-8fc2-cf1b50b54aa7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5da58f-cc80-4ee0-b52d-f3e9144ced7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c467dbe5-1ea5-4834-9ecd-93c6db80211f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc2f00d-d58f-4396-9b68-96567c41739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcbaaa6f-8c12-47cb-9de0-c4cc435d961c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07af262c-4e84-420c-9e51-6f82dc43edcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eb852b8-e87d-47ac-b448-e36f5ca4a0f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fcf662f-3422-4cff-8926-43ee22b42e89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "811a0dfe-4c67-489f-a272-b09e46e35858"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9ca7631-45cd-4633-b8f1-72c1c52ca16a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d58086d6-6a16-4020-a49b-23c0e8a7dfd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f7101c2-8a14-46fb-92ed-eecb33a8490d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8b3d6b3-2885-4627-9a6c-9bfe6ee27e12"
            }
          }
        ]
      },
      {
        "id": "953bea85-33a9-4c0c-a09d-ed160d258a34",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f45a2f45-7f39-4e76-b726-450b76b61457",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bb97873-0b5f-45ef-96f4-af444656a824",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20effb77-00c0-44c0-80ef-fcc4fedbfdea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ba20f-aec6-48dc-be0f-bae14aa2cb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53265b7d-9d91-4987-bb44-e3e654af9a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa448a0-16e3-43e8-aa0f-0f3979346b73",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d93bd11-1175-4137-a3e0-928b99d48b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b6a4cb-f9b6-49b1-b7cb-1caa4059d144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6598ff0b-a793-4a15-b427-4d934fb011ba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2de50f-cb52-42bc-a999-e4d3a359c9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5123552-39b3-4864-8a86-061ff7e69076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f509651-ac68-4ec9-947a-593240bdbd41",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60f48a3-63c0-4018-8519-65ff6f16eed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd32465-39cb-46ae-8553-26b13e2a30d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8270cd-5fac-40be-aaf4-2ad1153c8566",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87b30d-cd13-4f95-b909-fc89fef365a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c4025b-1196-4ca9-bf61-cf715a5180dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebd4030-9c60-44fc-ad8d-eca7714b05e1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4e710e-b556-4903-b8b1-e1a38d066b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcd84a8-584d-4870-a10a-d50f2952166f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e660dbf-1f14-4491-9ba7-26804abe1f61",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a2206a-1079-47c8-b639-d9b3425c159c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536aee5b-06ed-4ed2-bcbc-f42cd26286c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a643695-4b5d-4fb0-b3fc-dc978d18ba1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fe0583-0d2b-439e-99da-2268ef23b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2608d02-6f5e-45b8-a4e3-2dc946a5e6ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78b79cc-5e45-4b96-ac63-d7087f2ae631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40285017-cfdf-4eef-a020-96be0180c6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c407bc51-8e62-4dc7-af20-8d87610bad68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0874e49-cf17-4139-b96d-622e092c0d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c3e332-5768-4721-a5b7-268d082021c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd375122-96ca-4fdc-a5d4-d881ca5e22ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d6736c-a861-4f27-9e81-74b360d4735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ddc9f8-afe1-4fe7-bf2b-3d8655d73296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394c40e9-855f-47d0-b9d8-7a68afafcf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8a88ad-94e4-4e0d-835a-d4359df494c8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a49d4-e196-4c5c-9feb-c0c303fc8d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560d15c0-a7d6-4119-be74-02d926043f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204c659c-89e4-4b61-a0a8-e126d93d3b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24428a8-7614-436b-a8f0-72aa303d92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f27ae20-8eeb-4e97-98ba-c1c5bafe9628",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bce86e-e6a1-42a0-95f9-f3522b311c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247cdd3c-47b3-4c44-b814-b9c4153af795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f237bb-2f61-477e-bbb2-4108d99c513c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a927da5-a70b-43b2-ac1c-4019cbb917af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81dfa1b-6f7f-4cda-b7f5-78beac84b81f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cb5e33-7005-4209-b6dd-6519feb6511a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d024f9-610d-4bc2-965e-eecc203670b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dadc351-1feb-4745-a887-adf9d2677e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6789857-8646-41b7-ad97-d2cdc1a321bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f232c615-c753-4129-a2b3-75e2d8cd75dc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f542a9-b402-4bbb-bc9c-3c39cddc32a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa8f936-00c0-4f09-b5ce-f132800e1a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72195677-1d07-466e-b734-62888f600d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad55c4-cead-47a0-9eee-feb5a1d9863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cb9f64-2486-469c-8953-1ef58d35f79c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ea933-ba10-40e5-b382-569b6b21a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1adf14e-d680-4dbc-894d-9336f2f88668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37403098-17d3-47cf-b089-c7a4b9130471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886de107-5159-44e0-bf18-5a57b41a0ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdf03dd-bb98-4dbe-a424-80752cecb2aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4b84d8-4e01-429b-bf11-6b38543e3789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070d7705-0aa7-4e1b-a5b7-20e01357535a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa5c97d-0e5a-456f-9d3c-669808e0523c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2a84c-2425-4540-aeaa-e2e0af7282f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2eb738-9b4e-48b1-8057-b9ba89dae530",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14c2648-24f9-4766-8543-62115d788fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d763b2a9-9f71-4186-b9f2-06204323b19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd3d66a-6872-4812-8935-73ae92e856ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc74d2b-0b25-48dd-bf16-cab3b1a42e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1896ea-29dc-4093-8186-4e9ba334a3c0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b436d10-1342-43cd-a2e0-7cbb0629e8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3152aad4-4155-4d19-8e75-e5b5b40e54b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0c8e67-dd83-4d81-a6f1-67ec0d45f433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b66aa27-31af-4e8e-ab91-d660cd78b108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e036d253-a274-42d8-9814-99c6bb520e4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78970b8-5177-4fac-a894-020118f08226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b09f0e-36e4-4380-9513-365b5e316aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4787e29f-f0ee-4613-a493-4c33851695a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5092e55-6f99-46c2-b4e6-b6d8bae1e324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec23d502-0ac3-4484-b2ef-45a5746a4b6b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa88f3b-2228-4625-9aae-896ac987ef3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c02809c-f939-4b64-84d5-0b73644ecb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c1c00e-e52c-48fd-bf76-11be0af43fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbd1d12-3918-40f1-ba9a-804fce2ca957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdec754-6768-4652-8e1b-bb2fbad31ed7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c1346-f8d6-426b-a713-5ddd7f693746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e7ede5-f95f-4e3c-9890-748f29ba9c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a2bc0-7f6c-436a-9e8b-1adca15e14e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1440b604-c31c-41d9-bbde-f4803d7d1071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44128a79-fdf9-4ec3-b228-5e918c968631",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90bf9f6-8abb-447b-bcd4-ed7e5ce760e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2d9356-5122-479e-9ad5-c0fb55285a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485685ca-f594-487e-a332-d4fd4302f58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1c9bed-12e2-4810-907f-03b7cf299bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5929c9-15a6-4c1b-974e-e625188b16f7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a7896f-3f67-4ad7-9580-d778ebd477a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883839da-9016-4b71-89c7-381536886ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec0ec95-814f-4ebc-b7ae-194c9163f828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69651ff-ab0b-4455-8c12-2c7f53096f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3859bc10-8b1a-4d73-84f8-74e16eae28a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751c5d21-f4d2-4098-9135-def6534c578c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7565f6bd-3842-4188-94ea-835b8c391099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c00a5-93e4-4fe7-9252-00b8af1125b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876db404-511e-4983-9b7a-5daa0acb66b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe5e6d5-c8ca-4113-8ff1-3df88b0e90b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed26a946-69ef-4267-8f76-a18748bc0179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfa3820-bbc0-4f88-8fe2-47382fb2879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8013b606-7391-42c0-b476-6836d6b34d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2851ec83-7288-41c6-b928-72a52302e2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6948d6-4395-4094-a7e7-0d38100d6908",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc70609b-5b19-4433-92e1-9d48595ccc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d44864f-2c28-4afd-99ba-f3afe1602330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc2f72-ca9a-4a4f-b62c-b1b161cea608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5f22b7-a26d-4085-a7dd-095159eea384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ab856-fae7-4014-b48d-5826846144ab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49ee5c2-ddec-48a9-b257-0de47ccb01a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be6410f-31cf-4da8-9539-7ac3ddf26b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393d4e9-8241-4109-99f7-49ce99d29fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b82e6c-7367-450a-a98a-31fc87a81368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0923f18-d7b2-4a1d-90cf-953216c81cdb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d90e6da-d986-49ba-a034-20321fcdff3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72fc5b4-ccc4-4420-b3eb-b99be6d1916f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb54cf8-f25e-4854-ae7a-fa29a82d502a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3f42f2-3f17-4c07-84fc-8345f673ac34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fbfa68-6b55-4483-ad82-183bc8dee5e6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90b999e-a790-49e8-b0c6-991eece4d6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c44dff1-0006-4d90-8b02-78709c28335e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530a5a6c-191f-42d1-87e7-ee9e25d4b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190643f7-6ed1-46c0-873a-aa48f5943140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2919286e-994a-4ded-ad46-d3b69b860025",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f850a477-490c-4947-980c-207cbe87a7a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ce681c-17e6-4487-b210-403bbf2be8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a997b8e8-34a2-4eb9-afe0-372948656542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089a15f0-62e4-4d76-b1b1-0925f6be68cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35e8313-9153-4d36-a88f-009e1e7e4833",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af61e1e6-ac72-42da-8b60-82d90388037a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb1e056-1f12-4800-b6b6-0542e66c211f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcdee13-20ad-4b58-9f6e-9c70570d2d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c4183b-91b4-4bac-bf01-8555d1ea3a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5aa6c8-1545-4661-948d-01217858c232",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed91f898-05b1-473e-b00a-7e924118edf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff80911-bab5-4829-b07a-91ffeae26c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c35a3-38ef-4316-808f-f2f9b8a0321b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51a3aec-247c-4758-bc11-f196cf314793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aeb537-f7ea-4d82-b4e9-40c748d0551e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdd0a38-6fd8-4072-9ae7-73a9f7291de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd1a5759-6d65-45e8-ad00-50163c29ccee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2bb21-1673-4942-81a6-cb81805d55df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adc879d-a7b8-47fe-8197-91a2a6f7107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ebeb93-5151-452b-98f8-736dc4de65b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba77d58-b65e-4dbc-9265-fd8d6f7bcbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd15840-db6b-4c56-acb4-d40fb7dc09d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6842c61-3f4c-45cd-a574-93aaf367f8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b53457-88e0-40f3-9a57-aec5d6525cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ab2582-8cf0-4f19-8681-8d738471563f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8249a7f4-52b1-4d7d-b3fd-60fdf1c606ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f71405-0645-4d7a-8a6d-77051a18c596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69cd229-fcee-4f8b-a1f1-b13eb99fe5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9833b3-60d5-4d6a-bd80-63e5488bb5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb472696-f6cc-45cc-b898-902e30ab3999",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960227c-563a-4e7e-b75b-d0ff8e2869d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b312a4a-b582-4780-a5df-890e17dc362c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8206a-aad4-47d8-b7c4-68bc8fa0b368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79cf098-43eb-495e-b353-bcfdacc87da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012bd118-4f59-48a2-b1d5-3bd51ab36d68",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ecb5bf-b4c0-4779-97e6-0079e91660b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00b324a-7928-4a95-80a8-3d3cfd82cc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fd4b09-1dae-412b-9f69-d7428e297331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c360acd6-2850-47d2-b25f-3924bcdcf883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6bfc89-2b25-48cc-8950-8f5538ceb457",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07b408e-3686-40c1-9dcc-73aa6e6603a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44c2080-d69e-4c65-965a-1c0a8fc7d70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942f44ce-fc8b-4802-a865-46cc74551b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb1a318-ec96-4974-85ce-232d10c513b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a9f968-9066-4af3-baf6-8a338739eb9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ed9f0c-1f52-4130-94ed-38882d691efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da988cc2-5cc0-4c5f-bfce-71dce250639a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd2a5f7-d63b-4fc7-8550-80ae02ccb297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6de6810-117d-45b1-ab5f-df604c7b6d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e51647-305c-4a1c-9e92-1eef42f7dd48",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa676911-aa59-4d22-83fc-b10906118a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8019e1-de50-4877-b7ca-585d8976988c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aced4f44-919b-4106-ad2a-470bbfd8e5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fd35a8-8c6d-410c-a17a-2627a1faab6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e45e88-e537-4945-8442-23f9cd92bd65",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d9df8c-31e5-4c47-8d5c-5b667ed310f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ee0f4a-03ac-4a58-bb1e-04bed71e1ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44db393-643b-4673-aa05-6b4a84157138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c0df65-f33f-47f6-9237-03029470cae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9f26f-d036-49b3-a9b4-64fa8258dfba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37572f85-e5bd-499a-8931-04a58b125185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cee5a9-1a92-4f2f-815a-53c38980ca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de94d84a-552c-46fb-b4bb-388cb69ced7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312b6567-6ea8-4f5c-b165-66720098f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a84895f-ca68-4563-a5fb-4da93e4f1a6e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779cb0e6-7aae-4566-8a14-baffa4147151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d8589-23b3-49d2-89a6-38073baae875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7feba04-8b52-45b1-a9e0-aa4796fdd625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d693ef2-c003-461e-a407-6888f98fbca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f82eadb-df01-4ed1-bafb-2d86a087fcf1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6499e4ed-8f37-4cbe-be71-1d7a9fa9029c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05401bc1-e75b-4be8-a648-bc153dd124cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd41903f-1644-4330-aeb1-102e5ab1fdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca61df4-21ee-49bf-b205-68a3187b66e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27421b8-b8bf-4b35-aaaf-45d2a66be6b0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97ee7d6-c244-4fd8-8b7f-f44935d72f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddb68c3-03c3-4ce1-ad03-2df9f6f65299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b020f252-93b1-4f3e-8038-e36915a38674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848959b2-f706-49a1-b449-1b43ca701069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf87984d-e4ee-4b70-826c-2a2d5cdd8829",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba05ec7-760d-4349-9f69-a03d3c90b2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11695309-4df2-4cf5-98d8-69da581b9f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c8876-9ab2-43b8-a1df-fad2107a8c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4d4537-433c-436c-88c4-06264033e170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b94d3e4-a00b-4898-8952-8cc4d7917b68",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f663db0c-6c37-4ea4-a95f-3cf4c4b742d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5475b8d-3fcd-4f51-8ac4-c90dfc30b6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910d3f66-cd8b-4fde-ad89-51fd2eb21b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd958e1-2ce0-44be-b83b-8490e0913e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3a8620-e700-4c1a-b3ad-3e87231f580c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6714396-123c-4a4a-8f86-1040ae50fa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fb1766-c4e3-45aa-8849-943a1e968582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d852d4c-c26b-4e0f-b3cb-3aa98eb226d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9f6f5c-6584-4422-9af6-a80606089bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcb3578-e213-4007-918e-9bc3f980964c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14bc72c-c6da-46cb-b010-b66ba4e0d30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb561ff-14a0-4044-9d02-22d28cf34ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e8c132-4774-4610-8192-45a264fe6b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727961ff-23eb-4c66-a07b-f0321f8a507b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a5f403-f769-4632-9dbd-11cb531b59cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e915375-4bfe-41ea-8a41-41833623ddd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9b2f19-756f-4f5c-a36a-60fd69c3ee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f2c455-6d04-4311-a94c-dd6ee02e4667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190b0bae-39ea-4710-a855-7403bbebb98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44416ad1-9d50-4958-a518-ab8558b8fa82",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981f0a9e-0094-4ea8-9d95-91b2aad827d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6939f4f-f946-4292-8378-6909bcd882ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d0dcc4-af57-4016-8b48-d34a2c92ebc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c9999d-ae11-491c-9ab7-4fb887e7fe46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd5c79c-3cf4-4347-bb59-9e3583e3ebe1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fdddeb-10ba-4cce-becc-816e1e046c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52745051-f52a-48b0-a057-eb0f2fe6c4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ca125-dd63-4ade-84b2-0b04401bea05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ad8a0d-eda5-42c9-aa92-eca435f14924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400e383f-e8b8-4005-ade4-f7cb9ed0c98e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a08908-fa62-4896-a58a-18460e69b806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3ef306-5934-4c98-8224-0428a0388602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2839bb3e-8691-4540-83e5-83cfa8caa660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce7764-7cd3-4768-bd67-afe0662e8bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364be87b-4075-4861-8476-7ec99278f834",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a951ec-29c9-4090-80f7-04b316c42ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf8a58-c9cc-4ea0-81b5-c55148c15c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aa08d2-df01-4f35-8ee0-2df6a2c7ba47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0821296f-564e-49fa-a33a-81a74f8fefbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ad341f-bc26-4860-9b2e-39aa03e33041",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e6360-5342-4db0-b00e-c112d332a0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdbbf29-d86a-4af4-85a5-17eb83f75350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10ba322-29a3-44cb-a4d5-7159fbebbafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdacc8b7-cd7f-44d7-a1e6-f44393743efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867dcc6b-3d16-458e-8be1-33264677b601",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b81bc-c4ed-4c34-bb45-2079e8124f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1ec824-ca95-44a6-a116-e8065a3291e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fe6535-ef79-4188-9809-13a22a14b0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfa8a82-11a1-4e10-813e-76ba5b368ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e9eb07-f93c-40fe-8ee4-a613a7406f9d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ad0349-3221-4cc7-abfc-2bd0124bf367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91003ab-ddb6-4845-b16e-913ff3276e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f95b7-3d97-43da-a60c-68a9fcb50a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee19e7e-3f65-49e7-b39a-57411e7debb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da22482-afc3-4af3-8581-5c8d55fcb371",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29789b63-520e-4cde-8f32-ae1a23f529fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11efb515-9ecf-4fec-8fcf-e5d591e9f512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45808b2-6ece-4afa-8fa4-9ac902dfe67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59d08cd-5140-4f9e-96af-630c05e86246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafd15ef-8c6d-42e7-876d-18c8d7f324ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6390d0-8812-4d63-8575-fb7e42d741b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97df4fed-37d3-4e4f-9033-ffc957a1b81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac06eec-bdad-4a66-8ab3-8940306739d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2c7206-cda5-45db-a5c9-67aa390b1573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529b566-d08a-4550-a050-20e9feb0d764",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596e6bba-c8c2-4921-8c5a-39f8ffff1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f859eb-43cb-4b7a-af67-66bfe8d54c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344ff5ff-eb77-4da9-95c5-aee72c2545c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c82aa5-1a53-421b-923b-145815ca4160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87351331-0c92-467c-a3a4-4c6339b7fb18",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e6d5cb-087b-4c37-a89b-8b11bfee8893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9c7b1f-c9cb-4042-b7e4-94e1658a075f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3de7369-9ed1-485f-b9bb-c519546eb48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3be37c-b9e9-4397-a4c9-995c9e9e13b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5749775f-bd4d-4fdc-b84c-57066395416b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b592880-32c2-4d9f-a27c-16b86df72272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8f5039-8f5f-4923-86b4-c6671207552c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b5c8f6-3df9-458a-93a7-e76c36b599d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854795bb-39e1-4695-84a5-417f74c0c9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f632e02d-3902-4b6d-a367-88f5429d85d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d0f9f6-65e3-41d3-bfc5-0c32e63b9a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045d9ec7-3b9e-41a9-be8c-58c7eb44b7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb8001f-07fe-496d-baf7-fa2a2bbf7039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5545138f-e646-49ae-826b-da9287a34783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc3c700-205e-414d-8f50-904da9b26670",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ee51e1-9b7d-4fa1-8aa0-9fed94016f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a803cb2-8c31-488b-81e8-a16abfaa101c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc16ee3-6bfd-4d78-b7cd-c44e9b1d3d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42257a10-20d2-4be3-88ac-6ac97664ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9435f95b-731d-481c-930a-990be51387e4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fbb15f-7507-4ed0-9253-edecd071d5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6044fa1d-002e-40c5-b204-e207d15e15aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64acf84f-b81e-4477-8842-e0be7b064ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c40a524-0c69-482c-af7a-8765919f16dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53be8365-490c-44c4-94cd-548546d362cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0eeee9-d961-485e-ae64-5f6d3d0f69a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d0a463-a426-41c1-97bf-59fcd9c1e451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78284df6-20e5-4338-8151-c092fe90a8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d023652-7187-4c8a-ba5b-49017e8fcb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5b8e2c-7944-4db3-adc8-5f74b7cbacc2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b8ff43-06b5-4617-b3cd-0baae336ca68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9305caf4-1b65-462b-b270-446401536faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d34e24-40d2-491b-af94-071805c0024a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86e77e9-b764-44b5-b1fb-fe49953f652d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a1176f-ae96-488c-a4fd-8f82935ea420",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b06ceb-38a4-494f-8e12-7397597d1e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73dd49c9-c804-4798-9b8a-83c9b9ef46ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a817666-a9e0-4cca-bf17-9d7ec2570fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58ee309-dae3-4b06-80ba-6c3e0846f0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1dd672-5a05-4632-ba5c-dc9e78a59746",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a416f-b197-41df-aaaf-843313ecc85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee74061-af9a-477f-ba96-06892cc8109b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50723483-fc30-4ed0-9861-7d1a1a232452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d939807-d906-40aa-bfe5-5a97ddb81e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d291f665-1549-4543-bb08-2a6228ee1077",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed7aae2-ae74-483b-be5c-7025034f1056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b82404c-6d7c-4b72-a383-1238f54757bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc843fe2-07e2-411f-bd62-d19a31589cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74fa09e-5e31-4657-ae0d-daff42b17a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae076a86-8d49-4643-b7e8-33af88e28fcd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832580da-0bff-4c96-a655-2624f962602b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09103068-48b7-407a-b129-3527f801134b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b67c121-919f-4700-928e-50034c3c87ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d25960-1229-4df2-8502-2e248ea75038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc777652-4808-49af-8eda-cb697facd0ad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78236518-f0e7-4c84-ac98-84c2cbe45b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adabd1d1-e366-472e-b40f-51863f62f15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22af557-978e-43ac-a7a9-ca4d64098e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9de3d96-ae40-4861-bfcb-ec9185b44722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b600d-dab0-4b90-9955-4f8d632189c3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a98be9-5198-4250-9c48-81e8afe6a3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e009a9de-cdd9-4b6e-a703-2f5540df1420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25f4a4-f3a8-48b7-8141-3292c06315dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6682b6-b82b-497b-839e-b2524609006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032f0bae-25a8-4d9e-9517-1caa4bcc2680",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9095b0-af8e-4db5-beed-bd47b6d580f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce939b3-0345-4c5b-a9f5-983a09a2f77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948950b-4ce1-4411-93cd-a56e8eb9bb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d964f3-001d-4741-a7a2-d8332bcef3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7b7e81-e227-44f8-94e7-6fd3be739ea1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b4a912-9988-44e9-bcf5-b3a4229b950e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af48e9d-7253-48a3-8bbb-bb76c3455605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac42ed81-c01c-4852-bfc4-4a09a4821593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96bb7ee-b32a-48e5-a890-2e9a7c3710a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a47ab3-a454-4b5f-b589-36fc312c18fd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fdeb2f-8987-4ed8-b9e5-973d3e3711a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b23a201-3e10-40b1-befd-e6c8fe1ba1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c8b490-7f3a-4d65-b28b-ad8f16237dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35708a14-7b73-4b17-8021-be4a219f9c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec6e281-cd9c-4738-8a83-377daac8e4a1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9736ea-1997-47ca-86ea-76e1fb791268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9f8047-7677-43cc-9a06-923bb77527fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285e5f71-55e0-4dd9-b908-98a23ca1cd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f91009-d454-41c8-beae-d1e31d78fec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4e3c8d-5a16-4805-8922-bf685dcece52",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f8e178-949e-40c9-a551-2582765a55d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6592b65b-c6cd-45b0-98df-dc8c4ac04802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64e68a8-5978-4805-869c-37d96032d592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100b3bdc-5705-41e0-82bc-0adbf78a6c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0e7332-afcc-46ec-81be-56ec1bafdf7d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c26716-2489-4290-883c-983eb4cfdcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0bb37b-7bc4-4466-959a-c9927ddaece6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213ab5b-e7f4-4483-aca5-302f70da830e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bac8af-e593-481b-b344-e1db9dbe18c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b186d3-d28d-43c5-ba12-9c09f132f8e6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a6661f-a1d8-4d80-9163-7227e64a5f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "826864d6-6ebd-477f-8dcc-ef8df664551a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bd0d0a-13f2-4e99-86bd-3a507c6e191c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfab472c-e452-4015-b122-9b5a3af6778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefd0995-7155-4e92-bea2-a96ac98e01bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f917f8b-6f22-4ede-ab6b-a50dea159ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838b690d-6278-4fe8-a865-dc12d88f6045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4fd20c-e597-4b65-ac22-fb8ea8c4cd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf82b3bd-fc54-4315-8d2f-b7cb7a816e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fa586f-c994-49e0-959f-1c7121855ff1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c27c56-7184-461c-bde0-c29f93482233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3d6629-0f16-42e1-b70b-42aca5783242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75370ff6-4d38-4611-9856-355427882dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfab97e-889c-4904-ac41-412c83a3f357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dfd83c-236d-429a-97b9-0efc3ef25390",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46c1691-ae34-4e85-a24c-f5d44d9582a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bb3251-0c85-459d-8d77-8a91578559a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f31d7-d517-4a99-b7e8-23f002d242b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b5c39c-c5c2-4170-8756-83f51bf671e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d655d3df-84c5-454c-b361-224441b88bab",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1c32f9-dc02-4078-874b-84bd730d3bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f6bc5d-ce78-4f89-835e-1b85f7638689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43c04c2-af1e-418b-ac26-a4f465998d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6efb51-17f9-4f1e-b09d-cde006adfe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3bb120-ee77-417a-ac84-fb3a6da5d320",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36436e-09c7-4179-8b89-e948c8d14119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf919672-821f-4d2a-9006-5a8e4e9d7110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e66d9c9-2a82-4a8c-ab5b-21a8fce0388d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5656bd-40ea-4851-8e04-54643363d931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0708c7a-99ce-4df9-8b07-ec6180dc78fc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac64e3b8-3c76-418a-b470-415df74b6d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbb4f17-bfbc-430b-bd6b-e36d60b5f1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6bc96-2446-4ec1-9189-b9432898afdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052075fd-49b0-4309-bc3d-77039ac328fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacdadfc-ab36-418c-b27c-ac1c5128394f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e41426-f616-4b90-92ca-541bb7e7718f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41623da7-bb70-496c-872e-3198db46a770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5f8102-df72-4d23-abcc-7befd7acaed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c5bbe8-f796-47fb-97a0-8bc5969b81c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81ad865-6525-4859-83ed-f7e3b4c0d88d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5234591-3db9-45a9-a390-f764d3c9b75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c10fe39-e9e6-48ff-bd25-4ff6c8f367cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cccd519-a462-4bba-9c8b-60b406f87587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca46a784-14af-48d8-85ff-ae741afb7ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f470b-898e-4d82-a6ae-ff8cde9993a6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ee81f1-5208-460a-8ee0-02c9085b502c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e583f7-9120-40a4-8d58-bd52643362b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c274acf-22e6-4e07-a6ee-944b58dbcd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89880337-bcba-43aa-89d8-0fbf0ee85337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c26902-9767-4188-83e3-4a5ac25f77e7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360b6cc-7553-4c94-99b0-f48a11e2442c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3c6f94-cd9c-491f-be7d-fab0b57bbecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3751143-b688-44a3-8f09-3824fd9c2ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcae53c-dc53-4244-ad3e-55e0f1302639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468dcef-b19c-4a57-8a31-5aabe43cb667",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960806c6-ef39-46ee-877b-fa1eee78a6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d62d84a-291a-4abb-ade4-5767575e2dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc972213-347c-4295-9e52-7d2a1fb3584f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5453d70-997c-42d8-981f-fb47d9fd384b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746e9b69-401b-4ed6-8f95-2ff147379b8f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7cba19-3783-476c-8e59-b8c2198a78f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ffd7cc-170b-4a5e-b36b-e3fbab8ffef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f609a-f5b4-4083-8517-baf56914543a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25314a8-de2d-4a9a-8657-a4778bafed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a719e6-1009-4e92-bd7a-4576a6bc2fca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96125d25-1073-4475-9686-cee4e7915312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e427a04f-a275-4339-a012-fafccdbe6156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7b30c7-5964-4ce5-bf9d-6087c5abc96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b449e86-5dc0-4ad9-99ee-09998e596e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa2c575-1c43-4d04-b5b6-c5493b9c66d8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0a5248-6028-4866-a4d7-e65cca7c6cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8daabe-532d-4d89-b4e9-122ff122f420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055cd9bb-291d-429a-803e-4944f0a95c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69ece6c-394b-4a2c-87ea-61b7a6fdf625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093c7c63-0863-408b-b7cf-698f02b797cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91008c71-c08b-4018-a927-bd6fb8710641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2856649b-76b9-4e16-8db3-78760b137377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e1d127-26ac-4528-beab-3b04ea59c47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a4fc91-dce9-4e54-938c-f60eecfb765b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994cbacf-94e5-4def-a550-5ef182e59901",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561338f-ebce-45e7-91cd-9255ff0160ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b435586-3fb1-4c90-8376-76eac75ce92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbef3d7b-17f4-4651-8c0f-8ccb70585bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e858a7-c00e-4e11-aae6-5b6990dd0335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e16d9ab-7a7e-48cb-9f4b-aa66b8952c49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19beae7c-cd06-476e-9f01-32954d21b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ef4bac-60e1-4901-acec-856b72b1a0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d50236-4977-43e8-9ef6-f0cbd14bdec2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d66fa7-cd38-4822-a085-33df137efcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace40a62-d375-4926-9310-229aece4874c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b623073d-711e-464b-b6fe-660bebbc0bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98dec6c-14a3-4144-b556-fff1fff2b969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e64c632-1452-424e-8b08-a9602b79b6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb682b-efa1-4d4e-a6e2-ac573565edc2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40d624c9-66d8-4905-be13-53f739d0216d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d022d95d-c3fc-484d-8ab5-e2cd356eb714"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d281cbf0-44b6-4945-b630-c863b9997605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87fb65a8-a8b5-4339-9ebf-5096a7b5369d"
                    }
                  }
                ]
              },
              {
                "id": "72e2226f-872e-4c26-b086-1ad86d06ba04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04311185-00bf-458c-af47-019152ab228f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f15f1ef-314b-44e3-a534-380e37d30107",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0132b550-0adc-4b17-845f-d715e47fe327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e443e0f8-7a32-4527-ad67-44919043fb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01e211c8-fc52-4945-b28f-3c3a6de0378a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd78a50b-1559-4191-9374-b547e5efbf15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7bab28-7678-4fc3-b06d-3bd25112bf0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd1a61fa-35e7-4ab0-8025-cc651212ed16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f30f8af-2c48-4bcc-af58-502b7b97221c"
                    }
                  }
                ]
              },
              {
                "id": "7b2c3baa-77fd-4a56-95a2-732bc15d64b3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c7b988ee-f05b-4f3d-86dc-940e5d6dc0f8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5801e25b-5e35-49fa-a28e-da54188d601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d1a34cbb-3ac0-4ae7-94c9-0c18ee6b603a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc41687f-fae4-4dd3-9320-3eb3c47e45ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb58b57-73e2-499b-8993-cf3b568bc82f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b8965676-fc61-4515-a4d4-f1761952adfc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd594b7b-0963-441b-a19b-9c0d94b6bc7f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ec0faff-4301-4f9a-8d94-df0f0a2d7748",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea85a47c-ee8a-4080-9526-39eda056ea6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "541e453a-7f44-43b1-a87c-9ba0c8d0fc6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5596185-8a28-4330-aae2-03c42920d810"
                    }
                  }
                ]
              },
              {
                "id": "d83eab68-d2c5-4b65-9bcb-c377a2d6bb71",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e5d4018-a7fb-48fe-afd9-72b2a2819149",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c65d0c4-7784-4bc9-acda-a5fc11d372d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86b36a6-0a22-45d1-ad72-8326d2b62d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fee720a6-61d2-4bf2-be9d-36a797df086a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dc27b4b-355a-4205-9a5f-7979fcd4e68f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ffcfc63e-767f-4291-b0ab-ddec8faf757b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136bea44-c9af-462a-b954-bea8c6cf7925",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0351779a-57c8-4246-a8f3-3c3390ed281a"
            }
          }
        ]
      },
      {
        "id": "921ac006-8640-4d9b-842d-6bbb62232577",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5477670f-5008-4bb5-90be-f538389758fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "078c8727-36e4-41a6-a210-cb90261e321a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a3619f3-2429-48eb-9a7c-6ffc54d02c1f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e43e151-9a0a-42f9-a909-d0391d629c8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "49b814f2-8b46-4a93-b5e3-5218330697ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62807135-91ef-486c-89d5-dc256d06e963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ac61a7-7728-49ea-8178-5305cc92f463"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb6f276f-2069-4045-82ad-78cebbc7fdab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da7de734-847a-4a33-9238-abccadc48dfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffef89e5-a7c0-45f7-aeec-5346a03f09e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cfc0457-17a1-4e62-8339-1c1b519a7ec3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93c7b83d-8dd4-4c5b-8883-01784a5cc578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a05221c4-ddd5-4b95-845e-712289bb1971"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f002f11-745e-4bdf-b04e-2cae17976868",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12cd2650-c259-4b9a-8429-ee126ac253ec"
            }
          }
        ]
      },
      {
        "id": "e298b640-bc89-4543-9348-eb6e8f8653b9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9efd366a-0108-4295-a6be-5f6a80a712d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24f3a0f0-bd24-45d4-ab3a-60bcb2f9fcea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45cce241-2bc7-4b45-8961-6990b3aed206",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c970ee75-3b13-40f0-9a98-cdbd52988038",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8df830f-2034-4876-9e53-f94dfb4840df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142c2dfc-0799-4073-ae41-19a2d4968acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25ba219d-9a1e-4066-ba37-9c810edbde11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68d97c2c-b312-45ce-b2f1-b55fae15527b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "690215ed-d1fe-4480-8749-7c4a442d7a7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc52e12-5883-4836-845f-64acf7e70b2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58af4fc4-c2bf-48ec-b462-fbb6a495d791"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "934e93f6-a5c6-48e9-a4e5-04fe089a78b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2a5f882-1a87-4a5a-afcd-d6f225fe7a7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bff55f6-2111-4a3e-9fda-cfa58498be14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e35dfba-64f9-46eb-a938-8ca3c3339634"
            }
          }
        ]
      },
      {
        "id": "4c41e8ba-602d-4d02-9df2-2e31a470084b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0fcda332-e428-4f6b-b961-7362815d8ddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7a3a03f-2bcf-496a-94a7-62706283b947",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c29f844-b551-4cb4-8cb5-1d8d5b7ecee7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ec2a66-e85d-4a13-9098-9f0db114c941",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d711e8e-93e0-418e-bb9c-d2ea497b8dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751afb5e-24ef-4f94-91be-2fdac7b269f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44f11db6-e4a1-4658-a2a9-29c28f0d9738"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df3295c5-ff96-4333-a50e-38bdb6397363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90f0a7d1-f06d-4ba3-8825-4626fb033f3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afa71a3c-2e5e-4fd4-8f0c-c45275d6d1ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "462df908-2448-46d3-8d26-b0fd68e31b11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d9abea6-0922-40c4-8f23-737e10075909",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba7e14db-1f4b-418c-8309-b301d216e4f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9443b9e9-8935-4658-a40f-caea03719d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbd413a4-aeb3-4ec2-bb6b-61b7275aac9a"
            }
          }
        ]
      },
      {
        "id": "26410fdf-7cab-4052-96d9-6902b7de804b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "982a1c12-f917-48ac-a3c4-4a57b4bcb58b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6231a5c-c3a3-41d6-b514-5401b6e4d8b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f86df8e5-c369-42be-8cc9-327ffaef014d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34f4cd0e-18e9-4c1d-b6c9-acaf25c8e78b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3371abd-5d85-40e4-8be3-c52499b2794d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 224.4753521126761,
      "responseMin": 13,
      "responseMax": 7273,
      "responseSd": 455.86708445363377,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690850730442,
      "completed": 1690850808638
    },
    "executions": [
      {
        "id": "d956a3d3-9a6e-4a03-86ab-6bec45f9ce22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dce7dd32-4fe8-4367-901f-4deb1b5d8c92",
          "httpRequestId": "3e84da11-6282-4d76-a9c4-2b6e724a20c6"
        },
        "item": {
          "id": "d956a3d3-9a6e-4a03-86ab-6bec45f9ce22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a2f6121-a1ce-4b82-a202-6b783bd941fe",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "42c47e84-947f-49f5-a63c-ed12498319fc",
        "cursor": {
          "ref": "1bf66a80-4932-4311-a96f-b610b701d3a4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9fc133ba-7d47-4b80-bfb7-97d3d759ef6f"
        },
        "item": {
          "id": "42c47e84-947f-49f5-a63c-ed12498319fc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c0467808-7f87-4912-a28b-2776a17965a6",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "4fea191b-8ecd-42bd-be42-6c50599704b5",
        "cursor": {
          "ref": "9bfeff00-b66a-4374-b0f4-3dd57140a094",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e3d74005-3536-4695-a095-2b1e82b8e803"
        },
        "item": {
          "id": "4fea191b-8ecd-42bd-be42-6c50599704b5",
          "name": "did_json"
        },
        "response": {
          "id": "beed6f05-e42b-4392-8782-141708adf083",
          "status": "OK",
          "code": 200,
          "responseTime": 1275,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb903c-a463-4829-bbb2-b65bcf6a5af3",
        "cursor": {
          "ref": "6cc8befc-5585-418a-9bc2-3434c10f0ba9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a20f1098-d51c-4b7f-9677-588d43b9bc23"
        },
        "item": {
          "id": "6bfb903c-a463-4829-bbb2-b65bcf6a5af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "31ad72b9-e6af-44b3-8252-10b89a5510a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb903c-a463-4829-bbb2-b65bcf6a5af3",
        "cursor": {
          "ref": "6cc8befc-5585-418a-9bc2-3434c10f0ba9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a20f1098-d51c-4b7f-9677-588d43b9bc23"
        },
        "item": {
          "id": "6bfb903c-a463-4829-bbb2-b65bcf6a5af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "31ad72b9-e6af-44b3-8252-10b89a5510a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745c0d1-abad-489d-abdd-020aab97a610",
        "cursor": {
          "ref": "b9dedaf5-4326-4868-bfa2-af91eabedb6c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8322d48-74f4-4133-a043-96b1faff4314"
        },
        "item": {
          "id": "2745c0d1-abad-489d-abdd-020aab97a610",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da97c53d-1b13-4dfd-925a-9c29a67bf32e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 444,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88e3682-2666-48af-a1ce-ea02cbf2e9c6",
        "cursor": {
          "ref": "c97a8b81-a54a-4258-b6be-c77f54f8cac4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61e03332-fd40-4be2-88ac-5c0f0a556ecb"
        },
        "item": {
          "id": "f88e3682-2666-48af-a1ce-ea02cbf2e9c6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "513bbf6a-7938-495f-9cac-35165e3e9703",
          "status": "Not Found",
          "code": 404,
          "responseTime": 265,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba21cacf-0153-4b7a-b0fe-3a7964c51652",
        "cursor": {
          "ref": "f150a2b5-da77-4632-b305-c50675b6e577",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01d4178c-e946-4c76-adab-92936874736c"
        },
        "item": {
          "id": "ba21cacf-0153-4b7a-b0fe-3a7964c51652",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "20af4cee-8f82-4050-b7ca-eadef7c26a1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b614c9b-2acc-48cd-8bd9-fcc97e1f9152",
        "cursor": {
          "ref": "149ebacd-4ce1-400d-b9f0-9d90ff3656ab",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3035c008-12be-475f-aedc-9888e5731260"
        },
        "item": {
          "id": "2b614c9b-2acc-48cd-8bd9-fcc97e1f9152",
          "name": "identifiers"
        },
        "response": {
          "id": "7057abfd-09e2-4be5-98ed-31b865670570",
          "status": "OK",
          "code": 200,
          "responseTime": 1122,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480b794-8e71-47cf-825a-c5553e4a8526",
        "cursor": {
          "ref": "60f26d56-9f46-4a4a-b3dd-efc03caebe21",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9cf5c09-d9e5-437a-a69d-479e76c5cdd0"
        },
        "item": {
          "id": "f480b794-8e71-47cf-825a-c5553e4a8526",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5974fbde-b9fb-4a78-bf29-f8c0498c06c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede809d3-099f-4714-b179-86d120c2959d",
        "cursor": {
          "ref": "3a2d417e-6ccb-4151-a1c6-9f63aa10014d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa85ac72-edba-4e68-8d7e-3db5698860cb"
        },
        "item": {
          "id": "ede809d3-099f-4714-b179-86d120c2959d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "db22c19c-92b6-4951-acaa-57329587d216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5843352-a3c6-46bc-91f4-9c736368cd2c",
        "cursor": {
          "ref": "fe523fed-848d-4ecd-b025-7472071d3271",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7319f3b2-8d66-4a06-88a0-470cea740671"
        },
        "item": {
          "id": "b5843352-a3c6-46bc-91f4-9c736368cd2c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f5f6f654-3b22-4796-afb5-3012a7cc9bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e62243-2b37-4224-808e-f78029139ffd",
        "cursor": {
          "ref": "358fa7f2-b1b2-40b8-8341-7afe338aeeaa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eb8d4da6-7f34-40e1-991e-b0b7f20cb314"
        },
        "item": {
          "id": "43e62243-2b37-4224-808e-f78029139ffd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d2766db0-e383-4b09-9738-9fa9069dc577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f1ea4b-914f-428f-a59d-0b0df3951ef3",
        "cursor": {
          "ref": "66aa45ea-bef5-4318-8a25-a8113fa89227",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8e71a643-5eb2-4b3a-8e43-c39420e66aff"
        },
        "item": {
          "id": "04f1ea4b-914f-428f-a59d-0b0df3951ef3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3f2154ab-e0bf-4b31-ae90-b6ce678c7ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91bd734-a0d3-4ef5-b374-e28e0e70266d",
        "cursor": {
          "ref": "bedf5f77-1f22-4bce-93ac-8f1ac02d82a1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d0e4f2a-7337-4d31-be55-5fc19cd07d92"
        },
        "item": {
          "id": "d91bd734-a0d3-4ef5-b374-e28e0e70266d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "357f16b4-4df1-474f-a6fa-7f423f3dfd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8c5a87-5ec2-45cf-a19d-4f9e36d923ea",
        "cursor": {
          "ref": "88aa979e-02ad-4699-9764-3caef22e6108",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dfe24050-d5ad-46fb-b66b-9f6ab06bbef9"
        },
        "item": {
          "id": "2b8c5a87-5ec2-45cf-a19d-4f9e36d923ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "52437dda-7b72-447c-a969-f83aed2eae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db69cc-7f83-4a6b-ac52-f948b0767664",
        "cursor": {
          "ref": "80eedea7-efa9-467c-aed4-08f1f5bc7688",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "91636fa4-1965-47f5-943e-27c79e0f68e3"
        },
        "item": {
          "id": "28db69cc-7f83-4a6b-ac52-f948b0767664",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a1ffaa11-af58-49ce-bbab-91084ff8b475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa13843-63a0-4d81-9fb0-ff89485e5446",
        "cursor": {
          "ref": "14ef97c3-2d0b-429c-9d88-756b6a043760",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31d91f1b-534a-4bc0-8746-76dda241ef5f"
        },
        "item": {
          "id": "4fa13843-63a0-4d81-9fb0-ff89485e5446",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8a50e5f3-a4ac-4b5a-8619-5da1fa385152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfdf6fa-0391-4728-b917-baf6632c26d3",
        "cursor": {
          "ref": "ce544d67-89aa-4fe6-a8a8-efdc0ac77515",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b50dd3a-673e-4593-b306-1aabfa1d6369"
        },
        "item": {
          "id": "cdfdf6fa-0391-4728-b917-baf6632c26d3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf5833a6-6151-4232-b9e2-ef46304b24ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eacb081-19b6-4e9b-8077-a9eac6544773",
        "cursor": {
          "ref": "f5f1e471-6f8e-423a-b36d-d6ae97c0679c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "751455c9-04fd-4879-a432-e20c17ec899e"
        },
        "item": {
          "id": "0eacb081-19b6-4e9b-8077-a9eac6544773",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "254c1865-e90f-41c1-a288-ce4cba5b285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1880fe1c-7fcc-4655-afad-6a244cfc5c3d",
        "cursor": {
          "ref": "4c50142b-9a42-4a1a-a027-cf76c1cd7db7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "036ab8c3-7672-4f2f-a35c-b4de5fbd9d7c"
        },
        "item": {
          "id": "1880fe1c-7fcc-4655-afad-6a244cfc5c3d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08c86f79-957f-4179-ad86-053b3ee4fb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c134ddb4-7f27-4bcc-9279-4c321b6b3fa3",
        "cursor": {
          "ref": "59819d6c-7c57-4f11-9ce0-2556e6dbc3c2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c59fae3a-b8f7-4443-aad9-dcdccad228af"
        },
        "item": {
          "id": "c134ddb4-7f27-4bcc-9279-4c321b6b3fa3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6b8ca064-1d47-4ecc-bb58-de28ddbbc496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1c73a0-a116-4bb7-81df-f875efeac2ee",
        "cursor": {
          "ref": "3d1f8689-5312-468d-9c36-ec6b0a4e41e2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fbbf49fe-7112-432d-ae5a-1244aefeab02"
        },
        "item": {
          "id": "2b1c73a0-a116-4bb7-81df-f875efeac2ee",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ed94b777-68e5-4d25-9bc0-30028f20a21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2af0c8-6bd9-44b5-9cc8-85495705cda7",
        "cursor": {
          "ref": "48fdfbb5-5263-4890-acc7-145749fe26a5",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0847058e-e99e-4435-b173-dffe1eabe1e5"
        },
        "item": {
          "id": "fc2af0c8-6bd9-44b5-9cc8-85495705cda7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "96a1ce8c-452c-4eba-a0e2-ab8916350407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7058fd-5d88-46da-81eb-4722628c7558",
        "cursor": {
          "ref": "d2d325ff-20c6-468c-91ab-6bd1aca0e476",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "00f40798-1340-4442-a2d1-59d94eabf72d"
        },
        "item": {
          "id": "4b7058fd-5d88-46da-81eb-4722628c7558",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "240eef31-0718-44f0-a96c-ef71a412b242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7738c65b-9ab8-457d-9727-26fab25a6345",
        "cursor": {
          "ref": "e8acebef-b8dd-4fc4-abb3-bc4bdfe6b9e7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f6c911ba-57ff-4550-8a3b-8c07e9913591"
        },
        "item": {
          "id": "7738c65b-9ab8-457d-9727-26fab25a6345",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3e1c4039-9dba-4cae-892f-f5000eec1c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44096bc1-4022-4d26-a251-e0feea201d5d",
        "cursor": {
          "ref": "5354c0e3-eee0-45a1-9abb-1e02936b1564",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f836261-d606-4d35-b6a8-a6c7b72dce07"
        },
        "item": {
          "id": "44096bc1-4022-4d26-a251-e0feea201d5d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a126598c-6036-4b9a-a35a-9b47b4da97fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a292a6-da79-4499-bb9f-caa563d49f48",
        "cursor": {
          "ref": "f053f847-7e75-4a42-a55b-e90ed528eb8a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fd07ab68-db10-4440-a0b0-a3c4309fb241"
        },
        "item": {
          "id": "b0a292a6-da79-4499-bb9f-caa563d49f48",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6cc893b1-cdd2-424c-9caf-0be4ea097fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ee0381-4a0c-403b-8be5-ac61bdc577b8",
        "cursor": {
          "ref": "c4307ad3-0b79-4a54-8aac-93c6be9b15f7",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3fe1291b-390c-4a63-aa6d-dbb474836f40"
        },
        "item": {
          "id": "04ee0381-4a0c-403b-8be5-ac61bdc577b8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "004fe54f-8074-42e9-9d01-4f2b8629be85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ae6f1-8c38-4c0b-bd78-61171dcdf782",
        "cursor": {
          "ref": "6b0e3117-4779-4361-9926-5a4e69d0610e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d55642a3-a57d-43d4-aadd-8dba32b97bdf"
        },
        "item": {
          "id": "319ae6f1-8c38-4c0b-bd78-61171dcdf782",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f1a482c6-414d-43c7-ac94-10d3868aa817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a3e686-5da6-4f9e-973c-706486cf2109",
        "cursor": {
          "ref": "449c5660-e38f-42f6-bb7e-9d66dd7a05f3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "17be6157-b93a-40c2-a3ea-9ec8714a8b7a"
        },
        "item": {
          "id": "15a3e686-5da6-4f9e-973c-706486cf2109",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8f7c4fff-53a3-4c23-aad0-24b807cce089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e389731d-974a-44be-8e5d-3797c9353fab",
        "cursor": {
          "ref": "4ac41108-1950-46e9-a251-7787d17049e8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "359f3d3f-b446-44e4-8b68-9f09668611dc"
        },
        "item": {
          "id": "e389731d-974a-44be-8e5d-3797c9353fab",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4ff551a7-a67c-4acd-bd42-11394b8041fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287283f2-472e-4013-89e7-5bb8fe7935aa",
        "cursor": {
          "ref": "2dfef226-aa99-4c52-ae3d-2191627209a7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "beb15076-be13-455a-9487-86c1559104df"
        },
        "item": {
          "id": "287283f2-472e-4013-89e7-5bb8fe7935aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "937c8525-6a95-4874-a4ac-6cdc1468d03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45476287-d6af-4c40-966b-c8d4bc5bb58b",
        "cursor": {
          "ref": "d755d9ba-5bbb-456d-aa4e-50a3cdbc33d8",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "33041414-fa90-4dd2-bece-457e631607ef"
        },
        "item": {
          "id": "45476287-d6af-4c40-966b-c8d4bc5bb58b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6537471-cf7c-4c88-b92f-7cd357645bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41566787-dcad-463e-8f9f-5fb3d92a126c",
        "cursor": {
          "ref": "58ec26ab-9544-4f87-842d-1002fb91b6ad",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dd85efb7-f5e3-4d2e-9270-82edd4a8cb6b"
        },
        "item": {
          "id": "41566787-dcad-463e-8f9f-5fb3d92a126c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "116073eb-05c8-40ed-817a-b04503c90e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774fe89c-29e1-44d7-b136-463b8ea06da1",
        "cursor": {
          "ref": "5de75fa5-82cb-407e-9896-c8ad75c8c1c3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aed23d9b-6539-4150-96a5-0b8f9ce9ed7b"
        },
        "item": {
          "id": "774fe89c-29e1-44d7-b136-463b8ea06da1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c82c6cc-9529-476e-8f89-0a81e66c8e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5971281-afd3-42f2-9b0f-09325d97ee8d",
        "cursor": {
          "ref": "74c3fdd5-163b-4bb5-b7ff-a6c2a07a3a5d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d76c99b5-65e9-48c4-ad0c-a9ac26fb4345"
        },
        "item": {
          "id": "e5971281-afd3-42f2-9b0f-09325d97ee8d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "36c2fbf6-439f-43c8-bc61-be56fe276a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ce51b0-dd2c-4830-8b4b-2b75f37a6ab0",
        "cursor": {
          "ref": "e0ab5c07-e02e-4c04-8893-a6dee9bc357f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73b3264d-f43b-405b-835e-23ea0c5618d6"
        },
        "item": {
          "id": "19ce51b0-dd2c-4830-8b4b-2b75f37a6ab0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9476e5ce-d261-4089-8e22-d81d9f2adf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1baffd-60f8-4807-9699-6002134dd457",
        "cursor": {
          "ref": "f81d94fe-1d9e-4706-99e7-8d1b78a2a049",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0e957e56-302a-49ac-8392-e07a50a6bc67"
        },
        "item": {
          "id": "1d1baffd-60f8-4807-9699-6002134dd457",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7017fa32-36c9-407b-b789-04eada3dce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c95071e-bb47-4bcc-ac76-f90534d5daf1",
        "cursor": {
          "ref": "e837b2b4-e135-49ba-9e36-988dd69f228f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a90e1eed-2c73-408f-bd72-a2b47a2e0865"
        },
        "item": {
          "id": "7c95071e-bb47-4bcc-ac76-f90534d5daf1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e44a6004-7fa3-4efa-b9ca-78f72c4f3328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829d5bd-4c31-4f40-ab1c-b5a2abe21854",
        "cursor": {
          "ref": "e4c54be8-b036-4b39-a3ea-7d00d4136a80",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5b642167-09ff-4c2f-8851-5082c1dfdd73"
        },
        "item": {
          "id": "f829d5bd-4c31-4f40-ab1c-b5a2abe21854",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a543906a-2b24-449e-8f5b-0da0b1bbf083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6b58f9-5b5a-45df-874e-fc03ecebc5ab",
        "cursor": {
          "ref": "6f9220c2-512c-49b0-85c9-1f37a559f624",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5dcd9fb8-ee46-4944-bf33-cc148b4fc69e"
        },
        "item": {
          "id": "1e6b58f9-5b5a-45df-874e-fc03ecebc5ab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d340bd50-670c-4c0b-a365-ba2006ffcfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f0ee8b-9cf2-4aa0-bfc6-70b236a14284",
        "cursor": {
          "ref": "8a1d47f2-afae-44c0-9068-eb459d482a26",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4364d45-b621-495b-bcd2-fefb12f17248"
        },
        "item": {
          "id": "84f0ee8b-9cf2-4aa0-bfc6-70b236a14284",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bf3e0f09-bbdc-43ee-9817-0d9058a905d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1f7bbd-8a34-47af-9670-3f253ce4d26f",
        "cursor": {
          "ref": "7b844398-e560-4db4-a7e8-588f83348892",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b1990993-abc9-4375-8143-de025ca1afe6"
        },
        "item": {
          "id": "ad1f7bbd-8a34-47af-9670-3f253ce4d26f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d5325c3-7dd9-40dd-810e-365daf5c4edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6681b68-2302-4838-bb84-9ad6d04b1806",
        "cursor": {
          "ref": "f67b4d93-f8b4-4284-aea7-28409b224c3f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "76cb3c40-9cb1-4ba3-a471-1ace414e23dd"
        },
        "item": {
          "id": "a6681b68-2302-4838-bb84-9ad6d04b1806",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0573be6f-f1fd-4947-8d69-5cabd4d03745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa2c44-071a-4a97-b485-24f8f5b265d7",
        "cursor": {
          "ref": "fb1e3dfd-42c9-47d9-9df5-8bdb375640ff",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c4c0df7-cba7-4b75-b26e-7a3ee2769086"
        },
        "item": {
          "id": "59aa2c44-071a-4a97-b485-24f8f5b265d7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0267eae9-fa6f-42ab-a108-95e11da15431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcf0a4e-fa79-485d-bff0-bba0079f5d81",
        "cursor": {
          "ref": "f1408af5-cd5f-4c07-a507-9debb15eb178",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4afe5c37-3cc9-4e2a-866e-064afacfaaa8"
        },
        "item": {
          "id": "fbcf0a4e-fa79-485d-bff0-bba0079f5d81",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b57b38ca-1b0c-4c44-b109-5ea4b953fc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1f71c8-a244-4372-b34c-afad9e27b582",
        "cursor": {
          "ref": "12906fab-c233-4b80-9a27-470c6f98b9fe",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5d4083ca-6e56-4aca-8dab-82b536d45050"
        },
        "item": {
          "id": "dd1f71c8-a244-4372-b34c-afad9e27b582",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "489e4607-6228-40c1-ab51-75aae72048ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688c6c4a-b0e1-40af-bda9-a132e97e1f9e",
        "cursor": {
          "ref": "08e5dbdd-7c04-4eff-b72a-d06008f41355",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f88bd6c1-502f-4f9a-9c78-c0c91538b317"
        },
        "item": {
          "id": "688c6c4a-b0e1-40af-bda9-a132e97e1f9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c37f3433-9bb2-46f2-93ce-df343c1128df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a8d517-798a-4399-9659-7376df1e61d1",
        "cursor": {
          "ref": "ac54fc73-d866-47f1-8595-a8c20574e8d2",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c614dcb7-5849-4ae8-b37c-588b76f2a893"
        },
        "item": {
          "id": "40a8d517-798a-4399-9659-7376df1e61d1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "03b63a7b-8eb8-45b9-895e-09d32d87b572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088e7231-932c-485b-a6a4-73f1dab3c177",
        "cursor": {
          "ref": "d86d8a33-dddf-42a7-b46d-9a2365a581d7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "51d9aaea-f2b5-4755-a312-2dcb4c80e7bd"
        },
        "item": {
          "id": "088e7231-932c-485b-a6a4-73f1dab3c177",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bdac7cfa-07ef-4917-af0d-bc26d725278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ee3ba-a11e-4025-8dc2-56e55de13ba9",
        "cursor": {
          "ref": "0f1cd844-98b1-44e2-b32b-1a01d833aca0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "235e2c83-9631-46d1-acd9-fccc583d4836"
        },
        "item": {
          "id": "e27ee3ba-a11e-4025-8dc2-56e55de13ba9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "16d020ff-7448-4b0f-a1a5-70c104d4c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc758929-e15f-4360-9101-e6c5393e415c",
        "cursor": {
          "ref": "39a08f0f-5252-4350-bb2f-c03e2d253f29",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "88b95960-071d-4532-97f0-d2b68d973152"
        },
        "item": {
          "id": "dc758929-e15f-4360-9101-e6c5393e415c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1c3005b6-919d-44f4-b0fc-32319315cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94f56e3-56e2-4941-90c0-6730ce993dc1",
        "cursor": {
          "ref": "261125c9-7f2e-487f-bee8-24615a2b5428",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f43b3aa7-849a-48e6-b97f-3791c45b8333"
        },
        "item": {
          "id": "b94f56e3-56e2-4941-90c0-6730ce993dc1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad5a5da6-996f-4402-b31b-c4a2f02eb987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19ddf2d-6b65-4507-8c98-7bf9c96bc629",
        "cursor": {
          "ref": "8adb15d8-c782-4408-9cf5-47c4016d6e4e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b6198c05-98a1-406d-b38b-cab50982aaec"
        },
        "item": {
          "id": "c19ddf2d-6b65-4507-8c98-7bf9c96bc629",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a2b1b651-1ec6-4562-b51b-98b4da738280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968a7274-be48-4971-b15d-8f269fa98aff",
        "cursor": {
          "ref": "e5607b9c-38b5-49d5-b0ca-e7a35b35e588",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d5f8734-5bbb-43d7-b078-bfc5bd1325a2"
        },
        "item": {
          "id": "968a7274-be48-4971-b15d-8f269fa98aff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "72917465-7b19-47f6-8615-f2d29e55f82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7c2d47-5aad-400c-92aa-d0a26b76d335",
        "cursor": {
          "ref": "945e9cdd-5715-4b06-af85-8bf42d1bfb9d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e7b7606-597c-4007-b0ef-9b63589078fb"
        },
        "item": {
          "id": "3d7c2d47-5aad-400c-92aa-d0a26b76d335",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "397062d5-11fa-4cdf-af2d-d29c60a61d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef59b91-8c95-4bee-9c4d-35dec072f8aa",
        "cursor": {
          "ref": "8d9fce21-338a-449d-b902-7c949121fe6e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9a6812a4-d685-47ba-ab70-8a61986e6bba"
        },
        "item": {
          "id": "eef59b91-8c95-4bee-9c4d-35dec072f8aa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "91002e0d-d9c1-4a7c-979a-76bcca07ba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf7d6c-44e3-4a7a-85de-ae3e243847ea",
        "cursor": {
          "ref": "34c58b74-4f50-4a0f-8ccb-d994de241d49",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "97fb86cc-e5ec-419f-8fec-9b6b9a0beebc"
        },
        "item": {
          "id": "baaf7d6c-44e3-4a7a-85de-ae3e243847ea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e8f0e06f-cc40-4120-84e9-cc1cc1fd5291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badf40c4-f0c4-4419-ac02-05f585651afa",
        "cursor": {
          "ref": "bc5558bc-c2e3-45dd-851c-90b7a0f93439",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b5aa1cf4-a264-4545-b476-fddb19726e8c"
        },
        "item": {
          "id": "badf40c4-f0c4-4419-ac02-05f585651afa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81e513ef-ec05-41d2-853c-656f382e42d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ca002-9f2f-46ba-931a-6accaa43dd99",
        "cursor": {
          "ref": "ad2c26b6-a41c-4c5a-be24-64893a6904c9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8d5f5b85-bd25-4978-86fc-9dda11dd5743"
        },
        "item": {
          "id": "3d6ca002-9f2f-46ba-931a-6accaa43dd99",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5787014-aa4c-41c1-865d-38efa041a1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f9372-21e9-4094-8884-b8dcd0e22a94",
        "cursor": {
          "ref": "bb415f2b-5449-439b-b98f-0d912fe9083c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6e1894c6-7794-4cc3-95e2-14c311a8c07f"
        },
        "item": {
          "id": "b85f9372-21e9-4094-8884-b8dcd0e22a94",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6453cfbf-096f-4ddf-85d7-efd599339797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4122650-08db-4aa2-ad7f-ddbe5a5df689",
        "cursor": {
          "ref": "1f96368c-97be-4850-8daf-591ce72b7137",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dfcf26e8-6346-4065-8d4e-9e074cd7c3e6"
        },
        "item": {
          "id": "e4122650-08db-4aa2-ad7f-ddbe5a5df689",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b9bd4394-1212-4c9b-a9f2-9cb5e730eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6d935d-2f9f-48ef-93b0-7349e64d3ba6",
        "cursor": {
          "ref": "00af173f-371b-4d22-9da0-075ed288e2c0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d7b893fc-47df-452a-8cbe-280e3455279f"
        },
        "item": {
          "id": "6c6d935d-2f9f-48ef-93b0-7349e64d3ba6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5c140fe8-f204-4275-bafd-2c15152f2382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e04ff3-6871-44ee-ae8d-804c9dc5ce75",
        "cursor": {
          "ref": "6de9cff7-c448-4cbd-a066-c37716a59da0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0b9fff61-89d7-4410-b177-23ef6b4307e8"
        },
        "item": {
          "id": "00e04ff3-6871-44ee-ae8d-804c9dc5ce75",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2aba9ad3-db01-4670-b310-b59a32691702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f702e2-6780-4404-94f3-edd60cee955a",
        "cursor": {
          "ref": "10ebbf4d-1206-4088-814f-58cc56255661",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ecb6da8c-da95-46c8-8073-42796b29d15a"
        },
        "item": {
          "id": "e4f702e2-6780-4404-94f3-edd60cee955a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "662fab69-4cf2-4fff-8a5f-59f771ddc145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eef06a-0b73-4c57-9d89-d41d01d8f508",
        "cursor": {
          "ref": "5377cbde-8a0a-4afe-a3db-c1f51d4247d5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c062622a-f69f-44ef-8352-60b1dd3a219a"
        },
        "item": {
          "id": "29eef06a-0b73-4c57-9d89-d41d01d8f508",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f057cd7e-29eb-4c97-a4c8-655f539c2e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f5ee5d-f087-44a1-b3c5-2a1890a72822",
        "cursor": {
          "ref": "65dd8f0b-f9eb-4673-ad02-c8fcef727b20",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "924abb8f-ed60-4127-a509-f1e1547d4bd3"
        },
        "item": {
          "id": "63f5ee5d-f087-44a1-b3c5-2a1890a72822",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5061cfe5-40f1-4cd0-9d09-63e7d98ecc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ee58f-e697-4e9f-90bc-aeb1cce99273",
        "cursor": {
          "ref": "7ccbb36c-1ba8-4191-84e3-84991de76279",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "765baefb-0119-4692-aa34-80145c40161b"
        },
        "item": {
          "id": "955ee58f-e697-4e9f-90bc-aeb1cce99273",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b3abc7d-a9b2-4ca3-ac22-1a56e703fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a51d9d6-e867-4c1d-9788-c3d051546294",
        "cursor": {
          "ref": "f4663768-0592-4bbe-b28e-00e1974a058e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ea3e779b-86df-4c17-9d42-ed9ac3039f1a"
        },
        "item": {
          "id": "4a51d9d6-e867-4c1d-9788-c3d051546294",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b77a5181-2959-4fcd-a59b-58a51e76bc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706eb3f4-efe1-453d-892b-65f8c400b71d",
        "cursor": {
          "ref": "b9b3744d-766d-4310-9dd3-5ce708c752ce",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6a613f8b-4b3a-49e5-a75e-17ee4c966482"
        },
        "item": {
          "id": "706eb3f4-efe1-453d-892b-65f8c400b71d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b69d5461-5dd4-440a-8a7c-d9c1badae615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1a3b64-7845-43b9-992c-d66811a73bda",
        "cursor": {
          "ref": "c3b41286-b95e-46d1-bb6e-dd4fb230498e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6a2ed2f7-2be3-4b34-87a6-719f184d3d55"
        },
        "item": {
          "id": "fb1a3b64-7845-43b9-992c-d66811a73bda",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b02706a6-4c67-49fb-b75e-a40eab1fd509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0b9d8-b864-4bc0-86d8-05e4e022f333",
        "cursor": {
          "ref": "77faa4a5-d318-4ee9-9e03-3eb797d89079",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "01a7f4fb-eef8-4d51-8077-122ab33f983e"
        },
        "item": {
          "id": "5ac0b9d8-b864-4bc0-86d8-05e4e022f333",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "72111bc4-c9fc-40ae-b733-5bcfcbe723dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb518146-6c87-446b-b8d7-26c794ce58fe",
        "cursor": {
          "ref": "e7da23f1-fb52-46bd-b771-98d331d5f74c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "809e19ea-f955-4cb3-8ff9-22ce37a8ac2b"
        },
        "item": {
          "id": "eb518146-6c87-446b-b8d7-26c794ce58fe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5e07a408-98f5-4fda-8679-3ffbed303c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9277616b-751c-4177-8a1b-eb992ff46752",
        "cursor": {
          "ref": "721e92dd-9fe1-4cdc-a392-dbcbb4f121fd",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "69d5b781-c9e3-4e4a-ba62-311abc06699e"
        },
        "item": {
          "id": "9277616b-751c-4177-8a1b-eb992ff46752",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "41f738cc-7487-4dea-9e53-e9f345f6164e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c07998-b723-4afb-994d-478d3d22db6a",
        "cursor": {
          "ref": "6cd30500-7ba6-4ecf-9184-5418ec689547",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "82997bd0-3195-4af8-b123-6cc218ebd320"
        },
        "item": {
          "id": "d8c07998-b723-4afb-994d-478d3d22db6a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "07af59b3-c3df-48c5-b9e1-545b749a291b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93c0a6a-9805-46a7-a334-8714b56d6b40",
        "cursor": {
          "ref": "5dc38263-4123-49c7-8513-254789eef4f8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6ab514df-1413-4de2-a442-954b0ddf9339"
        },
        "item": {
          "id": "a93c0a6a-9805-46a7-a334-8714b56d6b40",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b7d6229-ca27-4aff-9749-3d2e12ca1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31944ce2-4ed7-45e2-94e2-d7555f82ca91",
        "cursor": {
          "ref": "b7940fc9-c712-40cc-bc0e-4b5eefc47040",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "36dc0696-2f39-4ede-bbbf-94d77084d0be"
        },
        "item": {
          "id": "31944ce2-4ed7-45e2-94e2-d7555f82ca91",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c4cf8706-14c0-40e8-901d-0dd899abecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb28152-6be7-430b-9932-31d73b1870b7",
        "cursor": {
          "ref": "82fabe5a-1b2b-4d13-aec3-b4be4a8ef8ef",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "37b8d802-736c-4f8f-ab27-97eebb42ae2a"
        },
        "item": {
          "id": "0eb28152-6be7-430b-9932-31d73b1870b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "04633add-0fbb-4b1c-b1d7-f51a847802be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e31e86-bb21-4963-be52-a1ec8024ed3a",
        "cursor": {
          "ref": "c9fb221b-4cd5-4e92-8c7a-b59fd9214a41",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6c4dbdf8-a975-4a96-bf11-0bc2d201ea15"
        },
        "item": {
          "id": "b5e31e86-bb21-4963-be52-a1ec8024ed3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b69e2e7f-8442-46d8-aecd-9e174720639d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b73e912-754f-4a43-b04b-11ba15d56ddb",
        "cursor": {
          "ref": "c58e6596-768f-41a9-a718-d172fe2b1017",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5af877e4-2b8c-481a-b6e2-f2e76f4e2f3f"
        },
        "item": {
          "id": "0b73e912-754f-4a43-b04b-11ba15d56ddb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "31066cce-9c33-4a93-9992-5e39e55ba91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5224d7d-329a-49c7-9f4b-507b21265505",
        "cursor": {
          "ref": "9759383d-98d5-48ed-b298-d9f43953c251",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "00363155-4b5f-4dd0-8943-17cbfeb1303c"
        },
        "item": {
          "id": "f5224d7d-329a-49c7-9f4b-507b21265505",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d59a6421-8c73-4f3c-9728-730858fdd15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df37d3e-cd86-4593-be10-c9342541869d",
        "cursor": {
          "ref": "fea227e6-90f1-4027-a5d6-05c55c368dc3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a00e5660-0c12-4d5a-80a4-a864b2a413e4"
        },
        "item": {
          "id": "3df37d3e-cd86-4593-be10-c9342541869d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0db72909-0694-4503-95cd-ada469e6e620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b1aba-3f67-4041-8309-a8a12133dd43",
        "cursor": {
          "ref": "2880284f-0597-4924-8dc4-f0ed1434b0ac",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c2c53ee8-8ba6-44a4-9d30-8b4cc2f10b64"
        },
        "item": {
          "id": "cf6b1aba-3f67-4041-8309-a8a12133dd43",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eb419016-5ee5-4fab-88cc-584013d6abf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73fddf4-c05e-4306-9079-c67ad88cd742",
        "cursor": {
          "ref": "70b7c4a2-42d3-4981-be99-c69317c81db7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23c1a959-9eb5-411d-8b31-c162f617bf2f"
        },
        "item": {
          "id": "f73fddf4-c05e-4306-9079-c67ad88cd742",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54c7a520-f4f8-489e-8f88-0a16a04e62a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab66f64d-a3b8-4fe9-805c-27d5f5793f8d",
        "cursor": {
          "ref": "4b9bd0ef-90ef-46c8-911a-be4a225f71b8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e73fc61-3fdd-432c-a8cb-49940bde4610"
        },
        "item": {
          "id": "ab66f64d-a3b8-4fe9-805c-27d5f5793f8d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c138471a-0b3a-446a-a1a7-010e008ce835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2cbd9-f866-4526-a525-9cdbcf6d6fa1",
        "cursor": {
          "ref": "a278762f-6a9d-4cc4-b579-24bb47fb5b86",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8954c994-90cd-4dfd-96bb-2c573c72571f"
        },
        "item": {
          "id": "73a2cbd9-f866-4526-a525-9cdbcf6d6fa1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bc33a5aa-e73f-42b7-bf65-5e3d430951f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6f968c-d90b-4092-8234-c593f0e3209f",
        "cursor": {
          "ref": "8cbdec26-964f-4729-9c04-f15e88a3f810",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0ee45744-74db-4362-9cbd-0c9eaf3b3ec8"
        },
        "item": {
          "id": "ca6f968c-d90b-4092-8234-c593f0e3209f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ce3ebf8c-48f3-4dee-a95b-aa949195f13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be5a44-fb5c-408f-8280-2e1c9ba79b9b",
        "cursor": {
          "ref": "c7a8fec0-5e1e-420d-a15e-76a56dc75311",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fdde7afb-22be-44ee-8b7b-a25dd030ec39"
        },
        "item": {
          "id": "42be5a44-fb5c-408f-8280-2e1c9ba79b9b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fcdfbb36-ca17-48f3-8c90-a32d479ec1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c4b1a0-a3bb-43c7-8280-3d7598872c9a",
        "cursor": {
          "ref": "53c21035-056b-4a38-bc83-1fe9e528c470",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "042ae08c-483f-4977-90b5-e11953cd4041"
        },
        "item": {
          "id": "a9c4b1a0-a3bb-43c7-8280-3d7598872c9a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "da4fcfb3-5155-4137-ab73-ea20775ae1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145f0a78-38e8-412a-ab31-4ca1e1abf2e1",
        "cursor": {
          "ref": "fa5661fd-e8da-488c-bc60-28afbea278df",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d07ba0b1-ff65-4e5b-892f-2c3b8b3fb290"
        },
        "item": {
          "id": "145f0a78-38e8-412a-ab31-4ca1e1abf2e1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2cbe7754-a429-4f47-b780-e58f0f35ccb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca8afc3-c43f-4245-bbb1-e65fd7997c85",
        "cursor": {
          "ref": "4ab5a128-3fbe-4945-b134-63c550ba2f0e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f135c8c9-9866-4e77-a4c4-4fd0173d6760"
        },
        "item": {
          "id": "0ca8afc3-c43f-4245-bbb1-e65fd7997c85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "abf9774d-d2e0-40c6-a86a-5ae7a976c685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc44421-d7b8-470e-a077-fab491432b3a",
        "cursor": {
          "ref": "e68c45b2-5889-4060-959c-c3d9357e02f9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8aef434d-abbc-4e0f-98e8-8cd5834a6a39"
        },
        "item": {
          "id": "fcc44421-d7b8-470e-a077-fab491432b3a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2a057fc9-7571-4a1c-8657-9756b4230572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb409679-bbdd-4f52-9f89-3c61a06dec56",
        "cursor": {
          "ref": "f4f14692-3334-4e6d-aca1-33f28cbb4e75",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5fca20c7-80fb-40ba-b843-37677cbe0742"
        },
        "item": {
          "id": "bb409679-bbdd-4f52-9f89-3c61a06dec56",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e37a1819-38de-41e4-95a5-063044cbbc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a02d0-b0df-4de1-b32a-5a00aadc9a72",
        "cursor": {
          "ref": "1cbd6c7f-b158-4128-8f33-728f8b3ae4c2",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ab034dc4-ecb5-4853-a886-0fa4ffeb66f6"
        },
        "item": {
          "id": "157a02d0-b0df-4de1-b32a-5a00aadc9a72",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c1b781f2-14a8-42ad-99e9-972fc569e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7632492d-bfea-498d-82a0-134adf1a6738",
        "cursor": {
          "ref": "d107c7d1-934f-44ca-b66a-06b1eae14ffd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1658431b-8d34-4092-a463-50a93684014e"
        },
        "item": {
          "id": "7632492d-bfea-498d-82a0-134adf1a6738",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "97ac20a3-a0aa-4898-909a-f087987708f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc412b-cb01-4672-bc0e-b8e1eb4cde18",
        "cursor": {
          "ref": "18b1a8da-7887-47e0-ac6c-562e2cbcf4d6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "006f648f-01b5-441f-a2d0-9c01fe53de76"
        },
        "item": {
          "id": "cebc412b-cb01-4672-bc0e-b8e1eb4cde18",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4bb7974a-9b5a-41a1-8a6f-27179775630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bcc2a9-cdc5-4720-a8ab-698f72d237f0",
        "cursor": {
          "ref": "d95b818c-1409-4d1e-9af2-776c55bb9770",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b9ca660c-17e9-4cbe-97b0-bae8690f3b64"
        },
        "item": {
          "id": "47bcc2a9-cdc5-4720-a8ab-698f72d237f0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5bc84457-147d-493a-a6e7-2378388296eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f67dfba-5afc-4cd1-90f1-44d7f7b4f57b",
        "cursor": {
          "ref": "5ad58e8e-a2e6-49df-9fe5-f5c19f65d8c5",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d8a200d-05a0-4951-8151-fb7e340af6a0"
        },
        "item": {
          "id": "2f67dfba-5afc-4cd1-90f1-44d7f7b4f57b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "df2eb48d-9833-47f8-90ff-869ac074949e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb9527-779a-41ef-a518-056f1faa6f77",
        "cursor": {
          "ref": "4d6bd240-ca2b-45d1-91b2-59d26f35ee94",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "16fcc1ac-bc1b-44cc-aa22-9f1cd579c75d"
        },
        "item": {
          "id": "7dbb9527-779a-41ef-a518-056f1faa6f77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e85eb922-a8ae-4990-ad61-afb933fe138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e31b84-c39e-407a-b022-f378b575bb77",
        "cursor": {
          "ref": "e4ab0df4-e7b1-487f-b7d5-b943ab5ddc3a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "36d1870f-fa84-422f-b6e2-e6617eaedea3"
        },
        "item": {
          "id": "a0e31b84-c39e-407a-b022-f378b575bb77",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5a6e66eb-36c0-430f-9548-cbed140c9fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a556f3c-ecb8-4a35-a19a-960f8d93c949",
        "cursor": {
          "ref": "db25f1c7-fc0a-41df-83ab-df1d121e220e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f0b66b13-e060-47e6-99a1-662e008170fa"
        },
        "item": {
          "id": "7a556f3c-ecb8-4a35-a19a-960f8d93c949",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ceae872f-a869-4ed6-aaa3-f0c2399d64d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a490df3b-624d-4279-84e5-1a0493efc0ba",
        "cursor": {
          "ref": "70a2ab56-691e-41f8-83eb-e602a045e6e3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0a21616b-cf1a-4f9c-92bf-748aabfc60a6"
        },
        "item": {
          "id": "a490df3b-624d-4279-84e5-1a0493efc0ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3d8d35df-952c-4bc1-8880-ea637ef3ffc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "9bdd1d35-f8fd-4e75-b5f1-cefa5a907fd3",
        "cursor": {
          "ref": "00b13860-dcf6-4142-ba5c-96a87f58df48",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e8c1d4c-65d0-4a9f-bc97-5b260e0511e6"
        },
        "item": {
          "id": "9bdd1d35-f8fd-4e75-b5f1-cefa5a907fd3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "44d4a62d-e8d9-4785-aacd-66ada6ae871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "700b04fb-f01d-4454-aac2-b5c36d12f05b",
        "cursor": {
          "ref": "1832c72a-c5b9-4406-8e06-6ff02107d745",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1278f025-7f79-4096-a243-cb63f9b2cc09"
        },
        "item": {
          "id": "700b04fb-f01d-4454-aac2-b5c36d12f05b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8c882ddd-1c2c-48cf-8f96-e121988f0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2f046cd8-d592-431b-920d-c23c84a66609",
        "cursor": {
          "ref": "ab1e65b0-02eb-4dac-be5e-81d2f000ac82",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4246ca95-ed3c-46a2-b9dd-84238bfd91f1"
        },
        "item": {
          "id": "2f046cd8-d592-431b-920d-c23c84a66609",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "836d5bc5-f8ae-487a-a5e5-d0fef6ff658d",
          "status": "Created",
          "code": 201,
          "responseTime": 7273,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "af80eb2e-1844-4c7d-8a32-a95070bc5a6f",
        "cursor": {
          "ref": "2335a883-d813-4913-a7c5-690457331984",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7bc04994-126a-495c-85b1-a9400fa0b1ac"
        },
        "item": {
          "id": "af80eb2e-1844-4c7d-8a32-a95070bc5a6f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b04f5696-9f74-4f00-b8a2-1897e426b16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "364010c3-7cf0-45b2-8c52-00242d14a69f",
        "cursor": {
          "ref": "d95fd0a8-4953-4c63-9a61-eeb113c62dbf",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "48442b21-2eb9-470d-8497-5d02807f9606"
        },
        "item": {
          "id": "364010c3-7cf0-45b2-8c52-00242d14a69f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f6ac7c4-1f5b-48fa-8890-b27078752e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "252116b9-0c26-41ae-8f09-3c4ba667c206",
        "cursor": {
          "ref": "3db7eb97-5966-4003-8f22-308b39dba8a5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e0cda23c-368e-4891-9320-d444a18c2530"
        },
        "item": {
          "id": "252116b9-0c26-41ae-8f09-3c4ba667c206",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "519833e2-21bf-48d2-93c1-a1e0f09d0cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ad097-4584-456d-b421-3f66d43c7b82",
        "cursor": {
          "ref": "844fd68a-f3be-4ac8-b0bf-909372cf4d15",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3670493c-e1f5-4047-8b4f-61250e94de0b"
        },
        "item": {
          "id": "3d6ad097-4584-456d-b421-3f66d43c7b82",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b7e64f0-de48-4017-b0fe-9429885d8c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd90b03-6181-4b52-b531-a15151f64b84",
        "cursor": {
          "ref": "a8c7e6de-c0c1-4645-8a0f-1716c70ca4f3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b524674c-a53f-4f18-b50d-7cbff1e866b9"
        },
        "item": {
          "id": "2cd90b03-6181-4b52-b531-a15151f64b84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "466325d8-2b94-42b3-af50-e0a2deca382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a983a5-5562-4f9e-b4c3-7f1168dab628",
        "cursor": {
          "ref": "55815eb7-a2b4-43df-86bd-927837c22169",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12f9ca3a-1929-4b84-bd25-58c51e039718"
        },
        "item": {
          "id": "60a983a5-5562-4f9e-b4c3-7f1168dab628",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "feff6ccb-07c3-4e91-9ef9-b07e7129a1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e0cd6-a9f7-47e1-813b-95092bd3b4e2",
        "cursor": {
          "ref": "dcf5e192-c80b-4f5a-bbfa-425c244c326a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "81db259d-400d-4634-8ecb-71c04f463bac"
        },
        "item": {
          "id": "a34e0cd6-a9f7-47e1-813b-95092bd3b4e2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef9387c8-6d01-4cc1-90b7-52c15b6c5250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f006646-e3ee-441d-8401-b82b427e95a7",
        "cursor": {
          "ref": "f5d0d902-01d2-4725-ab37-1a32782fd332",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2a86bca2-f06a-4d6f-bc32-3d304b34e55e"
        },
        "item": {
          "id": "6f006646-e3ee-441d-8401-b82b427e95a7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0bf5d0a-4504-421d-ac8b-bf2f77437d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d099bb5f-0470-47a2-89a4-70f25415301a",
        "cursor": {
          "ref": "52e334b4-70fc-4e78-a4ce-af49a598f77f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d448dac6-4ef6-400d-af2a-c5d98464838c"
        },
        "item": {
          "id": "d099bb5f-0470-47a2-89a4-70f25415301a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4dbfe24d-625f-45dd-b835-caa2dc022719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54f463c-2e21-46de-b24a-c2ce5b548662",
        "cursor": {
          "ref": "fb466869-e325-48bc-96fc-ff96adc8b24c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0184791c-016a-4c4a-ac6d-114e1efa48f3"
        },
        "item": {
          "id": "e54f463c-2e21-46de-b24a-c2ce5b548662",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c3036d1-ef20-4dfc-95fb-32eb4362edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a104b840-545a-478b-8b63-c1d75fd44ebe",
        "cursor": {
          "ref": "b857c831-9706-408f-94fa-1384f8ee2570",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e7337114-35f7-45a1-b8e7-2df2dc6466b8"
        },
        "item": {
          "id": "a104b840-545a-478b-8b63-c1d75fd44ebe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "70dda7db-61e8-476b-aab2-a9efcd380621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f1414f-0314-4ae9-8fbf-cb6cda84ac44",
        "cursor": {
          "ref": "e85d026c-ee9e-471b-bda0-0321d308959d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0de25002-4ffa-4be0-8997-f868fa370ab4"
        },
        "item": {
          "id": "78f1414f-0314-4ae9-8fbf-cb6cda84ac44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "42cc8c0b-4658-419f-b0f9-596c91c3ca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336cf9c9-7076-45ba-ad28-7ab54a7585a5",
        "cursor": {
          "ref": "e1b2e72b-c274-490b-83ce-a2548410a83b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5aaf1caa-355f-4af0-8361-d9e3acb6ea0f"
        },
        "item": {
          "id": "336cf9c9-7076-45ba-ad28-7ab54a7585a5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e9aaa81-1fac-417a-bf56-798aee09bed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4592db7c-79f0-4450-9d04-8fe1e9151351",
        "cursor": {
          "ref": "d9b89b79-08f6-42d7-89f8-c3e8a910e2de",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2774303c-0a48-42d8-a92b-98e2f49fd183"
        },
        "item": {
          "id": "4592db7c-79f0-4450-9d04-8fe1e9151351",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "227fa858-ce9d-4903-896d-1c7be80a176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb66f3-6ad6-4756-8e41-9313ef907e04",
        "cursor": {
          "ref": "cf0eb2c4-a70f-463f-8e73-984d3071a271",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f69cab3-cbf6-4008-8825-bd184979bc8d"
        },
        "item": {
          "id": "5ffb66f3-6ad6-4756-8e41-9313ef907e04",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "570aa15f-5926-4b07-a70a-143552a80273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaa228e-e6fd-4dac-9243-78c6bdb4941a",
        "cursor": {
          "ref": "4a7399bd-a206-440f-a21c-20f84e08bea3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bd784637-c9cb-4159-8d88-41d2727a3c75"
        },
        "item": {
          "id": "acaa228e-e6fd-4dac-9243-78c6bdb4941a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "86110b9b-43ff-454f-ad87-e073e1d86246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f549a1-099d-45f4-b66c-3cae04b237d1",
        "cursor": {
          "ref": "9ce7b432-bc4a-4715-a493-4cd21a53379b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6acf251-8538-4ca8-ad35-f0e80156e181"
        },
        "item": {
          "id": "79f549a1-099d-45f4-b66c-3cae04b237d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1444fb54-f9a5-4621-91d2-5b071bdd8297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb3167a-23f0-4624-b138-0032795f138a",
        "cursor": {
          "ref": "23a87d0c-77b6-4969-9a94-52fbc4416334",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "647c84ff-4e78-43f0-8d62-ac414a485e02"
        },
        "item": {
          "id": "7eb3167a-23f0-4624-b138-0032795f138a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e7ad6626-912c-4bac-af00-4b8d0196ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0647a9-0038-4509-a610-74e220c52519",
        "cursor": {
          "ref": "8f3ec9f4-b024-4dfc-942f-ba8b0fa58d93",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a115f66-d987-4e95-abdf-7ecabf93b56d"
        },
        "item": {
          "id": "ab0647a9-0038-4509-a610-74e220c52519",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d2b0a05a-16f7-48d2-baa2-bd80c78e2c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c95d23-9ca3-47a5-b197-53dc8ce0d188",
        "cursor": {
          "ref": "3b4330be-3fb9-4f4f-8bc3-15518b65d298",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9ebc1eac-bd7f-4ad0-9fd6-d5a5b659a598"
        },
        "item": {
          "id": "40c95d23-9ca3-47a5-b197-53dc8ce0d188",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ceb0a63c-6b46-43b6-bdb6-c40a93b5de16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4889f892-7a0f-4216-a03c-1b770c082fd1",
        "cursor": {
          "ref": "175189f8-4db3-4b22-be41-80af9e1abc12",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0ea170d-0cda-4e3e-b08d-2cccf93b1ff0"
        },
        "item": {
          "id": "4889f892-7a0f-4216-a03c-1b770c082fd1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8e8b2fe-040f-4605-9d53-1328e7485b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ec5293-9d4a-4ad2-9d7c-708f64a3a060",
        "cursor": {
          "ref": "71271251-7ed6-4f9c-ab16-278d8552b99b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "288b8293-931f-469a-ac31-895c35ba9246"
        },
        "item": {
          "id": "c4ec5293-9d4a-4ad2-9d7c-708f64a3a060",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b7e8aa16-76ff-4e06-9c87-2e8c77572ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50519dde-f3f1-4344-82ac-376d48da60b9",
        "cursor": {
          "ref": "b8bc2131-548c-4152-869d-728086791750",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4630dcb6-67dd-4308-84ea-d2ddafabe4f5"
        },
        "item": {
          "id": "50519dde-f3f1-4344-82ac-376d48da60b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9cfc4d5-c8f2-46f4-a2f5-5d95b272c372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc9561b-be60-4844-8907-545e5f471572",
        "cursor": {
          "ref": "089b703a-0061-4bf7-90bf-fa7f80526433",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "836d53eb-1df6-4563-9c3e-ac8ea715dcb2"
        },
        "item": {
          "id": "7cc9561b-be60-4844-8907-545e5f471572",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1f1dc0ab-5f68-4696-82ad-748bde766535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ed90a-8082-4817-9380-53bf74569a3b",
        "cursor": {
          "ref": "278abcd1-4874-4402-a2c1-c11c702372d5",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6e0e669-8857-424d-aeda-fd0bbee478b6"
        },
        "item": {
          "id": "183ed90a-8082-4817-9380-53bf74569a3b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9935cd07-5e6f-4e35-a213-a4d9241282f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da044d8f-9d78-42ca-adf3-fab854ff92ec",
        "cursor": {
          "ref": "13d2620d-9960-45ef-8486-ca1b27dca7e9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ef21fd62-0325-4ed8-af69-df9fb349f52e"
        },
        "item": {
          "id": "da044d8f-9d78-42ca-adf3-fab854ff92ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fd6bb8c4-974e-46b6-a196-97e2bc0a4d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f965bd8-5d00-4701-b104-67312532d05e",
        "cursor": {
          "ref": "898af591-6c29-4a4f-bc7d-f3287d8e84af",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "07369bdd-b1ee-402b-a1ca-070fa31fe5cf"
        },
        "item": {
          "id": "9f965bd8-5d00-4701-b104-67312532d05e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91225915-cfe8-45f0-a507-1d91a40b8627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf94cb-02a8-46fa-9ae1-f6e5fdaaeaf2",
        "cursor": {
          "ref": "cb8c1596-9704-4fc8-9ece-d77d5f1b638c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "914b1c2f-392b-4f2e-91fe-7b6dd73f700c"
        },
        "item": {
          "id": "20cf94cb-02a8-46fa-9ae1-f6e5fdaaeaf2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9aada7e5-02e3-4b82-ae9a-b775f9f6b452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24805da4-666d-4b71-ae93-903ebf55c4b4",
        "cursor": {
          "ref": "c6571d93-2335-4cee-9029-455c78f33eaf",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2f281c34-d6d3-4f23-9609-ab74b1e445d7"
        },
        "item": {
          "id": "24805da4-666d-4b71-ae93-903ebf55c4b4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "29c5a888-055d-4eb5-82f6-343adc8d0da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0a11f2-ddb0-46aa-b57a-0dd3d2dcdcc2",
        "cursor": {
          "ref": "a90ab54e-7762-4bbb-acf8-5f3a9a7cf6bb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a9575a7-5be6-43a8-861f-bbc687a19760"
        },
        "item": {
          "id": "fa0a11f2-ddb0-46aa-b57a-0dd3d2dcdcc2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3dc949ec-390a-4d21-9224-ca55f82fc23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da4b80d-4999-44ff-813b-436ceba2d3a6",
        "cursor": {
          "ref": "d035c2da-e5b9-43a0-b213-ba3433a9f90c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "33da5b79-8f8f-4af0-80dd-a75c6c318aa1"
        },
        "item": {
          "id": "6da4b80d-4999-44ff-813b-436ceba2d3a6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2278e54d-f0d5-40ce-98eb-874258e61304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd84003b-dcd1-4ed6-ba9f-ac04d6adbd80",
        "cursor": {
          "ref": "17a6b67d-5c7b-4c02-8019-1d985b6a6581",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "85b8bc6d-121f-48b4-a6f5-bcbf2234895b"
        },
        "item": {
          "id": "fd84003b-dcd1-4ed6-ba9f-ac04d6adbd80",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3538e353-ff69-4b8a-b494-622bf2c8c442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab5b8c0-aea5-49c2-860d-5b2603cfa392",
        "cursor": {
          "ref": "39c58cd3-9258-40b1-b5ab-7204fbb1a806",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f7acf65-d20a-454b-ba75-686251d0eeec"
        },
        "item": {
          "id": "fab5b8c0-aea5-49c2-860d-5b2603cfa392",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2f3051b2-cd73-4dfc-835f-5e2847e605ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170df5f7-14d0-4ea9-b884-34ff98ab8e03",
        "cursor": {
          "ref": "24774a3d-661f-4c5f-a156-7f5761bd3676",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "55688846-9e9d-4167-bc42-9474d84913b0"
        },
        "item": {
          "id": "170df5f7-14d0-4ea9-b884-34ff98ab8e03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bc69c787-1a76-4497-9466-d7c18da28549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0316a9c8-4257-47b1-b9b9-d19edbf57a4f",
        "cursor": {
          "ref": "ae4ac769-b1cb-4ac9-ab84-4da28e42f343",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a729828-d6a8-45a6-beda-990a8686b344"
        },
        "item": {
          "id": "0316a9c8-4257-47b1-b9b9-d19edbf57a4f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54a97357-a823-4de5-a7a6-3764125197c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8382a087-00c1-4cad-a2f3-c2bff988e352",
        "cursor": {
          "ref": "380188b4-56da-4fd6-9299-71369b3d668c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "495c63a7-956f-42ea-8125-6c55ce493486"
        },
        "item": {
          "id": "8382a087-00c1-4cad-a2f3-c2bff988e352",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4f4c5165-649c-4f26-995c-510291847fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd79b3c1-a1f5-401d-8243-5789bacf9c14",
        "cursor": {
          "ref": "1f52bdc4-db75-4023-b363-36cb00b3aed4",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7a1221d7-c1b4-4292-b0b4-110198951bfa"
        },
        "item": {
          "id": "cd79b3c1-a1f5-401d-8243-5789bacf9c14",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb7dd434-28e6-4893-86ed-009ffa79f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97980b2b-724e-4f00-bfd4-45d7c14aeb9e",
        "cursor": {
          "ref": "98115405-7dba-4a6f-a0c7-17af8d0cfd0d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95ec6a70-aa38-4cdd-b0f9-f14cc1e4094b"
        },
        "item": {
          "id": "97980b2b-724e-4f00-bfd4-45d7c14aeb9e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a084a69-5030-4604-a31a-2c44b9c5181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d483803-ca43-462e-aa44-cc5e7407ba41",
        "cursor": {
          "ref": "01331529-bf79-42f8-901b-3e49e14bf23f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e125917a-8156-4bec-9112-4906999fdf28"
        },
        "item": {
          "id": "4d483803-ca43-462e-aa44-cc5e7407ba41",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5e57d485-722b-4741-be39-8cb71a244317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65360558-6adb-4313-a8c9-cb476edbb781",
        "cursor": {
          "ref": "ebce0c6f-9b84-4f43-b248-cf19431a1a38",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9732195b-a822-48b9-9686-4301b7485864"
        },
        "item": {
          "id": "65360558-6adb-4313-a8c9-cb476edbb781",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c3c7effb-5a2b-4b15-9d7e-2c0ee97843a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414207c9-4812-4e98-a56c-653451f48f2c",
        "cursor": {
          "ref": "3a9b6506-5238-401d-8862-188da64aa883",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "385e75b5-2c04-4921-8f6a-0e93f426af35"
        },
        "item": {
          "id": "414207c9-4812-4e98-a56c-653451f48f2c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d997c2a-ab68-4e55-a324-e3de1b2d36cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7490ae0e-73c7-460f-96a0-9f73625ba1ab",
        "cursor": {
          "ref": "5fca7ed6-d54a-4805-a067-a5c4d15b417b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b6309dd5-d020-4a12-b870-974c0a496ff6"
        },
        "item": {
          "id": "7490ae0e-73c7-460f-96a0-9f73625ba1ab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0685ff9b-9618-415e-a6c1-4202f28f3f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2d745e-d8a1-4efd-bd30-f3c7ed85179b",
        "cursor": {
          "ref": "3af674f6-2c6e-4eec-8dbc-64c70109a7a1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "05c701e6-3aea-4e00-b961-032f31a245ee"
        },
        "item": {
          "id": "ed2d745e-d8a1-4efd-bd30-f3c7ed85179b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0b3b0a3-5b14-4905-bb5a-4a2e30540832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe5d628-4cda-49c6-a374-7af580679aac",
        "cursor": {
          "ref": "09c1fd19-d4e5-4b2f-8111-63d0bddcd310",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65099c21-91b6-4481-89dc-6be051fde8af"
        },
        "item": {
          "id": "ebe5d628-4cda-49c6-a374-7af580679aac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8f7a3cdd-ca15-43ec-b93e-6298c24119e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b7c9e6-8aeb-469d-89a5-2d0e340a73a1",
        "cursor": {
          "ref": "774aa7b0-55aa-45de-bcd8-4a6111e005ae",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a10dc5ae-8b44-4d62-84b7-e6406bcb78a5"
        },
        "item": {
          "id": "51b7c9e6-8aeb-469d-89a5-2d0e340a73a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f1fb4d25-a373-4fc3-aba6-11787d6f36af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a80f3b8-9052-46aa-8a7e-427837541d6b",
        "cursor": {
          "ref": "37683424-8461-4414-80e0-bf4ccb295830",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2c2a52ec-b9f7-4e86-8a35-2d50140256d6"
        },
        "item": {
          "id": "3a80f3b8-9052-46aa-8a7e-427837541d6b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aad40870-2631-4fbc-b866-f06fa04f2c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8710ac9-1f21-4599-a5f4-1c414d6e3c11",
        "cursor": {
          "ref": "12289a20-e7fa-41d2-8928-6fb3a93e4132",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6fa82372-166d-4c6f-8e5b-903f48b22bcb"
        },
        "item": {
          "id": "b8710ac9-1f21-4599-a5f4-1c414d6e3c11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b868ef7c-adb4-44ed-8a83-ccbc9699962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f50e684-2cc0-4cbe-baf7-d932cee9488a",
        "cursor": {
          "ref": "a53d04c7-c204-4b1b-af3e-6b27eca18167",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10fa1cd7-a9f0-4133-af1d-9d4188ccd787"
        },
        "item": {
          "id": "4f50e684-2cc0-4cbe-baf7-d932cee9488a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5050bfa5-cc7f-4939-af14-2b80d60c7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61e7ae5-9641-436d-8929-066d81e990b1",
        "cursor": {
          "ref": "67617dfd-bf7d-4d58-9a87-818105873451",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a1db73c1-ee08-4f95-a37c-8e9115053467"
        },
        "item": {
          "id": "c61e7ae5-9641-436d-8929-066d81e990b1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "acd46a32-56ee-4545-89a8-6ad4169d02f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31da9a7-61d9-4e01-8f9a-11be1a8e2b89",
        "cursor": {
          "ref": "c1a90768-0b59-4cc4-88a9-6a2176903326",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "66ea9e44-0e42-4209-b3d4-01aa4ab9e2fb"
        },
        "item": {
          "id": "e31da9a7-61d9-4e01-8f9a-11be1a8e2b89",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7eee44cf-2f21-4355-a47b-131a4c492485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc701d9-b438-4ded-8c97-5852867d89f4",
        "cursor": {
          "ref": "ca97e2dd-35ea-46d4-8f53-5608d2c71d7d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f4b89e5d-efa4-4d94-8f75-8ef298edc1ce"
        },
        "item": {
          "id": "0fc701d9-b438-4ded-8c97-5852867d89f4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b16989dc-18b2-413a-a957-b49172546db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f35cd9c-71aa-4997-a7be-77442b7f6bbf",
        "cursor": {
          "ref": "8c83a37a-c841-49c3-a04f-24fd1efd5eec",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed7630f1-9f77-4b22-a818-fe2ad7a0a7e1"
        },
        "item": {
          "id": "8f35cd9c-71aa-4997-a7be-77442b7f6bbf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5cfc330-0abc-49b8-abe5-651e6c1ebc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a599077-13eb-4538-bd10-b62c4cb54962",
        "cursor": {
          "ref": "61d52f7e-dd61-460c-bc50-54eb86e821dd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "84494972-93b3-46af-921c-c62294dbe197"
        },
        "item": {
          "id": "2a599077-13eb-4538-bd10-b62c4cb54962",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3cfa89c-aaec-40d9-abbf-4484be60ee3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c068ce3-5c4a-48f2-b6c3-cf9b3a0bbe75",
        "cursor": {
          "ref": "f7caca5b-987f-49b8-a24c-cb1ff152d21b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0195adfd-dec1-4a3b-828d-47446a5b0cac"
        },
        "item": {
          "id": "8c068ce3-5c4a-48f2-b6c3-cf9b3a0bbe75",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53dad3d3-4cd8-4e31-b0a2-124386a2fb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4151073-404e-4084-8c1d-ea6e6bbb4552",
        "cursor": {
          "ref": "69157225-68ad-4fdd-9910-524cd90515b3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "91155fc3-4bcc-4e15-ae93-bc3c7d18f9e1"
        },
        "item": {
          "id": "c4151073-404e-4084-8c1d-ea6e6bbb4552",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9bc8af60-4a59-446e-8827-6e4c53cffac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b992c61f-aad6-4858-b7df-a6d26a286c1c",
        "cursor": {
          "ref": "a2a1180a-afe7-4623-9f39-5d6679ac4741",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "159cdc63-8a5a-4539-a87c-2fd420ff75ed"
        },
        "item": {
          "id": "b992c61f-aad6-4858-b7df-a6d26a286c1c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9ca9c7b4-391c-4eba-bd1b-8d5dde53ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39ebfe3-b076-4f19-b39b-c73a7a50749b",
        "cursor": {
          "ref": "21811d5a-8bd7-477e-80b5-6a0808437ca4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0a88a0a2-047b-41ef-a8e3-d9178183149b"
        },
        "item": {
          "id": "c39ebfe3-b076-4f19-b39b-c73a7a50749b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e3b5d579-72e6-4d92-acbf-7b087950730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f43f25-995c-444a-bdf1-75fe04406537",
        "cursor": {
          "ref": "74a33c60-fedc-4d91-a1f2-822c1f1778c5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1ccfad20-1902-45be-9833-c765b8b07c62"
        },
        "item": {
          "id": "36f43f25-995c-444a-bdf1-75fe04406537",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7b84b83e-46a9-40c4-8956-9dd650b86bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972a487f-b8c0-46c2-8f85-c68ee79a8bc1",
        "cursor": {
          "ref": "fb33d236-b9f3-4ed8-89a7-fca58427e9b5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "78086d8a-0656-4a1a-81a1-d76348518bcc"
        },
        "item": {
          "id": "972a487f-b8c0-46c2-8f85-c68ee79a8bc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "28e6f671-c48f-44dc-aaa8-11f1d4c9ca0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab53464-9fc2-4d1e-a156-00ed1a5f05d4",
        "cursor": {
          "ref": "016912a3-b2db-4ef0-853c-ce054114218a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "508c0c34-51be-4be3-9c66-c14a89e8d331"
        },
        "item": {
          "id": "bab53464-9fc2-4d1e-a156-00ed1a5f05d4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "161ec7e4-f39a-4359-a88d-ce0ec6f52993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7737ee4-419c-49b6-aa77-85052f60731b",
        "cursor": {
          "ref": "690708c3-6d6c-4e9f-b102-74b466bdc52e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6171de0e-a24f-4620-a259-1d3060b1c29e"
        },
        "item": {
          "id": "f7737ee4-419c-49b6-aa77-85052f60731b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d601d4a7-75a7-4ebb-8395-7e1042ca8e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce11d3f8-c2dc-478a-b544-7538caf2a997",
        "cursor": {
          "ref": "2d23721b-41bb-4397-9e15-f5cd5e7eac16",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "448c7b3c-111e-4821-b72a-127580ae0714"
        },
        "item": {
          "id": "ce11d3f8-c2dc-478a-b544-7538caf2a997",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce33eebe-44ba-44eb-9539-66e9a69764fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5c2c2a-3e89-4665-ae76-b3da0c95b913",
        "cursor": {
          "ref": "7489009d-a9a6-48f6-beec-c2f39fa782e0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "73540a94-d63e-4db4-8691-8defd0c5373d"
        },
        "item": {
          "id": "0a5c2c2a-3e89-4665-ae76-b3da0c95b913",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b44ad0b4-1944-4d0b-9b97-6428f3847bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51097e-b5f4-4191-a6a9-ecdc74ca5f85",
        "cursor": {
          "ref": "985e724f-06f1-4eb5-944b-e7601598440f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3231f81-fd15-4c7d-a355-6aea3883d5ab"
        },
        "item": {
          "id": "1b51097e-b5f4-4191-a6a9-ecdc74ca5f85",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3cfe896-3d6b-4f6d-82ad-9d9fce5ae512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356e2964-475f-42d6-b7ab-de00f9cda659",
        "cursor": {
          "ref": "fcd0eaa6-2f67-4aab-b639-d1ffecd5fa90",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3ec40013-07fb-4c84-92ed-e10580e25f14"
        },
        "item": {
          "id": "356e2964-475f-42d6-b7ab-de00f9cda659",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8d1a841-afca-4dd0-b255-5ee86e00fd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aebd364-f067-4e2c-bf2c-0f415bbc9859",
        "cursor": {
          "ref": "e722555e-e3bf-4c72-838b-92342ed218be",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "94832649-ca8e-4cca-8fa5-1265adef8a4e"
        },
        "item": {
          "id": "5aebd364-f067-4e2c-bf2c-0f415bbc9859",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf3dd84c-23af-49f1-8472-9bab7fae85c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60e2a8-8766-495e-9a5c-672cec94aab5",
        "cursor": {
          "ref": "18573fa4-9d72-4e8e-a8e6-ab2abe54c8ec",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "709ef02c-a73a-45ba-9db6-f34d1daa30b7"
        },
        "item": {
          "id": "ea60e2a8-8766-495e-9a5c-672cec94aab5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9df33b5-d4f8-40ec-adbb-944f3c4dfaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898acdc2-82b2-4fcb-b51f-0987f0dc020c",
        "cursor": {
          "ref": "1d05c8ca-9353-4921-b4ee-7417ee404436",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0826b261-897d-412e-845e-9e4798945b09"
        },
        "item": {
          "id": "898acdc2-82b2-4fcb-b51f-0987f0dc020c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6ea37611-04a0-49d4-aa25-d165151f41d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed1e4a5-02c4-40ad-8360-912d000b2f0b",
        "cursor": {
          "ref": "c033bc54-f0c9-4276-9a3f-6f09bdea1bae",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9c05274e-e2ea-4df8-9935-603428be1736"
        },
        "item": {
          "id": "5ed1e4a5-02c4-40ad-8360-912d000b2f0b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c3eb7e24-3b86-410c-956d-bdb747a89180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba32368-d1c5-41ef-bf5e-1d00dd6d39c7",
        "cursor": {
          "ref": "8319604e-4ee5-44b7-9f0f-2510305ce6c1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e969cc37-78dc-47e3-9b0a-0ff19cf29491"
        },
        "item": {
          "id": "8ba32368-d1c5-41ef-bf5e-1d00dd6d39c7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2b4a7700-bc66-4e5c-8cff-e8f7e900de22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf05414-7357-4226-8300-6c730c233e07",
        "cursor": {
          "ref": "861bbe74-4b56-4b14-91e7-8ea51e368da6",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "52e1190a-719f-413d-9ec9-0e228cb85ef4"
        },
        "item": {
          "id": "ccf05414-7357-4226-8300-6c730c233e07",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0417518c-b148-4cf7-adea-9a178a8b4673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cb644d-b76a-4fa2-9a38-61548f91157f",
        "cursor": {
          "ref": "d25fb1f0-f805-42b9-8203-4b52606df089",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2a8a2f41-3bab-4fc3-bfce-d31f4d8e4aa0"
        },
        "item": {
          "id": "d7cb644d-b76a-4fa2-9a38-61548f91157f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9afa6035-2c0c-4af5-b1fb-211149c96d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153e94e7-4f45-4635-8fc2-cf1b50b54aa7",
        "cursor": {
          "ref": "f533920f-8a7a-4550-b9f0-eb733b884c24",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cad0f79e-a844-4c24-9bf2-64c1e22bd77f"
        },
        "item": {
          "id": "153e94e7-4f45-4635-8fc2-cf1b50b54aa7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4680ff00-6ad9-45d5-8dbf-c3d5a7e01937",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20effb77-00c0-44c0-80ef-fcc4fedbfdea",
        "cursor": {
          "ref": "d19611f4-c7b0-4289-b8de-7b2370e2a639",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8bf816b4-8359-47de-a199-0c9502d34340"
        },
        "item": {
          "id": "20effb77-00c0-44c0-80ef-fcc4fedbfdea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ec1b137c-6ac1-4efc-b083-ac2fee1af3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa448a0-16e3-43e8-aa0f-0f3979346b73",
        "cursor": {
          "ref": "7962dfda-574e-4033-a232-10dda86b284a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc089ebf-de70-44fd-a939-373e26f339f2"
        },
        "item": {
          "id": "caa448a0-16e3-43e8-aa0f-0f3979346b73",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d9931f74-2ea3-4e32-862e-5038cb32e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6598ff0b-a793-4a15-b427-4d934fb011ba",
        "cursor": {
          "ref": "431e4b3a-8fa5-4ef9-b1e2-260e088e4edb",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "400cd8d7-9502-4eef-ad56-69ac2dcdda42"
        },
        "item": {
          "id": "6598ff0b-a793-4a15-b427-4d934fb011ba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "26949dd0-246b-430f-b0e2-f45a2b59de3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f509651-ac68-4ec9-947a-593240bdbd41",
        "cursor": {
          "ref": "e13033bc-3b07-4e82-b7c4-bb22d13e97ff",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cbbfdf14-0f44-4d7c-8efd-e15257c9425f"
        },
        "item": {
          "id": "8f509651-ac68-4ec9-947a-593240bdbd41",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "86d6cb2f-cb68-47f8-8e0f-19820571897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8270cd-5fac-40be-aaf4-2ad1153c8566",
        "cursor": {
          "ref": "cd042559-b99f-4d89-8072-4e08f8bda51f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6c780b7f-c3ed-4d42-b879-5508d3a6bbe6"
        },
        "item": {
          "id": "9b8270cd-5fac-40be-aaf4-2ad1153c8566",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3cc318c5-f8c1-4b48-aad8-bc21ab0bb6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebd4030-9c60-44fc-ad8d-eca7714b05e1",
        "cursor": {
          "ref": "32ad5304-9496-47f0-b84f-a03c12cd0fdc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5cd05bf0-f1e3-4daf-8457-46bb357d9987"
        },
        "item": {
          "id": "3ebd4030-9c60-44fc-ad8d-eca7714b05e1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "097585e9-d1d4-4276-a8e3-db306a0190c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e660dbf-1f14-4491-9ba7-26804abe1f61",
        "cursor": {
          "ref": "fe201d9b-ef6d-4ea0-8c65-3988fa032a62",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c08ee624-a6b1-4f21-8ca6-2da415c8ed69"
        },
        "item": {
          "id": "9e660dbf-1f14-4491-9ba7-26804abe1f61",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e990184c-d671-4bff-aaa6-5ecaaf357c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2608d02-6f5e-45b8-a4e3-2dc946a5e6ec",
        "cursor": {
          "ref": "a0fd61a7-f393-4631-9cc8-09ae81efa165",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2b06653-c45b-47e2-8370-4233a60de051"
        },
        "item": {
          "id": "f2608d02-6f5e-45b8-a4e3-2dc946a5e6ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4df593aa-cc6f-482b-8585-89d32fc9a704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c3e332-5768-4721-a5b7-268d082021c0",
        "cursor": {
          "ref": "8dd9ea14-f6cc-40eb-b3e6-bd32aaf0bc9a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "57ed66f8-ddb2-4230-bb0a-01b7c076217b"
        },
        "item": {
          "id": "e7c3e332-5768-4721-a5b7-268d082021c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "332d4767-cbee-4ac0-b426-30ea02c46ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8a88ad-94e4-4e0d-835a-d4359df494c8",
        "cursor": {
          "ref": "d81ae03a-e7cd-4dfe-a93d-05d1688fb96a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "01665ae7-4e01-44a3-85bc-8ecbff223f6e"
        },
        "item": {
          "id": "ff8a88ad-94e4-4e0d-835a-d4359df494c8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cc8f31b3-a7cb-4116-9d52-a4e3c2fe8a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f27ae20-8eeb-4e97-98ba-c1c5bafe9628",
        "cursor": {
          "ref": "1dd2e3a3-55ad-4444-a23c-1a0f692f51e3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b49ddcb0-e1cc-45e1-aaee-41e9a0557299"
        },
        "item": {
          "id": "5f27ae20-8eeb-4e97-98ba-c1c5bafe9628",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "704bb663-af95-4dae-92fb-5c65e43c825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81dfa1b-6f7f-4cda-b7f5-78beac84b81f",
        "cursor": {
          "ref": "c0309a44-418b-487f-9526-343e57e46157",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3734a89b-5f06-48c7-84f2-8f3537e33fbf"
        },
        "item": {
          "id": "b81dfa1b-6f7f-4cda-b7f5-78beac84b81f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b976ad82-cd47-4c20-8601-9cbcc50f9c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f232c615-c753-4129-a2b3-75e2d8cd75dc",
        "cursor": {
          "ref": "3e96e03c-bea7-4bed-9267-14755cc5a430",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "07d69735-7d39-499c-a5e9-fa902bb1e3ce"
        },
        "item": {
          "id": "f232c615-c753-4129-a2b3-75e2d8cd75dc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f3a550ad-b6bc-495f-8d2a-c46e83dcd37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb9f64-2486-469c-8953-1ef58d35f79c",
        "cursor": {
          "ref": "59cc46dc-104b-4be8-b019-f74903e37490",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c85d3424-ad4d-4bf6-a37d-1feb2a2759ec"
        },
        "item": {
          "id": "08cb9f64-2486-469c-8953-1ef58d35f79c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ba49794-3b0f-4cf6-84b9-2f7e8aeb1985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdf03dd-bb98-4dbe-a424-80752cecb2aa",
        "cursor": {
          "ref": "7fcec55d-f2f3-42d3-ab90-25e86fd0023a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cee8574f-f166-4392-9452-5521804971c7"
        },
        "item": {
          "id": "ccdf03dd-bb98-4dbe-a424-80752cecb2aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "41f565b8-e37a-46ed-9af2-79aba8a276de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2eb738-9b4e-48b1-8057-b9ba89dae530",
        "cursor": {
          "ref": "2ece0231-f101-448e-8e01-2d8f996076ad",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb631959-1e29-4389-a76c-53091d9e9219"
        },
        "item": {
          "id": "ce2eb738-9b4e-48b1-8057-b9ba89dae530",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e8dc86bf-bacf-4ac9-93c8-8977b2deadaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1896ea-29dc-4093-8186-4e9ba334a3c0",
        "cursor": {
          "ref": "fc5aeb77-4bde-4701-a5df-2323310a96d0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ef56338-b5b5-4bcc-ae3c-9a37f4a89ef0"
        },
        "item": {
          "id": "3e1896ea-29dc-4093-8186-4e9ba334a3c0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34756ddd-707a-428f-b360-618cbe62af43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e036d253-a274-42d8-9814-99c6bb520e4f",
        "cursor": {
          "ref": "72462274-70ca-4a4a-bf17-9eaf6b9255c1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "739e1fd7-9ee0-48c4-8121-194aa1c98a0a"
        },
        "item": {
          "id": "e036d253-a274-42d8-9814-99c6bb520e4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "615a74a7-092e-44ad-ac71-a714ed0dc127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec23d502-0ac3-4484-b2ef-45a5746a4b6b",
        "cursor": {
          "ref": "85442fb8-7c0b-45ee-819e-539828b55ac1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "676301cf-7b7f-4f68-96d7-8f59b629d247"
        },
        "item": {
          "id": "ec23d502-0ac3-4484-b2ef-45a5746a4b6b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bbbc2985-abee-46f5-bebb-13901fde3009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdec754-6768-4652-8e1b-bb2fbad31ed7",
        "cursor": {
          "ref": "c98b2578-dc23-4676-98c7-5347c34c9e18",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "27670f79-5d17-4e20-9d30-b12a26370691"
        },
        "item": {
          "id": "cfdec754-6768-4652-8e1b-bb2fbad31ed7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2493c090-98ef-4842-bacb-15fe77322074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44128a79-fdf9-4ec3-b228-5e918c968631",
        "cursor": {
          "ref": "8ff4467e-4e3e-4fed-9c0b-f2e3aaf07a94",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "396a5ba6-5bfa-49ec-a0df-876f4f7186cf"
        },
        "item": {
          "id": "44128a79-fdf9-4ec3-b228-5e918c968631",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f7b40fe7-1fb9-4ced-aa56-6b43a4827e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5929c9-15a6-4c1b-974e-e625188b16f7",
        "cursor": {
          "ref": "a175e8b9-35f7-4556-a73c-c85af8cf6caa",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6509da67-39e8-465f-a554-b3f6e473a1e3"
        },
        "item": {
          "id": "5e5929c9-15a6-4c1b-974e-e625188b16f7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20ba3a21-119b-493b-8342-6d18e4704ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859bc10-8b1a-4d73-84f8-74e16eae28a4",
        "cursor": {
          "ref": "f4870500-1bee-4235-80b8-1a823e0f238d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "723bdf1a-5065-43fe-abfa-4f9b7250a094"
        },
        "item": {
          "id": "3859bc10-8b1a-4d73-84f8-74e16eae28a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5c549dac-7596-4312-8d2a-b7d071ae059f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe5e6d5-c8ca-4113-8ff1-3df88b0e90b5",
        "cursor": {
          "ref": "63f78fd9-2d3b-4702-8c1f-95166c0502f3",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32fe3b6b-2beb-4fb8-98bc-590f9ecf841e"
        },
        "item": {
          "id": "8fe5e6d5-c8ca-4113-8ff1-3df88b0e90b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c0fdd596-7ee4-49d8-9333-e60d92d1a075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6948d6-4395-4094-a7e7-0d38100d6908",
        "cursor": {
          "ref": "02730ab9-ab0a-4073-9434-84baac7065c3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "38c270e4-a8ca-4138-8037-24e33ad63519"
        },
        "item": {
          "id": "ea6948d6-4395-4094-a7e7-0d38100d6908",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2bd6966a-c653-471f-aecb-3824ed7fca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ab856-fae7-4014-b48d-5826846144ab",
        "cursor": {
          "ref": "48d09c5c-0458-44b6-ad11-4073dfff679e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9b20cb4f-03b9-4422-8173-30d2cea6ffa4"
        },
        "item": {
          "id": "482ab856-fae7-4014-b48d-5826846144ab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "69cb9957-543f-46f2-8276-4ed3b464678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0923f18-d7b2-4a1d-90cf-953216c81cdb",
        "cursor": {
          "ref": "2592685a-e5cf-4428-a0ca-c183853841e6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "44435af6-7081-4842-adde-1f31ee742e3f"
        },
        "item": {
          "id": "c0923f18-d7b2-4a1d-90cf-953216c81cdb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9f3c5584-536e-4eaa-a00b-932866b75318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fbfa68-6b55-4483-ad82-183bc8dee5e6",
        "cursor": {
          "ref": "7ec992f9-4ccb-4550-ae59-8e7b21bf13d4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1fa65bd4-aa12-42b3-9a5b-f18c108338d1"
        },
        "item": {
          "id": "51fbfa68-6b55-4483-ad82-183bc8dee5e6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4e5fafca-f398-42aa-a210-d053e736fb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2919286e-994a-4ded-ad46-d3b69b860025",
        "cursor": {
          "ref": "4c9218bc-bb7e-426e-92c1-8863b2b592bc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf49bb71-568d-4134-8adf-9485bbaccc24"
        },
        "item": {
          "id": "2919286e-994a-4ded-ad46-d3b69b860025",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ee5dc10e-f4a6-404e-84e1-cbbee7fc506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35e8313-9153-4d36-a88f-009e1e7e4833",
        "cursor": {
          "ref": "40a989ce-4688-411d-b70a-411b8d78bd43",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d3e9224a-ed66-4a8d-bf99-a5d560b60019"
        },
        "item": {
          "id": "b35e8313-9153-4d36-a88f-009e1e7e4833",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fba404ba-c1a2-4068-a82e-483d2ecc5d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5aa6c8-1545-4661-948d-01217858c232",
        "cursor": {
          "ref": "d54b863c-c84a-4e2c-aa96-c0696a19f091",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7f7135c7-2821-4091-b53d-003547b87162"
        },
        "item": {
          "id": "6a5aa6c8-1545-4661-948d-01217858c232",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9e4ec538-4bcb-48f3-a845-4c2d92472a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aeb537-f7ea-4d82-b4e9-40c748d0551e",
        "cursor": {
          "ref": "473f4607-3745-45c9-9bba-6abc8f897152",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "65326f51-c9c2-44c5-8656-de568939fa94"
        },
        "item": {
          "id": "99aeb537-f7ea-4d82-b4e9-40c748d0551e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d534230-aabd-4185-8267-aba6640f35e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ebeb93-5151-452b-98f8-736dc4de65b4",
        "cursor": {
          "ref": "0cc7bc57-9a7f-4eff-8a29-f506f2900dfa",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b8645be6-9642-4863-a2de-929471e4fbd4"
        },
        "item": {
          "id": "b5ebeb93-5151-452b-98f8-736dc4de65b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9b45e049-f344-4af9-add0-b683fc38004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ab2582-8cf0-4f19-8681-8d738471563f",
        "cursor": {
          "ref": "437bd6f8-7b71-4f30-9b0c-88ebd76c2e0d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9c9cf8aa-7580-4e52-9cd3-0a23c210ff54"
        },
        "item": {
          "id": "73ab2582-8cf0-4f19-8681-8d738471563f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "22abf1ca-5369-4771-bbcd-91993725fbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb472696-f6cc-45cc-b898-902e30ab3999",
        "cursor": {
          "ref": "29c7582d-8635-4255-94f3-88c20ccea4f8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "103dcd2a-61a0-49f5-a3a1-be3ce17e50c2"
        },
        "item": {
          "id": "cb472696-f6cc-45cc-b898-902e30ab3999",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f1beb764-8ef8-4f3b-aab3-8ed85a6b48f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012bd118-4f59-48a2-b1d5-3bd51ab36d68",
        "cursor": {
          "ref": "97bf9de7-03c8-492d-9ed6-42e4f1d8af89",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ebd6ba5e-b002-4fa3-8753-645d4c09b977"
        },
        "item": {
          "id": "012bd118-4f59-48a2-b1d5-3bd51ab36d68",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fa13be13-4ced-4220-8b24-b628f18a5a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6bfc89-2b25-48cc-8950-8f5538ceb457",
        "cursor": {
          "ref": "06fe6120-8a7f-475a-b7a1-42cd830a270f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0d04cf4e-21c3-4ab7-bf87-2ce831f1eb1a"
        },
        "item": {
          "id": "ac6bfc89-2b25-48cc-8950-8f5538ceb457",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "478b7167-99d4-49aa-a531-f9455e2b9db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a9f968-9066-4af3-baf6-8a338739eb9b",
        "cursor": {
          "ref": "8c1e72c9-4066-4b20-ab4c-48285063d711",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f5a07592-4169-4d5d-9e78-b23604b9fc05"
        },
        "item": {
          "id": "53a9f968-9066-4af3-baf6-8a338739eb9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c2e0d8aa-a3d8-4ad2-92ed-596c8e6697e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e51647-305c-4a1c-9e92-1eef42f7dd48",
        "cursor": {
          "ref": "85cee54c-27c6-49a6-9a71-eb51e4fbc17a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7337f914-1f9b-4884-aa19-0cc2b43a76b9"
        },
        "item": {
          "id": "25e51647-305c-4a1c-9e92-1eef42f7dd48",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa44b002-1ebd-439b-8553-aaf40adab92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e45e88-e537-4945-8442-23f9cd92bd65",
        "cursor": {
          "ref": "53b9b409-4b22-42b7-83ee-4b2bdfa0e189",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a49faa12-cca7-4229-a22a-730cda6a910a"
        },
        "item": {
          "id": "b0e45e88-e537-4945-8442-23f9cd92bd65",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "17bc4dd1-b610-48cc-a838-22bc3282f476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9f26f-d036-49b3-a9b4-64fa8258dfba",
        "cursor": {
          "ref": "58f7f2ba-fe1f-4d9a-abe4-07cce2b2fb48",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc5b228e-d341-4dde-8903-3365f7e6f89a"
        },
        "item": {
          "id": "15b9f26f-d036-49b3-a9b4-64fa8258dfba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f694bba7-9343-427d-add6-f19115ff2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a84895f-ca68-4563-a5fb-4da93e4f1a6e",
        "cursor": {
          "ref": "db9300a4-745a-4023-9a6e-c302488979c2",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4496500e-a42a-4ec3-b88a-14780b7a2971"
        },
        "item": {
          "id": "7a84895f-ca68-4563-a5fb-4da93e4f1a6e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6736efd2-8fbc-4fd4-a984-8adac6ed3b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f82eadb-df01-4ed1-bafb-2d86a087fcf1",
        "cursor": {
          "ref": "140f1c8d-915d-4248-835d-855e700d084d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0fa6c6dd-f8f7-4832-a7f5-2307fb45f623"
        },
        "item": {
          "id": "4f82eadb-df01-4ed1-bafb-2d86a087fcf1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2a74a684-c5ba-450d-8aea-fe072fdeff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27421b8-b8bf-4b35-aaaf-45d2a66be6b0",
        "cursor": {
          "ref": "6e5a3a13-f320-4530-8928-8d3d1d5bb13f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b86190f7-9955-4bac-8cd3-230e172a8853"
        },
        "item": {
          "id": "a27421b8-b8bf-4b35-aaaf-45d2a66be6b0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9c09f154-4059-437f-9a2a-45d359506a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf87984d-e4ee-4b70-826c-2a2d5cdd8829",
        "cursor": {
          "ref": "73c5e127-ef84-42c7-83fe-74184dfb33ae",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a56630fe-8d1a-4375-940f-8049ed3a6413"
        },
        "item": {
          "id": "bf87984d-e4ee-4b70-826c-2a2d5cdd8829",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0c8ac2fa-7671-4c55-90f5-f38ebbf2b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b94d3e4-a00b-4898-8952-8cc4d7917b68",
        "cursor": {
          "ref": "edd76982-b629-436a-8421-0488ab439d15",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0cda84d5-5dbf-4381-a276-bed15d0b4713"
        },
        "item": {
          "id": "8b94d3e4-a00b-4898-8952-8cc4d7917b68",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d290f7f-955b-4e78-b3b4-9df251b4f7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3a8620-e700-4c1a-b3ad-3e87231f580c",
        "cursor": {
          "ref": "a9ad6273-5a8c-4fd4-8fee-a0f751ad5f42",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b28f7b1-e071-4693-905e-0e8c6c5fdf59"
        },
        "item": {
          "id": "4e3a8620-e700-4c1a-b3ad-3e87231f580c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "11c0666e-4bc5-473d-b1a0-0f246d4350fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcb3578-e213-4007-918e-9bc3f980964c",
        "cursor": {
          "ref": "9c35ead3-5d73-46f9-9dff-51ccea18870e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bbe9c1e4-43f4-4df2-8eef-84f15b154d6e"
        },
        "item": {
          "id": "0dcb3578-e213-4007-918e-9bc3f980964c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "382d21e4-2eee-44ee-a8c5-32ef2e764c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a5f403-f769-4632-9dbd-11cb531b59cd",
        "cursor": {
          "ref": "cbfccbab-f7e5-4d55-aa27-6dc46cc1f5ca",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "17011915-6975-43b3-b942-0aa8fa78e8ca"
        },
        "item": {
          "id": "96a5f403-f769-4632-9dbd-11cb531b59cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a95876f1-7d0a-426c-b00b-c195c1e75665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44416ad1-9d50-4958-a518-ab8558b8fa82",
        "cursor": {
          "ref": "df1ae8dd-1096-4262-8f38-0444b0ded2b8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c5d190c-0a15-4a97-9241-7e381253bbab"
        },
        "item": {
          "id": "44416ad1-9d50-4958-a518-ab8558b8fa82",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4f0cac5b-e23f-4772-96fd-7f6861033cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd5c79c-3cf4-4347-bb59-9e3583e3ebe1",
        "cursor": {
          "ref": "9e45bf5c-b92e-4b67-b04d-83274fddec52",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2afcd769-8950-475c-a8e6-4e438f2e51b2"
        },
        "item": {
          "id": "7fd5c79c-3cf4-4347-bb59-9e3583e3ebe1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "858fec02-ef8f-4a97-b28e-f82877fa168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400e383f-e8b8-4005-ade4-f7cb9ed0c98e",
        "cursor": {
          "ref": "298fff20-3ea8-4170-8d88-e348a44cb1da",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b5f7deb-b86b-4978-b615-b65c40c8ebce"
        },
        "item": {
          "id": "400e383f-e8b8-4005-ade4-f7cb9ed0c98e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f5c40ec0-ee28-4f83-a55b-012b8a8ae296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364be87b-4075-4861-8476-7ec99278f834",
        "cursor": {
          "ref": "12667b61-e0da-41a1-bec4-c202391242db",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "471b7ec9-16f8-490d-ad91-afd29bf72d91"
        },
        "item": {
          "id": "364be87b-4075-4861-8476-7ec99278f834",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dd3615e1-e1c7-4f9e-aefb-4b53ee1832a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ad341f-bc26-4860-9b2e-39aa03e33041",
        "cursor": {
          "ref": "eb7fb66e-7cf6-4337-91a7-5dc210391f59",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5e57d654-7d3e-479e-a8a4-7b25af7da421"
        },
        "item": {
          "id": "19ad341f-bc26-4860-9b2e-39aa03e33041",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "539e5337-722c-4c76-997c-249e86da93c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867dcc6b-3d16-458e-8be1-33264677b601",
        "cursor": {
          "ref": "848e5bb7-5219-4b7a-b343-b0e45c98d010",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "718a61d6-7f44-4c4a-9aae-a6223d6282b5"
        },
        "item": {
          "id": "867dcc6b-3d16-458e-8be1-33264677b601",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "01b81657-6668-482f-b163-5a4002cee851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e9eb07-f93c-40fe-8ee4-a613a7406f9d",
        "cursor": {
          "ref": "09287435-bcf8-4633-8790-4a5271a0f576",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3d188cd5-b317-493f-a6a8-528568f08c96"
        },
        "item": {
          "id": "a7e9eb07-f93c-40fe-8ee4-a613a7406f9d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a4db197f-d0a4-4bcf-b5f6-0aaeed1a0927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da22482-afc3-4af3-8581-5c8d55fcb371",
        "cursor": {
          "ref": "f53b8e29-5c4e-44e3-8c97-fa5c865f1c8b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c62f67a8-6efa-47e2-b392-785f6bcccebe"
        },
        "item": {
          "id": "5da22482-afc3-4af3-8581-5c8d55fcb371",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e42ec593-38a7-4462-b5d2-9388eff97a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafd15ef-8c6d-42e7-876d-18c8d7f324ac",
        "cursor": {
          "ref": "81193d09-dd5a-4fd1-804c-355231c4b746",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "76490305-6f03-4c53-9974-beee9a6e6004"
        },
        "item": {
          "id": "bafd15ef-8c6d-42e7-876d-18c8d7f324ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60d656bb-04ba-4068-a2fd-26ea3f4d45aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529b566-d08a-4550-a050-20e9feb0d764",
        "cursor": {
          "ref": "6084d491-6dfc-47e9-ba29-16661a8c672c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3a3a0243-e0c1-46be-8dd9-7661b7fb45f5"
        },
        "item": {
          "id": "2529b566-d08a-4550-a050-20e9feb0d764",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a15c3849-136e-459b-8f5e-00d5b7e32ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87351331-0c92-467c-a3a4-4c6339b7fb18",
        "cursor": {
          "ref": "b8c0c938-b38a-4dc5-a9d9-a19a9f7a3b67",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75360b1f-71c0-46c0-a323-a6eb8c535e17"
        },
        "item": {
          "id": "87351331-0c92-467c-a3a4-4c6339b7fb18",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8b79324-0991-4d51-97ba-88cda9b5d86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5749775f-bd4d-4fdc-b84c-57066395416b",
        "cursor": {
          "ref": "c6899727-36e8-448e-9c68-d815107354ce",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "69f9f985-07e9-4368-8f9d-7725f2a3aac3"
        },
        "item": {
          "id": "5749775f-bd4d-4fdc-b84c-57066395416b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "83614d5c-202f-47fc-b0f9-c469c794c477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f632e02d-3902-4b6d-a367-88f5429d85d8",
        "cursor": {
          "ref": "69a79d10-e032-4fbc-97a1-b68aa8111abc",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7528d221-ceb8-453b-b09a-e3b10b7a6dad"
        },
        "item": {
          "id": "f632e02d-3902-4b6d-a367-88f5429d85d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aba09801-ac7d-4935-90a3-21ed9a9a6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc3c700-205e-414d-8f50-904da9b26670",
        "cursor": {
          "ref": "657253bf-19a3-422c-b74f-a2c9c9d2b676",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b945ee8f-94de-4ba4-b44e-69c995e3c42e"
        },
        "item": {
          "id": "ecc3c700-205e-414d-8f50-904da9b26670",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d8d737e-5a33-43ee-b289-4e5d07a74653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9435f95b-731d-481c-930a-990be51387e4",
        "cursor": {
          "ref": "1e03bf12-20f5-486c-ad8d-0589d1e8171b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb1a769e-ba1c-4b86-9101-6269e29a917f"
        },
        "item": {
          "id": "9435f95b-731d-481c-930a-990be51387e4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d73d3799-d037-477e-a7e8-958ebdbc717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53be8365-490c-44c4-94cd-548546d362cc",
        "cursor": {
          "ref": "50d918ec-15ef-4e71-aff0-cd4f862c6db8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f19a8bbd-218e-4085-8bdd-8c6cb5367670"
        },
        "item": {
          "id": "53be8365-490c-44c4-94cd-548546d362cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "898b3ffc-aeb5-45b4-92c2-8a3b3ac2f7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5b8e2c-7944-4db3-adc8-5f74b7cbacc2",
        "cursor": {
          "ref": "3b1f84cf-7600-41a9-8c74-a9d73302ce23",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0eb05f75-8050-44bb-bd72-2f104a1d1c1d"
        },
        "item": {
          "id": "2f5b8e2c-7944-4db3-adc8-5f74b7cbacc2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7a765e6f-17ff-40c3-8f83-ff0a7a77c6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a1176f-ae96-488c-a4fd-8f82935ea420",
        "cursor": {
          "ref": "68a00b29-9e8c-422e-a376-84db46968010",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4152725a-b241-4832-b77f-16b882dbd04c"
        },
        "item": {
          "id": "26a1176f-ae96-488c-a4fd-8f82935ea420",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7dfda969-ba0b-4c4d-b119-bd30f26af10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1dd672-5a05-4632-ba5c-dc9e78a59746",
        "cursor": {
          "ref": "d7fe18ed-becf-47c7-8f91-1b56c7bc27d8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e8ff233b-7cb1-4a2a-8a93-3d8b5a5970db"
        },
        "item": {
          "id": "ec1dd672-5a05-4632-ba5c-dc9e78a59746",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77eb6920-2531-4f92-b40a-3fab4a4fccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d291f665-1549-4543-bb08-2a6228ee1077",
        "cursor": {
          "ref": "07d07a1b-8422-4396-92d6-28e893e880a3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "28ae73a2-1725-45e6-96be-101d64bc935a"
        },
        "item": {
          "id": "d291f665-1549-4543-bb08-2a6228ee1077",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "961307e4-4909-456c-95d3-c9e0a9caec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae076a86-8d49-4643-b7e8-33af88e28fcd",
        "cursor": {
          "ref": "f5f2d3b2-543d-4192-8a3a-b12e08de131f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98a58cd6-1c38-412a-bad4-083536ad81ac"
        },
        "item": {
          "id": "ae076a86-8d49-4643-b7e8-33af88e28fcd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c6caf1bd-122c-4a96-9bdf-8fbe0a026d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc777652-4808-49af-8eda-cb697facd0ad",
        "cursor": {
          "ref": "bf005576-93a4-4e52-aceb-970eb9e9cd27",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a2b1d84c-d23a-4da5-a97d-74ef89f02f83"
        },
        "item": {
          "id": "cc777652-4808-49af-8eda-cb697facd0ad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "116bd20d-2455-4d92-9b8c-0bf6c6ba451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b600d-dab0-4b90-9955-4f8d632189c3",
        "cursor": {
          "ref": "c347a35d-9f52-4c47-be92-ae3e7c5f819b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "79f31210-5dd1-4b9e-a266-4042466b4747"
        },
        "item": {
          "id": "635b600d-dab0-4b90-9955-4f8d632189c3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "120f7d12-ed34-4058-b396-0bff6cefe9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032f0bae-25a8-4d9e-9517-1caa4bcc2680",
        "cursor": {
          "ref": "959713bc-462e-4f56-af35-8af5a1a128c5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "df7ef1fb-dcdb-4cb0-a32d-909e4b9a30a7"
        },
        "item": {
          "id": "032f0bae-25a8-4d9e-9517-1caa4bcc2680",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "defd5c4a-211c-40e0-9f46-16f7e43f4198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7b7e81-e227-44f8-94e7-6fd3be739ea1",
        "cursor": {
          "ref": "b73aeed8-e4c5-46b2-bef7-94dfa5e53377",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "22364c37-4233-4c2c-8e97-b9ce76738fcd"
        },
        "item": {
          "id": "5c7b7e81-e227-44f8-94e7-6fd3be739ea1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b011dcc0-8a02-489e-ba7a-399559dc1d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a47ab3-a454-4b5f-b589-36fc312c18fd",
        "cursor": {
          "ref": "0145f64c-cb85-4ae8-9eac-6d2b388624a7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8d4cf2f2-a6d9-41ef-a814-2f65048f8d5b"
        },
        "item": {
          "id": "b0a47ab3-a454-4b5f-b589-36fc312c18fd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3e7c9d4f-9492-42f3-9620-59340a356aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6e281-cd9c-4738-8a83-377daac8e4a1",
        "cursor": {
          "ref": "962a256a-bfc7-4422-a79d-cbd458a00e93",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "811c0655-bc14-4cc1-b6c8-3b40725ece44"
        },
        "item": {
          "id": "8ec6e281-cd9c-4738-8a83-377daac8e4a1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d2b2e4eb-be9f-4c37-84a9-94773352cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4e3c8d-5a16-4805-8922-bf685dcece52",
        "cursor": {
          "ref": "ec2df3e7-2817-4ba5-822c-87d152f53f34",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a0e35169-400d-47f9-b9b9-388958d3fb4c"
        },
        "item": {
          "id": "cf4e3c8d-5a16-4805-8922-bf685dcece52",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c16a2041-50be-4031-923c-a04dd7540c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0e7332-afcc-46ec-81be-56ec1bafdf7d",
        "cursor": {
          "ref": "07709306-b353-4a27-b31d-23bc96c49c29",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c8b2dfdf-33a5-46e4-b199-49ce559d2bc7"
        },
        "item": {
          "id": "2c0e7332-afcc-46ec-81be-56ec1bafdf7d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "95185193-5693-43e0-90f3-04b28e08a9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b186d3-d28d-43c5-ba12-9c09f132f8e6",
        "cursor": {
          "ref": "dd0dfb05-5288-466d-9250-5adabaebfb14",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "17fa8ef0-8089-44c3-9b6d-26a35dcc88e1"
        },
        "item": {
          "id": "92b186d3-d28d-43c5-ba12-9c09f132f8e6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c4750eb-c6ea-4a47-80cd-699aaaf88455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefd0995-7155-4e92-bea2-a96ac98e01bc",
        "cursor": {
          "ref": "f3f83bd0-e924-4be0-af7b-092fb42ea424",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "23b67029-3857-4f60-9064-e236226406cf"
        },
        "item": {
          "id": "cefd0995-7155-4e92-bea2-a96ac98e01bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c6e6577b-3d04-40fd-b2ca-e7d5390608fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fa586f-c994-49e0-959f-1c7121855ff1",
        "cursor": {
          "ref": "e9650166-53fe-4e3c-a5e3-903f741550b2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bb4fe1e8-b30a-4b70-b6c0-ffa7fbc87df0"
        },
        "item": {
          "id": "89fa586f-c994-49e0-959f-1c7121855ff1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "081cf005-63f0-4d45-8266-50f7250331a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dfd83c-236d-429a-97b9-0efc3ef25390",
        "cursor": {
          "ref": "0a6e954b-1519-458d-aedf-273ae8ee582c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5b234cb7-b5e5-434a-8689-2d27599da7ff"
        },
        "item": {
          "id": "01dfd83c-236d-429a-97b9-0efc3ef25390",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "06ffcdf3-f6ef-42c1-a00f-283657227320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d655d3df-84c5-454c-b361-224441b88bab",
        "cursor": {
          "ref": "e60a8035-2492-434f-9c7e-047005b6afa3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "acb82c08-d18c-449a-9592-5eec49140a41"
        },
        "item": {
          "id": "d655d3df-84c5-454c-b361-224441b88bab",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d876d24f-3432-450e-a38c-e93a104088f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3bb120-ee77-417a-ac84-fb3a6da5d320",
        "cursor": {
          "ref": "7fa6806d-ad6c-41a8-aef5-c61f68cc70f1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5de5aec2-242d-4a14-92ea-17c1fe557cf8"
        },
        "item": {
          "id": "3d3bb120-ee77-417a-ac84-fb3a6da5d320",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "14cbfafd-d1b0-45ef-9f79-cfea7b5b3f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0708c7a-99ce-4df9-8b07-ec6180dc78fc",
        "cursor": {
          "ref": "e045f5b7-20c8-4b68-a8df-e5b1f511696c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c28e17fe-311a-45c8-9432-12b4c6d97c42"
        },
        "item": {
          "id": "a0708c7a-99ce-4df9-8b07-ec6180dc78fc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d0c9040c-231c-491a-be29-62e7a4b825b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacdadfc-ab36-418c-b27c-ac1c5128394f",
        "cursor": {
          "ref": "23c8f207-84ae-4b9d-9c3d-fe7ab56b76d5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "25ee313f-4bd6-4b6c-a27a-b5111b5cb407"
        },
        "item": {
          "id": "aacdadfc-ab36-418c-b27c-ac1c5128394f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b162669a-8af1-4c81-9a4d-e9e99dd60672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81ad865-6525-4859-83ed-f7e3b4c0d88d",
        "cursor": {
          "ref": "f236e640-60b1-425e-8477-aacadc15dde8",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9ace1a20-fc77-4188-9ede-f2a32cd153a6"
        },
        "item": {
          "id": "f81ad865-6525-4859-83ed-f7e3b4c0d88d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d92cef4e-ec08-4e05-9c24-390fc615ad88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f470b-898e-4d82-a6ae-ff8cde9993a6",
        "cursor": {
          "ref": "0d41b93b-65ab-4289-abc5-1516b6520c78",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "07013195-35fd-4cc8-94aa-0bdf9eb68090"
        },
        "item": {
          "id": "562f470b-898e-4d82-a6ae-ff8cde9993a6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c7b3f9d9-c21e-4953-9b4c-3d27201ad3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c26902-9767-4188-83e3-4a5ac25f77e7",
        "cursor": {
          "ref": "2b417224-6f52-4283-a101-ed3c595dad15",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c4309c81-6c43-47ee-8067-b77f1ed69413"
        },
        "item": {
          "id": "d0c26902-9767-4188-83e3-4a5ac25f77e7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e72ab30e-7305-48fb-bcaa-524f434a1ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468dcef-b19c-4a57-8a31-5aabe43cb667",
        "cursor": {
          "ref": "f65f5a55-5a69-4971-9321-45c7e37a74eb",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1c7574e5-1b2a-4429-976e-ac8169326c5d"
        },
        "item": {
          "id": "7468dcef-b19c-4a57-8a31-5aabe43cb667",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d91de093-4d57-4b3f-96b1-ad985ef0d9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e9b69-401b-4ed6-8f95-2ff147379b8f",
        "cursor": {
          "ref": "2e9cd8ce-4aa1-4547-8a41-35d45755366d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5486ce16-4c6a-432f-a3e4-d82ede3cb837"
        },
        "item": {
          "id": "746e9b69-401b-4ed6-8f95-2ff147379b8f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9334c146-562b-41d5-b586-ca6a2b40559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a719e6-1009-4e92-bd7a-4576a6bc2fca",
        "cursor": {
          "ref": "c880081a-eb24-4aea-bee9-9c2f7247c379",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6eaf13e6-6930-4e07-b899-a4d59f31de40"
        },
        "item": {
          "id": "05a719e6-1009-4e92-bd7a-4576a6bc2fca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "627738b8-02a9-4288-b95f-54607a74fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa2c575-1c43-4d04-b5b6-c5493b9c66d8",
        "cursor": {
          "ref": "52b42348-75bf-41c8-8128-eaf144af0700",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2913b760-de81-4d3a-82dc-99084b4054a8"
        },
        "item": {
          "id": "ffa2c575-1c43-4d04-b5b6-c5493b9c66d8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "527dd9e9-7460-4beb-829e-b918e8ce111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093c7c63-0863-408b-b7cf-698f02b797cd",
        "cursor": {
          "ref": "ef76bf19-d1b6-479f-ab55-cbcb6fe9798c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "93c6d5e2-41c2-40de-8b35-36090185ac8a"
        },
        "item": {
          "id": "093c7c63-0863-408b-b7cf-698f02b797cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09da0b03-b7f6-4f32-8bf1-d78f675dc18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994cbacf-94e5-4def-a550-5ef182e59901",
        "cursor": {
          "ref": "2c1f39a2-0ce5-4822-a35a-c87ffd1ef84a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dedc9468-9d67-4698-ab89-d72f5dff94bb"
        },
        "item": {
          "id": "994cbacf-94e5-4def-a550-5ef182e59901",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a4e14c3c-a4c0-4e2f-b032-4d9c2a7bbd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e16d9ab-7a7e-48cb-9f4b-aa66b8952c49",
        "cursor": {
          "ref": "90e2e3f3-a655-4d1a-bb1a-e7c78dea7d05",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "18e9fc36-237f-41a1-96fd-1848fde71eb5"
        },
        "item": {
          "id": "7e16d9ab-7a7e-48cb-9f4b-aa66b8952c49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "51a2317c-f862-4360-9a79-f76608735a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace40a62-d375-4926-9310-229aece4874c",
        "cursor": {
          "ref": "087414c6-8b25-46a5-bbdf-95ff626fa41e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d89f7daf-a484-428e-92a1-2995437ad4b4"
        },
        "item": {
          "id": "ace40a62-d375-4926-9310-229aece4874c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e5143a0-8b36-48b9-8abb-e0c05384b76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04311185-00bf-458c-af47-019152ab228f",
        "cursor": {
          "ref": "5ecf9436-4a35-420b-85c8-ae91e8c711c6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3a5e779c-2c7e-4d76-945a-1dfbf134b835"
        },
        "item": {
          "id": "04311185-00bf-458c-af47-019152ab228f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "94184cde-1eb9-46e3-ac32-a134efb1e9a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b988ee-f05b-4f3d-86dc-940e5d6dc0f8",
        "cursor": {
          "ref": "7aec13c8-7c1d-4fe3-b3b4-3551f9ea3f5d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c9dd7c73-bcde-47d3-8874-b8aaffa5e2cc"
        },
        "item": {
          "id": "c7b988ee-f05b-4f3d-86dc-940e5d6dc0f8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b31303d6-d031-4136-8096-5a84e20a693e",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd594b7b-0963-441b-a19b-9c0d94b6bc7f",
        "cursor": {
          "ref": "9d450fb3-f5b4-428b-a5b5-bfb850980519",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1a555877-bbb1-42e2-93ba-54c352fa4ad8"
        },
        "item": {
          "id": "dd594b7b-0963-441b-a19b-9c0d94b6bc7f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d5cb7b86-869a-4766-9867-20a72f9c04d6",
          "status": "OK",
          "code": 200,
          "responseTime": 1730,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83eab68-d2c5-4b65-9bcb-c377a2d6bb71",
        "cursor": {
          "ref": "ec826ac1-e56a-4a1f-86c6-661c279af34a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1932c0e6-bc37-4a86-af2a-a17632fa9787"
        },
        "item": {
          "id": "d83eab68-d2c5-4b65-9bcb-c377a2d6bb71",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "01c61c82-6992-4399-9b7f-533c9baf06b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1394,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3619f3-2429-48eb-9a7c-6ffc54d02c1f",
        "cursor": {
          "ref": "90a35676-0d6f-422f-ac4a-2712c716c2bb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "192c18f2-52e7-4434-a777-f78db76bfbb1"
        },
        "item": {
          "id": "8a3619f3-2429-48eb-9a7c-6ffc54d02c1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "53546512-d111-4ae5-a085-cfe03721d834",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3619f3-2429-48eb-9a7c-6ffc54d02c1f",
        "cursor": {
          "ref": "90a35676-0d6f-422f-ac4a-2712c716c2bb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "192c18f2-52e7-4434-a777-f78db76bfbb1"
        },
        "item": {
          "id": "8a3619f3-2429-48eb-9a7c-6ffc54d02c1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "53546512-d111-4ae5-a085-cfe03721d834",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cce241-2bc7-4b45-8961-6990b3aed206",
        "cursor": {
          "ref": "e842dfcd-7e3e-4170-b622-2426218e28f0",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b3c3ab66-3e7b-4042-9be0-f2a94661edf7"
        },
        "item": {
          "id": "45cce241-2bc7-4b45-8961-6990b3aed206",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4621ebe-44c6-42d0-942d-e5568cd2e256",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c29f844-b551-4cb4-8cb5-1d8d5b7ecee7",
        "cursor": {
          "ref": "59a5ba44-3b65-4bdb-b716-d9363d436bee",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "eda20aa5-ff82-4ff0-b08b-bfbc5023e949"
        },
        "item": {
          "id": "8c29f844-b551-4cb4-8cb5-1d8d5b7ecee7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "82518f63-bd3f-4669-a694-765f9a20eda1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}